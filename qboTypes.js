export default {
    models: {
        qbpayments: {
            echeckrefundidretrieve: {
                name: "echeckrefundidretrieve",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["echeck_id", "refund_id"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    echeck_id: {
                        type: "String",
                        description:
                            'The <span class="literal">id</span> of the eCheck you want info for. The ID is defined in the response of the CREATE eCheck operation.',
                        requiredFlag: "Required",
                    },
                    refund_id: {
                        type: "String",
                        description:
                            'The <span class="literal">id</span> of the refund you want info for. The ID is defined in the reponse of the VOID or REFUND eCheck operation.',
                        requiredFlag: "Required",
                    },
                },
            },
            lodging: {
                name: "lodging",
                ShowFirst: [],
                Default: [
                    "LengthOfStay",
                    "CheckInDate",
                    "RoomRate",
                    "SpecialProgram",
                    "ChargeType",
                    "FolioID",
                    "ExtraCharges",
                    "CheckOutDate",
                    "TotalAuthAmount",
                ],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    LengthOfStay: {
                        type: "Number",
                        description:
                            "The anticipated, actual, or icremental length of stay, depending on the transaction type.",
                    },
                    CheckInDate: {
                        type: "Date",
                        description:
                            "The date of actual or anticipated check-in, depending on the transaction type.<br/><br/>The check-in date can't be later than the check-out date. The date format is dates is <strong>CCCC-MM-DD</strong> where: <ul><li><strong>CCCC</strong>: The four-digit year</li><li><strong>MM</strong>: The two digit month</li><li><strong>DD</strong>: The Two digit day</li></ul> For example: June 5, 2019 is represented as <strong>2019-06-05</strong>.",
                    },
                    RoomRate: {
                        type: "Number",
                        description:
                            "The nightly rate for the room. <br/><br/>This field is only relevant for lodging apps. It should represent the nightly rate for the room as quoted at the time of reservation, including the taxes. If the reservation spans multiple days, provide the average rate for those days.",
                    },
                    SpecialProgram: {
                        type: "SpecialProgramEnumorator",
                        description:
                            "Indicates if the current charge is a normal room charge, an advance deposit, and so forth.<br/><br/>This field is only relevant for lodging apps. It indicates the reason for the charge.<br/><br/>Valid values: <ul><li>AdvanceDeposit</li><li>AssuredReservation</li><li>DelayedCharge</li><li>ExpressService</li><li>NormalCharge</li><li>NoShowCharge</li></ul>",
                    },
                    ChargeType: {
                        type: "ChargeTypeEnumerator",
                        description:
                            "Indicates the specific lodging or non-lodging service charged to the customer.<br/><br/>Valid values: <ul><li>ConventionFees</li><li>GiftShop</li><li>Golf</li><li>HealthClub</li><li>Hotel</li><li>Restaurant</li><li>Salon</li><li>Tennis</li></ul>",
                    },
                    FolioID: {
                        maxLen: "25",
                        type: "String",
                        description:
                            "The unique ID that identifies the bill for a particular guest's stay. This value can be assigned by a hotel or automatically by lodging apps.",
                    },
                    ExtraCharges: {
                        type: "Array of strings",
                        description:
                            "Indicates if the current charge contains one or more additional charges. <br/><br/>This field is only relevant for lodging apps. It indicates the types of extra charges billed to the customer. They usually apply after a customer checks out. <br/><br/>Valid values: <ul><li>GiftShop</li><li>Laundry</li><li>Minibar</li><li>Restaurant</li><li>Telephone</li><li>Other</li></ul>",
                    },
                    CheckOutDate: {
                        type: "Date",
                        description:
                            "The date of actual or anticipated check-out, depending on the transaction type.<br/><br/>The check-out date must always be later than the check-in date. The date format is dates is <strong>CCCC-MM-DD</strong> where: <ul><li><strong>CCCC</strong>: The four-digit year</li><li><strong>MM</strong>: The two digit month</li><li><strong>DD</strong>: The Two digit day</li></ul> For example: June 5, 2019 is represented as <strong>2019-06-05</strong>.",
                    },
                    TotalAuthAmount: {
                        type: "Number",
                        description:
                            'The total amount authorized by the card issuer for the current credit card and the current <span class="literal">FolioID</span>.<br/><br/>It refers to the total amount authorized for the particular card and folio and includes tax and other applicable charges. Apps are responsible for keeping a running total of authorizations and submitting the correct amount in this field.',
                    },
                },
            },
            bankaccountretrieve: {
                name: "bankaccountretrieve",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Id: {
                        type: "String",
                        description:
                            'The ID of the user or QuickBooks Company you\'re getting info for.<br/></br>If you\'re using the QuickBooks Online Accounting API, you can use a <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/customer">customer</a>, <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/vendor">vendor</a>, or <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/employee">employee</a> object to get their ID.<br/></br>If the entity is a QuickBooks Online company, the value is the <strong>realm ID</strong>.',
                        requiredFlag: "Required",
                    },
                },
            },
            chargerequestid: {
                name: "chargerequestid",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["charge_request_id"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    charge_request_id: {
                        maxLen: "50",
                        type: "String",
                        requiredFlag: "Required",
                        description: 'The <span class="literal">request-id</span> of the charge that you want to void.',
                    },
                },
            },
            bankaccountid: {
                name: "bankaccountid",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: ["bankaccount_id"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    bankaccount_id: {
                        type: "String",
                        description: "The ID of the bank account you plan to delete.",
                        requiredFlag: "Required",
                    },
                    Id: {
                        type: "String",
                        description:
                            'The ID of the customer you\'re deleting the bank account for.<br/></br>If you\'re using the QuickBooks Online Accounting API, you can use a <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/customer">customer</a>, <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/vendor">vendor</a>, or <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/employee">employee</a> object to get their ID.<br/></br>If the entity is a QuickBooks Online company, the value is the <strong>realm ID</strong>.',
                        requiredFlag: "Required",
                    },
                },
            },
            echeckrefundresponse: {
                name: "echeckrefundresponse",
                ShowFirst: ["Id"],
                Default: ["Status", "Created"],
                Optional: ["Description", "Context"],
                Required: ["Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["Type"],
                type: "object",
                properties: {
                    Status: {
                        readOnly: true,
                        systemDefined: true,
                        type: "ECheckRefundStatus",
                        description:
                            'Current status of the refund transaction. Valid status types include:\n<li>\n  <span class="literal"> PENDING </span> \u2014the refund is currently being processed.\n</li>\n<li>\n  <span class="literal"> SUCCEEDED </span> \u2014the refund has been successfully funded.\n</li>\n<li>\n  <span class="literal"> DECLINED </span> \u2014the refund was rejected.\n</li>\n</ul>',
                        extra: ["system generated"],
                    },
                    Description: {
                        maxLen: "maximum 4000 characters",
                        type: "string",
                        description: "Descriptive text to be stored with the transaction.",
                        requiredFlag: "Optional",
                    },
                    Created: {
                        readOnly: true,
                        systemDefined: true,
                        type: "string",
                        description:
                            'Object creation time, in ISO 8601 date-time format, such as\n  <span class="literal"> YYYY-MM-DDTHH:MM:SSZ </span> ',
                        extra: ["system generated"],
                    },
                    Amount: {
                        type: "number",
                        description:
                            'Amount of the transaction. Valid values for amount are in the range\n  <span class="literal"> 0.00 </span> through\n  <span class="literal"> 99999.99 </span> .',
                        requiredFlag: "Required",
                    },
                    Context: {
                        type: "CheckContext",
                        description: "Additional data that may be stored with the transaction.",
                        requiredFlag: "Optional",
                    },
                    Type: {
                        description:
                            'Indicates the type of refund being processed. Valid types include:\n<li>\n  <span class="literal"> VOID </span> \u2014the refund has been requested for a voided transaction.\n</li>\n<li>\n  <span class="literal"> REFUND </span> \u2014the refund has been requested for a refunded transaction.\n</li>\n</ul>',
                        type: "ECheckRefundType",
                        requiredFlag: "Conditionally required",
                        extra: ["system generated"],
                    },
                    Id: {
                        description: "System generated alpha-numeric id.",
                        type: "string",
                        requiredFlag: "Conditionally required",
                        extra: ["system generated"],
                    },
                },
            },
            cardid: {
                name: "cardid",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: ["card_id"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Id: {
                        type: "String",
                        description:
                            'The ID of the customer you\'re deleting the card for. <br/><br/>If you\'re using the QuickBooks Online Accounting API, you can use the <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/customer">Customer</a>, <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/vendor">Vendor</a>, or <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/employee">Employee</a> entity to get their ID. This value can be stored in QuickBooks or your app.</a>',
                        requiredFlag: "Required",
                    },
                    card_id: {
                        type: "String",
                        description: "The ID of the card you plan to delete.",
                        requiredFlag: "Required",
                    },
                },
            },
            refundresponse: {
                name: "refundresponse",
                ShowFirst: ["Id"],
                Default: ["Status", "Created", "Type"],
                Optional: ["Description", "Amount", "Context"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Status: {
                        readOnly: true,
                        type: "ChargeStatusEnum",
                        description:
                            'Status of the refund. Valid <span class="literal"> status </span>  types include: <span class="literal">ISSUED</span> , <span class="literal">DECLINED</span>, <span class="literal">SETTLED</span>, <span class="literal">VOIDED</span> and <span class="literal">SUCCEEDED</span>.',
                        systemDefined: true,
                    },
                    Description: {
                        type: "string",
                        description: "Description.",
                        requiredFlag: "Optional",
                    },
                    Created: {
                        readOnly: true,
                        type: "string",
                        description:
                            'Object create time, in ISO 8601 date-time format, such as\n  <span class="literal"> YYYY-MM-DDTHH:MM:SSZ </span> ',
                        systemDefined: true,
                    },
                    Amount: {
                        type: "number",
                        description: "Amount. If no number is specified, the full amount will be used.",
                        requiredFlag: "Optional",
                    },
                    Context: {
                        $ref: [
                            {
                                paymentcontext: "PaymentContext",
                            },
                        ],
                        type: "PaymentContext",
                        requiredFlag: "Optional",
                        description: "Additional data you wish to store for this transaction.",
                    },
                    Type: {
                        systemDefined: true,
                        type: "RefundTypeEnum",
                        description:
                            'The type of refund. Valid <span class="literal"> type </span> include: <span class="literal">REFUND</span> or <span class="literal">VOID</span>.',
                        requiredFlag: "Response Only",
                    },
                    Id: {
                        description: "System generated alpha-numeric id.",
                        type: "string",
                        requiredFlag: "Conditionally required",
                        systemDefined: true,
                    },
                },
            },
            capturerequest: {
                name: "capturerequest",
                ShowFirst: [],
                Default: [],
                Optional: ["Description", "Context"],
                Required: ["Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Amount: {
                        type: "Number",
                        description:
                            "The transaction amount.<br/><br/>Valid values: Any value between <strong>0.01</strong> and <strong>99999.99</strong>.",
                        requiredFlag: "Required",
                    },
                    Description: {
                        type: "String",
                        description: "Text info you want to store with the transaction.",
                        requiredFlag: "Optional",
                    },
                    Context: {
                        $ref: [
                            {
                                paymentcontext: "PaymentContext",
                            },
                        ],
                        type: "PaymentContext",
                        requiredFlag: "Optional",
                        description: "Additional data you want to store with the transaction.",
                    },
                },
            },
            txnrequestresponse: {
                name: "txnrequestresponse",
                ShowFirst: ["Id"],
                Default: ["Status", "Created", "Amount", "Context", "Type"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Status: {
                        readOnly: true,
                        type: "RefundStatusEnumerator",
                        description:
                            "The status of the void.<br/><br/> Valid responses:<ul><li><strong>ISSUED</strong>: The void was successfull and the money went back to the card holder successfully been issued.</li><li><strong>DECLINED</strong>L: The system didn't find a match. This isn't common.</li></ul>",
                        systemDefined: true,
                    },
                    Created: {
                        readOnly: true,
                        type: "String",
                        description:
                            "The time the object was originally created. In ISO 8601 date-time format. It appears as <strong>YYYY-MM-DDTHH:MM:SSZ</strong>.",
                        systemDefined: true,
                    },
                    Amount: {
                        type: "Number",
                        description:
                            "The transaction amount.<br/><br/>Valid values: Any value between <strong>0.01</strong> and <strong>99999.99</strong>..",
                    },
                    Context: {
                        type: "TxnRequestContext",
                        description: "Additional info that will be stored with the transaction.",
                        $ref: [
                            {
                                txnrequestcontext: "TxnRequestContext",
                            },
                        ],
                    },
                    Type: {
                        type: "TransactionTypeEnumerator",
                        description:
                            "The type of transaction being voided.<br/><br/>Valid types include:<ul><li><strong>VOID</strong>: The transaction needs to be voided.</li></ul>",
                        extra: ["system generated"],
                    },
                    Id: {
                        type: "String",
                        description: "The system-generated alpha-numeric ID of the void.",
                        systemDefined: true,
                    },
                },
            },
            checkquery: {
                name: "checkquery",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Id: {
                        type: "String",
                        description:
                            'The <span class="literal">id</span> of the eCheck. The ID is defined in the response of the CREATE check operation.',
                        requiredFlag: "Required",
                    },
                },
            },
            bankaccount: {
                name: "bankaccount",
                ShowFirst: ["Id"],
                Default: ["Created"],
                Optional: ["entityType", "Default", "Country", "InputType", "BankCode", "entityId"],
                Required: ["Name", "AccountNumber", "Phone", "AccountType", "RoutingNumber"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["Updated"],
                type: "object",
                properties: {
                    Updated: {
                        readOnly: true,
                        description:
                            "The time the object was last updated. In ISO 8601 date-time format. It appears as <strong>YYYY-MM-DDTHH:MM:SSZ</strong>.",
                        type: "String",
                        requiredFlag: "Conditionally required",
                        systemDefined: true,
                    },
                    entityType: {
                        type: "String",
                        description:
                            "The entity or user type the bank account is associated with. Example values: <strong>Customer</strong>, <strong>Employee</strong>, <strong>Vendor</strong> or <strong>Company</strong>",
                        requiredFlag: "Optional",
                    },
                    Name: {
                        maxLen: "64",
                        type: "String",
                        description: "The name of the bank account owner.",
                        requiredFlag: "Required",
                    },
                    AccountNumber: {
                        maxLen: "17 (min 4)",
                        type: "String",
                        description:
                            "The number of the bank account.<br/><br/> For privacy and security,<br/>Account numbers that are 6 digits or less: all but the last 2 digits are masked<br/>Account numbers that are 7 digits or longer: all but the last 4 digits are masked<br/> Account Number masking changes are available in Sandbox companies currently and will be available from <strong>July 11th, 2022</strong> for Production companies.",
                        requiredFlag: "Required",
                    },
                    Default: {
                        type: "Boolean",
                        description:
                            "Indicates if the bank account is the default. When users set a default, the account flag is <strong>true</strong>.<br/><br/> This is the bank account QuickBooks uses when another isn't specified.<br/><br/> The flag defaults to <strong>false</strong>. When a bank account flag is <strong>true</strong>, all other stored bank accounts are automatically set to <strong>false</strong>.",
                        requiredFlag: "Optional",
                    },
                    Country: {
                        maxLen: "2",
                        type: "String",
                        description:
                            'The ISO-standard country code. Refer to the <a href="http://www.nationsonline.org/oneworld/country_code_list.htm">ISO Country Code List</a>.',
                        requiredFlag: "Optional",
                    },
                    Created: {
                        readOnly: true,
                        type: "String",
                        description:
                            "The time the object was originally created. In ISO 8601 date-time format. It appears as <strong>YYYY-MM-DDTHH:MM:SSZ</strong>.",
                        systemDefined: true,
                    },
                    InputType: {
                        type: "BankAccountInputTypeEnum",
                        description:
                            "Specifies the input type. <br/><br/>Valid values:<ul><li><strong>KEYED</strong>: Indicates a manually-entered key.</li><li><strong>SCANNED</strong></li></ul>",
                        requiredFlag: "Optional",
                    },
                    Phone: {
                        maxLen: "Exactly 10",
                        type: "String",
                        description: "The phone number associated with the bank account.",
                        requiredFlag: "Required",
                    },
                    AccountType: {
                        type: "BankAccountTypeEnum",
                        description:
                            "The type of bank account. <br/><br/>Valid values:<ul><li><strong>PERSONAL_CHECKING</strong>: Use for personal checking accounts.</li><li> <strong>PERSONAL_SAVINGS</strong>: Use for personal savings accounts.</li><li><strong>BUSINESS_CHECKING</strong>: Use for business checking accounts.</li><li><strong>BUSINESS_SAVINGS</strong>: Use for business savings accounts.</li></ul>",
                        requiredFlag: "Required",
                    },
                    BankCode: {
                        type: "String",
                        description:
                            "<strong>For US</strong>: This should also be the routing number for the bank associated with the account.",
                        requiredFlag: "Optional",
                    },
                    entityId: {
                        type: "String",
                        description: "The ID of the entity the bank account is associated with.",
                        requiredFlag: "Optional",
                    },
                    RoutingNumber: {
                        maxLen: "Exactly 9",
                        type: "String",
                        description:
                            "The routing number for the bank associated with the account.<br/><br/> For privacy and security, we only display the last four digits of the routing number.",
                        requiredFlag: "Required",
                    },
                    Id: {
                        description:
                            'The unique identifier of a bank account object.<br/><br/> The <span class="literal">id</span> is required for update or delete operations.',
                        type: "String",
                        requiredFlag: "Conditionally required",
                        systemDefined: true,
                    },
                },
            },
            txnrequestcontext: {
                name: "txnrequestcontext",
                ShowFirst: [],
                Default: ["Mobile", "Recurring"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Mobile: {
                        default: false,
                        type: "Boolean",
                        description:
                            "Flag that indicates if the charge was made from a mobile device.<br/><br/> The card can be keyed, swiped, dipped or tapped on the merchant's POS device.",
                    },
                    Recurring: {
                        default: false,
                        type: "Boolean",
                        description:
                            "This is set to <strong>true</strong> if the charge is recurring. </br></br><strong>Note</strong>: This value ignored for capture and refund requests.",
                    },
                },
            },
            cardrequest: {
                name: "cardrequest",
                ShowFirst: [],
                Default: [],
                Optional: ["Name", "Default", "CommercialCardCode", "Address", "IsBusiness"],
                Required: ["Number", "ExpMonth", "ExpYear", "Cvc"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Name: {
                        maxLen: "30",
                        type: "String",
                        description: "The name of the credit or debit card holder, as it appears on the card.",
                        requiredFlag: "Optional",
                    },
                    Default: {
                        type: "Boolean",
                        description:
                            "Indicates if the credit or debit card is the default. When users set a default, the flag is <strong>true</strong>.<br/><br/>This is the credit or debit card QuickBooks uses when another isn't specified. <br/><br/>The flag defaults to <strong>false</strong>.<br/><br/>When a credit or debit card flag is true, all other cards are automatically set to false.",
                        requiredFlag: "Optional",
                    },
                    Number: {
                        type: "String",
                        description: "The credit or debit card number.",
                        requiredFlag: "Required",
                    },
                    CommercialCardCode: {
                        maxLen: "25",
                        type: "String",
                        description:
                            "A code that indicates if the card is a commercial or corporate card.<br/><br/>This can be used to track specific business purchases.",
                        requiredFlag: "Optional",
                    },
                    ExpMonth: {
                        type: "String",
                        description: "The card's two digit expiration month.",
                        requiredFlag: "Required",
                    },
                    Address: {
                        $ref: [
                            {
                                address: "Address",
                            },
                        ],
                        type: "Address",
                        description: "The cardholder's full address.",
                        requiredFlag: "Optional",
                    },
                    ExpYear: {
                        type: "String",
                        description: "The card's four digit expiration year.",
                        requiredFlag: "Required",
                    },
                    IsBusiness: {
                        type: "Boolean",
                        description:
                            "This flag is set to <strong>true</strong> if the credit or debit card is a business card.",
                        requiredFlag: "Optional",
                    },
                    Cvc: {
                        type: "String",
                        description:
                            "The Card Verification Code (CVC) on the back of the card.<br/><br/> This can be up to four digits. The number varies by card provider. <br/><br/> For security purposes, the CVC value can't be stored. It must be supplied in transaction requests and then erased.",
                        requiredFlag: "Required",
                    },
                },
            },
            cvvVerification: {
                name: "cvvVerification",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: ["Date", "Result"],
                type: "object",
                properties: {
                    Date: {
                        description:
                            ' The date, in ISO 8601 date-time format, such as  <span class="literal"> YYYY-MM-DDTHH:MM:SSZ </span> .',
                        type: "string",
                        requiredFlag: "Conditionally required",
                        extra: ["system generated"],
                    },
                    Result: {
                        description:
                            'Specifies whether the card has been CVV verified. Valid states include:\n<li>\n  <span class="literal"> NOT_DONE </span> \u2014CVV verification has not been performed. This is the default state until otherwise specified.\n</li>\n<li>\n  <span class="literal"> MATCH </span> \u2014The CVV code has been matched to the one on the card.\n</li>\n<li>\n  <span class="literal"> NOT_MATCH </span> \u2014The CVV provided does not match the card.\n</li>\n</ul>',
                        type: "CVVVerificationResultTypeEnum",
                        requiredFlag: "Conditionally required",
                        extra: ["system generated"],
                    },
                },
            },
            bankaccountquery: {
                name: "bankaccountquery",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Id: {
                        type: "String",
                        description:
                            'The ID of the customer your app is creating the bank account for.<br/></br>If you\'re using the QuickBooks Online Accounting API, you can use a <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/customer">customer</a>, <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/vendor">vendor</a>, or <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/employee">employee</a> object to get their ID.<br/></br>If the entity is a QuickBooks Online company, the value is the <strong>realm ID</strong>.',
                        requiredFlag: "Required",
                    },
                },
            },
            echeckrequest: {
                name: "echeckrequest",
                ShowFirst: [],
                Default: ["BankAccount", "Token", "BankAccountOnFile"],
                Optional: ["Description", "CheckNumber", "Context"],
                Required: ["PaymentMode", "Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    BankAccount: {
                        type: "BankAccount",
                        description:
                            'Explicit bank account details associated with this transaction. Required if neither <span class="literal">token</span> nor <span class="literal">bankAccountOnFile</span> are specified',
                    },
                    Description: {
                        maxLen: "4000",
                        type: "String",
                        description: "Descriptive text to be stored with the transaction.",
                        requiredFlag: "Optional",
                    },
                    CheckNumber: {
                        type: "String",
                        description: "The number for the echeck, if desired.",
                        requiredFlag: "Optional",
                    },
                    PaymentMode: {
                        type: "ECheckPaymentModeType",
                        description:
                            'The payment mode. This is also known as the SEC Code. Valid options include:\n<li>\n  <span class="literal">WEB</span>: Internet-initiated entry mode, used for internet transactions.\n</li>\n</ul>',
                        requiredFlag: "Required",
                    },
                    Token: {
                        type: "String",
                        description:
                            'An opaque representation of the bank account associated with the debit, as returned by the token endpoint. Required if neither <span class="literal">bankAccount</span> nor <span class="literal">bankAccountOnFile</span> are specified',
                    },
                    BankAccountOnFile: {
                        type: "String",
                        description:
                            'The bank account details that have been previously stored on file. Required if neither <span class="literal">token</span> nor <span class="literal">bankAccount</span> are specified',
                    },
                    Amount: {
                        type: "Number",
                        description:
                            'Amount of the transaction. Valid values for amount are in the range\n  <span class="literal"> 0.00 </span> through\n  <span class="literal"> 99999.99 </span> .',
                        requiredFlag: "Required",
                    },
                    Context: {
                        $ref: [
                            {
                                checkcontext: "CheckContext",
                            },
                        ],
                        type: "CheckContext",
                        requiredFlag: "Optional",
                        description: "Additional data that may be stored with the transaction.",
                    },
                },
            },
            chargequery: {
                name: "chargequery",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Id: {
                        type: "String",
                        description:
                            'The ID of the charge. The ID is defined in the response body of the <a href="https://developer.intuit.com/app/developer/qbpayments/docs/api/resources/all-entities/charges#create-a-charge">CREATE charge operation</a>.',
                        requiredFlag: "Required",
                    },
                },
            },
            captureresponse: {
                name: "captureresponse",
                ShowFirst: [],
                Default: ["Created"],
                Optional: ["Description", "Context"],
                Required: ["Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Amount: {
                        type: "Number",
                        description:
                            "The transaction amount.<br/><br/>Valid values: Any value between <strong>0.01</strong> and <strong>99999.99</strong>.",
                        requiredFlag: "Required",
                    },
                    Description: {
                        type: "String",
                        description: "Text info you want to store with the transaction.",
                        requiredFlag: "Optional",
                    },
                    Context: {
                        $ref: [
                            {
                                paymentcontext: "PaymentContext",
                            },
                        ],
                        type: "PaymentContext",
                        requiredFlag: "Optional",
                        description: "Additional data you want to store with the transaction.",
                    },
                    Created: {
                        readOnly: true,
                        type: "String",
                        description:
                            "The time the object was originally created. In ISO 8601 date-time format. It appears as <strong>YYYY-MM-DDTHH:MM:SSZ</strong>.",
                        systemDefined: true,
                    },
                },
            },
            restaurant: {
                name: "restaurant",
                ShowFirst: [],
                Default: ["BeverageAmount", "ServerID", "TaxAmount", "FoodAmount", "TipAmount"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    BeverageAmount: {
                        type: "Number",
                        description: "The amount of the current charge attributed to beverages.",
                    },
                    ServerID: {
                        maxLen: "2",
                        type: "String",
                        description:
                            "The 2-digit string that identifies the individual server responsible for the transaction. Restaurant assign their own identifiers to their servers.",
                    },
                    TaxAmount: {
                        type: "Number",
                        description: "The amount of the current charge attributed to tax.",
                    },
                    FoodAmount: {
                        type: "Number",
                        description: "The amount of the current charge attributed to food.",
                    },
                    TipAmount: {
                        type: "Number",
                        description: "The amount of the current charge attributed to tips.",
                    },
                },
            },
            paymentcontext: {
                name: "paymentcontext",
                ShowFirst: [],
                Default: ["Restaurant", "Lodging"],
                Optional: ["Tax", "DeviceInfo", "Recurring"],
                Required: ["Mobile", "IsEcommerce"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Restaurant: {
                        type: "Restaurant",
                        description: "For restaurant transactions, provides details about the restaurant.",
                        $ref: [
                            {
                                restaurant: "Restaurant",
                            },
                        ],
                    },
                    Mobile: {
                        default: false,
                        type: "Boolean",
                        description:
                            "Flag that indicates if the charge was made from a mobile device.<br/><br/> The card can be keyed, swiped, dipped or tapped on the merchant's POS device.",
                        requiredFlag: "Required",
                    },
                    Tax: {
                        type: "Number",
                        description: "The sales tax required for commercial card processing.",
                        requiredFlag: "Optional",
                    },
                    IsEcommerce: {
                        default: false,
                        type: "Boolean",
                        description: "Flag that indicates if the charge is an eCommerce transaction made over the web.",
                        requiredFlag: "Required",
                    },
                    DeviceInfo: {
                        $ref: [
                            {
                                deviceinfo: "DeviceInfo",
                            },
                        ],
                        type: "DeviceInfo",
                        requiredFlag: "Optional",
                        description: "Provides info about the device used to swipe or take payments.",
                    },
                    Lodging: {
                        type: "Lodging",
                        description: "For lodging transactions, provides details about the lodging.",
                        $ref: [
                            {
                                lodging: "Lodging",
                            },
                        ],
                    },
                    Recurring: {
                        default: false,
                        type: "Boolean",
                        description:
                            "This is set to <strong>true</strong> if the charge is recurring. </br></br><strong>Note</strong>: This value ignored for capture and refund requests.",
                        requiredFlag: "Optional",
                    },
                },
            },
            cardquery: {
                name: "cardquery",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Id: {
                        type: "String",
                        description:
                            'The ID of the customer your app is creating the card for. <br/><br/>If you\'re using the QuickBooks Online Accounting API, you can use the <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/customer">Customer</a>, <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/vendor">Vendor</a>, or <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/employee">Employee</a> entity to get their ID. This value can be stored in QuickBooks or your app.',
                        requiredFlag: "Required",
                    },
                },
            },
            cardpresent: {
                name: "cardpresent",
                ShowFirst: [],
                Default: [],
                Optional: ["Track1", "PinBlock", "Track2", "Ksn"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Track1: {
                        maxLen: "25 - 78 characters",
                        type: "String",
                        description:
                            "Credit card magnetic stripes contain multiple tracks of data. Typical swiped card readers can read both tracks 1 and 2. These fields store swiped card info.",
                        requiredFlag: "Optional",
                    },
                    PinBlock: {
                        maxLen: "Exactly 16",
                        type: "String",
                        description:
                            'Used to protect the PIN during transmission from the PIN entry device to the verifier. The standard requires that PINs be encrypted. It also specifies several formats that may be used.<br/><br/>In each case, the PIN is encoded into a PIN block, which is then encrypted by an "capproved algorithm".',
                        requiredFlag: "Optional",
                    },
                    Track2: {
                        maxLen: "23 - 39 characters",
                        type: "String",
                        description:
                            "Credit card magnetic stripes contain multiple tracks of data. Typical swiped card readers can read both tracks 1 and 2. These fields store swiped card info.",
                        requiredFlag: "Optional",
                    },
                    Ksn: {
                        maxLen: "12 - 20 characters",
                        type: "String",
                        description:
                            "An identifier known as the Key Serial Number (KSN). This is returned from the device that encrypts the transaction, along with the cryptogram. The KSN is formed from the devices' unique identifier, and an internal transaction counter.",
                        requiredFlag: "Optional",
                    },
                },
            },
            checkcontext: {
                name: "checkcontext",
                ShowFirst: [],
                Default: [],
                Optional: ["DeviceInfo"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    DeviceInfo: {
                        $ref: [
                            {
                                deviceinfo: "DeviceInfo",
                            },
                        ],
                        type: "DeviceInfo",
                        requiredFlag: "Optional",
                        description: "Info about the device used to process the payment.",
                    },
                },
            },
            echeckrefundrequest: {
                name: "echeckrefundrequest",
                ShowFirst: [],
                Default: [],
                Optional: ["Description", "Context"],
                Required: ["Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Amount: {
                        type: "number",
                        description:
                            "The amount to be refunded. Valid values: Any value between <strong>0.01</strong> and <strong>99999.99</strong>.",
                        requiredFlag: "Required",
                    },
                    Description: {
                        maxLen: "4000",
                        description: "A description of the refund.",
                        type: "string",
                        requiredFlag: "Optional",
                        extra: ["optional"],
                    },
                    Context: {
                        requiredFlag: "Optional",
                        $ref: [
                            {
                                checkcontext: "CheckContext",
                            },
                        ],
                        type: "PaymentContext",
                        description: "Additional info that will be stored with the transaction.",
                        extra: ["optional"],
                    },
                },
            },
            cardidretrieve: {
                name: "cardidretrieve",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: ["card_id"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Id: {
                        type: "String",
                        description:
                            'The ID of the customer your app is getting card info for. <br/><br/>If you\'re using the QuickBooks Online Accounting API, you can use the <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/customer">Customer</a>, <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/vendor">Vendor</a>, or <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/employee">Employee</a> entity to get their ID. This value can be stored in QuickBooks or your app.</a>',
                        requiredFlag: "Required",
                    },
                    card_id: {
                        type: "String",
                        description: "The card or debit card you want info for.",
                        requiredFlag: "Required",
                    },
                },
            },
            bankaccountrequest: {
                name: "bankaccountrequest",
                ShowFirst: [],
                Default: [],
                Optional: ["Default", "Country", "BankCode", "InputType"],
                Required: ["Name", "AccountNumber", "Phone", "AccountType", "RoutingNumber"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Name: {
                        maxLen: "64 characters",
                        type: "String",
                        description: "The name of the bank account holder.",
                        requiredFlag: "Required",
                    },
                    AccountNumber: {
                        maxLen: "maximum 17 characters, minimum 4 characters",
                        type: "String",
                        description:
                            "The bank account number to be used. For security purposes, only the last four digits are displayed.",
                        requiredFlag: "Required",
                    },
                    Default: {
                        type: "Boolean",
                        description:
                            'A flag to indicate whether the account is the default, which will be used when one is not explicitly specified. The flag defaults to  <span class="literal"> false </span> ; when one account is flagged as true, all other stored accounts in the collection will automatically be set to false.',
                        requiredFlag: "Optional",
                    },
                    Country: {
                        maxLen: "2 characters",
                        type: "String",
                        description:
                            'ISO-standard country code. Refer to <a href="http://www.nationsonline.org/oneworld/country_code_list.htm">Country Code List</a> for a list of codes.',
                        requiredFlag: "Optional",
                    },
                    Phone: {
                        maxLen: "Exactly 10 characters",
                        type: "String",
                        description: "A phone number to be associated with the account.",
                        requiredFlag: "Required",
                    },
                    AccountType: {
                        type: "BankAccountTypeEnum",
                        description:
                            'The type of account to be used. Valid values include:<ul><li> <span class="literal"> PERSONAL_CHECKING </span> the account is a personal checking account.</li><li> <span class="literal"> PERSONAL_SAVINGS </span> the account is a personal savings account.</li> <span class="literal"> BUSINESS_CHECKING </span> the account is a business checking account.</li><li> <span class="literal"> BUSINESS_SAVINGS </span> the account is a business savings account.</li></ul>',
                        requiredFlag: "Required",
                    },
                    BankCode: {
                        type: "String",
                        description:
                            "A code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions. Varies depending on country.",
                        requiredFlag: "Optional",
                    },
                    RoutingNumber: {
                        maxLen: "Exactly 9 characters",
                        type: "String",
                        description:
                            "The bank routing number. For security purposes, only the last four digits are displayed.",
                        requiredFlag: "Required",
                    },
                    InputType: {
                        type: "BankAccountInputTypeEnum",
                        description:
                            'Specifies the input type. Valid values include:<ul><li> <span class="literal"> KEYED </span>A manually-entered account key.</li></ul>',
                        requiredFlag: "Optional",
                    },
                },
            },
            refundquery: {
                name: "refundquery",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: ["refund_id"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Id: {
                        type: "String",
                        description:
                            'The ID of the charge you want info for. The ID is defined in the response body of the <a href="https://developer.intuit.com/app/developer/qbpayments/docs/api/resources/all-entities/charges#create-a-charge">CREATE charge operation</a>',
                        requiredFlag: "Required",
                    },
                    refund_id: {
                        type: "String",
                        description:
                            'The ID of the refund you want info for. The ID is defined in the response body of the <a href="https://developer.intuit.com/app/developer/qbpayments/docs/api/resources/all-entities/charges#refund-a-charge">REFUND a charge operation</a>',
                        requiredFlag: "Required",
                    },
                },
            },
            requestid: {
                name: "requestid",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Request-Id"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "Request-Id": {
                        maxLen: "50",
                        type: "String",
                        requiredFlag: "Required",
                        description:
                            'The <span class="literal">request-Id</span> that uniquely identifies the HTTP request sent by your app to the server. <br/><br/>This lets apps correlate requests and responses in case it needs to resend a request due to a dropped connection.',
                    },
                },
            },
            address: {
                name: "address",
                ShowFirst: [],
                Default: ["PostalCode", "Region"],
                Optional: ["City", "StreetAddress", "Country"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    PostalCode: {
                        maxLen: "10",
                        type: "String",
                        requiredFlag: "Conditionally Required",
                        description:
                            'The postal code for the address. For US and Canada, this is the zip code. <br/><br/>Required if no <span class="literal">region</span> is provided.',
                    },
                    City: {
                        maxLen: "30",
                        type: "String",
                        description: "The city name for the address.",
                        requiredFlag: "Optional",
                    },
                    StreetAddress: {
                        maxLen: "30",
                        type: "String",
                        description:
                            "The full street adddress. This may include the house number and street name (CR acceptable).",
                        requiredFlag: "Optional",
                    },
                    Region: {
                        maxLen: "30",
                        type: "String",
                        requiredFlag: "Condtionally Required",
                        description:
                            'Specifies the region within a country. This is the state, province, prefecture, or region name.<br/><br/>For the US, this is the state name. For Canada, this is the province name.<br/><br/>Required if no <span class="literal">postal code</span> is provided.',
                    },
                    Country: {
                        maxLen: "2",
                        type: "String",
                        description:
                            'The ISO-standard country code. Refer to the <a href="http://www.nationsonline.org/oneworld/country_code_list.htm">ISO Country Code List</a>.',
                        requiredFlag: "Optional",
                    },
                },
            },
            tokenrequest: {
                name: "tokenrequest",
                ShowFirst: [],
                Default: ["BankAccount", "Card"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    BankAccount: {
                        $ref: [
                            {
                                bankaccount: "bankAccount",
                            },
                        ],
                        type: "bankAccount",
                        requiredFlag: "Conditionally Required",
                        description:
                            'The bank account associated with this charge. Required if a <span class="literal">card</span> isn\'t specified.',
                    },
                    Card: {
                        $ref: [
                            {
                                card: "Card",
                            },
                        ],
                        type: "card",
                        requiredFlag: "Conditionally Required",
                        description:
                            'The credit card associated with the token. Required if a <span class="literal"> bankAccount </span> isn\'t specified.',
                    },
                },
            },
            card: {
                name: "card",
                ShowFirst: ["Id"],
                Default: ["IsLevel3Eligible", "Created", "entityType", "entityId", "zeroDollarVerification"],
                Optional: ["Name", "Default", "CommercialCardCode", "Address", "IsBusiness"],
                Required: ["Number", "ExpMonth", "ExpYear", "Cvc"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["Updated", "CardType"],
                type: "object",
                properties: {
                    Updated: {
                        readOnly: true,
                        description:
                            "The time the object was last updated. In ISO 8601 date-time format. It appears as <strong>YYYY-MM-DDTHH:MM:SSZ</strong>.",
                        type: "String",
                        requiredFlag: "Conditionally required",
                        systemDefined: true,
                    },
                    Name: {
                        maxLen: "30",
                        type: "String",
                        description: "The name of the credit or debit card holder, as it appears on the card.",
                        requiredFlag: "Optional",
                    },
                    IsLevel3Eligible: {
                        systemDefined: true,
                        type: "Boolean",
                        description:
                            "Flag set to <strong>true</strong> if the credit or debit card falls into the L3 eligible Bank Identification Number (BIN) range.",
                        requiredFlag: "Response Only",
                    },
                    Created: {
                        readOnly: true,
                        type: "String",
                        description:
                            "The time the object was originally created. In ISO 8601 date-time format. It appears as <strong>YYYY-MM-DDTHH:MM:SSZ</strong>.",
                        systemDefined: true,
                    },
                    Default: {
                        type: "Boolean",
                        description:
                            "Indicates if the credit or debit card is the default. When users set a default, the flag is <strong>true</strong>.<br/><br/>This is the credit or debit card QuickBooks uses when another isn't specified. <br/><br/>The flag defaults to <strong>false</strong>.<br/><br/>When a credit or debit card flag is true, all other cards are automatically set to false.",
                        requiredFlag: "Optional",
                    },
                    entityType: {
                        type: "String",
                        description:
                            "The entity or user type the card is associated with. Example values: <strong>Customer</strong>, <strong>Employee</strong>, <strong>Vendor</strong> or <strong>Company</strong>.",
                    },
                    CommercialCardCode: {
                        maxLen: "25",
                        type: "String",
                        description:
                            "A code that indicates if the card is a commercial or corporate card.<br/><br/>This can be used to track specific business purchases.",
                        requiredFlag: "Optional",
                    },
                    Number: {
                        type: "String",
                        description: "The credit or debit card number.",
                        requiredFlag: "Required",
                    },
                    ExpMonth: {
                        type: "String",
                        description: "The card's two digit expiration month.",
                        requiredFlag: "Required",
                    },
                    CardType: {
                        description:
                            "The type of credit or debit card.<br/><br/>Valid values:<li><strong>VISA</strong></li><li><strong>MC</strong></li><li><strong>AMEX</strong></li><li><strong>DISC</span></li><li><strong>DINERS</strong></li><li><strong>JCB</strong></li></ul>",
                        type: "Enumerator",
                        requiredFlag: "Conditionally required",
                        systemDefined: true,
                    },
                    Address: {
                        $ref: [
                            {
                                address: "Address",
                            },
                        ],
                        type: "Address",
                        description: "The cardholder's full address.",
                        requiredFlag: "Optional",
                    },
                    ExpYear: {
                        type: "String",
                        description: "The card's four digit expiration year.",
                        requiredFlag: "Required",
                    },
                    entityId: {
                        type: "String",
                        description: "The ID of the entity the card is associated with.",
                    },
                    IsBusiness: {
                        type: "Boolean",
                        description:
                            "This flag is set to <strong>true</strong> if the credit or debit card is a business card.",
                        requiredFlag: "Optional",
                    },
                    Id: {
                        description: "The unique identifier for the card object.",
                        type: "String",
                        requiredFlag: "Conditionally required",
                        systemDefined: true,
                    },
                    Cvc: {
                        type: "String",
                        description:
                            "The Card Verification Code (CVC) on the back of the card.<br/><br/> This can be up to four digits. The number varies by card provider. <br/><br/> For security purposes, the CVC value can't be stored. It must be supplied in transaction requests and then erased.",
                        requiredFlag: "Required",
                    },
                    zeroDollarVerification: {
                        available: "Production only",
                        description: "Stores card verification information.",
                        requiredFlag: "Response Only",
                        systemDefined: true,
                        type: "ZeroDollarVerification",
                        $ref: [
                            {
                                zerodollarverification: "ZeroDollarVerification",
                            },
                        ],
                    },
                },
            },
            echeckresponse: {
                name: "echeckresponse",
                ShowFirst: ["Id"],
                Default: ["Status", "Created", "Token", "BankAccountOnFile"],
                Optional: ["Description", "CheckNumber", "AuthCode", "Context"],
                Required: ["PaymentMode", "Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["BankAccount"],
                type: "object",
                properties: {
                    Status: {
                        readOnly: true,
                        type: "ECheckStatus",
                        description:
                            'The current status of the check. Learn more about <a href="https://developer-qa.intuit.com/app/developer/qbpayments/docs/workflows/understand-charge-and-refund-states">check states</a>.<br/><br/>Valid values types:<ul><li><strong>PENDING</strong>: The check is being processed.</li><li><strong>SUCCEEDED</strong>: The check was funded and the transaction is complete.</li><li><strong>DECLINED</strong>: The check was rejected.</li><li> <strong>VOIDED<strong>: The check was voided.</li><li><strong>REFUNDED</strong>: The check was refunded.</li></ul>',
                        systemDefined: true,
                    },
                    BankAccount: {
                        type: "BankAccount",
                        requiredFlag: "Conditionally required",
                        description:
                            'Specify or create the bank account associated with this transaction. <br/><br/>Required if the <span class="literal">token</span> or <span class="literal">bankAccountOnFile</span> aren\'t specified.<br/><br/>Review the <a href="https://developer.intuit.com/app/developer/qbpayments/docs/api/resources/all-entities/bankaccounts">bankAccount</a> entity for field details.',
                    },
                    Description: {
                        maxLen: "4000",
                        type: "String",
                        requiredFlag: "Optional",
                        description: "Additional details about the eCheck and transaction.",
                    },
                    Created: {
                        readOnly: true,
                        type: "String",
                        description:
                            "The time the object was originally created. In ISO 8601 date-time format. It appears as <strong>YYYY-MM-DDTHH:MM:SSZ</strong>.",
                        systemDefined: true,
                    },
                    CheckNumber: {
                        type: "String",
                        description:
                            'The number of the eCheck associated with the transaction. <br/><br/>This number must be unique. Using the same <span class="literal">checkNumber</span> to create multiple eChecks will result in declines.',
                        requiredFlag: "Optional",
                    },
                    AuthCode: {
                        type: "String",
                        requiredFlag: "Optional",
                        description: "The authorization code for the echeck.",
                    },
                    PaymentMode: {
                        type: "PaymentModeType",
                        description:
                            "The payment mode. This is also known as the SEC Code.<br/><br/>Valid values:<ul><li><strong>WEB</strong>: Internet-initiated entry mode used for internet transactions.</li></ul>",
                        requiredFlag: "Required",
                    },
                    Token: {
                        type: "String",
                        requiredFlag: "Conditionally Required",
                        description:
                            'The opaque container for the credit or debit card account associated with the transaction.<br/><br/>Required if the <span class="literal">bankAccount</span> or <span class="literal">bankAccountOnFile</span> aren\'t specified. Learn more about <a href="https://developer-qa.intuit.com/app/developer/qbpayments/docs/api/resources/all-entities/tokens">creating tokens.</a>',
                    },
                    BankAccountOnFile: {
                        type: "String",
                        requiredFlag: "Conditionally Required",
                        description:
                            'An existing bank account that was previously stored.<br/><br/>Specify the ID of the existing bank account. Required if the <span class="literal">token</span> or <span class="literal">bankAccount</span> aren\'t specified.',
                    },
                    Amount: {
                        type: "Number",
                        description:
                            "The eCheck amount.<br/><br/>Valid values: Any value between <strong>0.01</strong> and <strong>99999.99</strong>.",
                        requiredFlag: "Required",
                    },
                    Context: {
                        $ref: [
                            {
                                deviceinfo: "DeviceInfo",
                            },
                        ],
                        type: "CheckContext",
                        description: "Additional info stored with the transaction.",
                        requiredFlag: "Optional",
                    },
                    Id: {
                        description: "The unique identifier for the eCheck.",
                        type: "String",
                        requiredFlag: "Conditionally required",
                        systemDefined: true,
                    },
                },
            },
            bankaccountidretrieve: {
                name: "bankaccountidretrieve",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: ["bankaccount_id"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    bankaccount_id: {
                        type: "String",
                        description: "The bank account you're calling.",
                        requiredFlag: "Required",
                    },
                    Id: {
                        type: "String",
                        description:
                            'The ID of the user or QuickBooks Company you\'re getting info for.<br/></br>If you\'re using the QuickBooks Online Accounting API, you can use a <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/customer">customer</a>, <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/vendor">vendor</a>, or <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/employee">employee</a> object to get their ID.<br/></br>If the entity is a QuickBooks Online company, the value is the <strong>realm ID</strong>.',
                        requiredFlag: "Required",
                    },
                },
            },
            chargeresponse: {
                name: "chargeresponse",
                ShowFirst: ["Id"],
                Default: [
                    "Status",
                    "Created",
                    "CaptureDetail",
                    "AvsZip",
                    "Token",
                    "CardSecurityCodeMatch",
                    "AvsStreet",
                ],
                Optional: ["Capture", "Description", "AuthCode", "RefundDetail"],
                Required: ["Currency", "Amount", "Context"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["Card"],
                type: "object",
                properties: {
                    Status: {
                        readOnly: true,
                        type: "ChargeStatusEnumerator",
                        description:
                            "The status of the charge. Charge athorization and capture are a two part process. Learn more about <a href=\"https://developer.intuit.com/app/developer/qbpayments/docs/workflows/understand-charge-and-refund-states\">charge states</a> for the QuickBookls Payments API.<br/><br/>Valid values:<ul><li><strong>AUTHORIZED</strong>: The card's issuing bank has authorized the cardholder's ability to pay. This ensures the credit or debit card account is in good standing with sufficient funds.</li><li><strong>DECLINED</strong>: The card authorization was declined, rejected by the payment transaction service (PTS), or returned by the payment processor.</li><li><strong>CAPTURED</strong>: The payment is in the second part of the two-step authorization and capture process.</li><li><strong>CANCELLED</strong>: The transaction was cancelled.</li><li><strong>SETTLED</strong>: The payment was successfully funded. The money moved to the seller\u2019s (i.e. merchant\u2019s) bank account. At this point, the charge is complete.</li><li><strong>REFUNDED</strong>: The money successfully transferred back to the buyer (i.e. card holder).</li></ul>",
                        systemDefined: true,
                    },
                    Capture: {
                        default: true,
                        type: "Boolean",
                        description:
                            "A flag that indicates if the charge was captured.<br/><br/>Valid values:<ul><li><strong>True</strong>: The charge was captured</li><li><strong>False</strong>: The charge wasn't captured. It's pending authorization.</li></ul>Defaults to <strong>true</strong>.",
                        requiredFlag: "Optional",
                    },
                    Description: {
                        maxLen: "4000",
                        type: "String",
                        description: "Free form text description. Additional details associated with the charge.",
                        requiredFlag: "Optional",
                    },
                    Created: {
                        readOnly: true,
                        type: "String",
                        description:
                            "The time the object was originally created. In ISO 8601 date-time format. It appears as <strong>YYYY-MM-DDTHH:MM:SSZ</strong>.",
                        systemDefined: true,
                    },
                    AuthCode: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            "The authorization code for the charge.<br/><br/><strong>Note</strong>: This is only available for uncaptured charges.",
                    },
                    CaptureDetail: {
                        readOnly: true,
                        $ref: [
                            {
                                captureresponse: "CaptureResponse",
                            },
                        ],
                        type: "Capture",
                        description: "Details about the captured charge. Available for previously authorized charges.",
                        systemDefined: true,
                    },
                    RefundDetail: {
                        $ref: [
                            {
                                refundresponse: "RefundResponse",
                            },
                        ],
                        type: "Array [refund]",
                        requiredFlag: "Optional",
                        description: "Details for one or more refunds applied to this charge.",
                    },
                    AvsZip: {
                        systemDefined: true,
                        type: "String",
                        description:
                            "The address verification service (AVS). This service verifies the ZIP code submitted by the customer for their credit or debit card.<br/><br/>AVS compares the ZIP code submitted at the time of the transaction with what's on file at the cardholder's bank. AVS is supported by most US banks and some international banks.<br/><br/>Valid responses:<ul><li><strong>Pass</strong></li><li><strong>Fail</strong></li><li><strong>NotAvailable</strong></li></ul>",
                        requiredFlag: "Response Only",
                    },
                    Currency: {
                        type: "String",
                        description:
                            "The 3-letter ISO 4217 compliant currency code, which defines the currency for the charge.",
                        requiredFlag: "Required",
                    },
                    Amount: {
                        type: "Number",
                        description:
                            "The transaction amount.<br/><br/>Valid values: Any value between <strong>0.01</strong> and <strong>99999.99</strong>.",
                        requiredFlag: "Required",
                    },
                    Token: {
                        type: "String",
                        requiredFlag: "Conditionally Required",
                        description:
                            'The opaque container for the credit or debit card account associated with the transaction.<br/><br/>Required if the <span class="literal">card</span> isn\'t specified.<br/><br/>Tokens are preferred to directly specifying a <span class="literal">card</span> or <span class="literal">cardOnFile</span> to comply with PCI standards. Learn more about <a href="https://developer-qa.intuit.com/app/developer/qbpayments/docs/api/resources/all-entities/tokens">creating tokens.</a>',
                    },
                    Context: {
                        $ref: [
                            {
                                paymentcontext: "PaymentContext",
                            },
                        ],
                        type: "PaymentContext",
                        requiredFlag: "Required",
                        description: "Additional info that will be stored with the transaction.",
                    },
                    CardSecurityCodeMatch: {
                        systemDefined: true,
                        type: "String",
                        description:
                            "The 3 or 4 digit card security code number that appears on credit and debit cards. This number is not part of the main credit card number.<br/><br/>This field indicates if the security code submitted at the time of the transaction matches what's on file at the cardholder's bank.<br/><br/>Valid responses:<ul><li><strong>Pass</strong></li><li><strong>Fail</strong></li><li><strong>NotAvailable</strong></li></ul>",
                        requiredFlag: "Response Only",
                    },
                    AvsStreet: {
                        systemDefined: true,
                        type: "String",
                        description:
                            "The address verification service (AVS). This service verifies the street address submitted by the customer for their credit or debit card.<br/><br/>AVS compares the ZIP code submitted at the time of the transaction with what's on file at the cardholder's bank. AVS is supported by most US banks and some international banks.<br/><br/>Valid responses:<ul><li><strong>Pass</strong></li><li><strong>Fail</strong></li><li><strong>NotAvailable</strong></li></ul>",
                        requiredFlag: "Response Only",
                    },
                    Id: {
                        systemDefined: true,
                        type: "String",
                        description:
                            "The unique identifier for the charge. This is a system-generated alpha-numeric ID.",
                        requiredFlag: "Conditionally required",
                    },
                    Card: {
                        $ref: [
                            {
                                card: "Card",
                            },
                        ],
                        type: "Card",
                        requiredFlag: "Conditionally required",
                        description:
                            'The credit or debit card used for the charge.<br/><br/>Required if <span class="literal">token</span> isn\'t specified.',
                    },
                },
            },
            errortype: {
                name: "errortype",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: ["Errors"],
                type: "object",
                properties: {
                    Errors: {
                        requiredFlag: "Conditionally required",
                        $ref: [
                            {
                                error: "Error",
                            },
                        ],
                        type: "array[Error]",
                        description: "<br/>List of errors returned by the operation.",
                        extra: ["system generated"],
                    },
                },
            },
            deviceinfo: {
                name: "deviceinfo",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["MacAddress", "Encrypted", "IpAddress", "Longitude", "PhoneNumber", "Latitude", "Type"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    MacAddress: {
                        maxLen: "50",
                        type: "String",
                        description: "The device's media access control (MAC) address.",
                        requiredFlag: "Optional",
                    },
                    Encrypted: {
                        description: "The device's encryption status.",
                        type: "Boolean",
                        requiredFlag: "Optional",
                        extra: ["optional"],
                    },
                    IpAddress: {
                        maxLen: "40",
                        type: "String",
                        description: "The device's IP address.",
                        requiredFlag: "Optional",
                    },
                    Longitude: {
                        maxLen: "20",
                        type: "String",
                        description: "The device's longitude coordinates.",
                        requiredFlag: "Optional",
                    },
                    PhoneNumber: {
                        maxLen: "20",
                        type: "String",
                        description: "The device's phone number (if available).",
                        requiredFlag: "Optional",
                    },
                    Latitude: {
                        maxLen: "20",
                        type: "String",
                        description: "The device's latitude coordinates.",
                        requiredFlag: "Optional",
                    },
                    Type: {
                        maxLen: "200",
                        type: "String",
                        description: "The type of device.",
                        requiredFlag: "Optional",
                    },
                    Id: {
                        description: "The device's ID.",
                        type: "String",
                        requiredFlag: "Conditionally required",
                        systemDefined: true,
                    },
                },
            },
            cardqueryretrieve: {
                name: "cardquery",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Id: {
                        type: "String",
                        description:
                            'The ID of the customer your app is getting card info for.<br/><br/>If you\'re using the QuickBooks Online Accounting API, you can use the <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/customer">Customer</a>, <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/vendor">Vendor</a>, or <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/most-commonly-used/employee">Employee</a> entity to get their ID. This value can be stored in QuickBooks or your app.</a>',
                        requiredFlag: "Required",
                    },
                },
            },
            token: {
                name: "token",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Value"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Value: {
                        type: "String",
                        description:
                            'The ID of the system generated token. Learn more about the <a href="https://developer.intuit.com/app/developer/qbpayments/docs/api/resources/all-entities/tokens">token</a> entity.',
                        requiredFlag: "Required",
                    },
                },
            },
            bankaccountiddelete: {
                name: "bankaccountiddelete",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [],
                Required: ["bankaccount_id"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    bankaccount_id: {
                        type: "String",
                        description: "The bank account to be deleted.",
                        requiredFlag: "Required",
                    },
                    Id: {
                        type: "String",
                        description:
                            'The customer id to which a bank account should be deleted. If you are using QuickBooks Online, this can be obtained using the Customer resource in the <a href="https://developer.intuit.com/v2/apiexplorer?apiname=V3QBO#?id=Account">Quickbooks Accounting API.</a>  Otherwise, it can be the customer\'s ID stored in your app.',
                        requiredFlag: "Required",
                    },
                },
            },
            error: {
                name: "error",
                ShowFirst: [],
                Default: ["Type", "Detail", "Error", "Message", "MoreInfo", "InfoLink"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Type: {
                        type: "string",
                        description: "Error type.",
                    },
                    Detail: {
                        type: "string",
                        description: "Additional detail of the error.",
                    },
                    Error: {
                        type: "string",
                        description: "Error code.",
                    },
                    Message: {
                        type: "string",
                        description: "Reason for the error.",
                    },
                    MoreInfo: {
                        type: "string",
                        description: "<span>More info.</span>",
                    },
                    InfoLink: {
                        type: "string",
                        description: "<span>Link to more information.</span>",
                    },
                },
            },
            refundrequest: {
                name: "refundrequest",
                ShowFirst: [],
                Default: [],
                Optional: ["Description", "Context"],
                Required: ["Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Amount: {
                        type: "number",
                        description:
                            "The transaction amount.<br/><br/>Valid values: Any value between <strong>0.01</strong> and <strong>99999.99</strong>.",
                        requiredFlag: "Required",
                    },
                    Description: {
                        type: "string",
                        description: "Text info you want to store with the transaction.",
                        requiredFlag: "Optional",
                    },
                    Context: {
                        $ref: [
                            {
                                paymentcontext: "PaymentContext",
                            },
                        ],
                        type: "PaymentContext",
                        requiredFlag: "Optional",
                        description: "Additional data you wish to store for this transaction.",
                    },
                },
            },
            chargerequest: {
                name: "chargerequest",
                ShowFirst: [],
                Default: ["CardOnFile", "Card"],
                Optional: ["Capture", "Description"],
                Required: ["Token", "Currency", "Amount", "Context"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Capture: {
                        default: true,
                        type: "Boolean",
                        description:
                            'Capture flag. Valid values include:\n<li>\n  <span class="literal"> true </span> \u2014The charge has been captured.\n</li>\n<li>\n  <span class="literal"> false </span> \u2014The charge is uncaptured and pending authorization.\n</li>\n</ul>',
                        requiredFlag: "Optional",
                    },
                    Description: {
                        maxLen: "4000 chars",
                        type: "String",
                        description: "Additional text details to be associated with the charge.",
                        requiredFlag: "Optional",
                    },
                    Token: {
                        type: "String",
                        description:
                            "Preferred to specifying card or cardOnFile in order to ensure PCI compliance.\nOpaque representation of the credit card or debit card associated with this charge, as returned by the token endpoint. Applications that access cardholder information using the Payments API are required to follow the payment application data security standard (PA DSS) established by the payment card industry, which specifies how cardholder data must be protected. As such, the token resource provides a programatic way to comply with this standard without having to hold sensitive card information on your own servers.",
                        requiredFlag: "Required",
                    },
                    Currency: {
                        type: "String",
                        description:
                            "Three-letter ISO 4217 currency code representing the currency in which the charge was made.",
                        requiredFlag: "Required",
                    },
                    Amount: {
                        type: "Number",
                        description: "Amount of the transaction. Valid values range 0.00 through 99999.99.",
                        requiredFlag: "Required",
                    },
                    Context: {
                        $ref: [
                            {
                                paymentcontext: "PaymentContext",
                            },
                        ],
                        type: "PaymentContext",
                        requiredFlag: "Required",
                        description: "Additional data you wish to store for this transaction.",
                    },
                    CardOnFile: {
                        type: "CardOnFile",
                        requiredFlag: "Conditionally Required",
                        description:
                            'The id for a card that has been previously stored on file. Required if neither <span class="literal"> token </span> nor <span class="literal"> card </span> are specified.',
                    },
                    Card: {
                        $ref: [
                            {
                                card: "Card",
                            },
                        ],
                        type: "Card",
                        requiredFlag: "Conditionally Required",
                        description:
                            'Token is preferred in order to avoid PCI compliance requirements.\n<br/>Explicit credit card or debit card details associated with this charge. Required if neither <span class="literal"> token </span> nor <span class="literal"> cardOnFile </span> are specified.',
                    },
                },
            },
            zerodollarverification: {
                name: "zerodollarverification",
                ShowFirst: [],
                Default: ["Status"],
                Optional: ["TransactionId", "Type"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Status: {
                        type: "String",
                        description: "Denotes the verification status of the credit or debit card.",
                    },
                    TransactionId: {
                        readOnly: true,
                        type: "String",
                        requiredFlag: "Optional",
                        description: "The ID of the transaction (if returned) from the verification service.",
                    },
                    Type: {
                        readOnly: true,
                        type: "String",
                        description:
                            "Contains information about type of verification used to verify the creidt or debit card. It can be $0auth with card networks, or be an internal Intuit service",
                        requiredFlag: "Optional",
                    },
                },
            },
        },
        qbo: {
            balancesheetreporttoplevel: {
                name: "profitandlossreporttoplevel",
                ShowFirst: [],
                Default: ["Header", "Rows", "Columns"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Header: {
                        description: "The report header.\n",
                        $ref: [
                            {
                                reportheader: "reportheader",
                            },
                        ],
                    },
                    Rows: {
                        description: "Top level container holding information for Profit and Loss report rows.\n",
                        $ref: [
                            {
                                balancesheetreportrows: "profitandlossreportrows",
                            },
                        ],
                    },
                    Columns: {
                        description: "Top level container holding information for report columns or subcolumns.\n",
                        $ref: [
                            {
                                reportcolumns: "reportcolumns",
                            },
                        ],
                    },
                },
            },
            classresponse: {
                name: "classresponse",
                ShowFirst: ["Id"],
                Default: ["FullyQualifiedName"],
                Optional: ["SubClass", "Active", "MetaData"],
                Required: ["Name"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["ParentRef"],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    Name: {
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        description: "User recognizable name for the Class.",
                        requiredFlag: "Required",
                    },
                    FullyQualifiedName: {
                        sortable: true,
                        description:
                            'Fully qualified name of the entity. The fully qualified name prepends the topmost parent, followed by each sub class separated by colons. Takes the form of\n<span class="literal">Parent:Class1:SubClass1:SubClass2</span>. Limited to 5 levels.',
                        filterable: true,
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    SubClass: {
                        systemDefined: true,
                        type: "Boolean",
                        description:
                            'Specifies whether this object is a subclass.\n<span class="literal">true</span>--this object represents a subclass.\n<span class="literal">false</span> or null--this object represents a top-level class.',
                        requiredFlag: "Optional",
                    },
                    ParentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description: "The immediate parent of the SubClass. Required if this object is a subclass.",
                        requiredFlag: "Conditionally required",
                    },
                    Active: {
                        sortable: true,
                        description: "If true, this entity is currently enabled for use by QuickBooks.",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "true",
                        type: "Boolean",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        sortable: true,
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ModificationMetaData",
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                    },
                },
            },
            cashflowquery: {
                name: "cashflowquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "vendor",
                    "end_date",
                    "date_macro",
                    "class",
                    "item",
                    "sort_order",
                    "summarize_column_by",
                    "department",
                    "start_date",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "Return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.<br />Supported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "Include data for all classes",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified classes if so configured in the company file.<br />Supported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                    item: {
                        default: "Include data for all items",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified items.<br />Supported Values: One or more comma separated item IDs as returned in the attribute, <span class="literal">Item.Id</span>,of the Item entity response code.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.<br />Supported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                },
            },
            transactionlistwithsplitsquery: {
                name: "transactionlistwithsplitsquery ",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "docnum",
                    "name",
                    "end_date",
                    "date_macro",
                    "payment_method",
                    "source_account_type",
                    "transaction_type",
                    "group_by",
                    "sort_by",
                    "sort_order",
                    "start_date",
                    "columns",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    docnum: {
                        default: "Include data for all docnums.",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified transaction number, as found in the <span class="literal">docnum</span> parameter of the transaction object.',
                        requiredFlag: "Optional",
                    },
                    name: {
                        default: "Include data from all customer, vendor, and employee objects",
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Filters report contents based on the specified comma separated list of ids for the name list customer, vendor, or employee objects.<br />Query the Customer, Vendor, or Employee name list resource to determine the list of objects for this reference. Specify values found in <span class="literal">Customer.Id</span>, <span class="literal">Vendor.Id</span>, and <span class="literal">Employee.Id</span>. For example, <span class="literal">name=1,4,7</span> includes data in the report for  namelist ids 1, 4, and 7. vendor and employee objects',
                    },
                    end_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Quarter",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    payment_method: {
                        default: "Include all payment methods",
                        type: "String",
                        description:
                            'Filters report contents based on payment method.<br />Supported Values: <span class="literal">Cash</span>, <span class="literal">Check</span>, <span class="literal">Dinners Club</span>, <span class="literal">American Express</span>, <span class="literal">Discover</span>, <span class="literal">MasterCard</span>, <span class="literal">Visa</span>',
                        requiredFlag: "Optional",
                    },
                    source_account_type: {
                        default: '<span class="literal">All account types</span>',
                        table: {
                            account_types: [
                                "Show supported account types and values",
                                "Hide supported account types and values",
                            ],
                        },
                        type: "String",
                        description:
                            "Account type from which transactions are included in the report.<br />Supported Values: <span >AccountsPayable</span>, <span >AccountsReceivable</span>, <span >Bank</span>, <span >CostOfGoodsSold</span>, <span >CreditCard</span>, <span >Equity</span>, <span >Expense</span>, <span >FixedAsset</span>, <span >Income</span>, <span >LongTermLiability</span>, <span >NonPosting</span>, <span >OtherAsset</span>, <span >OtherCurrentAsset</span>, <span >OtherCurrentLiability</span>, <span >OtherExpense</span>, <span>OtherIncome</span>",
                        requiredFlag: "Optional",
                    },
                    transaction_type: {
                        default: "Return data for all transactions",
                        type: "String",
                        description:
                            "Filters report contents based transaction type. Supported values include:<br />CreditCardCharge, Check, Invoice, ReceivePayment, JournalEntry, Bill, CreditCardCredit, VendorCredit, Credit, BillPaymentCheck, BillPaymentCreditCard, Charge, Transfer, Deposit, Statement, BillableCharge, TimeActivity, CashPurchase, SalesReceipt, CreditMemo, CreditRefund, Estimate, InventoryQuantityAdjustment, PurchaseOrder, GlobalTaxPayment, GlobalTaxAdjustment, Service Tax Refund, Service Tax Gross Adjustment, Service Tax Reversal, Service Tax Defer, Service Tax Partial Utilisation",
                        requiredFlag: "Optional",
                    },
                    group_by: {
                        type: "String",
                        description:
                            "The field in the transaction by which to group results. Supported Values: Name, Account, Transaction Type",
                        requiredFlag: "Optional",
                    },
                    sort_by: {
                        default: '<span class="literal">txn_type</span>',
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.<br />Supported Values: account_name, is_adj, create_by, create_date, tx_date, last_mod_date, last_mod_by, name, doc_num, pmt_mthd, is_no_post , txn_type",
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    columns: {
                        default: "columns denoted with *",
                        table: {
                            columns_tax: [
                                "Show additional values supported based on multicurrency settings for the company.",
                                "Hide additional values supported based on multicurrency settings for the company.",
                            ],
                        },
                        type: "String",
                        description:
                            'Column types to be shown in the report.<br />Supported Values: tx_date, txn_type, doc_num, is_no_post, account_name, memo, account_name, amount, is_adj, create_by, create_date, last_mod_date, last_mod_by, cust_name, vend_name, rate, quantity, item_name, emp_name, pmt_mthd, nat_open_bal, tax_type, is_billable, debt_amt, credit_amt, is_cleared, olb_status <br /> Additional columns when location tracking enabled: dept_name* <br /> Additional columns with location tracking enabled: dept_name* <br /> Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>.',
                        requiredFlag: "Optional",
                    },
                },
            },
            cashbackinfo: {
                name: "cashbackinfo",
                ShowFirst: [],
                Default: [],
                Optional: ["Memo"],
                Required: ["AccountRef", "Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    AccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'The bank acount into which the cashback amount is transferred. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">AccountRef.value</span> and <span class="literal">\\AccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.Classification</span> set to <span class="literal">Asset</span>. ',
                    },
                    Amount: {
                        type: "String",
                        description: "Amount of the cash back transaction.",
                        requiredFlag: "Required",
                    },
                    Memo: {
                        type: "String",
                        description: "Memo associated with this cash back transaction.",
                        requiredFlag: "Optional",
                    },
                },
            },
            attachablerequest: {
                name: "attachablerequest",
                ShowFirst: [],
                Default: [],
                Optional: ["AttachableRef"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: ["Note", "FileName"],
                type: "object",
                properties: {
                    Note: {
                        sortable: true,
                        description:
                            'The note is either related to the attachment specified with the <span class="literal">FileName</span> attribute, or as a standalone note. Required for note attachments.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "max 2000 chars",
                        type: "String",
                    },
                    AttachableRef: {
                        $ref: [
                            {
                                attachableref: "AttachableRef",
                            },
                        ],
                        type: "AttachableRef",
                        requiredFlag: "Optional",
                        description: "Specifies the transaction object to which this attachable file is to be linked. ",
                    },
                    FileName: {
                        sortable: true,
                        description: "FileName of the attachment. Required for file attachments.",
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum 1000 chars",
                        type: "String",
                    },
                },
            },
            preferencesresponse: {
                name: "preferencesresponse",
                ShowFirst: ["Id"],
                Default: [
                    "EmailMessagesPrefs",
                    "ProductAndServicesPrefs",
                    "ReportPrefs",
                    "AccountingInfoPrefs",
                    "SalesFormsPrefs",
                    "VendorAndPurchasesPrefs",
                    "TaxPrefs",
                    "OtherPrefs",
                    "TimeTrackingPrefs",
                    "CurrencyPrefs",
                ],
                Optional: ["MetaData"],
                Required: [],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    EmailMessagesPrefs: {
                        $ref: [
                            {
                                emailmessagesprefs: "EmailMessagesPrefs",
                            },
                        ],
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    ProductAndServicesPrefs: {
                        $ref: [
                            {
                                productandservicesprefs: "ProductAndServicesPrefs",
                            },
                        ],
                    },
                    ReportPrefs: {
                        $ref: [
                            {
                                reportprefs: "ReportPrefs",
                            },
                        ],
                    },
                    AccountingInfoPrefs: {
                        description:
                            'The following settings are available for QuickBooks Online Plus editions, only. To determine this edition type, query the value of the <span class="literal">OfferingSku</span> CustomerInfo.Name name/value pair for <span class="literal">QuickBooks Online Plus</span>.',
                        $ref: [
                            {
                                accountinginfoprefs: "AccountingInfoPrefs",
                            },
                        ],
                    },
                    SalesFormsPrefs: {
                        $ref: [
                            {
                                salesformspref: "SalesFormsPref",
                            },
                        ],
                    },
                    VendorAndPurchasesPrefs: {
                        $ref: [
                            {
                                vendorandpurchaseprefs: "VendorAndPurchasePrefs",
                            },
                        ],
                    },
                    TaxPrefs: {
                        $ref: [
                            {
                                taxprefs: "TaxPrefs",
                            },
                        ],
                    },
                    OtherPrefs: {
                        table: {
                            otherprefs: ["Show child attributes", "Hide child attributes"],
                        },
                        description:
                            "Specifies extension of Preference resource to allow extension of Name-Value pair based extension at the top level.",
                    },
                    TimeTrackingPrefs: {
                        $ref: [
                            {
                                timetrackingprefs: "TimeTrackingPrefs",
                            },
                        ],
                    },
                    CurrencyPrefs: {
                        $ref: [
                            {
                                currencyprefs: "CurrencyPrefs",
                            },
                        ],
                    },
                    Id: {
                        readOnly: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.",
                    },
                },
            },
            reimburselinedetail: {
                name: "reimburselinedetail",
                ShowFirst: [],
                Default: [],
                Optional: ["ClassRef", "TaxCodeRef", "MarkupInfo", "ItemAccountRef", "ItemRef"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class for the line item. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerLine</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    TaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the <span class="literal">TaxCode</span>for this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">TaxCodeRef.value</span> and <span class="literal">TaxCodeRef.name</span>, respectively.  ',
                    },
                    MarkupInfo: {
                        $ref: [
                            {
                                markupinfo: "MarkupInfo",
                            },
                        ],
                        type: "MarkupInfo",
                        requiredFlag: "Optional",
                        description:
                            "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line.",
                    },
                    ItemAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            'Available with invoice objects, only, and when there is a <span class="literal">linkedtxn</span> of type <span class="literal">ReimburseCharge</span> for this object. When <span class="literal">ItemRef.Id</span> is set to 1, <span class="literal">ItemAccountRef</span> maps to the reimbursable charge account.',
                        requiredFlag: "Optional",
                    },
                    ItemRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            "Reference to the Item. These will not be present for markup lines or Purchase Reimburse Lines",
                    },
                },
            },
            discountlinedetail: {
                name: "discountlinedetail",
                ShowFirst: [],
                Default: [],
                Optional: ["ClassRef", "TaxCodeRef", "DiscountAccountRef", "PercentBased", "DiscountPercent"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively.  ',
                    },
                    TaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'The <span class="literal">TaxCode</span>associated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">TaxCodeRef.value</span> and <span class="literal">TaxCodeRef.name</span>, respectively.',
                    },
                    DiscountAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType=Income</span> and <span class="literal">Account.AccountSubType=DiscountsRefundsGiven</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">DiscountAccountRef.value</span> and <span class="literal">DiscountAccountRef.name</span>, respectively.  ',
                    },
                    PercentBased: {
                        type: "Boolean",
                        description: "True if the discount is a percentage; null or false if discount based on amount.",
                        requiredFlag: "Optional",
                    },
                    DiscountPercent: {
                        type: "Decimal",
                        description:
                            "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085. ",
                        requiredFlag: "Optional",
                    },
                },
            },
            datetime: {
                name: "datetime",
                ShowFirst: [],
                Default: ["dateTime"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    dateTime: {
                        type: "string",
                        description:
                            'Local time zone:\n<em>\n<span class="literal">YYYY-MM-DDTHH:MM:SS\n</span>\n</em>\nUTC:\n<em></em>\n<em>YYYY-MM-DD</em>T\n<em>HH</em>\n<em>:MM:</em>\n<em>SS</em>Z\nSpecific time zone:\n<em></em>\n<span class="literal">\n<em>YYYY-MM-DD</em>T</span>\n<em>\n<span class="literal">HH</span>\n</em>\n<em>\n<span class="literal">:MM:SS</span>\n</em>\n<span class="literal">+/-\n<em>HH</em>\n<em>:MM</em>\n</span>',
                    },
                },
            },
            profitandlossreporttoplevel: {
                name: "profitandlossreporttoplevel",
                ShowFirst: [],
                Default: ["Header", "Rows", "Columns"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Header: {
                        description: "The report header.\n",
                        $ref: [
                            {
                                reportheader: "reportheader",
                            },
                        ],
                    },
                    Rows: {
                        description: "Top level container holding information for profit and loss report rows.\n",
                        $ref: [
                            {
                                profitandlossreportrows: "profitandlossreportrows",
                            },
                        ],
                    },
                    Columns: {
                        description: "Top level container holding information for report columns or subcolumns.\n",
                        $ref: [
                            {
                                reportcolumns: "reportcolumns",
                            },
                        ],
                    },
                },
            },
            purchaserequest: {
                name: "purchaserequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["PaymentType", "AccountRef", "Line [0..n]"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    PaymentType: {
                        type: "String",
                        description:
                            'Payment Type can be: \n<span class="literal">Cash</span>,\n<span class="literal">Check</span>, or\n<span class="literal">CreditCard</span>.',
                        requiredFlag: "Required",
                    },
                    AccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            "Specifies the account reference. Check must specify bank account, CreditCard must specify credit card account.\nValidation Rules:Valid and Active Account Reference of an appropriate type.",
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company',
                        requiredFlag: "Conditionally required",
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                accountbasedexpenseline: "AccountBasedExpenseLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items of a transaction. Valid\n<span class="literal">Line</span>type for create: <span class="literal">AccountBasedExpenseLine</span>',
                    },
                },
            },
            billrequest: {
                name: "billrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["VendorRef", "Line [0..n]"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    VendorRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to the vendor for this transaction. Query the Vendor name list resource to determine the appropriate Vendor object for this reference. Use <span class="literal">Vendor.Id</span> and <span class="literal">Vendor.Name</span> from that object for <span class="literal">VendorRef.value</span> and <span class="literal">VendorRef.name</span>, respectively.\n',
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                accountbasedexpenseline: "AccountBasedExpenseLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description: "The minimum line item required for the request.\n",
                    },
                },
            },
            threshold: {
                name: "threshold",
                ShowFirst: [],
                Default: ["currentCount", "aboveThreshold", "enforced", "limit", "name"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    currentCount: {
                        type: "String",
                        description: "Indicates current value of attribute.",
                    },
                    aboveThreshold: {
                        type: "String",
                        description: "Indicate whether the current count of the attribute has reached its limit.",
                    },
                    enforced: {
                        type: "String",
                        description: "Whether the threshold is enforced.",
                    },
                    limit: {
                        type: "String",
                        description: "The upper limit for the threshold.",
                    },
                    name: {
                        type: "String",
                        description: "The name of the threshold.",
                    },
                },
            },
            checkpayment: {
                name: "checkpayment",
                ShowFirst: [],
                Default: [],
                Optional: ["CheckNum", "Status", "NameOnAcct", "AcctNum", "BankName"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    CheckNum: {
                        type: "String",
                        description: "The check number printed on the check. ",
                        requiredFlag: "Optional",
                    },
                    Status: {
                        type: "String",
                        description: "Status of the check. Values provided by service/business logic. ",
                        requiredFlag: "Optional",
                    },
                    NameOnAcct: {
                        type: "String",
                        description: "Name of persons or entities holding the account, as printed on the check. ",
                        requiredFlag: "Optional",
                    },
                    AcctNum: {
                        type: "String",
                        description: "Checking account number, as printed on the check. ",
                        requiredFlag: "Optional",
                    },
                    BankName: {
                        type: "String",
                        description: "The name of the bank on which the check was drawn. ",
                        requiredFlag: "Optional",
                    },
                },
            },
            itembasedexpenselinebill: {
                name: "itembasedexpenseline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["LinkedTxn [0..n]", "Description", "LineNum"],
                Required: ["ItemBasedExpenseLineDetail", "Amount", "DetailType"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "LinkedTxn [0..n]": {
                        readOnly: false,
                        $ref: [
                            {
                                linkedtxnbill: "LinkedTxn",
                            },
                        ],
                        type: "LinkedTxn",
                        requiredFlag: "Optional",
                        description:
                            'Zero or more transactions linked to this object. The <span class="literal">LinkedTxn.TxnType</span> can be set to <span class="literal">PurchaseOrder</span> or if using Minor Version 55 and above it can also be set to <span class="literal">ReimburseCharge</span>. Use <span class="literal">LinkedTxn.TxnId</span> as the ID of the transaction.  When updating an existing Bill to link to a PurchaseOrder a new Line must be created. This behavior matches the QuickBooks UI as it does not allow the linking of an existing line, but rather a new line must be added to link the PurchaseOrder. Over the API this is achieved by simply updating the Bill <span class="literal">Line.Id</span> to something new. This will ensure old bill line is deleted and the new line is linked to the PurchaseOrder. Please be aware that for this PurchaseOrder-Bill linking to work all LinkedTxn child attributes are required.  See child attributes below.',
                    },
                    Description: {
                        maxLen: "Max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    ItemBasedExpenseLineDetail: {
                        type: "ItemBasedExpenseLineDetail",
                        requiredFlag: "Required",
                        $ref: [
                            {
                                itembasedexpenselinedetail: "ItemBasedExpenseLineDetail",
                            },
                        ],
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer.",
                    },
                    Amount: {
                        maxLen: "Max 15 digits in 10.5 format",
                        type: "Decimal",
                        description: "The amount of the line item.",
                        requiredFlag: "Required",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description:
                            'Set to\n<span class="literal">ItemBasedExpenseLineDetail</span> for this type of line.',
                        requiredFlag: "Required",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>If\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.</li>\n<li>If no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            deliveryinfo: {
                name: "deliveryinfo",
                ShowFirst: [],
                Default: ["DeliveryType", "DeliveryTime"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    DeliveryType: {
                        readOnly: true,
                        type: "DeliveryTypeEnum",
                        description:
                            'Type of the delivery. Used to confirm that email has been sent via the send operation.\n Valid values currently include: <span class="literal">Email</span>.',
                    },
                    DeliveryTime: {
                        readOnly: true,
                        type: "DateTime",
                        description: "Delivery date and time. ",
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                    },
                },
            },
            discountoverride: {
                name: "discountoverride",
                ShowFirst: [],
                Default: [],
                Optional: ["DiscountAccountRef", "DiscountRef", "PercentBased", "DiscountPercent"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    DiscountAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description: "Income account used to track discounts received from vendors on purchases.  ",
                    },
                    DiscountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            "Discount item used in calculating and applying the discount on the sales transaction paid.  ",
                    },
                    PercentBased: {
                        type: "Boolean",
                        description: "True if the discount is a percentage; null or false if discount based on amount.",
                        requiredFlag: "Optional",
                    },
                    DiscountPercent: {
                        type: "Decimal",
                        description:
                            "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085. ",
                        requiredFlag: "Optional",
                    },
                },
            },
            creditmemoresponse: {
                name: "creditmemoresponse",
                ShowFirst: ["Id"],
                Default: [
                    "HomeBalance",
                    "RemainingCredit",
                    "RecurDataRef",
                    "TaxExemptionRef",
                    "Balance",
                    "HomeTotalAmt",
                ],
                Optional: [
                    "TxnDate",
                    "CustomField ",
                    "ClassRef",
                    "PrintStatus",
                    "SalesTermRef",
                    "GlobalTaxCalculation",
                    "TotalAmt",
                    "InvoiceRef",
                    "TransactionLocationType",
                    "ApplyTaxAfterDiscount",
                    "DocNumber",
                    "PrivateNote",
                    "CustomerMemo",
                    "TxnTaxDetail",
                    "PaymentMethodRef",
                    "ExchangeRate",
                    "ShipAddr",
                    "DepartmentRef",
                    "EmailStatus",
                    "BillAddr",
                    "MetaData",
                ],
                Required: ["Line [0..n]", "CustomerRef"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef", "BillEmail"],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n<br/>Sort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    "CustomField ": {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    HomeBalance: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Convenience field containing the amount in <span class="literal">Balance</span> expressed in terms of the home currency. Calculated by QuickBooks business logic. Value is valid only when <span class="literal">CurrencyRef</span> is specified and available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter. Applicable if multicurrency is enabled for the company.',
                        minorVersion: 3,
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerLine</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    PrintStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Printing status of the credit-memo.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToPrint</span>,\n<span class="literal">PrintComplete\n</span>. ',
                    },
                    SalesTermRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the sales term associated with the transaction. Query the Term name list resource to determine the appropriate Term object for this reference. Use <span class="literal">Term.Id</span> and <span class="literal">Term.Name</span> from that object for <span class="literal">SalesTermRef.value</span> and <span class="literal">SalesTermRef.name</span>, respectively. ',
                    },
                    GlobalTaxCalculation: {
                        default: '<span class="literal">TaxExcluded</span>',
                        type: "GlobalTaxCalculationEnum",
                        description:
                            'Method in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                        locales: ["GB", "AU", "IN", "CA"],
                        requiredFlag: "Optional",
                    },
                    TotalAmt: {
                        type: "BigDecimal",
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        requiredFlag: "Optional",
                    },
                    RemainingCredit: {
                        readOnly: true,
                        type: "Decimal",
                        description: "Indicates the total credit amount still available to apply towards the payment.",
                    },
                    InvoiceRef: {
                        description:
                            'Reference to the Invoice for which Credit memo is issued. Needed for GST compliance. Use <span class="literal">Invoice.Id</span> and <span class="literal">Invoice.Name</span> from that object for <span class="literal">InvoiceRef.value</span> and <span class="literal">InvoiceRef.name</span>, respectively. ',
                        default: "WithinIndia",
                        requiredFlag: "Optional",
                        minorVersion: 37,
                        type: "ReferenceType",
                        locales: ["IN"],
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: "WithinFrance",
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    ApplyTaxAfterDiscount: {
                        default: '<span class="literal">false</span>',
                        type: "Boolean",
                        description:
                            " If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax. US versions of QuickBooks only.",
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of <span class="literal">Preferences:CustomTxnNumber</span> as follows:\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.</li>\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is false, resulting DocNumber is system generated by incrementing the last number by 1.</li>\n</ul>\nIf <span class="literal">Preferences:CustomTxnNumber</span> is false then do not send a value as it can lead to unwanted duplicates. If a DocNumber value is sent for an Update operation, then it just updates that particular invoice and does not alter the internal system DocNumber. <br/><em>Note:</em> DocNumber is an optional field for all locales except France. For France locale if <span class="literal">Preferences:CustomTxnNumber</span> is enabled it will <b>not</b> be automatically generated and is a required field.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 21 chars",
                        type: "String",
                    },
                    PrivateNote: {
                        maxLen: "max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the deposit form.",
                        requiredFlag: "Optional",
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">CreditMemo</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                            {
                                groupline: "GroupLine",
                            },
                            {
                                descriptiononlyline: "DescriptionOnlyLine",
                            },
                            {
                                discountline: "DiscountLine",
                            },
                            {
                                subtotalline: "SubTotalLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items of a transaction. Valid <span class="literal">Line</span> types include:<span class="literal">SalesItemLine</span>, <span class="literal">GroupLine</span>, <span class="literal">DescriptionOnlyLine</span>, <span class="literal">DiscountLine</span> and <span class="literal">SubTotalLine</span>',
                    },
                    CustomerMemo: {
                        $ref: [
                            {
                                memoref: "MemoRef",
                            },
                        ],
                        type: "MemoRef",
                        requiredFlag: "Optional",
                        description:
                            "User-entered message to the customer; this message is visible to end user on their transactions. ",
                    },
                    TaxExemptionRef: {
                        minorVersion: 21,
                        description:
                            'Reference to the <span class="literal">TaxExepmtion</span> ID associated with this object. Available for companies that have <a href="https://developer.intuit.com/hub/blog/2017/12/11/using-quickbooks-online-api-automated-sales-tax" title="Automatic Sales Tax">automated sales tax</a> enabled.\n<li><span class="literal">TaxExemptionRef.Name</span>: The Tax Exemption Id for the customer to which this object is associated. This Id is typically issued by the state.</li>\n<li><span class="literal">TaxExemptionRef.value</span>: The system-generated Id of the exemption type.</li>\n</ul>\n For internal use only.',
                        systemDefined: true,
                        readOnly: true,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Balance: {
                        filterable: true,
                        type: "Decimal",
                        readOnly: true,
                        sortable: true,
                        description:
                            'The balance reflecting any payments made against the transaction. Initially set to the value of\n<span class="literal">TotalAmt</span>. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.',
                    },
                    CustomerRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. ',
                    },
                    TxnTaxDetail: {
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                        type: "TxnTaxDetail",
                        requiredFlag: "Optional",
                        description:
                            'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See <a href="https://developer.intuit.com/app/developer/qbo/docs/workflows/manage-sales-tax-for-non-us-locales" title="Global Tax Model">Global tax model</a> for more information about this element.\nIf sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored.\n',
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PaymentMethodRef: {
                        readOnly: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a PaymentMethod associated with this transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. Use <span class="literal">PaymentMethod.Id</span> and <span class="literal">PaymentMethod.Name</span> from that object for <span class="literal">PaymentMethodRef.value</span> and <span class="literal">PaymentMethodRef.name</span>, respectively. ',
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    ShipAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Identifies the address where the goods must be shipped. If\n<span class="literal">ShipAddr</span>is not specified, and a default\n<span class="literal">Customer:ShippingAddr</span> is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks. <br/>For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/>If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    HomeTotalAmt: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic.\nValue is valid only when <span class="literal">CurrencyRef</span> is specified. Applicable if multicurrency is enabled for the company.',
                        systemDefined: true,
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.TrackDepartments</span> is set to <span class="literal">true</span>.\nQuery the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    EmailStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        description:
                            'Email status of the credit-memo.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToSend</span>,\n<span class="literal">EmailSent\n</span>',
                        requiredFlag: "Optional",
                    },
                    BillAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Bill-to address of the credit memo. If\n<span class="literal">BillAddr</span>is not specified, and a default\n<span class="literal">Customer:BillingAddr</span> is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks. <br/>For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/>If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    BillEmail: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        requiredFlag: "Conditionally required",
                        description:
                            'Identifies the e-mail address where the credit-memo is sent. If\n<span class="literal">EmailStatus=NeedToSend</span>,\n<span class="literal">BillEmail</span>is a required input.',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            trialbalancequery: {
                name: "trialbalancequery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "accounting_method",
                    "end_date",
                    "date_macro",
                    "sort_order",
                    "summarize_column_by",
                    "start_date",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute.',
                        type: "String",
                        description:
                            'The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.\nSupported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                },
            },
            modificationmetadata: {
                name: "modificationmetadata",
                ShowFirst: [],
                Default: ["CreateTime", "LastUpdatedTime"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    CreateTime: {
                        sortable: true,
                        description: "Time the entity was created in the source domain. ",
                        filterable: true,
                        systemDefined: true,
                        readOnly: true,
                        type: "DateTime",
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                    },
                    LastUpdatedTime: {
                        sortable: true,
                        description: "Time the entity was last updated in the source domain.",
                        filterable: true,
                        systemDefined: true,
                        readOnly: true,
                        type: "DateTime",
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                    },
                },
            },
            billpaymentcreditcard: {
                name: "billpaymentcreditcard",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["CCAccountRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    CCAccountRef: {
                        sortable: true,
                        description:
                            'Reference to the credit card account. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">CCAccountRef.value</span> and <span class="literal">CCAccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.AccountType</span> set to <span class="literal">Credit Card</span> and <span class="literal">Account.AccountSubType</span> set to <span class="literal">CreditCard</span>.\nInject with data only if the payment was transacted through Intuit Payments API.\n',
                        filterable: true,
                        requiredFlag: "Required",
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                },
            },
            journalentrylinedetail: {
                name: "journalentrylinedetail",
                ShowFirst: [],
                Default: ["TaxAmount"],
                Optional: ["TaxInclusiveAmt", "ClassRef", "DepartmentRef", "TaxCodeRef", "BillableStatus"],
                Required: ["JournalCodeRef", "PostingType", "AccountRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["TaxApplicableOn", "Entity"],
                type: "object",
                properties: {
                    TaxAmount: {
                        maxLen: "Min: 0, Max:999999999",
                        type: "Decimal",
                        description: "Tax amount of the line.",
                        locales: ["GB", "AU", "IN"],
                    },
                    JournalCodeRef: {
                        minorVersion: 5,
                        description:
                            'For France locales, only. Reference to a JournalCode object. This must be present for both <span class="literal">Credit</span> and <span class="literal">Debit</span> posting sides of the JournalEntry object. Query the JournalCode name list resource to determine the appropriate JournalCode object for this reference. Use <span class="literal">JournalCode.Id</span> and <span class="literal">JournalCode.Name</span> from that object for <span class="literal">JournalCodeRef.value</span> and <span class="literal">JournalCodeRef.name</span>, respectively.',
                        requiredFlag: "Required",
                        type: "ReferenceType",
                        locales: ["FR"],
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    TaxInclusiveAmt: {
                        minorVersion: 53,
                        type: "Decimal",
                        description:
                            'The total amount of the line items including tax.\nConstraints: Available when endpoint is evoked with the <span class="literal">minorversion=1</span>query parameter.',
                        locales: ["AU"],
                        requiredFlag: "Optional",
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerTxn</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.TrackDepartments</span> is set to <span class="literal">true</span>.\n<br/>Query the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    TaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        locales: ["GB", "AU", "IN"],
                        description:
                            'Reference to the <span class="literal">TaxCode</span>for this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">TaxCodeRef.value</span> and <span class="literal">TaxCodeRef.name</span>, respectively. ',
                    },
                    BillableStatus: {
                        type: "BillableStatusEnum",
                        description:
                            'The billable status of the journal entry line. The line is to be billed to a customer if the account is an expense account and <span class="literal">EntityRef</span> specifies a Customer object.\nValid values:\n<span class="literal">Billable</span>,\n<span class="literal">NotBillable</span>,\n<span class="literal">HasBeenBilled</span>',
                        requiredFlag: "Optional",
                    },
                    TaxApplicableOn: {
                        type: "TaxApplicableOnEnum",
                        requiredFlag: "Conditionally required",
                        locales: ["GB", "AU", "IN"],
                        description:
                            'Indicates whether the tax applicable on the line is sales or purchase.\nValid value:\n<span class="literal">Sales</span>,\n<span class="literal">Purchase</span>. Required if <span class="literal">TaxCodeRef</span> is specified</div>',
                    },
                    PostingType: {
                        type: "PostingTypeEnum",
                        description:
                            'Indicates whether this JournalEntry line is a debit or credit. Valid values: <span class="literal">Credit</span>, <span class="literal">Debit</span>',
                        requiredFlag: "Required",
                    },
                    AccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to the account associated with this line. Query the Account name list resource to determine the appropriate Account object for this reference, based on the side of the journal entry represented by this line. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">AccountRef.value</span> and <span class="literal">AccountRef.name</span>, respectively.\nFor France locales: The account associated with the referenced Account object is looked up in the account category list.\n<li>If this account has same location as specified in the transaction by the <span class="literal">TransactionLocationType</span> attribute and the same VAT as in the line item <span class="literal">TaxCodeRef</span> attribute, then this account is used.</li>\n<li>If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.</li>\n<li>If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.</li>\n</ul>',
                    },
                    Entity: {
                        $ref: [
                            {
                                entity: "entity",
                            },
                        ],
                        requiredFlag: "Conditionally required",
                        description:
                            'When you use <span class="literal">Accounts Receivable</span>, you must choose a <span class="literal">customer</span> in the Name field.\nWhen you use <span class="literal">Accounts Payable</span>, you must choose a <span class="literal">supplier/vendor</span> in the Name field.',
                    },
                },
            },
            creditchargeinfo: {
                name: "creditchargeinfo",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "CcExpiryMonth",
                    "ProcessPayment",
                    "PostalCode",
                    "Amount",
                    "NameOnAcct",
                    "CcExpiryYear",
                    "Type",
                    "BillAddrStreet",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    CcExpiryMonth: {
                        type: "Integer",
                        description:
                            'Expiration Month on card, expressed as a number:\n<span class="literal">1</span>=January,\n<span class="literal">2</span>=February, etc.',
                        requiredFlag: "Optional",
                    },
                    ProcessPayment: {
                        type: "Boolean",
                        description:
                            '-<span class="literal">false</span> or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-<span class="literal">true</span>-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.',
                        requiredFlag: "Optional",
                    },
                    PostalCode: {
                        maxLen: "maximum 30 characters",
                        type: "String",
                        description: "Credit card holder billing postal code. Five digits in the USA.",
                        requiredFlag: "Optional",
                    },
                    Amount: {
                        type: "Decimal",
                        description: "The amount processed using the credit card.",
                        requiredFlag: "Optional",
                    },
                    NameOnAcct: {
                        type: "String",
                        description: "Account holder name, as printed on the card.",
                        requiredFlag: "Optional",
                    },
                    CcExpiryYear: {
                        default: "current year",
                        type: "Integer",
                        description:
                            'Expiration Year on card, expressed as a 4 digit number\n<span class="literal">1999</span>, <span class="literal">2003</span>, etc.',
                        requiredFlag: "Optional",
                    },
                    Type: {
                        type: "String",
                        description:
                            "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
                        requiredFlag: "Optional",
                    },
                    BillAddrStreet: {
                        maxLen: "maximum 255 characters",
                        type: "String",
                        description:
                            "Credit card holder billing address of record: the street address to which credit card statements are sent.",
                        requiredFlag: "Optional",
                    },
                },
            },
            taxpaymentresponse: {
                name: "taxpaymentresponse ",
                ShowFirst: ["Id"],
                Default: ["Refund", "TxnDate", "PaymentAccountRef", "Description", "PaymentAmount"],
                Optional: ["MetaData"],
                Required: [],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Refund: {
                        type: "Boolean",
                        minorVersion: 47,
                        description: "Indicate if this transaction is a refund. Returns false for the payment.",
                    },
                    TxnDate: {
                        default: "current server date",
                        readOnly: true,
                        type: "Date",
                        minorVersion: 47,
                        description: "Indicates the tax payment date",
                    },
                    PaymentAccountRef: {
                        minorVersion: 47,
                        description:
                            "Indicates the Account ID from which the payment was made (or refund was moved to).",
                        systemDefined: true,
                        readOnly: true,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Description: {
                        readOnly: true,
                        systemDefined: true,
                        type: "String",
                        minorVersion: 47,
                        description: "Specifies the Memo/Description added for this payment.",
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PaymentAmount: {
                        readOnly: true,
                        type: "Decimal",
                        minorVersion: 47,
                        description: "Specifies the tax payment amount paid towards a filed tax return.",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        sortable: true,
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ModificationMetaData",
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                    },
                },
            },
            frenchpcgaccountlist: {
                name: "frenchpcgaccountlist",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {},
            },
            websiteaddress: {
                name: "websiteaddress",
                ShowFirst: [],
                Default: [],
                Optional: ["URI"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    URI: {
                        maxLen: "Maximum of 1000 chars",
                        type: "String",
                        description: "Uniform Resource Identifier for the web site.",
                        requiredFlag: "Optional",
                    },
                },
            },
            jobinfo: {
                name: "jobinfo",
                ShowFirst: [],
                Default: [],
                Optional: ["Status", "StartDate", "EndDate", "Description", "JobTypeRef", "ProjectedEndDate"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Status: {
                        type: "String",
                        description:
                            'Current status of the job.\n<span style="color:#800080;">Valid values:</span>\n<span class="literal">Awarded</span>,\n<span class="literal">Closed</span>,\n<span class="literal">InProgress</span>,\n<span class="literal">NotAwarded</span>,\n<span class="literal">Pending</span>',
                        requiredFlag: "Optional",
                    },
                    StartDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "Starting date of the Job. ",
                    },
                    EndDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "End date of the job. ",
                    },
                    Description: {
                        maxLen: "Maximum of 99 chars",
                        type: "String",
                        description: "Job description.",
                        requiredFlag: "Optional",
                    },
                    JobTypeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description: "Reference to the JobType. ",
                    },
                    ProjectedEndDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "Projected end date of the job. ",
                    },
                },
            },
            contactinfo: {
                name: "contactinfo",
                ShowFirst: [],
                Default: [],
                Optional: ["Type", "Telephone"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Type: {
                        type: "String",
                        description:
                            '\n<span>The type of contact information.</span>\n\n<span>Valid values:</span>\n<span class="literal">TelephoneNumber</span>',
                        requiredFlag: "Optional",
                    },
                    Telephone: {
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                    },
                },
            },
            journalentryresponse: {
                name: "journalentryresponse",
                ShowFirst: ["Id"],
                Default: ["RecurDataRef", "TotalAmt", "HomeTotalAmt"],
                Optional: [
                    "DocNumber",
                    "PrivateNote",
                    "TxnDate",
                    "ExchangeRate",
                    "TaxRateRef",
                    "TransactionLocationType",
                    "TxnTaxDetail",
                    "GlobalTaxCalculation",
                    "Adjustment",
                    "MetaData",
                ],
                Required: ["Line [0..n]"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction.\nThrows an error when duplicate DocNumber is sent in the request and if <span class="literal">Preferences:OtherPrefs:NameValue.Name = WarnDuplicateJournalNumber</span> is true. Recommended best practice: check the setting of <span class="literal">Preferences:OtherPrefs:NameValue.Name = WarnDuplicateJournalNumber</span> before setting DocNumber. If a duplicate DocNumber needs to be supplied, add the query parameter name/value pair, <span class="literal">include=allowduplicatedocnum</span> to the URI.\nSort order is ASC by default.\nWith this change V3 JournalEntry API will be supporting autoassign docNumber when null in the request only till <span class="literal">minorversion=53</span>.\nStarting <span class="literal">minorversion=54</span> if null value is sent in the request null will be saved.\nWith <span class="literal">minorversion=54</span> if there is a need to support assigning a <span class="literal">docNumber</span> when null, it can be achieved through include param, <span class="literal">include=allowautodocnum</span>',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 21 chars",
                        type: "String",
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PrivateNote: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description: "User entered, organization-private note about the transaction.",
                        requiredFlag: "Optional",
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">JournalEntry</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\nSort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "Current server date",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    TotalAmt: {
                        readOnly: true,
                        type: "BigDecimal",
                        description:
                            "The value of this field will always be set to zero. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        systemDefined: true,
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company',
                        requiredFlag: "Conditionally required",
                    },
                    TaxRateRef: {
                        description:
                            'Reference to the Tax Adjustment Rate Ids for this item. Query the TaxRate list resource to determine the appropriate TaxRate object for this reference. Use <span class="literal">TaxRate.Id</span> and <span class="literal">TaxRate.Name</span> from that object for TaxRateRef.value and TaxRateRef.name, respectively. ',
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        minorVersion: 49,
                    },
                    HomeTotalAmt: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            "The value of this field will always be set to zero. Applicable if multicurrency is enabled for the company.",
                        systemDefined: true,
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    TxnTaxDetail: {
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                        type: "TxnTaxDetail",
                        requiredFlag: "Optional",
                        description:
                            'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See <a href="https://developer.intuit.com/app/developer/qbo/docs/workflows/manage-sales-tax-for-non-us-locales" title="Global Tax Model">Global tax model</a> for more information about this element.\nIf sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored.',
                    },
                    GlobalTaxCalculation: {
                        minorVersion: 53,
                        default: '<span class="literal">TaxExcluded</span>',
                        requiredFlag: "Optional",
                        type: "GlobalTaxCalculationEnum",
                        locales: ["AU"],
                        description:
                            'Method in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>',
                    },
                    Adjustment: {
                        type: "Boolean",
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. By default, this is recalculated by the system based on sub-items total and overridden.",
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                journalentryline: "JournalEntryLine",
                            },
                            {
                                descriptiononlyline: "DescriptionOnlyLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items of a transaction. There must be at least one pair of Journal Entry Line elements, representing a debit and a credit, called distribution lines. Valid <span class="literal">Line</span> types include:\n<span class="literal">JournalEntryLine</span> and \n<span class="literal">DescriptionOnlyLine</span>',
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                },
            },
            departmentresponse: {
                name: "departmentresponse",
                ShowFirst: ["Id"],
                Default: ["FullyQualifiedName", "SubDepartment"],
                Optional: ["Active", "MetaData"],
                Required: ["Name"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["ParentRef"],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    Name: {
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        description: "User recognizable name for the Department. ",
                        requiredFlag: "Required",
                    },
                    FullyQualifiedName: {
                        sortable: true,
                        description:
                            'Fully qualified name of the entity. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of <span class="literal">Parent:Department1:SubDepartment1:SubDepartment2</span>. Limited to 5 levels.',
                        filterable: true,
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    SubDepartment: {
                        sortable: true,
                        description:
                            'Specifies whether this Department object is a SubDepartment.\n<span class="literal">true</span>--SubDepartment.\n<span class="literal">false</span> or null--top-level Department. ',
                        default: "false",
                        systemDefined: true,
                        readOnly: true,
                        type: "Boolean",
                    },
                    ParentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            "The immediate parent of the SubDepartment.\nRequired for the create operation if this object is a SubDepartment. Required if this object is a subdepartment.",
                        requiredFlag: "Conditionally required",
                    },
                    Active: {
                        sortable: true,
                        description:
                            "If true, this entity is currently enabled for use by QuickBooks. If set to false, this entity is not available.",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "true",
                        type: "Boolean",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        sortable: true,
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ModificationMetaData",
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                    },
                },
            },
            customerbalancedetailquery: {
                name: "customerbalancedetailquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "shipvia",
                    "term",
                    "end_duedate",
                    "start_duedate",
                    "custom1",
                    "sort_by",
                    "arpaid",
                    "report_date",
                    "sort_order",
                    "aging_method",
                    "department",
                    "columns",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    shipvia: {
                        default: "Include data for all shipping methods",
                        type: "String",
                        description:
                            'Filter by the shipping method as stored in <span class="literal">Invoice.ShipMethodRef.Name</span>.<br />Supported Values: Any shipping method as sent in the <span class="literal">Invoice.ShipMethodRef.Name</span> attribute at Invoice create- or update-time.',
                        requiredFlag: "Optional",
                    },
                    term: {
                        default: "Return data for all terms",
                        type: "String",
                        description:
                            'Filters report contents based on term or terms supplied.<br />Supported Values: One or more comma separated term IDs as returned in the attribute, <span class="literal">Term.Id</span> of the Term object response code.',
                        requiredFlag: "Optional",
                    },
                    end_duedate: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    start_duedate: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    custom1: {
                        default: "Include data for all fields",
                        type: "String",
                        description:
                            'Filter by the specified custom field as defined by the <span class="literal">CustomField</span> attribute in transaction entities where supported.<br />Supported Values: Name of custom field.',
                        requiredFlag: "Optional",
                    },
                    sort_by: {
                        default: '<span class="literal">txn_type</span>',
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                        requiredFlag: "Optional",
                    },
                    arpaid: {
                        default: '<span class="literal">Unpaid</span>Unpaid',
                        type: "String",
                        description:
                            'Supported Values:<span class="literal">All</span>, <span class="literal">Paid</span>, <span class="literal">Unpaid</span>',
                        requiredFlag: "Optional",
                    },
                    report_date: {
                        default: "today's date",
                        type: "String",
                        description:
                            'Start date to use for the report, in the format <span class="literal">YYYY-MM-DD</span>.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>Unpaid',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    aging_method: {
                        default: '<span class="literal">Report_Date</span>Unpaid',
                        type: "String",
                        description:
                            'The date upon which aging is determined.<br />Supported Values:<span class="literal">Report_Date</span>, <span class="literal">Current </span>',
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    columns: {
                        default: "columns denoted with *",
                        table: {
                            columns_araging: [
                                "Show additonal values supported based on multicurrency settings for the company.",
                                "Hide additonal values supported based on multicurrency settings for the company.",
                            ],
                        },
                        type: "String",
                        description:
                            "Column types to be shown in the report.<br />Supported Values: bill_addr, create_by, create_date, cust_bill_email, cust_comp_name, cust_msg, cust_phone_other, cust_tel, cust_name, deliv_addr, doc_num*, due_date*, last_mod_by, last_mod_date, memo*, sale_sent_state, ship_addr, ship_date, ship_via, term_name, tracking_num, tx_date*, txn_type*<br/> Additional columns with custom fields enabled: sales_cust1, sales_cust2, sales_cust3 <br /> Additional columns with location tracking enabled: dept_name*",
                        requiredFlag: "Optional",
                    },
                },
            },
            customfieldstringpo: {
                name: "customfieldstringpo",
                ShowFirst: [],
                Default: ["StringValue", "Type", "Name"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    StringValue: {
                        type: "String",
                        description: "The name of the custom field as it appears on the Purchase Order form.",
                    },
                    Type: {
                        type: "CustomFieldTypeEnum",
                        description:
                            'Denotes that this is a custom field definition. Value is <span class="literal">StringType</span>. This type of custom field is available once the field has been enabled with a corresponding <span class="literal">CustomField</span> object of type <span class="literal">BooleanType</span>.',
                        systemDefined: true,
                    },
                    Name: {
                        readOnly: true,
                        type: "String",
                        description:
                            'The internal name of an enabled custom field, <span class="literal">Name</span> takes the form <span class="literal">PurchasePrefs.PurchaseCustomNameN</span>, where N is <span class="literal">1</span>, <span class="literal">2</span>, or <span class="literal">3</span> for up to three available custom fields that have been enabled.',
                    },
                },
            },
            transactionlistreporttoplevel: {
                name: "transactionlistreporttoplevel",
                ShowFirst: [],
                Default: ["Header", "Rows", "Columns"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Header: {
                        description: "The report header.\n",
                        $ref: [
                            {
                                reportheader: "transactionlistreportheader",
                            },
                        ],
                    },
                    Rows: {
                        description: "Top level container holding information for report rows.\n",
                        $ref: [
                            {
                                reportrows: "ReportRows",
                            },
                        ],
                    },
                    Columns: {
                        description: "Top level container holding information for report columns or subcolumns.\n",
                        $ref: [
                            {
                                reportcolumns: "ReportColumns",
                            },
                        ],
                    },
                },
            },
            trialbalancereportrows: {
                name: "trialbalancereportrows",
                ShowFirst: [],
                Default: ["Row [0..n]"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "Row [0..n]": {
                        table: {
                            group_trialbalancedetails: [
                                "Show possible values for group",
                                "Hide possible values for group",
                            ],
                        },
                        description:
                            'Represents a row in a report. A group of rows is enclosed in a <span class="literal">Rows</span> container. Rows may be nested either as a single row or in sets, based on the accounts represented in the report and query parameters specified in the request.\nParameters:\n<li>\n<span class="literal">type</span>\u2014As an enclosing section of sub-rows, this is always the string, <span class="literal">Section</span>. As a leaf row, this is always the string, <span class="literal">Data</span>.\n</li>\n<li><span class="literal">group</span>\u2014The group name, valid when <span class="literal">type=Section</span>. </li>\n</ul>\n',
                        $ref: [
                            {
                                reportrow: "reportrow",
                            },
                        ],
                    },
                },
            },
            categoryresponse: {
                name: "categoryresponse",
                ShowFirst: ["Id"],
                Default: ["Level", "FullyQualifiedName"],
                Optional: ["Name", "SubItem", "ParentRef", "Active", "Type", "MetaData"],
                Required: [],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    Name: {
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        description: "Name of the category.",
                        requiredFlag: "Optional",
                    },
                    Level: {
                        readOnly: true,
                        type: "Integer",
                        description:
                            'Specifies the level of the hierarchy in which the object is located. First sub-category level below the top-most category is 1. Returned in the response body only when SubItem is set to <span class="literal">true</span>.\nSub-categories can be nested to a maximum depth of three levels below a top-level category.',
                        systemDefined: true,
                    },
                    FullyQualifiedName: {
                        filterable: true,
                        readOnly: true,
                        type: "String",
                        description:
                            'Colon-separated list of the top-level category, followed by each sub-category in the hierarchy. Takes the form of <span class="literal">Category:SubCategory1:SubCategory2:...</span>. Limited to 5 levels: 4 category levels with an inventory, non-inventory, or service item as the 5th.',
                        systemDefined: true,
                    },
                    SubItem: {
                        type: "Boolean",
                        description:
                            'Denotes this object is a sub-category. Returned in the response body if this object is a sub-category.\n<span class="literal">true</span>--This is a sub-category.\n<span class="literal">false</span>--This is a top-level category (default).',
                        requiredFlag: "Optional",
                    },
                    ParentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the parent of this sub-category. Returned in the response body only when SubItem is set to <span class="literal">true</span>. Query the Item name list resource to determine the appropriate object for this reference. Use <span class="literal">Item.Id</span> and <span class="literal">Item.DisplayName</span> from that object for <span class="literal">ParentRef.value</span> and <span class="literal">ParentRef.name</span>, respectively. ',
                    },
                    Active: {
                        filterable: true,
                        type: "Boolean",
                        description: 'For categories, this is always set to <span class="literal">true</span>.',
                        requiredFlag: "Optional",
                    },
                    Type: {
                        filterable: true,
                        type: "String",
                        sortable: true,
                        description:
                            ' Set to the literal string, <span class="literal">Category</span>.\nWhen querying Item objects with minor versions earlier than 4 specified, <span class="literal">Category</span> types are returned as type <span class="literal">Service</span>.',
                        requiredFlag: "Optional",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                },
            },
            trialbalancereporttoplevel: {
                name: "trialbalancereporttoplevel",
                ShowFirst: [],
                Default: ["Header", "Rows", "Columns"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Header: {
                        description: "The report header.\n",
                        $ref: [
                            {
                                reportheader: "reportheader",
                            },
                        ],
                    },
                    Rows: {
                        description: "Top level container holding information for profit and loss report rows.\n",
                        $ref: [
                            {
                                profitandlossreportrows: "profitandlossreportrows",
                            },
                        ],
                    },
                    Columns: {
                        description: "Top level container holding information for report columns or subcolumns.\n",
                        $ref: [
                            {
                                reportcolumns: "reportcolumns",
                            },
                        ],
                    },
                },
            },
            reportprefs: {
                name: "reportprefs",
                ShowFirst: [],
                Default: ["ReportBasis", "CalcAgingReportFromTxnDate"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    ReportBasis: {
                        type: "ReportBasisEnum",
                        description:
                            'Accounting method for summary. Possible values include <span class="literal">Cash</span> and <span class="literal">Accrual</span>.',
                    },
                    CalcAgingReportFromTxnDate: {
                        default: false,
                        readOnly: true,
                        type: "Boolean",
                        description: "Calculation aging from transaction date",
                    },
                },
            },
            reportoption: {
                name: "ReportOption",
                ShowFirst: [],
                Default: ["name", "value"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    name: {
                        type: "String",
                        description:
                            'Supported Names:\n\n<span class="literal">AccountingStandard</span>\u2014Indicates the accounting standard being used for this report. Returned with ProfitAndLoss and BalanceSheet reports, only.\n<span class="literal">NoReportData</span>\u2014Used to signal whether report contains data. If <span class="literal">true</span>, report contains no data. If <span class="literal">false</span>, report contains data. Returned for every report type.',
                    },
                    value: {
                        type: "String",
                        description: "The value of the parameter, as passed in with the report endpoint URL.",
                    },
                },
            },
            refundreceiptresponse: {
                name: "refundreceiptresponse",
                ShowFirst: ["Id"],
                Default: ["HomeBalance", "RecurDataRef", "TotalAmt", "TaxExemptionRef", "Balance", "HomeTotalAmt"],
                Optional: [
                    "TxnDate",
                    "CustomField ",
                    "ClassRef",
                    "PrintStatus",
                    "CheckPayment",
                    "TxnSource",
                    "GlobalTaxCalculation",
                    "TransactionLocationType",
                    "MetaData",
                    "DocNumber",
                    "PrivateNote",
                    "CustomerMemo",
                    "CreditCardPayment",
                    "CustomerRef",
                    "TxnTaxDetail",
                    "PaymentMethodRef",
                    "ExchangeRate",
                    "ShipAddr",
                    "DepartmentRef",
                    "PaymentType",
                    "BillAddr",
                    "ApplyTaxAfterDiscount",
                ],
                Required: ["DepositToAccountRef", "Line [0..n]"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef", "PaymentRefNum", "BillEmail"],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n<br/>Sort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    "CustomField ": {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    HomeBalance: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Convenience field containing the amount in <span class="literal">Balance</span> expressed in terms of the home currency. Calculated by QuickBooks business logic. Available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter. Applicable if multicurrency is enabled for the company',
                        minorVersion: 3,
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerTxn</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    PrintStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Printing status of the invoice.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToPrint</span>,\n<span class="literal">PrintComplete\n</span>.',
                    },
                    PaymentRefNum: {
                        maxLen: "Maximum 100 chars",
                        type: "String",
                        requiredFlag: "Conditionally required",
                        description:
                            'The reference number for the payment received. For example, check # for a check, envelope # for a cash donation.\n<li>Provide when <span class="literal">DepositToAccountRef</span> references an Account object where <span class="literal">Account.AccountType=Bank</span>.</li>\n<li>Required when <span class="literal">PrintStatus</span> is set to <span class="literal">PrintComplete</span>. </li>\n<li>If <span class="literal">PrintStatus</span> is set to <span class="literal">NeedToPrint</span>, the system sets <span class="literal">PaymentRefNum</span> to <span class="literal">To Print</span>.</li>\n</ul>',
                    },
                    CheckPayment: {
                        sortable: true,
                        description:
                            'Information about a check payment for the transaction. Used when PaymentType is <span class="literal">Check</span>. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "max 21 characters",
                        type: "CheckPayment",
                        $ref: [
                            {
                                checkpayment: "CheckPayment",
                            },
                        ],
                    },
                    TxnSource: {
                        type: "String",
                        description:
                            'The originating source of the credit card transaction. Used in eCommerce apps where credit card transactions are processed by a merchant account. When set to <span class="literal">IntuitPayment</span>, this transaction is inserted into a list of pending deposits to be automatically matched and reconciled with the merchant\'s account when the transactions made via QuickBooks Payments settle. Currently, the only supported value is <span class="literal">IntuitPayment</span>.',
                        requiredFlag: "Optional",
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">RefundReceipt</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    GlobalTaxCalculation: {
                        default: '<span class="literal">TaxExcluded</span>',
                        type: "GlobalTaxCalculationEnum",
                        description:
                            'Method in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                        locales: ["GB", "AU", "IN", "CA"],
                        requiredFlag: "Optional",
                    },
                    TotalAmt: {
                        readOnly: true,
                        type: "BigDecimal",
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        systemDefined: true,
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of <span class="literal">Preferences:CustomTxnNumber</span> as follows:\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.</li>\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is false, resulting DocNumber is system generated by incrementing the last number by 1.</li>\n</ul>\nRecommended best practice: check the setting of <span class="literal">Preferences:CustomTxnNumber</span> before setting DocNumber. If a duplicate DocNumber needs to be supplied, add the query parameter name/value pair, <span class="literal">include=allowduplicatedocnum</span> to the URI. <br/><em>Note:</em> DocNumber is an optional field for all locales except France. For France locale if <span class="literal">Preferences:CustomTxnNumber</span> is enabled it will <b>not</b> be automatically generated and is a required field. <br/>Sort order is ASC by default.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 21 chars",
                        type: "String",
                    },
                    PrivateNote: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the refund receipt to the customer. This field maps to the Memo field on the refund receipt form.",
                        requiredFlag: "Optional",
                    },
                    DepositToAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Account from which payment money is refunded. Query the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType</span> is <span class="literal">Other Current Asset</span> or <span class="literal">Bank</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">DepositToAccountRef.value</span> and <span class="literal">DepositToAccountRef.name</span>, respectively. ',
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                            {
                                groupline: "GroupLine",
                            },
                            {
                                descriptiononlyline: "DescriptionOnlyLine",
                            },
                            {
                                discountline: "DiscountLine",
                            },
                            {
                                subtotalline: "SubTotalLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items of a transaction. \nValid <span class="literal">Line</span> types include:\n<span class="literal">SalesItemLine</span>,\n<span class="literal">GroupLine</span>,\n<span class="literal">DescriptionOnlyLine</span>,\n<span class="literal">DiscountLine</span> and \n<span class="literal">SubTotalLine</span>(read-only)',
                    },
                    CustomerMemo: {
                        $ref: [
                            {
                                memoref: "MemoRef",
                            },
                        ],
                        type: "MemoRef",
                        requiredFlag: "Optional",
                        description:
                            "User-entered message to the customer; this message is visible to end user on their transaction. ",
                    },
                    TaxExemptionRef: {
                        minorVersion: 21,
                        description:
                            'Reference to the <span class="literal">TaxExepmtion</span> ID associated with this object. Available for companies that have <a href="https://developer.intuit.com/hub/blog/2017/12/11/using-quickbooks-online-api-automated-sales-tax" title="Automatic Sales Tax">automated sales tax</a> enabled.\n<li><span class="literal">TaxExemptionRef.Name</span>: The Tax Exemption Id for the customer to which this object is associated. This Id is typically issued by the state.</li>\n<li><span class="literal">TaxExemptionRef.value</span>: The system-generated Id of the exemption type.</li>\n</ul>\n For internal use only.',
                        systemDefined: true,
                        readOnly: true,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    CreditCardPayment: {
                        sortable: true,
                        description:
                            'Information about a credit card payment for the transaction. Used when PaymentType is <span class="literal">CreditCard</span>. Inject with data only if the payment was transacted through Intuit Payments API. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Max 21 characters",
                        type: "CreditCardPayment",
                        $ref: [
                            {
                                creditcardpayment: "CreditCardPayment",
                            },
                        ],
                    },
                    Balance: {
                        filterable: true,
                        type: "Decimal",
                        readOnly: true,
                        sortable: true,
                        description:
                            'The balance reflecting any payments made against the transaction. Initially set to the value of\n<span class="literal">TotalAmt</span>. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.',
                    },
                    CustomerRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively.',
                    },
                    TxnTaxDetail: {
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                        type: "TxnTaxDetail",
                        requiredFlag: "Optional",
                        description:
                            'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See <a href="https://developer.intuit.com/app/developer/qbo/docs/workflows/manage-sales-tax-for-non-us-locales" title="Global Tax Model">Global tax model</a> for more information about this element.\nIf sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored.',
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PaymentMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a PaymentMethod associated with this transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. Use <span class="literal">PaymentMethod.Id</span> and <span class="literal">PaymentMethod.Name</span> from that object for <span class="literal">PaymentMethodRef.value</span> and <span class="literal">PaymentMethodRef.name</span>, respectively. ',
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    ShipAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Identifies the address where the goods must be shipped. If\n<span class="literal">ShipAddr</span>is not specified, and a default\n<span class="literal">Customer:ShippingAddr</span> is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks. <br> For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/>If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.TrackDepartments</span> is set to <span class="literal">true</span>.\n<br/>Query the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    PaymentType: {
                        sortable: true,
                        description:
                            'Valid values are <span class="literal">Cash</span>, <span class="literal">Check</span>, <span class="literal">CreditCard</span>, or <span class="literal">Other</span>.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Max 21 characters",
                        type: "PaymentTypeEnum",
                    },
                    BillAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Bill-to address of the Invoice. If\n<span class="literal">BillAddr</span>is not specified, and a default\n<span class="literal">Customer:BillingAddr</span> is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks. <br>For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/>If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    ApplyTaxAfterDiscount: {
                        default: "TaxExcluded",
                        type: "Boolean",
                        description:
                            'If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax. <span style="color:#800080;">Default Value:</span> false \n <span style="color:#800080;">Constraints:</span> US versions of QuickBooks only.',
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    BillEmail: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        requiredFlag: "Conditionally required",
                        description:
                            'Identifies the e-mail address where the invoice is sent. If\n<span class="literal">EmailStatus=NeedToSend</span>,\n<span class="literal">BillEmail</span>is a required input. ',
                    },
                    HomeTotalAmt: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic.\nValue is valid only when <span class="literal">CurrencyRef</span> is specified. Applicable if multicurrency is enabled for the company.',
                        systemDefined: true,
                    },
                },
            },
            entity: {
                name: "entity",
                ShowFirst: [],
                Default: ["Type"],
                Optional: [],
                Required: ["EntityRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Type: {
                        type: "EntityTypeEnum",
                        description:
                            'Object type. Output only. Valid values are <span class="literal">Vendor</span>, <span class="literal">Employee</span>, or <span class="literal">Customer</span>.',
                    },
                    EntityRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Query the corresponding name list resource as specified by <span class="literal">Entity</span> to determine the appropriate object for this reference. Use the <span class="literal">Id</span> and <span class="literal">DisplayName\n</span> values from that object for <span class="literal">EntityRef.value</span> and <span class="literal">EntityRef.name</span>, respectively. ',
                    },
                },
            },
            reportheader: {
                name: "reportheader",
                ShowFirst: [],
                Default: [
                    "Customer",
                    "ReportName",
                    "Vendor",
                    "Option",
                    "Item",
                    "Employee",
                    "ReportBasis",
                    "StartPeriod",
                    "Class",
                    "Currency",
                    "EndPeriod",
                    "Time",
                    "Department",
                    "SummarizeColumnsBy",
                ],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Customer: {
                        type: "String",
                        description:
                            "A string containing the Ids as specified with the corresponding filter query parameter. Only those filter query parameters specified in the request are returned in the header.",
                    },
                    ReportName: {
                        type: "String",
                        description: "Name of the report.",
                    },
                    Vendor: {
                        type: "String",
                        description:
                            "A string containing the Ids as specified with the corresponding filter query parameter. Only those filter query parameters specified in the request are returned in the header.",
                    },
                    Option: {
                        description:
                            "Container for one or more name/value pairs that return additional information about the report contents.\n",
                        $ref: [
                            {
                                reportoption: "ReportOption",
                            },
                        ],
                    },
                    Item: {
                        type: "String",
                        description:
                            "A string containing the Ids as specified with the corresponding filter query parameter. Only those filter query parameters specified in the request are returned in the header.",
                    },
                    Employee: {
                        type: "String",
                        description:
                            "A string containing the Ids as specified with the corresponding filter query parameter. Only those filter query parameters specified in the request are returned in the header.",
                    },
                    ReportBasis: {
                        type: "ReportBasisEnum",
                        description:
                            'Accounting method. Possible values include <span class="literal">Cash</span> and <span class="literal">Accrual</span>.',
                    },
                    StartPeriod: {
                        type: "String",
                        description:
                            'The date specified by the start_date query parameter submitted with the request. Format is <span class="literal">yyyy-mm-dd</span>.',
                    },
                    Class: {
                        type: "String",
                        description:
                            "A string containing the Ids as specified with the corresponding filter query parameter. Only those filter query parameters specified in the request are returned in the header.",
                    },
                    Currency: {
                        type: "String",
                        description: "A string containing the currency code associated with the report.",
                    },
                    EndPeriod: {
                        type: "String",
                        description:
                            'The date specified by the end_date query parameter submitted with the request. Format is <span class="literal">yyyy-mm-dd</span>.',
                    },
                    Time: {
                        type: "DateTime",
                        description: "Date and timestamp of the report.",
                    },
                    Department: {
                        type: "String",
                        description:
                            "A string containing the Ids as specified with the corresponding filter query parameter. Only those filter query parameters specified in the request are returned in the header.",
                    },
                    SummarizeColumnsBy: {
                        type: "SummarizeColumnsByEnum",
                        description:
                            'The method by which report columns are organized. This contains the value specified by the <span class="literal">summarize_column_by</span> query parameter submitted with the request.',
                    },
                },
            },
            transactionlistreportheader: {
                name: "transactionlistreportheader",
                ShowFirst: [],
                Default: [
                    "Customer",
                    "ReportName",
                    "Vendor",
                    "Option",
                    "Item",
                    "Employee",
                    "ReportBasis",
                    "StartPeriod",
                    "Currency",
                    "EndPeriod",
                    "Time",
                    "Department",
                    "SummarizeColumnsBy",
                ],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Customer: {
                        type: "String",
                        description:
                            "A string containing the Ids as specified with the corresponding filter query parameter. Only those filter query parameters specified in the request are returned in the header.",
                    },
                    ReportName: {
                        type: "String",
                        description: "Name of the report.",
                    },
                    Vendor: {
                        type: "String",
                        description:
                            "A string containing the Ids as specified with the corresponding filter query parameter. Only those filter query parameters specified in the request are returned in the header.",
                    },
                    Option: {
                        description:
                            "Container for one or more name/value pairs that return additional information about the report contents.\n",
                        $ref: [
                            {
                                reportoption: "ReportOption",
                            },
                        ],
                    },
                    Item: {
                        type: "String",
                        description:
                            "A string containing the Ids as specified with the corresponding filter query parameter. Only those filter query parameters specified in the request are returned in the header.",
                    },
                    Employee: {
                        type: "String",
                        description:
                            "A string containing the Ids as specified with the corresponding filter query parameter. Only those filter query parameters specified in the request are returned in the header.",
                    },
                    ReportBasis: {
                        type: "ReportBasisEnum",
                        description:
                            'Accounting method. Possible values include <span class="literal">Cash</span> and <span class="literal">Accrual</span>.',
                    },
                    StartPeriod: {
                        type: "String",
                        description:
                            'The date specified by the start_date query parameter submitted with the request. Format is <span class="literal">yyyy-mm-dd</span>.',
                    },
                    Currency: {
                        type: "String",
                        description: "A string containing the currency code associated with the report.",
                    },
                    EndPeriod: {
                        type: "String",
                        description:
                            'The date specified by the end_date query parameter submitted with the request. Format is <span class="literal">yyyy-mm-dd</span>.',
                    },
                    Time: {
                        type: "DateTime",
                        description: "Date and timestamp of the report.",
                    },
                    Department: {
                        type: "String",
                        description:
                            "A string containing the Ids as specified with the corresponding filter query parameter. Only those filter query parameters specified in the request are returned in the header.",
                    },
                    SummarizeColumnsBy: {
                        type: "SummarizeColumnsByEnum",
                        description:
                            'The method by which report columns are organized. This contains the value specified by the <span class="literal">summarize_column_by</span> query parameter submitted with the request.',
                    },
                },
            },
            accountbasedexpenselinedetail: {
                name: "accountbasedexpenselinedetail",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "TaxAmount",
                    "TaxInclusiveAmt",
                    "ClassRef",
                    "TaxCodeRef",
                    "MarkupInfo",
                    "BillableStatus",
                    "CustomerRef",
                ],
                Required: ["AccountRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    TaxAmount: {
                        type: "Decimal",
                        description: "Sales tax paid as part of the expense.",
                        requiredFlag: "Optional",
                    },
                    TaxInclusiveAmt: {
                        type: "Decimal",
                        description:
                            ' The total amount of the line item including tax.\nConstraints: Available when endpoint is evoked with the\n<span class="literal">minorversion=1</span>query parameter.',
                        minorVersion: 1,
                        requiredFlag: "Optional",
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the expense. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerLine</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    TaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'The\n<span class="literal">TaxCode</span>associated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">TaxCodeRef.value</span> and <span class="literal">TaxCodeRef.name</span>, respectively. ',
                    },
                    MarkupInfo: {
                        $ref: [
                            {
                                markupinfo: "MarkupInfo",
                            },
                        ],
                        type: "MarkupInfo",
                        requiredFlag: "Optional",
                        description: "Markup information for the expense. ",
                    },
                    BillableStatus: {
                        type: "BillableStatusEnum",
                        description:
                            'The billable status of the expense.\nValid values:\n<span class="literal">Billable</span>,\n<span class="literal">NotBillable</span>,\n<span class="literal">HasBeenBilled</span>',
                        requiredFlag: "Optional",
                    },
                    AccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to the Expense account associated with this item. Query the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType=Expense</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">AccountRef.value</span> and <span class="literal">AccountRef.name</span>, respectively.\nFor France locales: The account associated with the referenced Account object is looked up in the account category list.\n<li>If this account has same location as specified in the transaction by the <span class="literal">TransactionLocationType</span> attribute and the same VAT as in the line item <span class="literal">TaxCodeRef</span> attribute, then this account is used.</li>\n<li>If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.</li>\n<li>If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.</li>\n</ul>\n',
                    },
                    CustomerRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Customer associated with the expense. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. ',
                    },
                },
            },
            paymentmethodrequest: {
                name: "paymentmethodrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Name"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Name: {
                        maxLen: "Maximum of 31 chars",
                        type: "String",
                        description: "User recognizable name for the payment method.",
                        requiredFlag: "Required",
                    },
                },
            },
            dataservicesextensions: {
                name: "dataservicesextensions",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {},
            },
            customfield: {
                name: "customfield",
                ShowFirst: [],
                Default: ["Type"],
                Optional: ["StringValue", "Name"],
                Required: ["DefinitionId"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    DefinitionId: {
                        requiredFlag: "Required",
                        readOnly: true,
                        type: "String",
                        description:
                            "Unique identifier of the CustomFieldDefinition that corresponds to this CustomField.",
                        systemDefined: true,
                    },
                    StringValue: {
                        type: "String",
                        description: 'The value for the\n<span class="literal">StringType</span>custom field.',
                        requiredFlag: "Optional",
                    },
                    Type: {
                        readOnly: true,
                        type: "CustomFieldTypeEnum",
                        description:
                            'Data type of custom field. Only one type is currently supported:\n<span class="literal">StringType</span>.',
                    },
                    Name: {
                        readOnly: true,
                        type: "String",
                        description: "Name of the custom field.",
                        requiredFlag: "Optional",
                    },
                },
            },
            vendorresponse: {
                name: "vendorresponse",
                ShowFirst: ["Id"],
                Default: ["Balance"],
                Optional: [
                    "PrimaryEmailAddr",
                    "DisplayName",
                    "OtherContactInfo",
                    "APAccountRef",
                    "TermRef",
                    "Source",
                    "GSTIN",
                    "T4AEligible",
                    "Fax",
                    "BusinessNumber",
                    "CurrencyRef",
                    "HasTPAR",
                    "TaxReportingBasis",
                    "Mobile",
                    "PrimaryPhone",
                    "Active",
                    "AlternatePhone",
                    "MetaData",
                    "Vendor1099",
                    "CostRate",
                    "BillRate",
                    "WebAddr",
                    "T5018Eligible",
                    "CompanyName",
                    "VendorPaymentBankDetail",
                    "TaxIdentifier",
                    "AcctNum",
                    "GSTRegistrationType",
                    "PrintOnCheckName",
                    "BillAddr",
                ],
                Required: [],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["Title", "GivenName", "MiddleName", "Suffix", "FamilyName"],
                type: "object",
                properties: {
                    PrimaryEmailAddr: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        requiredFlag: "Optional",
                        description: '<span class="literal">Primary email address.</span> ',
                    },
                    DisplayName: {
                        sortable: true,
                        description:
                            'The name of the vendor as displayed. Must be unique across all Vendor, Customer, and Employee objects. Cannot be removed with sparse update.\nIf not supplied, the system generates <span class="literal">DisplayName</span> by concatenating vendor name components supplied in the request from the following list: <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, and <span class="literal">Suffix</span>.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 500 chars",
                        type: "String",
                    },
                    OtherContactInfo: {
                        $ref: [
                            {
                                contactinfo: "ContactInfo",
                            },
                        ],
                        type: "ContactInfo",
                        requiredFlag: "Optional",
                        description: "List of ContactInfo entities of any contact info type.",
                    },
                    Title: {
                        maxLen: "Maximum of 16 chars",
                        type: "String",
                        requiredFlag: "Conditionally required",
                        description:
                            'Title of the person. This tag supports i18n, all locales. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes are required during create.',
                    },
                    APAccountRef: {
                        minorVersion: 3,
                        description:
                            'Identifies the accounts payable account to be used for this supplier. Each supplier must have his own AP account. Applicable for France companies, only. Available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter.\n Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">APAccountRef.value</span> and <span class="literal">APAccountRef.name</span>, respectively. ',
                        requiredFlag: "Optional",
                        type: "ReferenceType",
                        locales: ["FR"],
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    TermRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a default Term associated with this Vendor object. Query the Term name list resource to determine the appropriate Term object for this reference. Use <span class="literal">Term.Id</span> and <span class="literal">Term.Name</span> from that object for <span class="literal">TermRef.value</span> and <span class="literal">TermRef.name</span>, respectively. ',
                    },
                    Source: {
                        requiredFlag: "Optional",
                        type: "String",
                        minorVersion: 59,
                        description:
                            'The Source type of the transactions created by QuickBooks Commerce. Valid values include: <span class="literal">QBCommerce</span>',
                    },
                    GSTIN: {
                        minorVersion: 33,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 15 chars",
                        type: "String",
                        locales: ["IN"],
                        description: "GSTIN is an identification number assigned to every GST registered business.",
                    },
                    GivenName: {
                        sortable: true,
                        description:
                            'Given name or first name of a person. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                    },
                    T4AEligible: {
                        minorVersion: 56,
                        type: "Boolean",
                        description: "True if vendor is T4A eligible. Valid for CA locale",
                        locales: ["CA"],
                        requiredFlag: "Optional",
                    },
                    Fax: {
                        $ref: [
                            {
                                telephonenumber30: "TelephoneNumber30",
                            },
                        ],
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                        description: "Fax number.",
                    },
                    BusinessNumber: {
                        minorVersion: 33,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 10 chars",
                        type: "String",
                        locales: ["IN"],
                        description:
                            "Also called, PAN (in India) is a code that acts as an identification for individuals, families and corporates, especially for those who pay taxes on their income.",
                    },
                    CurrencyRef: {
                        readOnly: true,
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRef",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the currency in which all amounts associated with this vendor are expressed. Once set, it cannot be changed. If specified currency is not currently in the company\'s currency list, it is added. If not specified, currency for this vendor is the home currency of the company, as defined by <span class="literal">Preferences.CurrencyPrefs.HomeCurrency</span>. Read-only after object is created.',
                    },
                    HasTPAR: {
                        requiredFlag: "Optional",
                        type: "Boolean",
                        minorVersion: 40,
                        locales: ["AU"],
                        description:
                            "Indicate if the vendor has TPAR enabled. TPAR stands for Taxable Payments Annual Report. The TPAR is mandated by ATO to get the details payments that businesses make to contractors for providing services. Some government entities also need to report the grants they have paid in a TPAR.",
                    },
                    TaxReportingBasis: {
                        minorVersion: 3,
                        type: "String",
                        description:
                            'The method in which the supplier tracks their income. Applicable for France companies, only. Available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter.\nValid values include:\n<span class="literal">Cash</span> and <span class="literal">Accrual</span>.',
                        locales: ["FR"],
                        requiredFlag: "Optional",
                    },
                    Mobile: {
                        $ref: [
                            {
                                telephonenumber30: "TelephoneNumber30",
                            },
                        ],
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                        description: "Mobile phone number. ",
                    },
                    PrimaryPhone: {
                        $ref: [
                            {
                                telephonenumber30: "TelephoneNumber30",
                            },
                        ],
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                        description: "Primary phone number.",
                    },
                    Active: {
                        sortable: true,
                        description: "If true, this object is currently enabled for use by QuickBooks.",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "true",
                        type: "Boolean",
                    },
                    AlternatePhone: {
                        $ref: [
                            {
                                telephonenumber30: "TelephoneNumber30",
                            },
                        ],
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                        description: "Alternate phone number. ",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.",
                    },
                    Vendor1099: {
                        type: "Boolean",
                        description:
                            "This vendor is an independent contractor; someone who is given a 1099-MISC form at the end of the year. A 1099 vendor is paid with regular checks, and taxes are not withheld on their behalf.",
                        requiredFlag: "Optional",
                    },
                    CostRate: {
                        type: "BigDecimal",
                        description: "Pay rate of the vendor",
                        requiredFlag: "Optional",
                    },
                    MiddleName: {
                        sortable: true,
                        description:
                            'Middle name of the person. The person can have zero or more middle names. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                    },
                    BillRate: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description: "BillRate can be set to specify this vendor's hourly billing rate.",
                    },
                    WebAddr: {
                        $ref: [
                            {
                                websiteaddress: "WebsiteAddress",
                            },
                        ],
                        type: "WebSiteAddress",
                        requiredFlag: "Optional",
                        description: '<span class="literal">Website address.</span>',
                    },
                    T5018Eligible: {
                        minorVersion: 56,
                        type: "Boolean",
                        description: "True if vendor is T5018 eligible. Valid for CA locale",
                        locales: ["CA"],
                        requiredFlag: "Optional",
                    },
                    Balance: {
                        filterable: true,
                        type: "Decimal",
                        readOnly: true,
                        sortable: true,
                        description:
                            "Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create, read-only otherwise.",
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    Suffix: {
                        sortable: true,
                        description:
                            'Suffix of the name. For example, <span class="literal">Jr</span>. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "Maximum of 16 chars",
                        type: "String",
                    },
                    CompanyName: {
                        sortable: true,
                        description: "The name of the company associated with the person or organization.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                    },
                    FamilyName: {
                        sortable: true,
                        description:
                            'Family name or the last name of the person. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                    },
                    VendorPaymentBankDetail: {
                        description: '<span class="literal">Vendor Payment Bank Detail.</span> ',
                        requiredFlag: "Optional",
                        minorVersion: 40,
                        type: "VendorPaymentBankDetail",
                        locales: ["AU"],
                        $ref: [
                            {
                                vendorpaymentbankdetail: "VendorPaymentBankDetail",
                            },
                        ],
                    },
                    TaxIdentifier: {
                        maxLen: "Max 20 characters",
                        type: "String",
                        description:
                            'The tax ID of the Person or Organization. The value is masked in responses, exposing only last four characters. For example, the ID of <span class="literal">123-45-6789</span> is returned as <span class="literal">XXXXXXX6789</span>.',
                        requiredFlag: "Optional",
                    },
                    AcctNum: {
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                        description: "Name or number of the account associated with this vendor.",
                        requiredFlag: "Optional",
                    },
                    GSTRegistrationType: {
                        minorVersion: 33,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 15 chars",
                        type: "String",
                        locales: ["IN"],
                        description:
                            'For the filing of GSTR, transactions need to be classified depending on the type of vendor from whom the purchase is made. To facilitate this, we have introduced a new field as \'GST registration type\'. Possible values are listed below:\n<li><span class="literal">GST_REG_REG</span> GST registered- Regular. Customer who has a business which is registered under GST and has a GSTIN (doesn\u2019t include customers registered under composition scheme, as an SEZ or as EOU\'s, STP\'s EHTP\'s etc.).</li>\n<li><span class="literal">GST_REG_COMP</span> GST registered-Composition. Customer who has a business which is registered under the composition scheme of GST and has a GSTIN.</li>\n<li><span class="literal">GST_UNREG</span> GST unregistered. Customer who has a business which is not registered under GST and does not have a GSTIN.</li>\n<li><span class="literal">CONSUMER</span> Consumer. Customer who is not registered under GST and is the final consumer of the service or product sold.</li>\n<li><span class="literal">OVERSEAS</span> Overseas. Customer who has a business which is located out of India.</li>\n<li><span class="literal">SEZ</span> SEZ. Customer who has a business which is registered under GST, has a GSTIN and is located in a SEZ or is a SEZ Developer.</li>\n<li><span class="literal">DEEMED</span> Deemed exports- EOU\'s, STP\'s EHTP\'s etc. Customer who has a business which is registered under GST and falls in the category of companies (EOU\'s, STP\'s EHTP\'s etc.), to which supplies are made they are termed as deemed exports.</li>',
                    },
                    PrintOnCheckName: {
                        sortable: true,
                        description:
                            'Name of the person or organization as printed on a check. If not provided, this is populated from <span class="literal">DisplayName</span>.</span> Cannot be removed with sparse update.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                    },
                    BillAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            '<span class="literal">Default billing address.</span> <br> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object. Sort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            accountrequest: {
                name: "accountrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Name"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["AcctNum", "TaxCodeRef", "AccountType", "AccountSubType"],
                type: "object",
                properties: {
                    AcctNum: {
                        type: "String",
                        requiredFlag: "Conditionally required",
                        description:
                            'User-defined account number to help the user in identifying the account within the chart-of-accounts and in deciding what should be posted to the account. The <span class="literal">Account.AcctNum</span> attribute must not contain colon (:).\nFor France locales:\n<li>Name must be unique.</li>\n<li>Length must be between 6 and 20 characters</li>\n<li>Must start with the account number from the master category list.</li>\n<li>Name limited to alpha-numeric characters.</li>\n</ul>. Required for France locales',
                    },
                    TaxCodeRef: {
                        minorVersion: 3,
                        description:
                            '<br/>Reference to the default tax code used by this account. Tax codes are referenced by the <span class="literal">TaxCode.Id</span> in the TaxCode object. Available when endpoint is invoked with the <span class="literal">minorversion=3</span> query parameter. For global locales, only. Required for France locales',
                        requiredFlag: "Conditionally required",
                        type: "ReferenceType",
                        locales: ["GB", "AU", "IN", "CA", "FR"],
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Name: {
                        sortable: true,
                        description:
                            'User recognizable name for the Account.\n<span class="literal">Account.Name</span> attribute must not contain double quotes (") or colon (:).',
                        filterable: true,
                        requiredFlag: "Required",
                        maxLen: "max 100 characters",
                        type: "String",
                    },
                    AccountType: {
                        filterable: true,
                        table: {
                            accounttypes: ["Show child attributes", "Hide child attributes"],
                        },
                        type: "AccountTypeEnum",
                        requiredFlag: "Conditionally required",
                        description:
                            "A detailed account classification that specifies the use of this account. The type is based on the Classification.\n<br/> Required if AccountSubType is not specified.",
                    },
                    AccountSubType: {
                        filterable: true,
                        table: {
                            accounttypes: ["Show child attributes", "Hide child attributes"],
                        },
                        type: "String",
                        description:
                            "The account sub-type classification and is based on the AccountType value.\n<br/> Required if AccountType is not specified.",
                        requiredFlag: "Conditionally required",
                    },
                },
            },
            accountbasedexpenseline: {
                name: "accountbasedexpenseline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Description", "LineNum"],
                Required: ["DetailType", "Amount", "AccountBasedExpenseLineDetail"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Description: {
                        maxLen: "max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description:
                            'Set to\n<span class="literal">AccountBasedExpenseLineDetail</span>for this type of line.',
                        requiredFlag: "Required",
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive Integer.",
                    },
                    Amount: {
                        maxLen: "max 15 digits in 10.5 format",
                        type: "Decimal",
                        description: "The amount of the line item.",
                        requiredFlag: "Required",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>If\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.</li>\n<li>If no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    AccountBasedExpenseLineDetail: {
                        $ref: [
                            {
                                accountbasedexpenselinedetail: "AccountBasedExpenseLineDetail",
                            },
                        ],
                        type: "AccountBasedExpense",
                        description: "<strong>LineDetail</strong>",
                        requiredFlag: "Required",
                    },
                },
            },
            taxratedetails: {
                name: "taxratedetails",
                ShowFirst: [],
                Default: [],
                Optional: ["TaxApplicableOn"],
                Required: ["RateValue", "TaxRateId"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["TaxAgencyId", "TaxRateName"],
                type: "object",
                properties: {
                    RateValue: {
                        type: "Percentage as String",
                        requiredFlag: "Required",
                        description:
                            'Required if: <span class="literal">TaxRateId</span>not present.\nThe rate value. Must be between 0 and 100 (%). For create requests: do not include if\n<span class="literal">TaxRateId</span>has been specified.',
                    },
                    TaxRateId: {
                        type: "String",
                        requiredFlag: "Required",
                        description:
                            'Required if: \n<span class="literal">TaxRateName</span>,\n<span class="literal">RateValue</span>, and\n<span class="literal">TaxAgencyId</span>not present.\nThe Id of an existing TaxRate. Query the TaxRate endpoint to determine the ID used for\n<span class="literal">TaxRateId</span>.',
                    },
                    TaxApplicableOn: {
                        default: '<span class="literal">Sales</span>',
                        type: "TaxApplicableOnEnum",
                        description:
                            'Specifies where this tax rate can be applied. Possible values are\n<span class="literal">Sales</span> or\n<span class="literal">Purchase</span>.',
                        requiredFlag: "Optional",
                    },
                    TaxAgencyId: {
                        type: "Integer as String",
                        requiredFlag: "Conditionally required",
                        description:
                            'The Id of the agency to whom tax is paid. Query the TaxAgency resource to determine the ID for the desired agency. For create requests: do not include if\n<span class="literal">TaxRateId</span>has been specified. Required if <span class="literal">TaxRateId</span>not present.',
                    },
                    TaxRateName: {
                        maxLen: "Max 10 chars",
                        type: "String",
                        requiredFlag: "Conditionally required",
                        description:
                            'Required if <span class="literal">TaxRateId</span>not present. Name of a new tax rate. In Create requests: ignored if\n<span class="literal">TaxRateId</span>is present.',
                    },
                },
            },
            reportcolumns: {
                name: "reportcolumns",
                ShowFirst: [],
                Default: ["Column [0..n]"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "Column [0..n]": {
                        description: "Container for an individual report column definition.\n",
                        $ref: [
                            {
                                reportcolumn: "ReportColumn",
                            },
                        ],
                    },
                },
            },
            itembasedexpenselinedetail: {
                name: "itembasedexpenselinedetail",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "TaxInclusiveAmt",
                    "ItemRef",
                    "CustomerRef",
                    "PriceLevelRef",
                    "ClassRef",
                    "TaxCodeRef",
                    "MarkupInfo",
                    "BillableStatus",
                    "Qty",
                    "UnitPrice",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    TaxInclusiveAmt: {
                        type: "Decimal",
                        description:
                            'The total amount of the line item including tax.\nConstraints: Available when endpoint is evoked with the\n<span class="literal">minorversion=1</span>query parameter.',
                        requiredFlag: "Optional",
                    },
                    ItemRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use <span class="literal">Item.Id</span> and <span class="literal">Item.Name</span> from that object for <span class="literal">ItemRef.value</span> and <span class="literal">ItemRef.name</span>, respectively. When a line lacks an ItemRef it is treated as documentation and the\n<span class="literal">Line.Amount</span> attribute is ignored.\nFor France locales: The account associated with the referenced Item object is looked up in the account category list.\n<li>If this account has same location as specified in the transaction by the <span class="literal">TransactionLocationType</span> attribute and the same VAT as in the line item <span class="literal">TaxCodeRef</span> attribute, then the item account is used.</li>\n<li>If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.</li>\n<li>If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.</li>\n</ul>',
                    },
                    CustomerRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. ',
                    },
                    PriceLevelRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            "Reference to the PriceLevel of the service or item for the line. Support for this element will be available in the coming months. ",
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the expense. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerLine</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    TaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the <span class="literal">TaxCode</span>for this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">TaxCodeRef.value</span> and <span class="literal">TaxCodeRef.name</span>, respectively. ',
                    },
                    MarkupInfo: {
                        $ref: [
                            {
                                markupinfo: "MarkupInfo",
                            },
                        ],
                        type: "MarkupInfo",
                        requiredFlag: "Optional",
                        description: "Markup information for the expense. ",
                    },
                    BillableStatus: {
                        type: "BillableStatusEnum",
                        description:
                            'The billable status of the expense.\nValid values:\n<span class="literal">Billable</span>,\n<span class="literal">NotBillable</span>,\n<span class="literal">HasBeenBilled</span>',
                        requiredFlag: "Optional",
                    },
                    Qty: {
                        type: "Decimal",
                        description: "Number of items for the line.",
                        requiredFlag: "Optional",
                    },
                    UnitPrice: {
                        type: "Decimal",
                        description:
                            'Unit price of the subject item as referenced by\n<span class="literal">ItemRef</span>. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item.\nIf used for unit price, the monetary value of the service or product, as expressed in the home currency.\nIf used for a discount or tax rate, express the percentage as a fraction. For example, specify <span class="literal">0.4</span> for 40% tax.',
                        requiredFlag: "Optional",
                    },
                },
            },
            batchitemrequest: {
                name: "batchitemrequest",
                ShowFirst: [],
                Default: [],
                Optional: ["Query", "resourceName"],
                Required: ["bId"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["optionsData", "operation"],
                type: "object",
                properties: {
                    optionsData: {
                        type: "String",
                        requiredFlag: "Conditionally required",
                        description:
                            'Use for the void operation for those resources that support it. Must be supplied with <span class="literal">operation</span> set to <span class="literal">update</span>.\nValid value: <span class="literal">void</span>. Required for void operations.',
                    },
                    bId: {
                        type: "String",
                        description: "Unique identifier for the batch item.",
                        requiredFlag: "Required",
                    },
                    Query: {
                        type: "string",
                        description:
                            'The <span class="literal">SELECT</span> statement for the query. When <span class="literal">Query</span> is defined, do not define the <span class="literal">operation</span> attribute.',
                        requiredFlag: "Optional",
                    },
                    operation: {
                        type: "String",
                        requiredFlag: "Conditionally required",
                        description:
                            'The operation to perform with the supplied request object payload. Do not use if this <span class="literal"> batchitemrequest</span> object is for a query operation.\nValid values include: <span class="literal">create</span>, <span class="literal">update</span>, <span class="literal">delete</span> Required for create, update, and delete.',
                    },
                    resourceName: {
                        type: "Request object",
                        description: "The payload for the request for create, update, and delete operations.",
                        requiredFlag: "Optional",
                    },
                },
            },
            taxrateresponse: {
                name: "taxrateresponse",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [
                    "RateValue",
                    "Name",
                    "AgencyRef",
                    "SpecialTaxType",
                    "EffectiveTaxRate",
                    "DisplayType",
                    "TaxReturnLineRef",
                    "Active",
                    "MetaData",
                    "OriginalTaxRate",
                    "Description",
                ],
                Required: [],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    RateValue: {
                        readOnly: true,
                        type: "String",
                        description: "Value of the tax rate.",
                        requiredFlag: "Optional",
                    },
                    SyncToken: {
                        requiredFlag: "Required for update",
                        readOnly: true,
                        type: "String",
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        systemDefined: true,
                    },
                    Name: {
                        sortable: true,
                        description: "User recognizable name for the tax rate.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 100 chars",
                        readOnly: true,
                        type: "String",
                    },
                    AgencyRef: {
                        sortable: true,
                        description: "Reference to the tax agency associated with this object.",
                        filterable: true,
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    SpecialTaxType: {
                        readOnly: true,
                        type: "Sting",
                        description:
                            "Special tax type to handle zero rate taxes. Used with VAT registered Businesses who receive goods/services (acquisitions) from other EU countries, will need to calculate the VAT due, but not paid, on these acquisitions. The rate of VAT payable is the same that would have been paid if the goods had been supplied by a UK supplier.",
                        requiredFlag: "Optional",
                    },
                    EffectiveTaxRate: {
                        readOnly: true,
                        $ref: [
                            {
                                effectivetaxratedata: "EffectiveTaxRatedata",
                            },
                        ],
                        type: "EffectiveTaxRateData",
                        description:
                            "List of EffectiveTaxRate. An EffectiveTaxRate is used to know which taxrate is applicable on any date.",
                        requiredFlag: "Optional",
                    },
                    DisplayType: {
                        readOnly: true,
                        type: "Sting",
                        description: "TaxRate DisplayType enum which acts as display config.",
                        requiredFlag: "Optional",
                    },
                    TaxReturnLineRef: {
                        sortable: true,
                        description: "Reference to the tax return line associated with this object.",
                        filterable: true,
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Active: {
                        sortable: true,
                        description: "If true, this object is currently enabled for use by QuickBooks.",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "true",
                        readOnly: true,
                        type: "Boolean",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Optional",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    OriginalTaxRate: {
                        minorVersion: 62,
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "String",
                        locales: ["CA"],
                        description:
                            "ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.",
                    },
                    Description: {
                        sortable: true,
                        description: "User entered description for the tax rate.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 100 chars",
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            txntaxdetail: {
                name: "txntaxdetail",
                ShowFirst: [],
                Default: [],
                Optional: ["TxnTaxCodeRef", "TotalTax", "TaxLine [0..n]"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    TxnTaxCodeRef: {
                        requiredFlag: "Optional",
                        type: "ReferenceType",
                        description:
                            'Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">TaxCodeRef.value</span> and <span class="literal">TaxCodeRef.name</span>, respectively. If specified and sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>), this element is ignored and not returned. For sales transactions, only: if automated sales tax is enabled (<span class="literal">Preferences.TaxPrefs.PartnerTaxEnabled</span> is set to <span class="literal">true</span>) the supplied transaction tax code is replaced by the automated sales tax engine recommendation.',
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    TotalTax: {
                        type: "Decimal",
                        description:
                            "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
                        requiredFlag: "Optional",
                    },
                    "TaxLine [0..n]": {
                        type: "Line",
                        requiredFlag: "Optional",
                        $ref: [
                            {
                                taxline: "TaxLine",
                            },
                        ],
                    },
                },
            },
            memoref: {
                name: "memoref",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["value"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    value: {
                        maxLen: "Maximum 1000 chars",
                        type: "String",
                        description:
                            "User-entered message to the customer; this message is visible to the end user on their transactions.",
                        requiredFlag: "Required",
                    },
                },
            },
            telephonenumber: {
                name: "telephonenumber",
                ShowFirst: [],
                Default: [],
                Optional: ["FreeFormNumber"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    FreeFormNumber: {
                        maxLen: "Maximum of 20 chars",
                        type: "String",
                        description: "Specifies the telephone number in free form.",
                        requiredFlag: "Optional",
                    },
                },
            },
            invoicevoidresponse: {
                name: "invoiceresponse",
                ShowFirst: ["Id"],
                Default: [
                    "HomeBalance",
                    "DeliveryInfo",
                    "TotalAmt",
                    "InvoiceLink",
                    "TaxExemptionRef",
                    "Balance",
                    "HomeTotalAmt",
                    "FreeFormAddress",
                    "AllowOnlinePayment",
                    "AllowIPNPayment",
                ],
                Optional: [
                    "TxnDate",
                    "ShipFromAddr",
                    "CurrencyRef",
                    "ShipDate",
                    "TrackingNum",
                    "ClassRef",
                    "PrintStatus",
                    "SalesTermRef",
                    "TxnSource",
                    "LinkedTxn [0..n]",
                    "GlobalTaxCalculation",
                    "AllowOnlineACHPayment",
                    "TransactionLocationType",
                    "DueDate",
                    "MetaData",
                    "DocNumber",
                    "PrivateNote",
                    "DepositToAccountRef",
                    "Line [0..n]",
                    "BillEmailCc",
                    "CustomerMemo",
                    "EmailStatus",
                    "ExchangeRate",
                    "Deposit",
                    "CustomerRef",
                    "TxnTaxDetail",
                    "AllowOnlineCreditCardPayment",
                    "CustomField",
                    "ShipAddr",
                    "DepartmentRef",
                    "BillEmailBcc",
                    "ShipMethodRef",
                    "BillAddr",
                    "ApplyTaxAfterDiscount",
                ],
                Required: [],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["BillEmail"],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred. <ul><li><em>yyyy/MM/dd</em> is the valid date format.</li><li>For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.</li><li>Sort order is ASC by default.</li></ul>",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    ShipFromAddr: {
                        minorVersion: 35,
                        description:
                            'Identifies the address where the goods are shipped from. For transactions without shipping, it represents the address where the sale took place.<br> For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                        requiredFlag: "Optional",
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        type: "PhysicalAddress",
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Applicable if multicurrency is enabled for the company.',
                        requiredFlag: "Optional",
                    },
                    HomeBalance: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Convenience field containing the amount in <span class="literal">Balance</span> expressed in terms of the home currency. Calculated by QuickBooks business logic.\nValue is valid only when <span class="literal">CurrencyRef</span> is specified and available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter. Applicable if multicurrency is enabled for the company',
                        minorVersion: 3,
                    },
                    ShipDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "Date for delivery of goods or services. ",
                    },
                    TrackingNum: {
                        type: "String",
                        description:
                            "Shipping provider's tracking number for the delivery of the goods associated with the transaction.",
                        requiredFlag: "Optional",
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerTxn</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    PrintStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Printing status of the invoice.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToPrint</span>,\n<span class="literal">PrintComplete\n</span>.',
                    },
                    SalesTermRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the sales term associated with the transaction. Query the Term name list resource to determine the appropriate Term object for this reference. Use <span class="literal">Term.Id</span> and <span class="literal">Term.Name</span> from that object for <span class="literal">SalesTermRef.value</span> and <span class="literal">SalesTermRef.name</span>, respectively. ',
                    },
                    DeliveryInfo: {
                        readOnly: true,
                        type: "DeliveryInfo",
                        description:
                            "Email delivery information. Returned when a request has been made to deliver email with the send operation. ",
                        $ref: [
                            {
                                deliveryinfo: "DeliveryInfo",
                            },
                        ],
                    },
                    TxnSource: {
                        type: "String",
                        description: "Used internally to specify originating source of a credit card transaction.",
                        requiredFlag: "Optional",
                    },
                    "LinkedTxn [0..n]": {
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                        type: "LinkedTxn",
                        requiredFlag: "Optional",
                        description:
                            'Zero or more related transactions to this Invoice object. The following linked relationships are supported:\n<li>\nLinks to <span class="literal">Estimate</span> and <span class="literal">TimeActivity</span> objects can be established directly to this Invoice object with UI or with the API. Create, Read, Update, and Query operations are avaialble at the API level for these types of links.\n</li>\n<li>\nLinks to expenses incurred on behalf of the customer are returned in the response with <span class="literal">LinkedTxn.TxnType</span> set to <span class="literal">ReimburseCharge</span>, <span class="literal">ChargeCredit</span> or <span class="literal">StatementCharge</span> corresponding to billable customer expenses of type <span class="literal">Cash</span>, <span class="literal">Delayed Credit</span>, and <span class="literal">Delayed Charge</span>, respectively. Links to these types of transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.\n</li>\n<li>\nLinks to payments applied to an Invoice object are returned in the response with <span class="literal">LinkedTxn.TxnType</span> set to <span class="literal">Payment</span>. Links to Payment transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.\n</li>\n</ul>\nUse <span class="literal">LinkedTxn.TxnId</span> as the ID in a separate read request for the specific resource to retrieve details of the linked object.',
                    },
                    GlobalTaxCalculation: {
                        default: '<span class="literal">TaxExcluded</span>',
                        type: "GlobalTaxCalculationEnum",
                        description:
                            'Method in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                        locales: ["GB", "AU", "IN", "CA"],
                        requiredFlag: "Optional",
                    },
                    TotalAmt: {
                        readOnly: true,
                        type: "BigDecimal",
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        systemDefined: true,
                    },
                    InvoiceLink: {
                        readOnly: true,
                        description:
                            "Sharable link for the invoice sent to external customers. The link is generated only for invoices with online payment enabled and having a valid customer email address.",
                        type: "String",
                        minorVersion: 36,
                        systemDefined: true,
                    },
                    AllowOnlineACHPayment: {
                        default: '<span class="literal">false</span>',
                        type: "Boolean",
                        description:
                            'Specifies if this invoice can be paid with online bank transfers and corresponds to the <b>Free bank transfer</b> online payment check box on the QuickBooks UI. Active when <span class="literal">Preferences.SalesFormsPrefs.ETransactionPaymentEnabled</span> is set to <span class="literal">true</span>.\n<li>If set to <span class="literal">true</span>, allow invoice to be paid with online bank transfers. The <b>Free bank transfer</b> online payment check box is checked on the QuickBooks UI for this invoice.</li>\n<li>If set to <span class="literal">false</span>, online bank transfers are not allowed. The <b>Free bank transfer</b> online payment check box is not checked on the QuickBooks UI for this invoice.</li></ul>',
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        table: {
                            locationtype: ["Show valid values", "Hide valid values"],
                        },
                        type: "String",
                        locales: ["FR", "IN"],
                        description:
                            'The account location. For France locale valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li></ul>\nFor India locale, use state code values from the list below:',
                    },
                    DueDate: {
                        sortable: true,
                        description:
                            'Date when the payment of the transaction is due. If date is not provided, the number of days specified in\n<span class="literal">SalesTermRef</span> added the transaction date will be used. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of <span class="literal">Preferences:CustomTxnNumber</span> as follows:\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.</li>\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is false, resulting DocNumber is system generated by incrementing the last number by 1.</li>\n</ul>\nIf <span class="literal">Preferences:CustomTxnNumber</span> is false then do not send a value as it can lead to unwanted duplicates. If a DocNumber value is sent for an Update operation, then it just updates that particular invoice and does not alter the internal system DocNumber. <br/><em>Note:</em> DocNumber is an optional field for all locales except France. For France locale if <span class="literal">Preferences:CustomTxnNumber</span> is enabled it will <b>not</b> be automatically generated and is a required field.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 21 chars",
                        type: "String",
                    },
                    PrivateNote: {
                        maxLen: "max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.",
                        requiredFlag: "Optional",
                    },
                    DepositToAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Account to which money is deposited. Query the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType</span> is <span class="literal">Other Current Asset</span> or <span class="literal">Bank</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">DepositToAccountRef.value</span> and <span class="literal">DepositToAccountRef.name</span>, respectively.\n<br/>If you do not specify this account, payment is applied to the Undeposited Funds account.',
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                            {
                                groupline: "GroupLine",
                            },
                            {
                                descriptiononlyline: "DescriptionOnlyLine",
                            },
                            {
                                discountline: "DiscountLine",
                            },
                            {
                                subtotalline: "SubTotalLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Optional",
                        description:
                            'Individual line items of a transaction. Valid <span class="literal">Line</span> types include \n<span class="literal">SalesItemLine</span>,\n<span class="literal">GroupLine</span>,\n<span class="literal">DescriptionOnlyLine</span> (also used for inline Subtotal lines),\n<span class="literal">DiscountLine</span> and \n<span class="literal">SubTotalLine</span> (used for the overall transaction) ',
                    },
                    BillEmailCc: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        description:
                            'Identifies the carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in <span class="literal">Preferences.SalesFormsPrefs.SalesEmailCc</span>. If this email address is invalid, carbon copy email is not sent. ',
                        minorVersion: 8,
                        requiredFlag: "Optional",
                    },
                    CustomerMemo: {
                        $ref: [
                            {
                                memoref: "MemoRef",
                            },
                        ],
                        type: "MemoRef",
                        requiredFlag: "Optional",
                        description:
                            "User-entered message to the customer; this message is visible to end user on their transactions. ",
                    },
                    EmailStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        description:
                            'Email status of the invoice.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToSend</span>,\n<span class="literal">EmailSent\n</span>',
                        requiredFlag: "Optional",
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    TaxExemptionRef: {
                        minorVersion: 21,
                        description:
                            'Reference to the <span class="literal">TaxExepmtion</span> ID associated with this object. Available for companies that have <a href="https://developer.intuit.com/hub/blog/2017/12/11/using-quickbooks-online-api-automated-sales-tax" title="Automatic Sales Tax">automated sales tax</a> enabled.\n<li><span class="literal">TaxExemptionRef.Name</span>: The Tax Exemption Id for the customer to which this object is associated. This Id is typically issued by the state.</li>\n<li><span class="literal">TaxExemptionRef.value</span>: The system-generated Id of the exemption type.</li>\n</ul>\n For internal use only',
                        systemDefined: true,
                        readOnly: true,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Deposit: {
                        type: "Decimal",
                        description: "The deposit made towards this invoice.",
                        requiredFlag: "Optional",
                    },
                    Balance: {
                        filterable: true,
                        type: "Decimal",
                        readOnly: true,
                        sortable: true,
                        description:
                            'The balance reflecting any payments made against the transaction. Initially set to the value of\n<span class="literal">TotalAmt</span>. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.',
                    },
                    CustomerRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. ',
                    },
                    TxnTaxDetail: {
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                        type: "TxnTaxDetail",
                        requiredFlag: "Optional",
                        description:
                            'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See <a href="https://developer.intuit.com/app/developer/qbo/docs/workflows/manage-sales-tax-for-non-us-locales" title="Global Tax Model">Global tax model</a> for more information about this element.\n<br/>If sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored. ',
                    },
                    AllowOnlineCreditCardPayment: {
                        default: '<span class="literal">false</span>',
                        type: "Boolean",
                        description:
                            'Specifies if online credit card payments are allowed for this invoice and corresponds to the <b>Cards</b> online payment check box on the QuickBooks UI. Active when <span class="literal">Preferences.SalesFormsPrefs.ETransactionPaymentEnabled</span> is set to <span class="literal">true</span>.\n<li>If set to <span class="literal">true</span>, allow invoice to be paid with online credit card payments. The <b>Cards</b> online payment check box is checked on the QuickBooks UI.</li>\n<li>If set to <span class="literal">false</span>, online credit card payments are not allowed. The <b>Cards</b> online payment check box is not checked on the QuickBooks UI.</li></ul>',
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    CustomField: {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    ShipAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Identifies the address where the goods must be shipped. If\n<span class="literal">ShipAddr</span>is not specified, and a default\n<span class="literal">Customer:ShippingAddr</span> is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks. <br> For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    HomeTotalAmt: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic.\nValue is valid only when <span class="literal">CurrencyRef</span> is specified. Applicable if multicurrency is enabled for the company.',
                        systemDefined: true,
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.TrackDepartments</span> is set to <span class="literal">true</span>.\n<br/>Query the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    BillEmailBcc: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        description:
                            'Identifies the blind carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in <span class="literal">Preferences.SalesFormsPrefs.SalesEmailBcc</span>. If this email address is invalid, blind carbon copy email is not sent. ',
                        minorVersion: 8,
                        requiredFlag: "Optional",
                    },
                    ShipMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            "Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string. Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string.",
                        requiredFlag: "Optional",
                    },
                    BillAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Bill-to address of the Invoice. If\n<span class="literal">BillAddr</span>is not specified, and a default\n<span class="literal">Customer:BillingAddr</span> is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks. <br> For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    FreeFormAddress: {
                        type: "Boolean",
                        description:
                            'Denotes how <span class="literal">ShipAddr</span> is stored:&nbsp;formatted or unformatted. The value of this flag is system defined based on format of shipping address at object create time.<ul><li>If set to <span class="literal">false</span>, shipping address is returned in a formatted style using City, Country,&nbsp;CountrySubDivisionCode, Postal code.</li><li>If set to <span class="literal">true</span>, shipping address is returned in an unformatted style using Line1 through Line5 attributes.</li></ul>',
                        systemDefined: true,
                    },
                    ApplyTaxAfterDiscount: {
                        default: "false",
                        type: "Boolean",
                        description:
                            "If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.",
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    BillEmail: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        requiredFlag: "Conditionally required",
                        description:
                            'Identifies the e-mail address where the invoice is sent. If\n<span class="literal">EmailStatus=NeedToSend</span>,\n<span class="literal">BillEmail</span>is a required input. ',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    AllowOnlinePayment: {
                        deprecated: true,
                        type: "Boolean",
                        description:
                            'Deprecated flag to allow online payments. In use before <span class="literal">AllowOnlineCreditCardPayment</span> and <span class="literal">AllowOnlineACHPayment</span> flags existed and provided to maintain backward compatibility.\n<li>If set to <span class="literal">true</span>, this invoice was created before <span class="literal">AllowOnlinePayment</span> was deprecated and denotes both CC and ACH payments are allowed. In addition, the <span class="literal">AllowOnlineCreditCardPayment</span> and <span class="literal">AllowOnlineACHPayment</span> flags must be set to <span class="literal">true</span>.</li>\n<li>If set to <span class="literal">false</span>, this invoice was created after the <span class="literal">AllowOnlinePayment</span> flag was deprecated and is not used.</li>\n</ul> Do not modify.',
                    },
                    AllowIPNPayment: {
                        deprecated: true,
                        type: "Boolean",
                        description:
                            'Flag to allow payments from legacy Intuit Payment Network (IPN). Provided to maintain backward compatibility and must always be set to <span class="literal">false</span>. Do not modify',
                    },
                },
            },
            creditcardpaymentrequest: {
                name: "creditcardpayment",
                ShowFirst: [],
                Default: [],
                Optional: ["PrivateNote"],
                Required: ["TxnDate", "Amount", "BankAccountRef", "CreditCardAccountRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    PrivateNote: {
                        maxLen: "max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This field maps to the Memo field on the Pay down credit card form.",
                        requiredFlag: "Optional",
                    },
                    TxnDate: {
                        type: "Date",
                        description: "Date of transaction.",
                        requiredFlag: "Required",
                    },
                    Amount: {
                        type: "Decimal",
                        description:
                            "Total amount of the payment. Denominated in the currency of the credit card account.",
                        requiredFlag: "Required",
                    },
                    BankAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description: "Bank account used to pay the Credit Card balance. Must be a Bank account.",
                    },
                    CreditCardAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            "Credit Card account for which a payment is being entered. Must be a Credit Card account.",
                    },
                },
            },
            salesformspref: {
                name: "salesformspref",
                ShowFirst: [],
                Default: [
                    "AllowServiceDate",
                    "EstimateMessage",
                    "EmailCopyToCompany",
                    "DefaultCustomerMessage",
                    "AllowShipping",
                    "DefaultDiscountAccount",
                    "IPNSupportEnabled",
                    "ETransactionPaymentEnabled",
                    "DefaultTerms",
                    "AllowDeposit",
                    "UsingPriceLevels",
                    "DefaultShippingAccount",
                    "ETransactionAttachPDF",
                    "CustomTxnNumbers",
                    "ETransactionEnabledStatus",
                    "AllowEstimates",
                    "AllowDiscount",
                    "AutoApplyCredit",
                ],
                Optional: ["SalesEmailBcc", "SalesEmailCc", "UsingProgressInvoicing", "CustomField"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SalesEmailBcc: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        description:
                            'Default blind carbon copy email address where invoices are sent. Override this setting with the  <span class="literal"> Invoice.BillEmailBcc </span>  attribute. Max 200 characters. Ignored if address is invalid. Available with minor version 8.',
                        minorVersion: 8,
                        requiredFlag: "Optional",
                    },
                    AllowServiceDate: {
                        default: false,
                        type: "Boolean",
                        description: "Enables specifying service date.",
                    },
                    EstimateMessage: {
                        readOnly: true,
                        type: "String",
                        description: "Message to the customers on estimates.",
                    },
                    EmailCopyToCompany: {
                        default: false,
                        type: "Boolean",
                        description:
                            'If set to true, the QuickBooks company is cc\'ed on all email sent to customers for sales transactions. Email used is that defined with <span class="literal"> CompanyInfo.Email.Address </span>. Available with minor verion 8.',
                    },
                    DefaultCustomerMessage: {
                        type: "String",
                        description: "Default customer message.",
                    },
                    AllowShipping: {
                        default: false,
                        type: "Boolean",
                        description: "Enables specifying shipping info.",
                    },
                    SalesEmailCc: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        description:
                            'Default carbon copy email address where invoices are sent. Override this setting with the <span class="literal"> Invoice.BillEmailCc </span> attribute. Max 200 characters. Ignored if address is invalid. Available with minor version 8.',
                        minorVersion: 8,
                        requiredFlag: "Optional",
                    },
                    DefaultDiscountAccount: {
                        type: "Boolean",
                        description: "Default discount account.",
                    },
                    IPNSupportEnabled: {
                        default: false,
                        readOnly: true,
                        type: "Boolean",
                        description: "IPN support enabled. No longer used and is being deprecated.",
                    },
                    ETransactionPaymentEnabled: {
                        default: false,
                        type: "Boolean",
                        description: "Enables ETransaction payment.",
                    },
                    DefaultTerms: {
                        type: "ReferenceType",
                        description: "Default sales terms.",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    UsingProgressInvoicing: {
                        description: "Enables Progress Invoicing",
                        default: "false or null",
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "Boolean",
                        minorVersion: 32,
                    },
                    AllowDeposit: {
                        default: false,
                        type: "Boolean",
                        description: "Enables specifying Deposit.",
                    },
                    UsingPriceLevels: {
                        readOnly: true,
                        type: "Boolean",
                        description:
                            "If set to true, price levels are enabled for sales transactions. Full price level support available via QuickBooks UI, only, in April 2017.",
                    },
                    DefaultShippingAccount: {
                        default: false,
                        type: "Boolean",
                        description: "Default shipping account.",
                    },
                    ETransactionAttachPDF: {
                        default: false,
                        type: "Boolean",
                        description: "Specifies whether sales form PDF should be attached with ETransaction mails.",
                    },
                    CustomTxnNumbers: {
                        default: false,
                        type: "Boolean",
                        description:
                            "Enables the ability to specify custom transaction numbers for sales transactions.  ",
                    },
                    ETransactionEnabledStatus: {
                        default: false,
                        readOnly: true,
                        type: "ETYransactionEnabledStatusEnum",
                        description: "Enables ETransaction status.",
                    },
                    AllowEstimates: {
                        default: false,
                        type: "Boolean",
                        description: "Enables specifying Estimates.",
                    },
                    AllowDiscount: {
                        default: false,
                        type: "Boolean",
                        description: "Enables specifying Discount.",
                    },
                    CustomField: {
                        readOnly: true,
                        $ref: [
                            {
                                customfieldboolsales: "CustomField",
                            },
                            {
                                customfieldstringsales: "CustomField",
                            },
                        ],
                        type: "CustomFieldDefinition",
                        description:
                            "Toggles whether Sales Forms Custom Fields are enabled on the sales form. Sales forms can have up to three custom fields. ",
                        requiredFlag: "Optional",
                    },
                    AutoApplyCredit: {
                        default: false,
                        readOnly: true,
                        type: "Boolean",
                        description:
                            "Automatically applies credits to the next invoice you create for the same customer. Most companies turn on this setting.",
                        minorVersion: 21,
                    },
                },
            },
            journalcoderequest: {
                name: "journalcoderequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Name"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Name: {
                        maxLen: "2 to 20 characters in length",
                        type: "String",
                        description: "A name representing the journal code.",
                        requiredFlag: "Required",
                    },
                },
            },
            vendorcreditresponse: {
                name: "vendorcreditresponse",
                ShowFirst: ["Id"],
                Default: ["RecurDataRef", "TotalAmt"],
                Optional: [
                    "DocNumber",
                    "PrivateNote",
                    "LinkedTxn [0..n]",
                    "GlobalTaxCalculation",
                    "ExchangeRate",
                    "APAccountRef",
                    "DepartmentRef",
                    "TxnDate",
                    "IncludeInAnnualTPAR",
                    "TransactionLocationType",
                    "Balance",
                    "MetaData",
                ],
                Required: ["VendorRef", "Line [0..n]"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> as follows:\n<li>If <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.</li>\n<li>If <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> is false, resulting DocNumber is system generated by incrementing the last number by 1.</li>\n</ul>\nThrows an error when duplicate DocNumber is sent in the request. Recommended best practice: check the setting of <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> before setting DocNumber. If a duplicate DocNumber needs to be supplied, add the query parameter name/value pair, <span class="literal">include=allowduplicatedocnum</span> to the URI.\nSort order is ASC by default.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 21 chars",
                        type: "String",
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PrivateNote: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the transaction to the vendor. This field maps to the Memo field on the transaction form.",
                        requiredFlag: "Optional",
                    },
                    "LinkedTxn [0..n]": {
                        description:
                            'Zero or more transactions linked to this object. The <span class="literal">LinkedTxn.TxnType</span> can be set to <span class="literal">ReimburseCharge</span>. The <span class="literal">LinkedTxn.TxnId</span> can be set as the ID of the transaction.',
                        requiredFlag: "Optional",
                        readOnly: false,
                        minorVersion: 55,
                        type: "LinkedTxn",
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                    },
                    VendorRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to the vendor for this transaction. Query the Vendor name list resource to determine the appropriate Vendor object for this reference. Use <span class="literal">Vendor.Id</span> and <span class="literal">Vendor.Name</span> from that object for <span class="literal">VendorRef.value</span> and <span class="literal">VendorRef.name</span>, respectively.',
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">VendorCredit</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    GlobalTaxCalculation: {
                        default: '<span class="literal">TaxExcluded</span>',
                        type: "GlobalTaxCalculationEnum",
                        description:
                            'Method in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                        locales: ["GB", "AU", "IN", "CA"],
                        requiredFlag: "Optional",
                    },
                    TotalAmt: {
                        sortable: true,
                        description:
                            "Indicates the total credit amount, determined by taking the total of all all lines of the transaction. This includes all charges, allowances, discounts, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        filterable: true,
                        systemDefined: true,
                        readOnly: true,
                        type: "BigDecimal",
                    },
                    ExchangeRate: {
                        default: 1,
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    APAccountRef: {
                        sortable: true,
                        description:
                            'Specifies to which AP account the bill is credited. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">APAccountRef.value</span> and <span class="literal">APAccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.Classification</span> set to <span class="literal">Liability</span> and <span class="literal">Account.AccountSubType</span> set to <span class="literal">AccountsPayable</span>.\nIf the company has a single AP account, the account is implied. However, it is recommended that the AP Account be explicitly specified in all cases to prevent unexpected errors when relating transactions to each other. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.TrackDepartments</span> is set to <span class="literal">true</span>.\nQuery the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively.',
                    },
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n<br/>Sort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    IncludeInAnnualTPAR: {
                        minorVersion: 40,
                        default: '<span class="literal">false</span>',
                        requiredFlag: "Optional",
                        type: "Boolean",
                        locales: ["AU"],
                        description:
                            "Include the supplier in the annual TPAR. TPAR stands for Taxable Payments Annual Report. The TPAR is mandated by ATO to get the details payments that businesses make to contractors for providing services. Some government entities also need to report the grants they have paid in a TPAR.",
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                itembasedexpenseline: "ItemBasedExpenseLine",
                            },
                            {
                                accountbasedexpenseline: "AccountBasedExpenseLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items of a transaction. Valid <span class="literal">Line</span> types include:\n<span class="literal">ItemBasedExpenseLine</span> and \n<span class="literal">AccountBasedExpenseLine</span> ',
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    Balance: {
                        sortable: true,
                        minorVersion: 12,
                        filterable: false,
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'The current amount of the vendor credit reflecting any adjustments to the original credit amount.  Initially set to the value of\n<span class="literal">TotalAmt</span>. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object. Sort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company',
                        requiredFlag: "Conditionally required",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.",
                    },
                },
            },
            budgetrequest: {
                name: "budgetrequest",
                ShowFirst: [],
                Default: [],
                Optional: ["BudgetDetail [0..n]", "BudgetEntryType", "Name", "BudgetType"],
                Required: ["EndDate", "StartDate"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "BudgetDetail [0..n]": {
                        $ref: [
                            {
                                budgetdetail: "BudgetDetail",
                            },
                        ],
                        type: "BudgetDetail",
                        requiredFlag: "Optional",
                        description: "Container for the budget items.",
                    },
                    BudgetEntryType: {
                        readOnly: true,
                        type: "BudgetEntryTypeEnum",
                        description:
                            'Period that this budget detail covers..\n Valid values include: <span class="literal">Monthly</span>, <span class="literal">Quarterly</span>, <span class="literal">Annually</span>.',
                        requiredFlag: "Optional",
                    },
                    EndDate: {
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Required",
                        description: "Budget end date.",
                    },
                    Name: {
                        sortable: true,
                        description:
                            'User recognizable name for the Account.\n<span class="literal">Account.Name</span> attribute must not contain double quotes (") or colon (:).',
                        filterable: true,
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "String",
                    },
                    StartDate: {
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Required",
                        description: "Budget begin date.",
                    },
                    BudgetType: {
                        sortable: true,
                        description:
                            'Budget types.\n The only value currently supported is <span class="literal">ProfitAndLoss</span>.',
                        filterable: true,
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "BudgetTypeEnum",
                    },
                },
            },
            recurringinfo: {
                name: "recurringinfo",
                ShowFirst: [],
                Default: ["Active"],
                Optional: ["RecurType", "ScheduleInfo", "Name"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Active: {
                        type: "Boolean",
                        description: "This setting indicates whether the recurring schedule is enabled.",
                    },
                    RecurType: {
                        filterable: true,
                        type: "string",
                        sortable: true,
                        description:
                            'The recur type which can be <span class="literal">Automated</span>, <span class="literal">Reminded</span> or <span class="literal">UnScheduled</span>.',
                        requiredFlag: "Optional",
                    },
                    ScheduleInfo: {
                        $ref: [
                            {
                                recurringscheduleinfo: "RecurringScheduleInfo",
                            },
                        ],
                        type: "RecurringScheduleInfo",
                        requiredFlag: "Optional",
                        description: "Describes the scheduling information for the transaction.",
                    },
                    Name: {
                        filterable: true,
                        type: "string",
                        sortable: true,
                        description: "The name of the recurring schedule template.",
                        requiredFlag: "Optional",
                    },
                },
            },
            departmentrequest: {
                name: "departmentrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Name"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["ParentRef"],
                type: "object",
                properties: {
                    Name: {
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        requiredFlag: "Required",
                        description: "User recognizable name for the department.",
                    },
                    ParentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            "The immediate parent of the SubDepartment.\nRequired for the create operation if this object is a SubDepartment. Required if this object is a subdepartment",
                        requiredFlag: "Conditionally required",
                    },
                },
            },
            billpaymentresponse: {
                name: "billpaymentresponse",
                ShowFirst: ["Id"],
                Default: ["CheckPayment", "CreditCardPayment"],
                Optional: [
                    "DocNumber",
                    "PrivateNote",
                    "TxnDate",
                    "ExchangeRate",
                    "APAccountRef",
                    "DepartmentRef",
                    "TransactionLocationType",
                    "ProcessBillPayment",
                    "MetaData",
                ],
                Required: ["VendorRef", "Line [0..n]", "TotalAmt", "PayType"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, a custom value can be provided. If no value is supplied, the resulting DocNumber is null.\nThrows an error when duplicate DocNumber is sent in the request. \nRecommended best practice: check the setting of <span class="literal">Preferences:OtherPrefs </span> before setting DocNumber. If a duplicate DocNumber needs to be supplied, add the query parameter name/value pair, <span class="literal">include=allowduplicatedocnum</span> to the URI.\nSort order is ASC by default.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 21 chars",
                        type: "String",
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PrivateNote: {
                        maxLen: "max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Memo field on the form.",
                        requiredFlag: "Optional",
                    },
                    VendorRef: {
                        sortable: true,
                        description:
                            '<br/>Reference to the vendor for this transaction. Query the Vendor name list resource to determine the appropriate Vendor object for this reference. Use <span class="literal">Vendor.Id</span> and <span class="literal">Vendor.Name</span> from that object for <span class="literal">VendorRef.value</span> and <span class="literal">VendorRef.name</span>, respectively. ',
                        filterable: true,
                        requiredFlag: "Required",
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                linelinkedtxn: "LineLinkedTxn",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items representing zero or more <span class="literal">Bill</span>, <span class="literal">VendorCredit</span>, and <span class="literal">JournalEntry</span> objects linked to this BillPayment object.\nUse <span class="literal">Line.LinkedTxn.TxnId</span> as the ID in a separate Bill, VendorCredit, or JournalEntry read request to retrieve details of the linked object.\n<br/> LinkedTxnLine: ',
                    },
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n<br/>Sort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    TotalAmt: {
                        filterable: true,
                        type: "BigDecimal",
                        sortable: true,
                        description:
                            'Indicates the total amount associated with this payment. This includes the total of all the payments from the payment line details. If <span class="literal">TotalAmt</span> is greater than the total on the lines being paid, the overpayment is treated as a credit and exposed as such on the QuickBooks UI. It cannot be negative.',
                        requiredFlag: "Required",
                    },
                    ExchangeRate: {
                        default: "1, applicable if multicurrency is enabled for the company",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    APAccountRef: {
                        sortable: true,
                        description:
                            'Specifies to which AP account the bill is credited. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">APAccountRef.value</span> and <span class="literal">APAccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.Classification</span> set to <span class="literal">Liability</span> and <span class="literal">Account.AccountSubType</span> set to <span class="literal">AccountsPayable</span>.\n<br/>If the company has a single AP account, the account is implied. However, it is recommended that the AP Account be explicitly specified in all cases to prevent unexpected errors when relating transactions to each other. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    PayType: {
                        type: "BillPaymentTypeEnum",
                        description:
                            'The payment type. Valid values include: <span class="literal">Check</span>, <span class="literal">CreditCard</span>',
                        requiredFlag: "Required",
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            '<br/>A reference to a Department object specifying the location of the transaction, as defined using location tracking in QuickBooks Online. Query the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    CheckPayment: {
                        filterable: true,
                        type: "BillPaymentCheck",
                        sortable: true,
                        description:
                            '\n<br/>Information about a check payment for the transaction. Not applicable to Estimate and SalesOrder. Used when PayType is <span class="literal">Check</span>. ',
                        $ref: [
                            {
                                billpaymentcheck: "BillPaymentCheck",
                            },
                        ],
                    },
                    CreditCardPayment: {
                        filterable: true,
                        type: "BillPaymentCreditCard",
                        sortable: true,
                        description:
                            '<br/>Information about a credit card payment for the transaction. Not applicable to Estimate and SalesOrder. Used when PayType is <span class="literal">CreditCard</span>. ',
                        $ref: [
                            {
                                billpaymentcreditcard: "BillPaymentCreditCard",
                            },
                        ],
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: "WithinFrance",
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    ProcessBillPayment: {
                        type: "Boolean",
                        description:
                            "Indicates that the payment should be processed by merchant account service. Valid for QuickBooks companies with credit card processing.",
                        requiredFlag: "Optional",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique Identifier for an Intuit entity (object).\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>.Required if multicurrency is enabled for the company',
                        requiredFlag: "Conditionally required",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "<br/>Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                },
            },
            taxcoderesponse: {
                name: "taxcoderesponse",
                ShowFirst: ["Id"],
                Default: ["TaxCodeConfigType"],
                Optional: ["TaxGroup", "Taxable", "Active", "Description", "Hidden", "MetaData"],
                Required: ["Name"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["PurchaseTaxRateList", "SalesTaxRateList"],
                type: "object",
                properties: {
                    SyncToken: {
                        requiredFlag: "Required for update",
                        readOnly: true,
                        type: "String",
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        systemDefined: true,
                    },
                    TaxGroup: {
                        default: "true",
                        readOnly: true,
                        type: "Boolean",
                        description:
                            '<span class="literal">true</span>\u2014-this object represents a group of one or more tax rates.\n<span class="literal">false</span>\u2014-this object represents pseudo-tax codes TAX and NON.',
                        requiredFlag: "Optional",
                    },
                    PurchaseTaxRateList: {
                        description:
                            'List of references to tax rates that apply for purchase transactions when this tax code represents a group of tax rates. Required when <span class="literal">TaxGroup</span> is set to <span class="literal">true</span>',
                        type: "TaxRateList",
                        requiredFlag: "Conditionally required",
                        $ref: [
                            {
                                taxratelist: "TaxRateList",
                            },
                        ],
                    },
                    TaxCodeConfigType: {
                        readOnly: true,
                        type: "String",
                        description:
                            'Flag to identify whether the TaxCode is system defined by Automated Sales Tax engine or user generated. Valid values include \n<span class="literal">USER_DEFINED</span>, \n<span class="literal">SYSTEM_GENERATED</span>SYSTEM_GENERATED.',
                        minorVersion: 51,
                    },
                    Taxable: {
                        readOnly: true,
                        type: "Boolean",
                        description:
                            "False or null means meaning non-taxable. True means taxable. Always true, except for the pseudo taxcode NON.",
                        requiredFlag: "Optional",
                    },
                    Name: {
                        sortable: true,
                        description: "User recognizable name for the tax sales code.",
                        filterable: true,
                        requiredFlag: "Required",
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                    },
                    Active: {
                        filterable: true,
                        default: "true",
                        type: "Boolean",
                        description:
                            "False if inactive. Inactive sales tax codes may be hidden from display and may not be used on financial transactions.",
                        requiredFlag: "Optional",
                    },
                    Description: {
                        sortable: true,
                        description: "User entered description for the sales tax code.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    Hidden: {
                        readOnly: true,
                        type: "Boolean",
                        description:
                            'Read-only. Denotes whether active tax codes are displayed on transactions.\n<span class="literal">true</span>\u2014-This tax code is hidden on transactions.\n<span class="literal">false</span>\u2014-This tax code is displayed on transactions.',
                        minorVersion: 21,
                        requiredFlag: "Optional",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object. Sort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    SalesTaxRateList: {
                        description:
                            'List of references to tax rates that apply for sales transactions when this tax code represents a group of tax rates. Required when <span class="literal">TaxGroup</span> is set to <span class="literal">true</span>',
                        type: "TaxRateList",
                        requiredFlag: "Conditionally required",
                        $ref: [
                            {
                                taxratelist: "TaxRateList",
                            },
                        ],
                    },
                },
            },
            transactionlistquery: {
                name: "transactionlistquery ",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "date_macro",
                    "payment_method",
                    "duedate_macro",
                    "arpaid",
                    "bothamount",
                    "transaction_type",
                    "docnum",
                    "start_moddate",
                    "source_account_type",
                    "group_by",
                    "start_date",
                    "department",
                    "start_duedate",
                    "columns",
                    "end_duedate",
                    "vendor",
                    "end_date",
                    "memo",
                    "appaid",
                    "moddate_macro",
                    "printed",
                    "createdate_macro",
                    "cleared",
                    "customer",
                    "qzurl",
                    "term",
                    "end_createdate",
                    "name",
                    "sort_by",
                    "sort_order",
                    "start_createdate",
                    "end_moddate",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    payment_method: {
                        default: "Include all payment methods",
                        type: "String",
                        description:
                            'Filters report contents based on payment method.<br />Supported Values: <span class="literal">Cash</span>, <span class="literal">Check</span>, <span class="literal">Dinners Club</span>, <span class="literal">American Express</span>, <span class="literal">Discover</span>, <span class="literal">MasterCard</span>, <span class="literal">Visa</span>',
                        requiredFlag: "Optional",
                    },
                    duedate_macro: {
                        default: "All dates",
                        type: "String",
                        description:
                            "Predefined date range of due dates for balances to include in the report; otherwise, use the start_duedate and end_duedate to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year",
                        requiredFlag: "Optional",
                    },
                    arpaid: {
                        default: '<span class="literal">All</span>',
                        type: "String",
                        description:
                            'Supported Values:<span class="literal">All</span>, <span class="literal">Paid</span>, <span class="literal">Unpaid</span>',
                        requiredFlag: "Optional",
                    },
                    bothamount: {
                        default: "Include data for all amounts",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified transaction amount. For example, <span class="literal">bothamount=1233.45</span> limits report  contents to transactions of amount 1233.45.',
                        requiredFlag: "Optional",
                    },
                    transaction_type: {
                        default: "Return data for all transactions",
                        type: "String",
                        description:
                            "Filters report contents based transaction type. Supported values include:<br />CreditCardCharge, Check, Invoice, ReceivePayment, JournalEntry, Bill, CreditCardCredit, VendorCredit, Credit, BillPaymentCheck, BillPaymentCreditCard, Charge, Transfer, Deposit, Statement, BillableCharge, TimeActivity, CashPurchase, SalesReceipt, CreditMemo, CreditRefund, Estimate, InventoryQuantityAdjustment, PurchaseOrder, GlobalTaxPayment, GlobalTaxAdjustment, Service Tax Refund, Service Tax Gross Adjustment, Service Tax Reversal, Service Tax Defer, Service Tax Partial Utilisation",
                        requiredFlag: "Optional",
                    },
                    docnum: {
                        default: "Include data for all docnums.",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified transaction number, as found in the <span class="literal">docnum</span> parameter of the transaction object.',
                        requiredFlag: "Optional",
                    },
                    start_moddate: {
                        default: '<span class="literal">moddate_macro</span>',
                        type: "String",
                        description:
                            '(Account List Detail) Specify an explicit account modification report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use the <span class="literal">moddate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                    source_account_type: {
                        default: '<span class="literal">All account types</span>',
                        table: {
                            account_types: [
                                "Show supported account types and values",
                                "Hide supported account types and values",
                            ],
                        },
                        type: "String",
                        description:
                            "Account type from which transactions are included in the report.<br />Supported Values: <span >AccountsPayable</span>, <span >AccountsReceivable</span>, <span >Bank</span>, <span >CostOfGoodsSold</span>, <span >CreditCard</span>, <span >Equity</span>, <span >Expense</span>, <span >FixedAsset</span>, <span >Income</span>, <span >LongTermLiability</span>, <span >NonPosting</span>, <span >OtherAsset</span>, <span >OtherCurrentAsset</span>, <span >OtherCurrentLiability</span>, <span >OtherExpense</span>, <span>OtherIncome</span>",
                        requiredFlag: "Optional",
                    },
                    group_by: {
                        type: "String",
                        description:
                            "The field in the transaction by which to group results. Supported Values: Name, Account, Transaction Type, Customer, Vendor, Employee, Location, Payment Method, Day, Week, Month, Quarter, Year, None",
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    start_duedate: {
                        default: "Return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    columns: {
                        default: "columns denoted with *",
                        table: {
                            columns_tax: [
                                "Show additional values supported based on multicurrency settings for the company.",
                                "Hide additional values supported based on multicurrency settings for the company.",
                            ],
                        },
                        type: "String",
                        description:
                            'Column types to be shown in the report.<br />Supported Values: account_name*, create_by, create_date, cust_msg, due_date, doc_num*, inv_date, is_ap_paid, is_cleared, is_no_post*, last_mod_by, memo*, name*, other_account*, pmt_mthd, printed, sales_cust1, sales_cust2, sales_cust3, term_name, tracking_num, tx_date*, txn_type*, term_name <br /> Additional columns when location tracking enabled: dept_name* <br /> Additional columns with location tracking enabled: dept_name* <br /> Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>.',
                        requiredFlag: "Optional",
                    },
                    end_duedate: {
                        default: "Return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "Return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.<br />Supported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    memo: {
                        default: "Include all memos",
                        type: "String",
                        description:
                            "Filters report contents to include information for specified memo.<br />Supported Values: One or more comma separated memo IDs.",
                        requiredFlag: "Optional",
                    },
                    appaid: {
                        default: '<span class="literal">All</span>',
                        type: "String",
                        description:
                            'Status of the balance.<br />Supported Values: <span class="literal">Paid</span>, <span class="literal">Unpaid</span>, <span class="literal">All</span>',
                        requiredFlag: "Optional",
                    },
                    moddate_macro: {
                        default: "All dates",
                        type: "String",
                        description:
                            "Predefined report account modification date range. Use if you want the report to cover a standard report date range when accounts were modified; otherwise, use the start_moddate and end_moddate to cover an explicit report date range. <br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year",
                        requiredFlag: "Optional",
                    },
                    printed: {
                        default: '<span class="literal">All</span>',
                        type: "String",
                        description:
                            'Filters report contents based on whether checks are printed or not.<br />Supported Values: <span class="literal">Printed</span>, <span class="literal">To_be_printed</span>',
                        requiredFlag: "Optional",
                    },
                    createdate_macro: {
                        default: "All dates",
                        type: "String",
                        description:
                            'Predefined report account create date range. Use if you want the report to cover a standard create report date range; otherwise, use <span class="literal">start_createdate</span> and <span class="literal">end_createdate</span> to cover an explicit report date range. <br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    cleared: {
                        default: "Include data for all check statuses",
                        type: "String",
                        description:
                            "Filters report contents to include information for specified check status.<br />Supported Values: Cleared, Uncleared, Reconciled, Deposited",
                        requiredFlag: "Optional",
                    },
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    qzurl: {
                        default: '<span class="literal">false</span>',
                        type: "String",
                        description:
                            'Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data.<br />Supported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        requiredFlag: "Optional",
                    },
                    term: {
                        default: "Return data for all terms",
                        type: "String",
                        description:
                            'Filters report contents based on term or terms supplied.<br />Supported Values: One or more comma separated term IDs as returned in the attribute, <span class="literal">Term.Id</span> of the Term object response code.',
                        requiredFlag: "Optional",
                    },
                    end_createdate: {
                        default: '<span class="literal">createdate_macro</span> ',
                        type: "String",
                        description:
                            'Specify an explicit account create report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">createdate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                    name: {
                        default: "Include data from all customer, vendor, and employee objects",
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Filters report contents based on the specified comma separated list of ids for the name list customer, vendor, or employee objects.<br />Query the Customer, Vendor, or Employee name list resource to determine the list of objects for this reference. Specify values found in <span class="literal">Customer.Id</span>, <span class="literal">Vendor.Id</span>, and <span class="literal">Employee.Id</span>. For example, <span class="literal">name=1,4,7</span> includes data in the report for  namelist ids 1, 4, and 7. vendor and employee objects',
                    },
                    sort_by: {
                        default: '<span class="literal">txn_type</span>',
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    start_createdate: {
                        default: '<span class="literal">createdate_macro</span> ',
                        type: "String",
                        description:
                            'Specify an explicit account create report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">createdate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                    end_moddate: {
                        default: '<span class="literal">moddate_macro</span>',
                        type: "String",
                        description:
                            '(Account List Detail) Specify an explicit account modification report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use the <span class="literal">moddate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                },
            },
            vendorbalancequery: {
                name: "vendorbalancequery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "qzurl",
                    "accounting_method",
                    "date_macro",
                    "appaid",
                    "report_date",
                    "sort_order",
                    "summarize_column_by",
                    "department",
                    "vendor",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    qzurl: {
                        default: 'default is <span class="literal">false</span>',
                        type: "String",
                        description:
                            'Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data.\nSupported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute',
                        type: "String",
                        description:
                            'The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    appaid: {
                        default: '<span class="literal">Unpaid</span>',
                        type: "String",
                        description:
                            'Status of the balance.\nSupported Values: <span class="literal">Paid</span>, <span class="literal">Unpaid</span>, <span class="literal">All</span>',
                        requiredFlag: "Optional",
                    },
                    report_date: {
                        default: "Today's date",
                        type: "String",
                        description:
                            'Start date to use for the report, in the format <span class="literal">YYYY-MM-DD</span>.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.\nSupported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.\nSupported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "Return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.\nSupported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                },
            },
            purchaseorderrequest: {
                name: "purchaseorderrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["APAccountRef", "VendorRef", "Line [0..n]"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company',
                        requiredFlag: "Conditionally required",
                    },
                    APAccountRef: {
                        filterable: false,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            "Specifies which AP account to which the bill is credited. Many/most small businesses have a single AP account, so the account can be implied. When specified, the account must be a Liability account, and further, the sub-type must be of type Payables.\nWe strongly recommend that the AP Account be explicitly specified in all cases as companies that have more then one AP account will encounter unexpected errors when relating transactions to each other.",
                    },
                    VendorRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description: "The vendor reference for this transaction.",
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                itembasedexpenseline: "ItemBasedExpenseLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            "Individual line items of a transaction. Valid <span class=\"literal\">Line</span> types include:\nItem line. Note:  The ItemRef in the ItemBasedExpenseLine below must reference an Item in QBO that has an expense account linked to it (e.g. in the ExpenseAccountRef field of the Item). Otherwise the request fails in QBO with a 'You must select an account for this transaction.' error.",
                    },
                },
            },
            profitandlossdetailstoplevel: {
                name: "profitandlossdetailstoplevel",
                ShowFirst: [],
                Default: ["Header", "Rows", "Columns"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Header: {
                        description:
                            "The report header <br /> NOTE : Headers might be missing in some of the rows since some of the transactions are directly under an account(X) which might have other sub accounts(x1,x2...) as children. All the transactions that are directly under an account(X) are grouped into one section(x0) without an header(As it is not under any other children). This section(x0) becomes the sibling of all children accounts(x1,x2...) of (X). So, we can see headers for sections of children accounts(x1,x2...) but not for (x0).\n",
                        $ref: [
                            {
                                reportheader: "ReportHeader",
                            },
                        ],
                    },
                    Rows: {
                        description: "Top level container holding information for report rows.\n",
                        $ref: [
                            {
                                reportrows: "ReportRows",
                            },
                        ],
                    },
                    Columns: {
                        description: "Top level container holding information for report columns or subcolumns.\n",
                        $ref: [
                            {
                                reportcolumns: "ReportColumns",
                            },
                        ],
                    },
                },
            },
            companycurrencyrequest: {
                name: "companycurrencyrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Code"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Code: {
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        description:
                            'A three letter string representing the ISO 4217 code for the currency. For example, <span class="literal">USD</span>, <span class="literal">AUD</span>, <span class="literal">EUR</span>, and so on.',
                        requiredFlag: "Required",
                    },
                },
            },
            subtotalline: {
                name: "subtotalline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Description", "LineNum"],
                Required: ["SubtotalLineDetail", "DetailType", "Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Description: {
                        maxLen: "Max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    SubtotalLineDetail: {
                        $ref: [
                            {
                                subtotallinedetail: "SubTotalLineDetail",
                            },
                        ],
                        type: "LineDetail",
                        description: "Subtotal <strong>LineDetail</strong>",
                        requiredFlag: "Required",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description: 'Set to <span class="literal">SubtotalLineDetail</span>for this type of line.',
                        requiredFlag: "Required",
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer",
                    },
                    Amount: {
                        maxLen: "Max 15 digits in 10.5 format",
                        type: "Decimal",
                        description: "The amount of the line item.",
                        requiredFlag: "Required",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>\nIf\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.\n</li>\n<li>\nIf no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.\n</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            customfieldstringsales: {
                name: "customfieldstringsales",
                ShowFirst: [],
                Default: ["StringValue", "Type", "Name"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    StringValue: {
                        type: "String",
                        description: "The name of the custom field as it appears on the sales form.",
                    },
                    Type: {
                        type: "CustomFieldTypeEnum",
                        description:
                            'Denotes that this is a custom field definition. Value is <span class="literal">StringType</span>. This type of custom field is available once the field has been enabled with a corresponding <span class="literal">CustomField</span> object of type <span class="literal">BooleanType</span>.',
                        systemDefined: true,
                    },
                    Name: {
                        readOnly: true,
                        type: "String",
                        description:
                            'The internal name of an enabled custom field, <span class="literal">Name</span> takes the form <span class="literal">SalesFormsPrefs.SalesCustomNameN</span>, where N is <span class="literal">1</span>, <span class="literal">2</span>, or <span class="literal">3</span> for up to three available custom fields that have been enabled. Use the numeric part, represented by N here, as the <span class="literal">CustomField.DefinitionId</span> when configuring custom fields in transactions.',
                    },
                },
            },
            vendorandpurchaseprefs: {
                name: "vendorandpurchasesprefs",
                ShowFirst: [],
                Default: [
                    "DefaultMarkupAccount",
                    "TrackingByCustomer",
                    "DefaultTerms",
                    "BillableExpenseTracking",
                    "DefaultMarkup",
                    "TPAREnabled",
                ],
                Optional: ["POCustomField"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    DefaultMarkupAccount: {
                        type: "ReferenceType",
                        description: "Default markup account.",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    TrackingByCustomer: {
                        default: false,
                        type: "Boolean",
                        description: "Enables tracking by customer.",
                    },
                    POCustomField: {
                        readOnly: true,
                        $ref: [
                            {
                                customfieldboolpo: "CustomField",
                            },
                            {
                                customfieldstringpo: "CustomField",
                            },
                        ],
                        type: "CustomFieldDefinition",
                        description:
                            "Toggles whether Purchase Order Custom Fields are enabled on the sales form. Purchase Order forms can have up to three custom fields",
                        requiredFlag: "Optional",
                    },
                    DefaultTerms: {
                        type: "ReferenceType",
                        description: "Default terms",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    BillableExpenseTracking: {
                        default: false,
                        type: "Boolean",
                        description: "Billable Expense tracking enabled.",
                    },
                    DefaultMarkup: {
                        type: "Decimal",
                        description:
                            "Default markup rate used to calculate the markup amount on the transactions. To enter a markup rate of 8.5%, enter 8.5, not 0.085.",
                    },
                    TPAREnabled: {
                        minorVersion: 40,
                        default: false,
                        readOnly: true,
                        type: "Boolean",
                        locales: ["AU"],
                        description: "Indicates if TPAR enabled by customer.",
                    },
                },
            },
            attachableref: {
                name: "attachableref",
                ShowFirst: [],
                Default: [],
                Optional: ["IncludeOnSend", "LineInfo", "NoRefOnly", "CustomField[0..n]", "Inactive", "EntityRef"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    IncludeOnSend: {
                        filterable: true,
                        type: "Boolean",
                        requiredFlag: "Optional",
                        description:
                            'Used when <span class="literal">EntityRef.type</span> references a transaction object. This field indicates whether or not the attachment is sent with the transaction when <b>Save and Send</b> button is clicked in the QuickBooks UI or when the Send endpoint (send email) is invoked for the object.',
                    },
                    LineInfo: {
                        filterable: true,
                        type: "String",
                        requiredFlag: "Optional",
                        description: "For transaction objects, used to reference a transaction detail line.",
                    },
                    NoRefOnly: {
                        filterable: true,
                        type: "Boolean",
                        requiredFlag: "Optional",
                        description:
                            'Indicates whether or not to find attachable records that have no references to any entity. Combine with\n<span class="literal">AttachableRef.Inactive</span>to return hidden references.',
                    },
                    "CustomField[0..n]": {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            "<br/>If the user tries to fetch a record without permission, the permission denied message is conveyed through this field. ",
                    },
                    Inactive: {
                        default: "false",
                        filterable: true,
                        type: "Boolean",
                        requiredFlag: "Optional",
                        description:
                            ' Indicates whether or not to include references to hidden entities when filtering. When set to\n<span class="literal">true</span> , hidden references are returned in the result set.\n For filtering results, it works with\n<span class="literal">AttachableRef.EntityRef.Type</span> ,\n<span class="literal">AttachableRef.EntityRef.Value</span> and\n<span class="literal">AttachableRef.NoRefOnly</span> filters in combination.',
                    },
                    EntityRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            'Object reference to which this attachment is linked.\n<li>\nSet <span class="literal">EntityRef.value</span> with the <span class="literal">Id</span> of the target object as returned in its response body when queried.\n</li>\n<li>Set <span class="literal">EntityRef.type</span> with the specific type of the target object. For example, <span class="literal">invoice</span>, <span class="literal">bill</span>, <span class="literal">item</span>, etc.\n</li>\n</ul>\n',
                        requiredFlag: "Optional",
                    },
                },
            },
            effectivetaxratedata: {
                name: "effectivetaxratedata",
                ShowFirst: [],
                Default: ["RateValue", "EndDate", "EffectiveDate"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    RateValue: {
                        type: "Decimal",
                        description: "Represents rate value.",
                    },
                    EndDate: {
                        type: "String",
                        description:
                            'End date of this taxrate applicability:\n<em>\n<span class="literal">YYYY-MM-DDTHH:MM:SS\n</span>\n</em>\nUTC:\n<em></em>\n<em>YYYY-MM-DD</em>T\n<em>HH</em>\n<em>:MM:</em>\n<em>SS</em>Z\nSpecific time zone:\n<em></em>\n<span class="literal">\n<em>YYYY-MM-DD</em>T</span>\n<em>\n<span class="literal">HH</span>\n</em>\n<em>\n<span class="literal">:MM:SS</span>\n</em>\n<span class="literal">+/-\n<em>HH</em>\n<em>:MM</em>\n</span>',
                    },
                    EffectiveDate: {
                        type: "String",
                        description:
                            'Effective starting date for which this taxrate is applicable:\n<em>\n<span class="literal">YYYY-MM-DDTHH:MM:SS\n</span>\n</em>\nUTC:\n<em></em>\n<em>YYYY-MM-DD</em>T\n<em>HH</em>\n<em>:MM:</em>\n<em>SS</em>Z\nSpecific time zone:\n<em></em>\n<span class="literal">\n<em>YYYY-MM-DD</em>T</span>\n<em>\n<span class="literal">HH</span>\n</em>\n<em>\n<span class="literal">:MM:SS</span>\n</em>\n<span class="literal">+/-\n<em>HH</em>\n<em>:MM</em>\n</span>',
                    },
                },
            },
            markupinfo: {
                name: "markupinfo",
                ShowFirst: [],
                Default: [],
                Optional: ["PriceLevelRef", "Percent", "MarkUpIncomeAccountRef"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    PriceLevelRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            "Reference to a PriceLevel for the markup. Support for this element will be available in the coming months. ",
                    },
                    Percent: {
                        type: "Decimal",
                        description:
                            "Markup amount expressed as a percent of charges already entered in the current transaction. To enter a rate of 10% use 10.0, not 0.01.",
                        requiredFlag: "Optional",
                    },
                    MarkUpIncomeAccountRef: {
                        description:
                            'The account associated with the markup. Available with invoice objects, only, and when linktxn specified a <span class="literal">ReimburseCharge</span>.',
                        requiredFlag: "Optional",
                        systemDefined: true,
                        readOnly: true,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                },
            },
            linelinkedtxn: {
                name: "linelinkedtxn",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Amount", "LinkedTxn [0..n]"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Amount: {
                        maxLen: "Max 15 digits in 10.5 format",
                        type: "Decimal",
                        description: "The amount of the line item.",
                        requiredFlag: "Required",
                    },
                    "LinkedTxn [0..n]": {
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                        requiredFlag: "Required",
                        description:
                            "Transaction to which the current entity is related. For example, a billpayment line links to the originating bill object for which the billpayment is applied.",
                    },
                },
            },
            departmentsalesquery: {
                name: "departmentsalesquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "accounting_method",
                    "end_date",
                    "date_macro",
                    "class",
                    "item",
                    "sort_order",
                    "summarize_column_by",
                    "department",
                    "start_date",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.\nSupported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis </span> attribute',
                        type: "String",
                        description:
                            ' The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "Include data for all classes",
                        type: "String",
                        description:
                            ' Filters report contents to include information for specified classes if so configured in the company file.\nSupported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                    item: {
                        default: "Include data for all items",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified items.\nSupported Values: One or more comma separated item IDs as returned in the attribute, <span class="literal">Item.Id</span>,of the Item entity response code.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.\nSupported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.\nSupported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                },
            },
            billpaymentcheck: {
                name: "billpaymentcheck",
                ShowFirst: [],
                Default: [],
                Optional: ["PrintStatus"],
                Required: ["BankAccountRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    PrintStatus: {
                        default: "NeedToPrint",
                        type: "PrintStatusEnum",
                        description:
                            '<span class="literal">NeedToPrint</span>\nPrinting status of the invoice.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToPrint</span>,\n<span class="literal">PrintComplete</span>.',
                        requiredFlag: "Optional",
                    },
                    BankAccountRef: {
                        sortable: true,
                        description:
                            '<br/>Reference to the bank account. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">APAccountRef.value</span> and <span class="literal">APAccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.AccountType</span> set to <span class="literal">Bank</span> and <span class="literal">Account.AccountSubType</span> set to <span class="literal">Checking</span>. ',
                        filterable: true,
                        requiredFlag: "Required",
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                },
            },
            creditchargeresponse: {
                name: "creditchargeresponse",
                ShowFirst: [],
                Default: [],
                Optional: ["Status", "AuthCode", "TxnAuthorizationTime", "CCTransId"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Status: {
                        type: "CCPaymentStatusEnum",
                        description:
                            'Indicates the status of the payment transaction. Possible values include <span class="literal">Completed</span>, <span class="literal">Unknown</span>.',
                        requiredFlag: "Optional",
                    },
                    AuthCode: {
                        maxLen: "maximum 100 characters",
                        type: "String",
                        description:
                            "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
                        requiredFlag: "Optional",
                    },
                    TxnAuthorizationTime: {
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Optional",
                        description:
                            "Timestamp indicating the time in which the card processor authorized the transaction. ",
                    },
                    CCTransId: {
                        maxLen: "maximum 100 characters",
                        type: "String",
                        description:
                            "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
                        requiredFlag: "Optional",
                    },
                },
            },
            taxagencyrequest: {
                name: "taxagencyrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["DisplayName"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    DisplayName: {
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                        requiredFlag: "Required",
                        sortable: true,
                        description: "Name of the agency.",
                    },
                },
            },
            companycurrencyresponse: {
                name: "companycurrencyresponse",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Name", "CustomField ", "Active", "MetaData"],
                Required: ["Code"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    Code: {
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        description:
                            'A three letter string representing the ISO 4217 code for the currency. For example, <span class="literal">USD</span>, <span class="literal">AUD</span>, <span class="literal">EUR</span>, and so on. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Class Tracking">Click here</a> for a list of supported currency codes.',
                        requiredFlag: "Required",
                    },
                    Name: {
                        systemDefined: true,
                        type: "String",
                        requiredFlag: "Optional",
                        description: "The full name of the currency.",
                    },
                    "CustomField ": {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    Active: {
                        sortable: true,
                        description:
                            'Indicates whether this currency is active in the company or not.\n<span class="literal">true</span>--This currency is active and enabled for use by QuickBooks.\n<span class="literal">false</span>--This currency is inactive, is hidden from most display purposes, and is not availble for use with financial transactions. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "true",
                        type: "Boolean",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        sortable: true,
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ModificationMetaData",
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                    },
                },
            },
            reportsqueryall: {
                name: "ReportsQueryAll",
                ShowFirst: [],
                Default: [
                    "date_macro",
                    "payment_method",
                    "duedate_macro",
                    "arpaid",
                    "report_date",
                    "sort_order",
                    "summarize_column_by",
                    "account_status",
                    "vendor",
                    "accounting_method",
                    "item<",
                    "employee",
                    "columns",
                    "account_type",
                    "shipvia",
                    "start_createdate end_createdate",
                    "department",
                    "num_periods",
                    "createdate_macro",
                    "past_due",
                    "class",
                    "customer",
                    "qzurl",
                    "term",
                    "sort_by",
                    "appaid",
                    "aging_method",
                    "moddate_macro",
                    "aging_period",
                ],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values:\n<table border="0" cellpadding="0" cellspacing="1">\n<tbody>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">TodayYesterday</span>\n</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This WeekLast Week</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Week-to-dateLast Week-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next WeekNext 4 Weeks</span>\n</td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This MonthLast Month</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Month-to-dateLast Month-to-date</span>\n</td>\n<td>\n<span style="font-family:courier new,courier,monospace;">Next Month</span>\n</td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal QuarterLast Fiscal Quarter</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal Quarter-to-dateLast Fiscal Quarter-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next Fiscal Quarter</span></td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal YearLast Fiscal Year</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal Year-to-date Last Fiscal Year-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next Fiscal Year</span></td>\n</tr>\n</tbody>\n</table>',
                    },
                    payment_method: {
                        type: "String",
                        description:
                            'Filters report contents based on payment method.\nSupported Values: <span class="literal">Cash</span>, <span class="literal">Check</span>, <span class="literal">Dinners Club</span>, <span class="literal">American Express</span>, <span class="literal">Discover</span>, <span class="literal">MasterCard</span>, <span class="literal">Visa</span>',
                    },
                    duedate_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range of due dates for balances to include in the report; otherwise, use the start_duedate and end_duedate to cover an explicit report date range.\nSupported Values:\n<table border="0" cellpadding="0" cellspacing="1">\n<tbody>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">TodayYesterday</span>\n</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This WeekLast Week</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Week-to-dateLast Week-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next WeekNext 4 Weeks</span>\n</td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This MonthLast Month</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Month-to-dateLast Month-to-date</span>\n</td>\n<td>\n<span style="font-family:courier new,courier,monospace;">Next Month</span>\n</td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal QuarterLast Fiscal Quarter</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal Quarter-to-dateLast Fiscal Quarter-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next Fiscal Quarter</span></td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal YearLast Fiscal Year</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal Year-to-date Last Fiscal Year-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next Fiscal Year</span></td>\n</tr>\n</tbody>\n</table>',
                    },
                    arpaid: {
                        default: "Unpaid",
                        type: "String",
                        description:
                            'Supported Values:<span class="literal">All</span>, <span class="literal">Paid</span>, <span class="literal">Unpaid</span>',
                    },
                    report_date: {
                        default: "today's date",
                        type: "String",
                        description:
                            'Start date to use for the report, in the format <span class="literal">YYYY-MM-DD</span>.',
                    },
                    sort_order: {
                        default: "ascend",
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            'The criteria by which to group the report results.\nSupported Values:\n<table border="0" cellpadding="0" cellspacing="1">\n<tbody>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">Total</span></td>\n<td><span style="font-family:courier new,courier,monospace;">Month</span></td>\n<td><span style="font-family:courier new,courier,monospace;">Week</span></td>\n<td><span style="font-family:courier new,courier,monospace;">Days</span></td>\n<td><span style="font-family:courier new,courier,monospace;">Quarter</span></td>\n<td><span style="font-family:courier new,courier,monospace;">Year</span></td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">Customers</span></td>\n<td><span style="font-family:courier new,courier,monospace;">Vendors</span></td>\n<td><span style="font-family:courier new,courier,monospace;">Classes</span></td>\n<td><span style="font-family:courier new,courier,monospace;">Departments</span></td>\n<td><span style="font-family:courier new,courier,monospace;">Employees</span></td>\n<td> </td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">ProductsAndServices</span></td>\n<td> </td>\n<td> </td>\n<td> </td>\n<td> </td>\n<td> </td>\n</tr>\n</tbody>\n</table>',
                    },
                    account_status: {
                        default: "Not_Deleted",
                        type: "String",
                        description:
                            ' The account status. Supported values include: <span class="literal">Deleted</span>, <span class="literal">Not_Deleted</span>',
                    },
                    vendor: {
                        default: "to return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.\nSupported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                    },
                    accounting_method: {
                        default: "Preferences.ReportPrefs.ReportBasis",
                        type: "String",
                        description:
                            ' The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                    },
                    "item<": {
                        default: "to include data for all items",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified items.\nSupported Values: One or more comma separated item IDs as returned in the attribute, <span class="literal">Item.Id</span>,of the Item entity response code.',
                    },
                    employee: {
                        default: "to include data for all employees",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified employees.\nSupported Values: One or more comma separated account IDs as returned in the attribute, <span class="literal">Employee.Id</span>, of the Employee entity response code.',
                    },
                    columns: {
                        type: "String",
                        description:
                            'Column types to be shown in the report.\nSupported Values:\n<table border="0" cellpadding="0" cellspacing="1">\n<tbody>\n<tr>\n<td><span class="literal">class_name*</span></td>\n<td><span class="literal">create_by</span></td>\n<td><span class="literal">create_date</span></td>\n<td><span class="literal">dept_name*</span></td>\n<td><span class="literal">doc_num</span>*</td>\n</tr>\n<tr>\n<td><span class="literal">last_mod_by</span></td>\n<td><span class="literal">last_mod_date</span></td>\n<td><span class="literal">memo*</span></td>\n<td><span class="literal">name*</span></td>\n<td><span class="literal">net_amount</span></td>\n</tr>\n<tr>\n<td><span class="literal">pmt_mthd</span></td>\n<td><span class="literal">split_acc*</span></td>\n<td><span class="literal">tax_amount</span></td>\n<td><span class="literal">tax_code</span></td>\n<td><span class="literal">tx_date*</span></td>\n</tr>\n<tr>\n<td colspan="2" rowspan="1" style="width: 243px;">Without multicurrency enabled</td>\n<td rowspan="1" style="width: 174px;"><span class="literal">subt_nat_amount*</span></td>\n<td><span class="literal">rbal_nat_amount*</span></td>\n</tr>\n<tr>\n<td colspan="2" rowspan="1" style="width: 243px;">With multicurrency enabled</td>\n<td><span class="literal">subt_ant_home_amount*</span></td>\n<td><span class="literal">rbal_nat_home_amount*</span></td>\n</tr>\n</tbody>\n</table>\nDefault Set of Columns for Canadian companies:<span style="color:#FF0000;">  Need to confirm</span>.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>.',
                    },
                    account_type: {
                        default: "all account types",
                        type: "String",
                        description:
                            '\nAccount type from which transactions are included in the report.\nSupported Values:\n<table>\n<thead>\n</thead>\n<tbody>\n<tr>\n<td><span class="literal">AccountsPayable</span></td>\n<td><span class="literal">AccountsReceivable</span></td>\n<td><span class="literal">Bank</span></td>\n<td><span class="literal">CostOfGoodsSold</span></td>\n</tr>\n<tr>\n<td><span class="literal">CreditCard</span></td>\n<td><span class="literal">Equity</span></td>\n<td><span class="literal">Expense</span></td>\n<td><span class="literal">FixedAsset</span></td>\n</tr>\n<tr>\n<td><span class="literal">Income</span></td>\n<td><span class="literal">LongTermLiability</span></td>\n<td><span class="literal">NonPosting</span></td>\n<td><span class="literal">OtherAsset</span></td>\n</tr>\n<tr>\n<td><span class="literal">OtherCurrentAsset</span></td>\n<td><span class="literal">OtherCurrentLiability</span></td>\n<td><span class="literal">OtherExpense</span></td>\n<td><span class="literal">OtherIncome</span></td>\n</tr>\n</tbody>\n</table>\n<span style="color:#FF0000;">&lt;Add account types table mapping&gt; </span>',
                    },
                    shipvia: {
                        default: "to include data for all shipping methods",
                        type: "String",
                        description:
                            'Filter by the shipping method as stored in <span class="literal">Invoice.ShipMethodRef.Name</span>.\nSupported Values: Any shipping method as sent in the <span class="literal">Invoice.ShipMethodRef.Name</span> attribute at Invoice create- or update-time.',
                    },
                    "start_createdate end_createdate": {
                        type: "String",
                        description:
                            '(Account List Detail) Specify an explicit account modification report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use the <span class="literal">moddate_macro</span> to cover a standard report date range. If not specified value of <span class="literal">createdate_macro</span> is used.',
                    },
                    department: {
                        default: "to include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.\nSupported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                    },
                    num_periods: {
                        default: "4",
                        type: "Integer",
                        description:
                            "The number of periods to be shown in the report.\nSupported Values: A numeric value.",
                    },
                    createdate_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined report account create date range. Use if you want the report to cover a standard create report date range; otherwise, use <span class="literal">start_createdate</span> and <span class="literal">end_createdate</span> to cover an explicit report date range.\nSupported Values:\n<table border="0" cellpadding="0" cellspacing="1">\n<tbody>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">TodayYesterday</span>\n</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This WeekLast Week</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Week-to-dateLast Week-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next WeekNext 4 Weeks</span>\n</td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This MonthLast Month</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Month-to-dateLast Month-to-date</span>\n</td>\n<td>\n<span style="font-family:courier new,courier,monospace;">Next Month</span>\n</td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal QuarterLast Fiscal Quarter</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal Quarter-to-dateLast Fiscal Quarter-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next Fiscal Quarter</span></td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal YearLast Fiscal Year</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal Year-to-date Last Fiscal Year-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next Fiscal Year</span></td>\n</tr>\n</tbody>\n</table>',
                    },
                    past_due: {
                        type: "Integer",
                        description:
                            "Filters report contents based on minimum days past due.\nSupported Values: Integer number of days. No filtering",
                    },
                    class: {
                        default: "to include data for all classes",
                        type: "String",
                        description:
                            ' Filters report contents to include information for specified classes if so configured in the company file.\nSupported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                    },
                    customer: {
                        default: "to include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.\nSupported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                    },
                    qzurl: {
                        default: "false",
                        type: "String",
                        description:
                            'Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data.\nSupported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                    },
                    term: {
                        default: "to return data for all terms",
                        type: "String",
                        description:
                            'Filters report contents based on term or terms supplied.\nSupported Values: One or more comma separated term IDs as returned in the attribute, <span class="literal">Term.Id</span> of the Term object response code.',
                    },
                    sort_by: {
                        default: "txn_type",
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                    },
                    appaid: {
                        default: "Unpaid",
                        type: "String",
                        description:
                            'Status of the balance.\nSupported Values: <span class="literal">Paid</span>, <span class="literal">Unpaid</span>, <span class="literal">All</span>',
                    },
                    aging_method: {
                        default: "Report_Date",
                        type: "String",
                        description:
                            'The date upon which aging is determined.\nSupported Values:<span class="literal">Report_Date</span>, <span class="literal">Current </span>',
                    },
                    moddate_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined report account modification date range. Use if you want the report to cover a standard report date range when accounts were modified; otherwise, use the start_moddate and end_moddate to cover an explicit report date range.\nSupported Values:\n<table border="0" cellpadding="0" cellspacing="1">\n<tbody>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">TodayYesterday</span>\n</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This WeekLast Week</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Week-to-dateLast Week-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next WeekNext 4 Weeks</span>\n</td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This MonthLast Month</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Month-to-dateLast Month-to-date</span>\n</td>\n<td>\n<span style="font-family:courier new,courier,monospace;">Next Month</span>\n</td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal QuarterLast Fiscal Quarter</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal Quarter-to-dateLast Fiscal Quarter-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next Fiscal Quarter</span></td>\n</tr>\n<tr>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal YearLast Fiscal Year</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">This Fiscal Year-to-date Last Fiscal Year-to-date</span>\n</td>\n<td><span style="font-family:courier new,courier,monospace;">Next Fiscal Year</span></td>\n</tr>\n</tbody>\n</table> (Account List Detail)',
                    },
                    aging_period: {
                        default: "30",
                        type: "Decimal",
                        description: "The number of days in the aging period.\nSupported Values: A numeric value.",
                    },
                },
            },
            vendorexpensesquery: {
                name: "vendorexpensesquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "vendor",
                    "end_date",
                    "date_macro",
                    "class",
                    "sort_order",
                    "summarize_column_by",
                    "department",
                    "accounting_method",
                    "start_date",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "To include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.\nSupported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "To return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.\nSupported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "To include data for all classes",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified classes if so configured in the company file.\nSupported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.\nSupported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "To include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.\nSupported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis </span> attribute',
                        type: "String",
                        description:
                            'The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                },
            },
            itemreceiptline: {
                name: "itemreceiptline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["LineNum", "Description"],
                Required: ["Amount", "DetailType"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer",
                    },
                    Amount: {
                        maxLen: "max 15 digits in 10.5 format",
                        type: "Decimal",
                        requiredFlag: "Required",
                        description: "The amount of the line item.",
                    },
                    Description: {
                        maxLen: "max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        requiredFlag: "Required",
                        description: 'Set to\n<span class="literal">ItemReceiptLineDetail</span>for this type of line.',
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>If\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.</li>\n<li>If no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            customfieldboolpo: {
                name: "customfieldboolpo",
                ShowFirst: [],
                Default: ["BooleanValue", "Type", "Name"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    BooleanValue: {
                        type: "Boolean",
                        description:
                            'Used to enable the custom field. Set to <span class="literal">True</span> to enable the field. Once enabled, it is available on purchase order forms in the QuickBOoks UI and available for QuickBooks services.',
                    },
                    Type: {
                        type: "CustomFieldTypeEnum",
                        description:
                            'Value is <span class="literal">BooleanType</span>. Denotes this is a custom field enabling object.\n',
                        systemDefined: true,
                    },
                    Name: {
                        readOnly: true,
                        type: "String",
                        description:
                            'The internal name of the custom field. <span class="literal">Name</span> takes the form <span class="literal">PurchasePrefs.UsePurchaseNameN</span>, where N is <span class="literal">1</span>, <span class="literal">2</span>, or <span class="literal">3</span> for up to three available custom fields.',
                    },
                },
            },
            agedpayablesquery: {
                name: "agedpayablesquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "qzurl",
                    "vendor",
                    "date_macro",
                    "department",
                    "report_date",
                    "sort_order",
                    "aging_method",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "to include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    qzurl: {
                        default: "false",
                        type: "String",
                        description:
                            'Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data.<br />Supported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "to return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.<br />Supported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "to include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    report_date: {
                        default: "today's date",
                        type: "String",
                        description:
                            'Start date to use for the report, in the format <span class="literal">YYYY-MM-DD</span>.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    aging_method: {
                        default: "Report_Date",
                        type: "String",
                        description:
                            'The date upon which aging is determined.<br />Supported Values:<span class="literal">Report_Date</span>, <span class="literal">Current </span>',
                        requiredFlag: "Optional",
                    },
                },
            },
            creditcardpayment: {
                name: "creditcardpayment",
                ShowFirst: [],
                Default: [],
                Optional: ["CreditChargeResponse", "CreditChargeInfo"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    CreditChargeResponse: {
                        $ref: [
                            {
                                creditchargeresponse: "CreditChargeResponse",
                            },
                        ],
                        type: "CreditChargeResponse",
                        requiredFlag: "Optional",
                        description:
                            "Holds credit-card transaction response information from a merchant account service. ",
                    },
                    CreditChargeInfo: {
                        $ref: [
                            {
                                creditchargeinfo: "CreditChargeInfo",
                            },
                        ],
                        type: "CreditChargeInfo",
                        requiredFlag: "Optional",
                        description:
                            "Holds creditcard information to request a credit card payment from a merchant account service. ",
                    },
                },
            },
            cashflowreportrows: {
                name: "cashflowreportrows",
                ShowFirst: [],
                Default: ["Row [0..n]"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "Row [0..n]": {
                        table: {
                            group_cashflowsheet: ["Show possible values for group", "Hide possible values for group"],
                        },
                        description:
                            'Represents a row in a report. A group of rows is enclosed in a <span class="literal">Rows</span> container. Rows may be nested either as a single row or in sets, based on the accounts represented in the report and query parameters specified in the request.\nParameters:\n<li>\n<span class="literal">type</span>\u2014As an enclosing section of sub-rows, this is always the string, <span class="literal">Section</span>. As a leaf row, this is always the string, <span class="literal">Data</span>.\n</li>\n<li><span class="literal">group</span>\u2014The group name, valid when <span class="literal">type=Section</span>. </li>\n</ul>\n',
                        $ref: [
                            {
                                reportrow: "reportrow",
                            },
                        ],
                    },
                },
            },
            agedpayablestoplevel: {
                name: "agedpayablestoplevel",
                ShowFirst: [],
                Default: ["Header", "Rows", "Columns"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Header: {
                        description: "The report header.\n",
                        $ref: [
                            {
                                reportheader: "reportheader",
                            },
                        ],
                    },
                    Rows: {
                        description: "Top level container holding information for Aged Receivables report rows.\n",
                        $ref: [
                            {
                                agedpayablesreportrows: "agedpayablesreportrows",
                            },
                        ],
                    },
                    Columns: {
                        description: "Top level container holding information for report columns or subcolumns.\n",
                        $ref: [
                            {
                                reportcolumns: "reportcolumns",
                            },
                        ],
                    },
                },
            },
            purchaseorderitemline: {
                name: "purchaseorderitemline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Description", "LineNum", "CustomField"],
                Required: ["DetailType", "Amount", "PurchaseOrderItemLineDetail"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Description: {
                        maxLen: "Max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description:
                            'Set to\n<span class="literal">PurchaseOrderItemLineDetail</span>for this type of line.',
                        requiredFlag: "Required",
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer.",
                    },
                    Amount: {
                        maxLen: "Max 15 digits in 10.5 format",
                        type: "Decimal",
                        description: "The amount of the line item.",
                        requiredFlag: "Required",
                    },
                    CustomField: {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    PurchaseOrderItemLineDetail: {
                        type: "PurchaseOrderItem",
                        requiredFlag: "Required",
                        $ref: [
                            {
                                purchaseorderitemlinedetail: "PurchaseOrderItemLineDetail",
                            },
                        ],
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>\nIf\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.\n</li>\n<li>\nIf no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.\n</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            descriptiononly: {
                name: "descriptiononly",
                ShowFirst: [],
                Default: [],
                Optional: ["TaxCodeRef", "ServiceDate"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    TaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the <span class="literal">TaxCode</span>for this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">TaxCodeRef.value</span> and <span class="literal">TaxCodeRef.name</span>, respectively. ',
                    },
                    ServiceDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "Date when the service is performed. ",
                    },
                },
            },
            agedreceivablesquery: {
                name: "agedreceivablesquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "qzurl",
                    "date_macro",
                    "aging_method",
                    "report_date",
                    "sort_order",
                    "department",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "to include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.\nSupported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    qzurl: {
                        default: "false",
                        type: "String",
                        description:
                            'Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data.\nSupported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        requiredFlag: "Optional",
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    aging_method: {
                        default: "Report_Date",
                        type: "String",
                        description:
                            'The date upon which aging is determined.\nSupported Values:<span class="literal">Report_Date</span>, <span class="literal">Current </span>',
                        requiredFlag: "Optional",
                    },
                    report_date: {
                        default: "today's date",
                        type: "String",
                        description:
                            'Start date to use for the report, in the format <span class="literal">YYYY-MM-DD</span>.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "to include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.\nSupported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                },
            },
            termrequest: {
                name: "termrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Name"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["DayOfMonthDue", "DueDays"],
                type: "object",
                properties: {
                    DayOfMonthDue: {
                        maxLen: "Range is 1 through 31",
                        type: "Integer",
                        requiredFlag: "Conditionally required",
                        description:
                            'Payment must be received by this day of the month. Required if <span class="literal">DueDays</span> not present',
                    },
                    DueDays: {
                        maxLen: "Range is 0 through 999",
                        type: "Integer",
                        requiredFlag: "Conditionally required",
                        description:
                            'Number of days from delivery of goods or services until the payment is due. Required if <span class="literal">DayOfMonthDue</span> not present',
                    },
                    Name: {
                        type: "String",
                        description:
                            'User recognizable name for the term. For example, <span class="literal">Net 30</span>.',
                        requiredFlag: "Required",
                    },
                },
            },
            depositline: {
                name: "depositline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Description", "LineNum", "CustomField"],
                Required: ["DetailType", "Amount", "DepositLineDetail"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Description: {
                        maxLen: "max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        requiredFlag: "Required",
                        description: 'Set to <span class="literal">DepositLineDetail</span>for this type of line.',
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer",
                    },
                    Amount: {
                        maxLen: "max 15 digits in 10.5 format",
                        type: "Decimal",
                        requiredFlag: "Required",
                        description: "The amount of the line item.",
                    },
                    CustomField: {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                        requiredFlag: "Optional",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>If <span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.</li>\n<li>If no <span class="literal">Id</span>is provided, the <span class="literal">Id</span>provided is less than or equal to zero, or the <span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.\n</li>\n</ul> Available in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    DepositLineDetail: {
                        type: "DepositLineDetail",
                        requiredFlag: "Required",
                        $ref: [
                            {
                                depositlinedetail: "DepositLineDetail",
                            },
                        ],
                    },
                },
            },
            timeactivityrequest: {
                name: "timeactivityrequest",
                ShowFirst: [],
                Default: ["EmployeeRef", "CustomerRef"],
                Optional: [],
                Required: ["NameOf"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["TxnDate", "Hours", "StartTime", "HourlyRate", "VendorRef", "EndTime"],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date for the time activity. This is the posting date that affects financial statements. If the date is not supplied, the current date on the server is used.\nSort order is ASC by default. If you provide the StartTime and EndTime without including the timeZone offset, then you would need to pass the TxnDate for any historical or future dates. \n Lets say if you want to create a historical time activity then pass the TxnDate as the date and pass StartTime and EndTime as Hours without including the timeZone offset.",
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        default: "Current server date",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    EmployeeRef: {
                        description:
                            'Specifies the employee whose time is being recorded. Query the Employee name list resource to determine the appropriate Employee object for this reference. Use <span class="literal">Employee.Id</span> and <span class="literal">Employee.DisplayName</span> from that object for <span class="literal">EmployeerRef.value</span> and <span class="literal">EmployeeRef.Name</span>, respectively.\n',
                        type: "ReferenceType",
                        requiredFlag: "Condtionally required",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Hours: {
                        maxLen: "Maximum of 8760 hours\n59 minutes; if hours is 8760\nminutes must be 0",
                        type: "Integer",
                        requiredFlag: "Conditionally required",
                        description:
                            'Hours and minutes worked. Required if <span class="literal">StartTime</span> and <span class="literal">EndTime</span> not specified',
                    },
                    StartTime: {
                        description:
                            'Time that work starts. Required if <span class="literal">Hours</span> and <span class="literal">Minutes</span> not specified. \n Note: Kindly consider only the Hours without including the timeZone offset as it does not impact time activity hours calculation. \n <li>If <span class="literal">TnxDate</span> is provided then consider passing the <span class="literal">StartTime</span> and <span class="literal">EndTime</span> wihtout including the timeZone offset, then the the date passed on the TxnDate is used.</li> \n <li>If <span class="literal">TnxDate</span> is NOT provided, passing the <span class="literal">StartTime</span> and <span class="literal">EndTime</span> with/wihtout including the timeZone offset, then the the current date on the server is used.</li> \n<li>For any transactions with historical/future dates kindly include TxnDate in YYYY-MM-DD format and StartTime and EndTime in Hours and Minutes</li>',
                        type: "DateTime",
                        requiredFlag: "Conditionally required",
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                    },
                    HourlyRate: {
                        default: "0",
                        maxLen: "0 to 99999999999 hours",
                        type: "Decimal",
                        requiredFlag: "Conditionally required",
                        description:
                            'Hourly bill rate of the employee or vendor for this time activity. Required if <span class="literal">BillableStatus</span> is set to <span class="literal">Billable</span>',
                    },
                    VendorRef: {
                        description:
                            'Specifies the vendor whose time is being recorded. Query the Vendor name list resource to determine the appropriate Vendor object for this reference. Use <span class="literal">Vendor.Id</span> and <span class="literal">Vendor.Name</span> from that object for <span class="literal">VendorRef.value</span> and <span class="literal">VendorRef.name</span>, respectively.\n',
                        type: "ReferenceType",
                        requiredFlag: "Conditionally required",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    EndTime: {
                        description:
                            'Time that work ends. Required if <span class="literal">Hours</span> and <span class="literal">Minutes</span> not specified. \n Note: Kindly consider only the Hours without including the timeZone offset as it does not impact time activity hours calculation. \n <li>If <span class="literal">TnxDate</span> is provided then consider passing the <span class="literal">StartTime</span> and <span class="literal">EndTime</span> wihtout including the timeZone offset, then the the date passed on the TxnDate is used.</li> \n <li>If <span class="literal">TnxDate</span> is NOT provided, passing the <span class="literal">StartTime</span> and <span class="literal">EndTime</span> with/wihtout including the timeZone offset, then the the current date on the server is used.</li> \n<li>For any transactions with historical/future dates kindly include TxnDate in YYYY-MM-DD format and StartTime and EndTime in Hours and Minutes</li>',
                        type: "DateTime",
                        requiredFlag: "Conditionally required",
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                    },
                    CustomerRef: {
                        type: "ReferenceType",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively.\n',
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    NameOf: {
                        type: "String",
                        description:
                            'Enumeration of time activity types. Required in conjunction with either\n<span class="literal">EmployeeRef</span>or\n<span class="literal">VendorRef</span>attributes for create operations. Valid values:\n<span class="literal">Vendor</span>or\n<span class="literal">Employee</span>.',
                        requiredFlag: "Required",
                    },
                },
            },
            creditcardpaymentresponse: {
                name: "creditcardpaymentresponse",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["PrivateNote", "VendorRef", "TxnDate", "Memo", "PrintStatus", "CheckNum", "MetaData"],
                Required: ["CreditCardAccountRef", "Amount", "BankAccountRef"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PrivateNote: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This field maps to the Memo field on the Pay down credit card form.",
                        requiredFlag: "Optional",
                    },
                    VendorRef: {
                        description:
                            'Reference to the vendor for this transaction. Query the Vendor name list resource to determine the appropriate Vendor object for this reference. Use <span class="literal">Vendor.Id</span> and <span class="literal">Vendor.Name</span> from that object for <span class="literal">VendorRef.value</span> and <span class="literal">VendorRef.name</span>, respectively. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        minorVersion: 54,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    CreditCardAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            "Identifies the credit card account to which funds are transfered. Query the Account name list resource to determine the appropriate Account object for this reference.",
                    },
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "Current server date",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    Memo: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This field maps to the Memo field on the Pay down credit card form.",
                        minorVersion: 54,
                        requiredFlag: "Optional",
                    },
                    PrintStatus: {
                        default: '<span class="literal">NotSet</span>',
                        description:
                            'Printing status of the credit-card-payment.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToPrint</span>,\n<span class="literal">PrintComplete\n</span>. ',
                        type: "String",
                        requiredFlag: "Optional",
                        minorVersion: 54,
                    },
                    CheckNum: {
                        type: "String",
                        description:
                            "User entered, Check number. This field maps to the Check no. field on the Pay down credit card form.",
                        minorVersion: 54,
                        requiredFlag: "Optional",
                    },
                    Amount: {
                        type: "Decimal",
                        description: "Indicates the total amount of the transaction.",
                        requiredFlag: "Required",
                    },
                    BankAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            "Identifies the bank account from which funds are transfered. Query the Account name list resource to determine the appropriate Account object for this reference.",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.",
                    },
                },
            },
            termresponse: {
                name: "termresponse",
                ShowFirst: ["Id"],
                Default: ["DayOfMonthDue", "DiscountDayOfMonth", "DueNextMonthDays", "DueDays"],
                Optional: ["DiscountPercent", "DiscountDays", "Active", "Type", "MetaData"],
                Required: ["Name"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    DayOfMonthDue: {
                        maxLen: "Range is 1 through 31",
                        type: "Integer",
                        description:
                            'Payment must be received by this day of the month. Used only if <span class="literal">DueDays</span> is not specified. Required if <span class="literal">DueDays</span> not present',
                    },
                    Name: {
                        sortable: true,
                        description:
                            'User recognizable name for the term. For example, <span class="literal">Net 30</span>.',
                        filterable: true,
                        requiredFlag: "Required",
                        maxLen: "max 31 characters",
                        type: "String",
                    },
                    DiscountDayOfMonth: {
                        maxLen: "Range is 0 through 31",
                        type: "Positive Integer",
                        description:
                            'Discount applies if paid before this day of month. Required if <span class="literal">DueDays</span> not present',
                    },
                    DiscountPercent: {
                        maxLen: "Range is 0 through 100",
                        type: "Decimal",
                        description:
                            'Discount percentage available against an amount if paid within the days specified by <span class="literal">DiscountDays</span>.',
                        requiredFlag: "Optional",
                    },
                    DiscountDays: {
                        maxLen: "Range is 0 through 999",
                        type: "Integer",
                        description:
                            'Discount applies if paid within this number of days. Used only when <span class="literal">DueDays</span> is specified.',
                        requiredFlag: "Optional",
                    },
                    DueNextMonthDays: {
                        maxLen: "Range is 0 through 999",
                        type: "Positive Integer",
                        description:
                            'Payment due next month if issued that many days before the <span class="literal">DayOfMonthDue</span>. Required if <span class="literal">DueDays</span> not present.',
                    },
                    DueDays: {
                        maxLen: "Range is 0 through 999",
                        type: "Integer",
                        description:
                            'Number of days from delivery of goods or services until the payment is due. Required if <span class="literal">DayOfMonthDue</span> not present',
                    },
                    Active: {
                        sortable: true,
                        description: "If true, this entity is currently enabled for use by QuickBooks.",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "true",
                        type: "Boolean",
                    },
                    Type: {
                        systemDefined: true,
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Type of the Sales Term. Valid values:\n<span class="literal">STANDARD</span>--Used if <span class="literal">DueDays</span> is not null.\n<span class="literal">DATE_DRIVEN</span>--Used if <span class="literal">DueDays</span> is null.',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object. Sort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.",
                    },
                },
            },
            inventoryvaluationquery: {
                name: "inventoryvaluationquery",
                ShowFirst: [],
                Default: [],
                Optional: ["qzurl", "date_macro", "item", "report_date", "sort_order", "summarize_column_by"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    qzurl: {
                        default: '<span class="literal">False</span>',
                        type: "String",
                        description:
                            'Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data.<br />Supported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        requiredFlag: "Optional",
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    item: {
                        default: "Include data for all items",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified items.<br />Supported Values: One or more comma separated item IDs as returned in the attribute, <span class="literal">Item.Id</span>,of the Item entity response code.',
                        requiredFlag: "Optional",
                    },
                    report_date: {
                        default: "today's date",
                        type: "String",
                        description:
                            'Start date to use for the report, in the format <span class="literal">YYYY-MM-DD</span>.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.<br />Supported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                },
            },
            paymentline: {
                name: "paymentline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Description", "LineNum"],
                Required: ["DetailType", "Amount", "PaymentLineDetail"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Description: {
                        maxLen: "Max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description: 'Set to \n<span class="literal">PaymentLineDetail</span>for this type of line.',
                        requiredFlag: "Required",
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer.",
                    },
                    Amount: {
                        maxLen: "Max 15 digits in 10.5 format",
                        type: "Decimal",
                        description: "The amount of the line item.",
                        requiredFlag: "Required",
                    },
                    PaymentLineDetail: {
                        $ref: [
                            {
                                paymentlinedetail: "PaymentLineDetail",
                            },
                        ],
                        type: "PaymentLineDetail",
                        description:
                            "Discount detail type for the entire transaction. This is in contrast to a discount applied to a specific line. The company preference\n<strong>Sales Form Entry | Discounts</strong>must be enabled for this type of line to be available. Must be enabled for this type of line to be available.",
                        requiredFlag: "Required",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>If\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.</li>\n<li>If no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            customerrequest: {
                name: "customerrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: ["DisplayName", "Suffix", "Title", "MiddleName", "FamilyName", "GivenName"],
                type: "object",
                properties: {
                    DisplayName: {
                        sortable: true,
                        description:
                            'The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects. Cannot be removed with sparse update.\nIf not supplied, the system generates <span class="literal">DisplayName</span> by concatenating customer name components supplied in the request from the following list: <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, and <span class="literal">Suffix</span>.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum of 500 chars",
                        type: "String",
                    },
                    Suffix: {
                        sortable: false,
                        description:
                            'Suffix of the name. For example, <span class="literal">Jr</span>. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: false,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum of 16 chars",
                        type: "String",
                    },
                    Title: {
                        maxLen: "maximum of 16 chars",
                        type: "String",
                        requiredFlag: "Conditionally required",
                        description:
                            'Title of the person. This tag supports i18n, all locales. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, <span class="literal">Suffix</span>, or <span class="literal">FullyQualifiedName</span> attributes are required during create.',
                    },
                    MiddleName: {
                        sortable: true,
                        description:
                            'Middle name of the person. The person can have zero or more middle names. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    FamilyName: {
                        sortable: true,
                        description:
                            'Family name or the last name of the person. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    GivenName: {
                        sortable: true,
                        description:
                            'Given name or first name of a person. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                },
            },
            taxagencyresponse: {
                name: "taxagencyresponse",
                ShowFirst: ["Id"],
                Default: ["TaxAgencyConfig"],
                Optional: [
                    "TaxTrackedOnSales",
                    "TaxTrackedOnPurchases",
                    "LastFileDate",
                    "TaxRegistrationNumber",
                    "MetaData",
                ],
                Required: ["DisplayName"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    TaxAgencyConfig: {
                        readOnly: true,
                        type: "String",
                        description:
                            'Flag to identify whether the TaxAgency is system defined by Automated Sales Tax engine or user generated. Valid values include \n<span class="literal">USER_DEFINED</span>, \n<span class="literal">SYSTEM_GENERATED</span>SYSTEM_GENERATED.',
                        minorVersion: 46,
                    },
                    DisplayName: {
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                        requiredFlag: "Required",
                        sortable: true,
                        description: "Name of the agency.",
                    },
                    TaxTrackedOnSales: {
                        default: "true",
                        readOnly: true,
                        type: "Boolean",
                        description: "Denotes whether this tax agency is used to track tax on sales.",
                        requiredFlag: "Optional",
                    },
                    TaxTrackedOnPurchases: {
                        default: "false",
                        readOnly: true,
                        type: "Boolean",
                        description: "Denotes whether this tax agency is used to track tax on purchases.",
                        requiredFlag: "Optional",
                    },
                    LastFileDate: {
                        minorVersion: 6,
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "Date",
                        locales: ["FR", "GB", "AU", "IN", "CA"],
                        description:
                            "The last tax filing date for this tax agency. This field is automatically populated by QuickBooks business logic at tax filing time.",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object. Sort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    TaxRegistrationNumber: {
                        readOnly: true,
                        type: "String",
                        description: "Registration number for the agency.",
                        requiredFlag: "Optional",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                },
            },
            batchrequest: {
                name: "batchrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["BatchItemRequest"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    BatchItemRequest: {
                        $ref: [
                            {
                                batchitemrequest: "BatchItemRequest",
                            },
                        ],
                        type: "batchitemrequest",
                        requiredFlag: "Required",
                        description: "A wrapper around all request objects for this batch operation.",
                    },
                },
            },
            customertyperesponse: {
                name: "companytyperesponse",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Active", "MetaData"],
                Required: [],
                RequiredForUpdate: ["SyncToken", "Name"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Active: {
                        sortable: true,
                        description:
                            'Indicates whether this customer type is active in the company or not.\n<span class="literal">true</span>--This customer type is active and enabled for use by QuickBooks.\n<span class="literal">false</span>\u2014This customer type is inactive, is hidden from most display purposes, and is not availble for use with financial transactions. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "true",
                        type: "Boolean",
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    MetaData: {
                        sortable: true,
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ModificationMetaData",
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                    },
                    Name: {
                        systemDefined: true,
                        type: "String",
                        requiredFlag: "Required for update",
                        description: "The full name of the customer type.",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            itemreftype: {
                name: "itemreftype",
                ShowFirst: [],
                Default: [],
                Optional: ["type", "name"],
                Required: ["value"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    type: {
                        type: "String",
                        description:
                            'The item type for this reference. Use <span class="literal">Item.Type</span> to populate this field.',
                        requiredFlag: "Optional",
                    },
                    name: {
                        type: "String",
                        description:
                            'An identifying name for the object being referenced by <span class="literal">value</span>. Use <span class="literal">Item.FullyQualifiedName</span> to populate this field.',
                        requiredFlag: "Optional",
                    },
                    value: {
                        type: "String",
                        description:
                            'The ID for the referenced item object as found in the <span class="literal">Item.Id</span> field of the Item object payload.',
                        requiredFlag: "Required",
                    },
                },
            },
            generalledgerquery: {
                name: "generalledgerquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "account",
                    "accounting_method",
                    "source_account",
                    "end_date",
                    "date_macro",
                    "account_type",
                    "sort_by",
                    "sort_order",
                    "start_date",
                    "summarize_column_by",
                    "department",
                    "vendor",
                    "class",
                    "columns",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    account: {
                        default: "Data for all accounts",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified accounts.<br />Supported Values: One or more comma separated account IDs as returned in the attribute, <span class="literal">Account.Id</span>, of the Account object response code.',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute',
                        type: "String",
                        description:
                            'The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    source_account: {
                        default: "Data for all accounts",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified source accounts.<br />Supported Values: One or more comma separated account IDs as returned in the attribute, <span class="literal">Account.Id</span>, of the Account object response code.',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    account_type: {
                        default: "All accounts",
                        table: {
                            account_types: ["Show child attributes", "Hide child attributes"],
                        },
                        type: "String",
                        description:
                            "(source_account_type) Account type from which transactions are included in the report.<br />Supported Values: <span >AccountsPayable</span>, <span >AccountsReceivable</span>, <span >Bank</span>, <span >CostOfGoodsSold</span>, <span >CreditCard</span>, <span >Equity</span>, <span >Expense</span>, <span >FixedAsset</span>, <span >Income</span>, <span >LongTermLiability</span>, <span >NonPosting</span>, <span >OtherAsset</span>, <span >OtherCurrentAsset</span>, <span >OtherCurrentLiability</span>, <span >OtherExpense</span>, <span>OtherIncome</span>",
                        requiredFlag: "Optional",
                    },
                    sort_by: {
                        default: '<span class="literal">txn_type</span>',
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.<br />Supported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "To return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.<br />Supported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "Include data for all classes",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified classes if so configured in the company file. <br />Supported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                    columns: {
                        default: "Columns included in the report are denoted with *",
                        table: {
                            columns_generalLedger: [
                                "Show additional values supported based on the multicurrency settings for the company.",
                                "Hide additional values supported based on the multicurrency settings for the company.",
                            ],
                        },
                        type: "String",
                        description:
                            'Column types to be shown in the report.<br /> Supported Values: account_name, chk_print_state, create_by, create_date, cust_name, doc_num*, emp_name, inv_date, is_adj*, is_ap_paid, is_ar_paid, is_cleared, item_name, last_mod_by, last_mod_date, memo*, name*, quantity, rate, split_acc*, tx_date*, txn_type*, vend_name.<br>Additional columns when sales tax enabled: net_amount, tax_amount, tax_code. <br /> Additional columns when sales tax enabled: net_amount, tax_amount, tax_code <br>Additional columns when account numbering enabled: account_num.<br/>Additional columns when class tracking enabled: klass_name*.<br>Additional columns when location tracking enabled: dept_name*. <br /> Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. <br />NonTracking status is enabled for the company if <span class="literal">CompanyInfo.NameValue.Name.NonTracking</span> is set to  <span class="literal">true</span>. Currently enabled for Canadian company, other locales can be added in the future.',
                        requiredFlag: "Optional",
                    },
                },
            },
            balancesheetquery: {
                name: "balancesheetquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "qzurl",
                    "accounting_method",
                    "end_date",
                    "date_macro",
                    "adjusted_gain_loss",
                    "class",
                    "item",
                    "sort_order",
                    "summarize_column_by",
                    "department",
                    "vendor",
                    "start_date",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "to include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.\nSupported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    qzurl: {
                        default: "false",
                        type: "String",
                        description:
                            'Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data.\nSupported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default: "Preferences.ReportPrefs.ReportBasis",
                        type: "String",
                        description:
                            ' The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    adjusted_gain_loss: {
                        default: "false",
                        type: "String",
                        description:
                            'Specifies whether unrealized gain and losses are included in the report.\nSupported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        locales: ["CA"],
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "to include data for all classes",
                        type: "String",
                        description:
                            ' Filters report contents to include information for specified classes if so configured in the company file.\nSupported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                    item: {
                        default: "to include data for all items",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified items.\nSupported Values: One or more comma separated item IDs as returned in the attribute, <span class="literal">Item.Id</span>,of the Item entity response code.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.\nSupported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "to include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.\nSupported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "to return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.\nSupported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                },
            },
            profitandlossreportrows: {
                name: "profitandlossreportrows",
                ShowFirst: [],
                Default: ["Row [0..n]"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "Row [0..n]": {
                        table: {
                            group_profitandlosssheet: [
                                "Show possible values for group",
                                "Hide possible values for group",
                            ],
                        },
                        description:
                            'Represents a row in a report. A group of rows is enclosed in a <span class="literal">Rows</span> container. Rows may be nested either as a single row or in sets, based on the accounts represented in the report and query parameters specified in the request.\nParameters:\n<li>\n<span class="literal">type</span>\u2014As an enclosing section of sub-rows, this is always the string, <span class="literal">Section</span>. As a leaf row, this is always the string, <span class="literal">Data</span>.\n</li>\n<li><span class="literal">group</span>\u2014The group name, valid when <span class="literal">type=Section</span>. </li>\n</ul>\n',
                        $ref: [
                            {
                                reportrow: "reportrow",
                            },
                        ],
                    },
                },
            },
            agedreceivabledetailquery: {
                name: "agedreceivabledetailquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "shipvia",
                    "term",
                    "end_duedate",
                    "start_duedate",
                    "custom1",
                    "custom2",
                    "custom3",
                    "report_date",
                    "num_periods",
                    "aging_method",
                    "past_due",
                    "aging_period",
                    "columns",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "to include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    shipvia: {
                        default: "to include data for all shipping methods",
                        type: "String",
                        description:
                            'Filter by the shipping method as stored in <span class="literal">Invoice.ShipMethodRef.Name</span>.<br />Supported Values: Any shipping method as sent in the <span class="literal">Invoice.ShipMethodRef.Name</span> attribute at Invoice create- or update-time.',
                        requiredFlag: "Optional",
                    },
                    term: {
                        default: "to return data for all terms",
                        type: "String",
                        description:
                            'Filters report contents based on term or terms supplied.<br />Supported Values: One or more comma separated term IDs as returned in the attribute, <span class="literal">Term.Id</span> of the Term object response code.',
                        requiredFlag: "Optional",
                    },
                    end_duedate: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    start_duedate: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    custom1: {
                        default: "to include data for all fields",
                        type: "String",
                        description:
                            'Filter by the specified custom field as defined by the <span class="literal">CustomField</span> attribute in transaction entities where supported. <br />Supported Values: Name of custom field.',
                        requiredFlag: "Optional",
                    },
                    custom2: {
                        default: "to include data for all fields",
                        type: "String",
                        description:
                            'Filter by the specified custom field as defined by the <span class="literal">CustomField</span> attribute in transaction entities where supported. <br />Supported Values: Name of custom field.',
                        requiredFlag: "Optional",
                    },
                    custom3: {
                        default: "to include data for all fields",
                        type: "String",
                        description:
                            'Filter by the specified custom field as defined by the <span class="literal">CustomField</span> attribute in transaction entities where supported. <br />Supported Values: Name of custom field.',
                        requiredFlag: "Optional",
                    },
                    report_date: {
                        default: "today's date",
                        type: "String",
                        description:
                            'Start date to use for the report, in the format <span class="literal">YYYY-MM-DD</span>.',
                        requiredFlag: "Optional",
                    },
                    num_periods: {
                        default: "4",
                        type: "Integer",
                        description:
                            "The number of periods to be shown in the report.<br />Supported Values: A numeric value.",
                        requiredFlag: "Optional",
                    },
                    aging_method: {
                        default: "Report_Date",
                        type: "String",
                        description:
                            'The date upon which aging is determined.<br />Supported Values:<span class="literal">Report_Date</span>, <span class="literal">Current </span>',
                        requiredFlag: "Optional",
                    },
                    past_due: {
                        type: "Integer",
                        requiredFlag: "Optional",
                        description:
                            "Filters report contents based on minimum days past due.<br />Supported Values: Integer number of days. No filtering.",
                    },
                    aging_period: {
                        default: "30",
                        type: "Decimal",
                        description: "The number of days in the aging period.<br />Supported Values: A numeric value.",
                        requiredFlag: "Optional",
                    },
                    columns: {
                        default: "columns denoted with *",
                        table: {
                            columns_araging: [
                                "Show additional values supported based on multicurrency settings for the company.",
                                "Hide additional values supported based on multicurrency settings for the company.",
                            ],
                        },
                        type: "String",
                        description:
                            "Column types to be shown in the report.<br />Supported Values: bill_addr, create_by, create_date, cust_bill_email, cust_comp_name, cust_msg, cust_msg, cust_msg, cust_name, deliv_addr, doc_num*, due_date*, last_mod_by, last_mod_date, memo*, past_due, sale_sent_state, ship_addr, term_name, tx_date*, txn_type*<br/> Additional columns with custom fields enabled: sales_cust1, sales_cust2, sales_cust3<br /> Additional columns with location tracking enabled: dept_name*",
                        requiredFlag: "Optional",
                    },
                },
            },
            salesitemlinedetail: {
                name: "salesitemlinedetail",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "TaxInclusiveAmt",
                    "DiscountAmt",
                    "ItemRef",
                    "ClassRef",
                    "TaxCodeRef",
                    "MarkupInfo",
                    "ItemAccountRef",
                    "ServiceDate",
                    "DiscountRate",
                    "Qty",
                    "UnitPrice",
                    "TaxClassificationRef",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    TaxInclusiveAmt: {
                        minorVersion: 1,
                        type: "Decimal",
                        description:
                            'The total amount of the line item including tax.\nConstraints: Available when endpoint is evoked with the <span class="literal">minorversion=1</span>query parameter.',
                        locales: ["GB", "AU", "CA", "IN"],
                        requiredFlag: "Optional",
                    },
                    DiscountAmt: {
                        minorVersion: 4,
                        type: "Decimal",
                        description:
                            'The discount amount applied to this line. If both <span class="literal">DiscountAmt </span> and <span class="literal">DiscountRate</span> are supplied, <span class="literal">DiscountRate</span> takes precedence and <span class="literal">DiscountAmt </span> is recalculated by QuickBooks services based on amount of <span class="literal">DiscountRate</span>.',
                        locales: ["FR"],
                        requiredFlag: "Optional",
                    },
                    ItemRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to an Item object.\n<li>Query the Item name list resource to determine the appropriate Item object for this reference. Use <span class="literal">Item.Id</span> and <span class="literal">Item.Name</span> from that object for <span class="literal">ItemRef.value</span> and <span class="literal">ItemRef.name</span>, respectively.</li>\n<li>Set ItemRef.value to <span class="literal">SHIPPING_ITEM_ID</span> when Line.amount represents transaction-wide shipping charges. Valid when <span class="literal">Preferences.SalesFormsPrefs.AllowShipping</span> is set to <span class="literal">true</span>. </li>\n<li>Set ItemRef.value to <span class="literal">GRATUITY_ITEM_ID</span> when Line.amount represents transaction-wide gratuity amount. Valid when <span class="literal">Preferences.OtherPrefs.Name.SalesFormsPrefs.AllowGratuity</span> is set to <span class="literal">true</span>. </li>\n<li>When a line lacks an ItemRef it is treated as documentation and the <span class="literal">Line.Amount</span>attribute is ignored.</li>\n<li>Applicable to invoice objects, only, and when <span class="literal">linktxn</span> specifies a <span class="literal">ReimburseCharge</span>. When <span class="literal">Item.Id</span> is set to 1, <span class="literal">ItemAccountRef</span> refers to reimburse expense account Id.</li>\n</ul>\nFor France locales: The account associated with the referenced Item object is looked up in the account category list.\n<li>If this account has same location as specified in the transaction by the <span class="literal">TransactionLocationType</span> attribute and the same VAT as in the line item <span class="literal">TaxCodeRef</span> attribute, then the item account is used.</li>\n<li>If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.</li>\n<li>If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.</li>\n</ul>',
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class for the line item. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerLine</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    TaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the <span class="literal">TaxCode</span>for this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">TaxCodeRef.value</span> and <span class="literal">TaxCodeRef.name</span>, respectively.  ',
                    },
                    MarkupInfo: {
                        $ref: [
                            {
                                markupinfo: "MarkupInfo",
                            },
                        ],
                        type: "MarkupInfo",
                        requiredFlag: "Optional",
                        description:
                            "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line.",
                    },
                    ItemAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            'Available with invoice objects, only, and when there is a <span class="literal">linkedtxn</span> of type <span class="literal">ReimburseCharge</span> for this object. When <span class="literal">ItemRef.Id</span> is set to 1, <span class="literal">ItemAccountRef</span> maps to the reimbursable charge account.',
                        requiredFlag: "Optional",
                    },
                    ServiceDate: {
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "Date when the service is performed.",
                    },
                    DiscountRate: {
                        minorVersion: 4,
                        type: "Decimal",
                        description:
                            'The discount rate applied to this line. If both <span class="literal">DiscountAmt </span> and <span class="literal">DiscountRate</span> are supplied, <span class="literal">DiscountRate</span> takes precedence and <span class="literal">DiscountAmt </span> is recalculated by QuickBooks services based on amount of <span class="literal">DiscountRate</span>.',
                        locales: ["FR"],
                        requiredFlag: "Optional",
                    },
                    Qty: {
                        type: "Decimal",
                        description: "Number of items for the line. ",
                        requiredFlag: "Optional",
                    },
                    UnitPrice: {
                        type: "Decimal",
                        description:
                            'Unit price of the subject item as referenced by\n<span class="literal">ItemRef</span>. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item.\nIf used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations.\nIf used for a discount or tax rate, express the percentage as a fraction. For example, specify <span class="literal">0.4</span> for 40% tax.',
                        requiredFlag: "Optional",
                    },
                    TaxClassificationRef: {
                        minorVersion: 21,
                        requiredFlag: "Optional",
                        systemDefined: true,
                        readOnly: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            'Reference to the <span class="literal">TaxClassification</span>for this item. Available for companies that have <a href="https://developer.intuit.com/hub/blog/2017/12/11/using-quickbooks-online-api-automated-sales-tax" title="Automatic Sales Tax">automated sales tax</a> enabled.\n<li><span class="literal">TaxClassificationRef.Name</span>: Currently not populated.</li>\n<li><span class="literal">TaxClassificationRef.value</span>: The system-defined Tax Classification code that is applied to this line item.</li>\n</ul>\n For internal use only.',
                    },
                },
            },
            reimbursechargeline: {
                name: "reimbursechargeline",
                ShowFirst: [],
                Default: [],
                Optional: ["LinkedTxn [0..n]", "LineNum", "LineId"],
                Required: ["ReimburseLineDetail", "DetailType"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "LinkedTxn [0..n]": {
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                        type: "LinkedTxn",
                        requiredFlag: "Optional",
                        description:
                            "List of LinkedTxn objects. This will contain the Invoice linked transaction if the ReimburseCharge has been linked to an Invoice.",
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer.",
                    },
                    ReimburseLineDetail: {
                        $ref: [
                            {
                                discountlinedetail: "DiscountLineDetail",
                            },
                        ],
                        type: "ReimburseLineDetail",
                        description: "Reimburse charge details for the line.",
                        requiredFlag: "Required",
                    },
                    LineId: {
                        type: "String",
                        description: "The line Id for the line. This will be used to link it to the invoice.",
                        requiredFlag: "Optional",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description: "Set this to ReimburseLineDetail.",
                        requiredFlag: "Required",
                    },
                },
            },
            emailmessagetype: {
                name: "emailmessagetype",
                ShowFirst: [],
                Default: ["Message", "Subject"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Message: {
                        type: "string",
                        description: "The body of the email message.",
                    },
                    Subject: {
                        type: "string",
                        description: "The subject of the email.",
                    },
                },
            },
            agedreceivablestoplevel: {
                name: "profitandlossreporttoplevel",
                ShowFirst: [],
                Default: ["Header", "Rows", "Columns"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Header: {
                        description: "The report header.\n",
                        $ref: [
                            {
                                reportheader: "reportheader",
                            },
                        ],
                    },
                    Rows: {
                        description: "Top level container holding information for Aged Receivables report rows.\n",
                        $ref: [
                            {
                                agedreceivablesreportrows: "agedreceivablesreportrows",
                            },
                        ],
                    },
                    Columns: {
                        description: "Top level container holding information for report columns or subcolumns.\n",
                        $ref: [
                            {
                                reportcolumns: "reportcolumns",
                            },
                        ],
                    },
                },
            },
            taxserviceresponse: {
                name: "taxserviceresponse",
                ShowFirst: [],
                Default: [],
                Optional: ["TaxCodeId"],
                Required: ["TaxCode", "TaxRateDetails [0..n]"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    TaxCodeId: {
                        readOnly: true,
                        systemDefined: true,
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            "The id of the newly created tax code. This is generated by Data Services and returned in the response code.",
                    },
                    TaxCode: {
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        description: "Name of new tax code. For current TaxCodes, query the TaxCode resource.",
                        requiredFlag: "Required",
                    },
                    "TaxRateDetails [0..n]": {
                        $ref: [
                            {
                                taxratedetails: "TaxRateDetails",
                            },
                        ],
                        type: "TaxRateDetails",
                        requiredFlag: "Required",
                        description: "Container to hold one or more tax rate specifications.",
                    },
                },
            },
            taxservicerequest: {
                name: "taxservicerequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["TaxCode", "TaxRateDetails [0..n]"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    TaxCode: {
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                        description:
                            "Name of new tax code. To query list of currently defined tax codes, use the TaxCode endpoint.",
                        requiredFlag: "Required",
                    },
                    "TaxRateDetails [0..n]": {
                        $ref: [
                            {
                                taxratedetails: "TaxRateDetails",
                            },
                        ],
                        type: "TaxRateDetails",
                        requiredFlag: "Required",
                        description: "Container to hold one or more tax rate specifications.\n",
                    },
                },
            },
            taxratelist: {
                name: "taxratelist",
                ShowFirst: [],
                Default: [],
                Optional: ["TaxRateDetail [0..n]"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "TaxRateDetail [0..n]": {
                        $ref: [
                            {
                                taxratedetail: "TaxRateDetail",
                            },
                        ],
                        requiredFlag: "Optional",
                        description: "TaxRateDetail that specifies qualified detail of TaxRate.",
                    },
                },
            },
            discountline: {
                name: "discountline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Description", "LineNum"],
                Required: ["DiscountLineDetail", "DetailType", "Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    DiscountLineDetail: {
                        $ref: [
                            {
                                discountlinedetail: "DiscountLineDetail",
                            },
                        ],
                        type: "DiscountLineDetail",
                        description:
                            "Discount detail type for the entire transaction. This is in contrast to a discount applied to a specific line. The company preference\n<strong>Sales Form Entry | Discounts</strong> must be enabled for this type of line to be available. Must be enabled for this type of line to be available.",
                        requiredFlag: "Required",
                    },
                    Description: {
                        maxLen: "max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description: 'Set to\n<span class="literal">DiscountLineDetail</span>for this type of line.',
                        requiredFlag: "Required",
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer.",
                    },
                    Amount: {
                        maxLen: "max 15 digits in 10.5 format",
                        type: "Decimal",
                        description: "The amount of the line item.",
                        requiredFlag: "Required",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>\nIf\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.\n</li>\n<li>If no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.</li>\n</ul>\nAvailable in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            agedreceivablesreportrows: {
                name: "agedreceivablesreportrows",
                ShowFirst: [],
                Default: ["Row [0..n]"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "Row [0..n]": {
                        table: {
                            group_agedreceivablessheet: [
                                "Show possible values for group",
                                "Hide possible values for group",
                            ],
                        },
                        description:
                            'Represents a row in a report. A group of rows is enclosed in a <span class="literal">Rows</span> container. Rows may be nested either as a single row or in sets, based on the accounts represented in the report and query parameters specified in the request.\nParameters:\n<li>\n<span class="literal">type</span>\u2014As an enclosing section of sub-rows, this is always the string, <span class="literal">Section</span>. As a leaf row, this is always the string, <span class="literal">Data</span>.\n</li>\n<li><span class="literal">group</span>\u2014The group name, valid when <span class="literal">type=Section</span>. </li>\n</ul>\n',
                        $ref: [
                            {
                                reportrow: "reportrow",
                            },
                        ],
                    },
                },
            },
            categoryrequest: {
                name: "categoryrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Type", "Name"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["SubItem", "ParentRef"],
                type: "object",
                properties: {
                    SubItem: {
                        default: '<span class="literal">false</span>',
                        type: "Boolean",
                        requiredFlag: "Conditionally required",
                        description:
                            '<span class="literal">true</span>--The object is a sub-category.\n<span class="literal">false</span>--The object is a top-level category (default).\nSub-categories can be nested to a maximum depth of three levels below a top-level category. Required for sub-category.',
                    },
                    Type: {
                        type: "String",
                        description:
                            'Must be set to the literal string, <span class="literal">Category</span>\nAvailable when endpoint is envoked with the <span class="literal">minorversion=4</span> query paramter. Without <span class="literal">minorversion=4</span>, the type is set to <span class="literal">Service</span>.',
                        requiredFlag: "Required",
                    },
                    Name: {
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        description: "Name of the category.",
                        requiredFlag: "Required",
                    },
                    ParentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Conditionally required",
                        description:
                            'The immediate parent of the sub item in the hierarchical Category:Sub-category list. If SubItem is true, then ParenRef is required. Query the Item name list resource to determine the appropriate object for this reference. Use <span class="literal">Item.Id</span> and <span class="literal">Item.Name</span> from that object for <span class="literal">ParentRef.value</span> and <span class="literal">ParentRef.name</span>, respectively. ',
                    },
                },
            },
            groupline: {
                name: "groupline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["LineNum", "Description"],
                Required: ["GroupLineDetail", "DetailType"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer",
                    },
                    GroupLineDetail: {
                        type: "GroupLineDetail",
                        requiredFlag: "Required",
                        $ref: [
                            {
                                grouplinedetail: "GroupLineDetail",
                            },
                        ],
                    },
                    Description: {
                        maxLen: "Max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description: 'Set to\n<span class="literal">GroupLineDetail</span>for this type of line.',
                        requiredFlag: "Required",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>If\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.</li>\n<li>If no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            transferrequest: {
                name: "transferrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Amount", "ToAccountRef", "FromAccountRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Amount: {
                        type: "Decimal",
                        description: "Indicates the total amount of the transaction.",
                        requiredFlag: "Required",
                    },
                    ToAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Identifies the asset account to which funds are transfered. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">ToAccountRef.value</span> and <span class="literal">ToAccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.Classification</span> set to <span class="literal">Asset</span>.\n',
                    },
                    FromAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Identifies the asset account from which funds are transfered. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">FromAccountRef.value</span> and <span class="literal">FromAccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.Classification</span> set to <span class="literal">Asset</span>.\n',
                    },
                },
            },
            accountinginfoprefs: {
                name: "accountinginfoprefs",
                ShowFirst: [],
                Default: [
                    "FirstMonthOfFiscalYear",
                    "UseAccountNumbers",
                    "TaxYearMonth",
                    "ClassTrackingPerTxn",
                    "TrackDepartments",
                    "TaxForm",
                    "CustomerTerminology",
                    "BookCloseDate",
                    "DepartmentTerminology",
                    "ClassTrackingPerTxnLine",
                ],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    FirstMonthOfFiscalYear: {
                        default: '<span class="literal"> January </span>',
                        readOnly: true,
                        type: "MonthEnum",
                        minorVersion: 21,
                        description:
                            'This setting corresponds to the <strong>First month of fiscal year</strong> preference in the QuickBooks Online Company Settings to specify the beginning of the company\'s fiscal year. Specify months as fulling spelled out: <span class="literal">January</span>, <span class="literal">February</span>, and so on.',
                    },
                    UseAccountNumbers: {
                        default: '<span class="literal"> off </span>',
                        readOnly: true,
                        type: "Boolean",
                        minorVersion: 21,
                        description:
                            'This setting corresponds to <strong>Enable account numbers</strong> in QuickBooks Online Company Settings.<ul><li>If set to <span class="literal">On</span>, account names are displayed with their corresponding account numbers in chart of accounts.</li><li>If set to <span class="literal">off</span>, account numbers are not displayed with account names in chart of accounts.</li></ul>',
                    },
                    TaxYearMonth: {
                        default: 'same month as <span class="literal"> FirstMonthOfFiscalYear </span>',
                        readOnly: true,
                        type: "String",
                        minorVersion: 21,
                        description:
                            'This setting corresponds to the <strong>First month of income tax year</strong> preference in the QuickBooks Online Company Settings to specify the beginning of the company\'s fiscal year. Specify months as fulling spelled out: <span class="literal">January</span>, <span class="literal">February</span>, and so on.',
                    },
                    ClassTrackingPerTxn: {
                        type: "Boolean",
                        description:
                            'This setting correspond to how classes are assigned when <strong>Track classes</strong> in QuickBooks Online Company Settings under Categories is set to <strong>On</strong>. If set to <span class="literal">true</span>, assign classes at the transaction level. Only one of <span class="literal">ClassTrackingPerTxnLine</span> or <span class="literal">ClassTrackingPerTxn</span> can be set to <span class="literal">true</span> at a given time. If <strong>Track classes</strong> is set to <strong>Off</strong> in company settings, both are set to <span class="literal">false</span>.',
                    },
                    TrackDepartments: {
                        type: "Boolean",
                        description:
                            'This setting corresponds to the <strong>Track locations</strong> preference in QuickBooks Online Company Settings under Categories. If <strong>Track locations</strong> is set to <strong>On</strong>, this attribute is returned as <span class="literal">true</span> in the response. Otherwise, <span class="literal">false</span> is returned.',
                    },
                    TaxForm: {
                        readOnly: true,
                        type: "String",
                        minorVersion: 21,
                        description:
                            "This setting corresponds to the <strong>Tax form</strong> preference in the QuickBooks Online Company Settings to specify the tax form your company files.",
                    },
                    CustomerTerminology: {
                        type: "String",
                        description:
                            'This setting corresponds to the <strong>Customer label</strong> preference in QuickBooks Online Company Settings and specifies the term used by the company for customers. This string is used in many places throughout the QuickBooks UI having to do with sales-side activities. Possible values include: <span class="literal">Clients</span>, <span class="literal">Customers</span>, <span class="literal">Donors</span>, <span class="literal">Guests</span>, <span class="literal">Members</span>, <span class="literal">Patients</span>, <span class="literal">Tenants</span>.  ',
                    },
                    BookCloseDate: {
                        readOnly: true,
                        type: "Date",
                        minorVersion: 21,
                        description:
                            "This setting corresponds to the <strong>Closing date</strong> preference in the QuickBooks Online Company Settings and specifies the date the books are closed: income and expense accounts are closed and net profit or loss is rolled up into the retained earnings account. Transactions before this date are protected from changes.",
                    },
                    DepartmentTerminology: {
                        type: "String",
                        description:
                            'Specifies the term used by the company for department. This string is used as a label on transaction forms. Possible values include: <span class="literal">Business</span>, <span class="literal">Department</span>, <span class="literal">Division</span>, <span class="literal">Location</span>, <span class="literal">Property</span>, <span class="literal">Store</span>, <span class="literal">Territory</span>. This is returned only if the company\'s <strong>Track location</strong> preference is enabled. See TrackDepartments for more details.   ',
                    },
                    ClassTrackingPerTxnLine: {
                        type: "Boolean",
                        description:
                            'This setting correspond to how classes are assigned when <strong>Track classes</strong> in QuickBooks Online Company Settings under Categories is set to <strong>On</strong>. If set to <span class="literal">true</span>, assign classes at the line level. Only one of <span class="literal">ClassTrackingPerTxnLine</span> or <span class="literal">ClassTrackingPerTxn</span> can be set to <span class="literal">true</span> at a given time. If <strong>Track classes</strong> is set to <strong>Off</strong> in company settings, both are set to <span class="literal">false</span>.',
                    },
                },
            },
            customerresponse: {
                name: "customerresponse",
                ShowFirst: ["Id"],
                Default: ["FullyQualifiedName", "Level", "TaxExemptionReasonId"],
                Optional: [
                    "PrimaryEmailAddr",
                    "ResaleNum",
                    "SecondaryTaxIdentifier",
                    "ARAccountRef",
                    "DefaultTaxCodeRef",
                    "PreferredDeliveryMethod",
                    "GSTIN",
                    "SalesTermRef",
                    "CustomerTypeRef",
                    "Fax",
                    "BusinessNumber",
                    "BillWithParent",
                    "CurrencyRef",
                    "Mobile",
                    "Job",
                    "BalanceWithJobs",
                    "PrimaryPhone",
                    "OpenBalanceDate",
                    "Taxable",
                    "AlternatePhone",
                    "MetaData",
                    "ParentRef",
                    "Notes",
                    "WebAddr",
                    "Active",
                    "CompanyName",
                    "Balance",
                    "ShipAddr",
                    "PaymentMethodRef",
                    "IsProject",
                    "Source",
                    "PrimaryTaxIdentifier",
                    "GSTRegistrationType",
                    "PrintOnCheckName",
                    "BillAddr",
                ],
                Required: [],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["DisplayName", "Title", "GivenName", "MiddleName", "Suffix", "FamilyName"],
                type: "object",
                properties: {
                    PrimaryEmailAddr: {
                        filterable: true,
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        requiredFlag: "Optional",
                        description: "Primary email address. ",
                    },
                    DisplayName: {
                        sortable: true,
                        description:
                            'The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects. Cannot be removed with sparse update.\nIf not supplied, the system generates <span class="literal">DisplayName</span> by concatenating customer name components supplied in the request from the following list: <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, and <span class="literal">Suffix</span>.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum of 500 chars",
                        type: "String",
                    },
                    Title: {
                        maxLen: "maximum of 16 chars",
                        type: "String",
                        requiredFlag: "Conditionally required",
                        description:
                            'Title of the person. This tag supports i18n, all locales. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required.',
                    },
                    ResaleNum: {
                        maxLen: "16 chars",
                        type: "String",
                        description: "Resale number or some additional info about the customer.",
                        requiredFlag: "Optional",
                    },
                    SecondaryTaxIdentifier: {
                        locales: ["IN", "GB"],
                        type: "String",
                        description:
                            'Also called UTR No. in ( UK ) , CST Reg No. ( IN ) also represents the tax registration number of the Person or Organization. This value is masked in responses, exposing only last five characters. For example, the ID of <span class="literal">123-45-6789</span> is returned as <span class="literal">XXXXXX56789</span>.',
                        minorVersion: 3,
                        requiredFlag: "Optional",
                    },
                    ARAccountRef: {
                        minorVersion: 3,
                        description:
                            'Identifies the accounts receivable account to be used for this customer. Each customer must have his own AR account. Applicable for France companies, only. Available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter.\nQuery the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType=Accounts Receivable</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">ARAccountRef.value</span> and <span class="literal">ARAccountRef.name</span>, respectively. ',
                        requiredFlag: "Optional",
                        type: "ReferenceType",
                        locales: ["FR"],
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    DefaultTaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a default tax code associated with this Customer object. Reference is valid if <span class="literal">Customer.Taxable</span> is set to true; otherwise, it is ignored.\nIf automated sales tax is enabled (<span class="literal">Preferences.TaxPrefs.PartnerTaxEnabled</span> is set to <span class="literal">true</span>) the default tax code is set by the system and can not be overridden.\nQuery the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">DefaultTaxCodeRef.value</span> and <span class="literal">DefaultTaxCodeRef.name</span>, respectively. ',
                    },
                    PreferredDeliveryMethod: {
                        type: "String",
                        description: "Preferred delivery method. Values are Print, Email, or None.",
                        requiredFlag: "Optional",
                    },
                    GSTIN: {
                        minorVersion: 33,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 15 chars",
                        type: "String",
                        locales: ["IN"],
                        description: "GSTIN is an identification number assigned to every GST registered business.",
                    },
                    GivenName: {
                        sortable: true,
                        description:
                            'Given name or first name of a person. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    SalesTermRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a SalesTerm associated with this Customer object. Query the Term name list resource to determine the appropriate Term object for this reference. Use <span class="literal">Term.Id</span> and <span class="literal">Term.Name</span> from that object for <span class="literal">SalesTermRef.value</span> and <span class="literal">SalesTermRef.name</span>, respectively. ',
                    },
                    CustomerTypeRef: {
                        $ref: [
                            {
                                customertyperef: "CustomerTypeRef",
                            },
                        ],
                        type: "String",
                        description:
                            "Reference to the customer type assigned to a customer. This field is only returned if the customer is assigned a customer type.",
                        requiredFlag: "Optional",
                    },
                    FullyQualifiedName: {
                        sortable: true,
                        description:
                            'Fully qualified name of the object. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of\n<span class="literal">Customer:Job:Sub-job</span>. System generated. Limited to 5 levels.',
                        filterable: true,
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    Fax: {
                        maxLen: "maximum of 30 chars",
                        $ref: [
                            {
                                telephonenumber30: "TelephoneNumber30",
                            },
                        ],
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                        description: "Fax number. ",
                    },
                    BusinessNumber: {
                        minorVersion: 33,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 10 chars",
                        type: "String",
                        locales: ["IN"],
                        description:
                            "Also called, PAN (in India) is a code that acts as an identification for individuals, families and corporates, especially for those who pay taxes on their income.",
                    },
                    BillWithParent: {
                        default: "false",
                        type: "Boolean",
                        description:
                            "If true, this Customer object is billed with its parent. If false, or null the customer is not to be billed with its parent. This attribute is valid only if this entity is a Job or sub Customer.",
                        requiredFlag: "Optional",
                    },
                    CurrencyRef: {
                        description:
                            'Reference to the currency in which all amounts associated with this customer are expressed. Once set, it cannot be changed.\nIf specified currency is not currently in the company\'s currency list, it is added.\nIf not specified, currency for this customer is the home currency of the company, as defined by <span class="literal">Preferences.CurrencyPrefs.HomeCurrency</span>. [[\n<strong>String</strong>\nPreferred delivery method. Values are Print, Email, or None.\n<strong>String</strong>, 16 chars\nResale number or some additional info about the customer.\n<strong>ReferenceType</strong>\nIdentifies the accounts receivable account to be used for this customer. Each customer must have his own AR account. Applicable for France companies, only. Available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter.\nQuery the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType=Accounts Receivable</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">ARAccountRef.value</span> and <span class="literal">ARAccountRef.name</span>, respectively. Read-only after object is created ',
                        requiredFlag: "Optional",
                        maxLen: "16 chars",
                        readOnly: true,
                        type: "CurrencyRef",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Mobile: {
                        maxLen: "maximum of 30 chars",
                        $ref: [
                            {
                                telephonenumber30: "TelephoneNumber30",
                            },
                        ],
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                        description: "Mobile phone number. ",
                    },
                    Job: {
                        default: "false or null",
                        type: "Boolean",
                        description:
                            "If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.",
                        requiredFlag: "Optional",
                    },
                    BalanceWithJobs: {
                        type: "Decimal",
                        sortable: true,
                        requiredFlag: "Optional",
                        description:
                            "Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.",
                    },
                    PrimaryPhone: {
                        maxLen: "maximum of 30 chars",
                        $ref: [
                            {
                                telephonenumber30: "TelephoneNumber30",
                            },
                        ],
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                        description: "Primary phone number. ",
                    },
                    OpenBalanceDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        description: "Date of the Open Balance for the create operation. Write-on-create.",
                        requiredFlag: "Optional",
                    },
                    Taxable: {
                        type: "Boolean",
                        description:
                            'If true, transactions for this customer are taxable.\nDefault behavior with minor version 10 and above: true, if <span class="literal">DefaultTaxCodeRef</span> is defined or false if <span class="literal">TaxExemptionReasonId</span> is set.',
                        requiredFlag: "Optional",
                    },
                    AlternatePhone: {
                        maxLen: "maximum of 30 chars",
                        $ref: [
                            {
                                telephonenumber30: "TelephoneNumber30",
                            },
                        ],
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                        description: "Alternate phone number. ",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    ParentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Customer object that is the immediate parent of the Sub-Customer/Job in the hierarchical Customer:Job list.\nRequired for the create operation if this object is a sub-customer or Job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">ParentRef.value</span> and <span class="literal">ParentRef.name</span>, respectively. ',
                    },
                    Level: {
                        default: "0",
                        readOnly: true,
                        type: "Integer",
                        description:
                            'Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be level with respect to the parent.\n\n<span style="color:#800080;">Constraints:</span>up to 5 levels',
                        systemDefined: true,
                    },
                    MiddleName: {
                        sortable: true,
                        description:
                            'Middle name of the person. The person can have zero or more middle names. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    Notes: {
                        maxLen: "maximum of 2000 chars",
                        type: "String",
                        description: "Free form text describing the Customer.",
                        requiredFlag: "Optional",
                    },
                    TaxExemptionReasonId: {
                        type: "Numeric Id",
                        minorVersion: 10,
                        description:
                            'The tax exemption reason associated with this customer object. Applicable if automated sales tax is enabled (<span class="literal">Preferences.TaxPrefs.PartnerTaxEnabled</span> is set to <span class="literal">true</span>) for the company. Set  <span class="literal">TaxExemptionReasonId:</span> to one of the following:\n<table>\n<thead>\n<tr>\n<th>Id</th>\n<th>Reason</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Federal government</td>\n</tr>\n<tr>\n<td>2</td>\n<td>State government</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Local government</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Tribal government</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Charitable organization</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Religious organization</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Educational organization</td>\n</tr>\n<tr>\n<td>8</td>\n<td>Hospital</td>\n</tr>\n<tr>\n<td>9</td>\n<td>Resale</td>\n</tr>\n<tr>\n<td>10</td>\n<td>Direct pay permit</td>\n</tr>\n<tr>\n<td>11</td>\n<td>Multiple points of use</td>\n</tr>\n<tr>\n<td>12</td>\n<td>Direct mail</td>\n</tr>\n<tr>\n<td>13</td>\n<td>Agricultural production</td>\n</tr>\n<tr>\n<td>14</td>\n<td>Industrial production / manufacturing</td>\n</tr>\n<tr>\n<td>15</td>\n<td>Foreign diplomat</td>\n</tr>\n</tbody>\n</table>',
                    },
                    WebAddr: {
                        maxLen: "maximum of 1000 chars",
                        $ref: [
                            {
                                websiteaddress: "WebsiteAddress",
                            },
                        ],
                        type: "WebSiteAddress",
                        requiredFlag: "Optional",
                        description: "Website address. ",
                    },
                    Active: {
                        sortable: true,
                        description:
                            'If true, this entity is currently enabled for use by QuickBooks. \nIf there is an amount in <span class="literal">Customer.Balance</span> when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount.',
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "true",
                        type: "Boolean",
                    },
                    CompanyName: {
                        sortable: true,
                        description: "The name of the company associated with the person or organization.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    Balance: {
                        filterable: true,
                        type: "Decimal",
                        sortable: true,
                        requiredFlag: "Optional",
                        description:
                            "Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create.",
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    ShipAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Default shipping address. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    PaymentMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a PaymentMethod associated with this Customer object. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. Use <span class="literal">PaymentMethod.Id</span> and <span class="literal">PaymentMethod.Name</span> from that object for <span class="literal">PaymentMethodRef.value</span> and <span class="literal">PaymentMethodRef.name</span>, respectively. ',
                    },
                    Suffix: {
                        sortable: false,
                        description:
                            'Suffix of the name. For example, <span class="literal">Jr</span>. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required.',
                        filterable: false,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum of 16 chars",
                        type: "String",
                    },
                    IsProject: {
                        description: "If true, indicates this is a Project.",
                        default: "False or null",
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "Boolean",
                        minorVersion: 25,
                    },
                    Source: {
                        requiredFlag: "Optional",
                        type: "String",
                        minorVersion: 59,
                        description:
                            'The Source type of the transactions created by QuickBooks Commerce. Valid values include: <span class="literal">QBCommerce</span>',
                    },
                    FamilyName: {
                        sortable: true,
                        description:
                            'Family name or the last name of the person. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    PrimaryTaxIdentifier: {
                        locales: ["IN", "CA", "GB", "AU"],
                        type: "String",
                        description:
                            'Also called Tax Reg. No in ( UK ) , ( CA ) , ( IN ) , ( AU ) represents the tax ID of the Person or Organization. This value is masked in responses, exposing only last five characters. For example, the ID of <span class="literal">123-45-6789</span> is returned as <span class="literal">XXXXXX56789</span>.',
                        minorVersion: 4,
                        requiredFlag: "Optional",
                    },
                    GSTRegistrationType: {
                        minorVersion: 33,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 15 chars",
                        type: "String",
                        locales: ["IN"],
                        description:
                            'For the filing of GSTR, transactions need to be classified depending on the type of customer to whom the sale is done. To facilitate this, we have introduced a new field as \'GST registration type\'. Possible values are listed below:\n<li><span class="literal">GST_REG_REG</span> GST registered- Regular. Customer who has a business which is registered under GST and has a GSTIN (doesn\u2019t include customers registered under composition scheme, as an SEZ or as EOU\'s, STP\'s EHTP\'s etc.).</li>\n<li><span class="literal">GST_REG_COMP</span> GST registered-Composition. Customer who has a business which is registered under the composition scheme of GST and has a GSTIN.</li>\n<li><span class="literal">GST_UNREG</span> GST unregistered. Customer who has a business which is not registered under GST and does not have a GSTIN.</li>\n<li><span class="literal">CONSUMER</span> Consumer. Customer who is not registered under GST and is the final consumer of the service or product sold.</li>\n<li><span class="literal">OVERSEAS</span> Overseas. Customer who has a business which is located out of India.</li>\n<li><span class="literal">SEZ</span> SEZ. Customer who has a business which is registered under GST, has a GSTIN and is located in a SEZ or is a SEZ Developer.</li>\n<li><span class="literal">DEEMED</span> Deemed exports- EOU\'s, STP\'s EHTP\'s etc. Customer who has a business which is registered under GST and falls in the category of companies (EOU\'s, STP\'s EHTP\'s etc.), to which supplies are made they are termed as deemed exports.</li>',
                    },
                    PrintOnCheckName: {
                        sortable: true,
                        description:
                            'Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName.\n\n<span style="color:#800080;">Constraints:</span> Cannot be removed with sparse update.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 110 chars",
                        type: "String",
                    },
                    BillAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Default billing address. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            recurringscheduleinfo: {
                name: "recurringscheduleinfo",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "DayOfWeek",
                    "StartDate",
                    "MaxOccurrences",
                    "RemindDays",
                    "IntervalType",
                    "WeekOfMonth",
                    "MonthOfYear",
                    "DaysBefore",
                    "NextDate",
                    "NumInterval",
                    "EndDate",
                    "PreviousDate",
                    "DayOfMonth",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    DayOfWeek: {
                        type: "String",
                        description: "The day of the week.",
                        requiredFlag: "Optional",
                    },
                    StartDate: {
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Optional",
                        description: "The start date for the recurring schedule",
                    },
                    MaxOccurrences: {
                        type: "String",
                        description: "The max number of recurring occurrences.",
                        requiredFlag: "Optional",
                    },
                    RemindDays: {
                        type: "String",
                        description: "The days before start date for a reminded RecurType.",
                        requiredFlag: "Optional",
                    },
                    IntervalType: {
                        type: "String",
                        description:
                            'Specifies the interval type. Values for <span class="literal">IntervalType</span>can be one of the following:<li><span class="literal">Yearly</span>\u2014 The allowed properties for yearly interval type are : <br/><ul><li>ScheduleInfo.StartDate</li><li>ScheduleInfo.EndDate or ScheduleInfo.MaxOccurrences</li><li>ScheduleInfo.DaysBefore (or ScheduleInfo.RemindDays for Reminded RecurType) </li><li>ScheduleInfo.MonthOfYear</li><li>ScheduleInfo.DayOfMonth</li></ul></li><li><span class="literal">Monthly</span>\u2014 The allowed properties for monthly interval type are : <br/><ul><li>ScheduleInfo.NumInterval</li><li>ScheduleInfo.StartDate</li><li>ScheduleInfo.EndDate or ScheduleInfo.MaxOccurrences</li><li>ScheduleInfo.DaysBefore (or ScheduleInfo.RemindDays for Reminded RecurType)</li><li>(ScheduleInfo.DayOfWeek and ScheduleInfo.WeekOfMonth) or ScheduleInfo.DayOfMonth</li></ul></li><li><span class="literal">Weekly</span>\u2014 The allowed properties for weekly interval type are : <br/><ul><li>ScheduleInfo.NumInterval</li><li>ScheduleInfo.StartDate</li><li>ScheduleInfo.EndDate or ScheduleInfo.MaxOccurrence</li><li>ScheduleInfo.DaysBefore(or ScheduleInfo.RemindDays for Reminded RecurType)</li><li>ScheduleInfo.DayOfWeek</li></ul></li><li>\n<span class="literal">Daily</span>\u2014 The allowed properties for daily interval type are : <br/><ul><li>ScheduleInfo.NumInterval</li><li>ScheduleInfo.StartDate</li><li>ScheduleInfo.EndDate or ScheduleInfo.MaxOccurrences </li><li>ScheduleInfo.DaysBefore (or ScheduleInfo.RemindDays</span> for Reminded RecurType)</li></ul></li></ul>',
                        requiredFlag: "Optional",
                    },
                    WeekOfMonth: {
                        type: "String",
                        description: "The week of the month.",
                        requiredFlag: "Optional",
                    },
                    MonthOfYear: {
                        type: "String",
                        description: "The month of the year.",
                        requiredFlag: "Optional",
                    },
                    DaysBefore: {
                        type: "String",
                        description: "The days before the scheduled date.",
                        requiredFlag: "Optional",
                    },
                    NextDate: {
                        readOnly: true,
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Optional",
                        description: "The date when the next transaction is created.",
                    },
                    NumInterval: {
                        type: "String",
                        description: "The interval based on the interval type.",
                        requiredFlag: "Optional",
                    },
                    EndDate: {
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Optional",
                        description: "The end date for the recurring schedule.",
                    },
                    PreviousDate: {
                        readOnly: true,
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Optional",
                        description: "The date when the last transaction is created.",
                    },
                    DayOfMonth: {
                        type: "String",
                        description: "The day of the month.",
                        requiredFlag: "Optional",
                    },
                },
            },
            batchresponse: {
                name: "batchresponse",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["BatchItemResponse"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    BatchItemResponse: {
                        $ref: [
                            {
                                batchitemresponse: "BatchItemResponse",
                            },
                        ],
                        type: "batchitemresponse",
                        requiredFlag: "Required",
                        description: "A wrapper around all response objects for this batch operation.",
                    },
                },
            },
            customfieldboolsales: {
                name: "customfieldboolsales",
                ShowFirst: [],
                Default: ["BooleanValue", "Type", "Name"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    BooleanValue: {
                        type: "Boolean",
                        description:
                            'Used to enable the custom field. Set to <span class="literal">True</span> to enable the field. Once enabled, it is available on sales forms in the QuickBOoks UI and available for QuickBooks services.',
                    },
                    Type: {
                        type: "CustomFieldTypeEnum",
                        description:
                            'Value is <span class="literal">BooleanType</span>. Denotes this is a custom field enabling object.\n',
                        systemDefined: true,
                    },
                    Name: {
                        readOnly: true,
                        type: "String",
                        description:
                            'The internal name of an enabled custom field. <span class="literal">Name</span> takes the form <span class="literal">SalesFormsPrefs.SalesCustomNameN</span>, where N is <span class="literal">1</span>, <span class="literal">2</span>, or <span class="literal">3</span> for up to three available custom fields.',
                    },
                },
            },
            taxprefs: {
                name: "taxprefs",
                ShowFirst: [],
                Default: ["PartnerTaxEnabled", "TaxGroupCodeRef", "UsingSalesTax"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    PartnerTaxEnabled: {
                        readOnly: true,
                        type: "Boolean",
                        description:
                            'Partner tax refers to the automated sales tax engine that provides sales tax compliance. All QuickBooks Online companies created after November 10, 2017 are enabled by default.<ul><li>If <span class="literal">true</span>, automated sales tax is enabled for the company and sales tax is set up (<span class="literal">UsingSalesTax</span> is set to <span class="literal">true</span>).</li><li>If <span class="literal">false</span>, automated sales tax is enabled for the company but the company doesn\'t have sales tax set up (<span class="literal">UsingSalesTax</span> is set to <span class="literal">false</span>).</li><li>If not present in response payload, the company is not enabled for automated sales tax.</li></ul>',
                    },
                    TaxGroupCodeRef: {
                        readOnly: true,
                        type: "String",
                        description: "Reference to the TaxCode.Id for tax code group to use.",
                    },
                    UsingSalesTax: {
                        readOnly: true,
                        type: "Boolean",
                        description: "Sales tax enabled",
                    },
                },
            },
            creditmemorequest: {
                name: "creditmemorequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Line", "CustomerRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    Line: {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                            {
                                groupline: "GroupLine",
                            },
                        ],
                        requiredFlag: "Required",
                        description:
                            "The minimum line item required for the request is one of the following.\nSales item line type\nGroup item line type\n",
                    },
                    CustomerRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively.\n',
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                },
            },
            servicetypeenum: {
                name: "servicetypeenum",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {},
            },
            currencyprefs: {
                name: "currencyprefs",
                ShowFirst: [],
                Default: ["HomeCurrency", "MultiCurrencyEnabled"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    HomeCurrency: {
                        readOnly: true,
                        type: "ReferenceType",
                        description: "Currency code of the country where the business is physically located.",
                    },
                    MultiCurrencyEnabled: {
                        readOnly: true,
                        type: "Boolean",
                        description:
                            "Multicurrency enabled for this company. Not available with QuickBooks Simple Start.",
                    },
                },
            },
            salesitemline: {
                name: "salesitemline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Description", "LineNum"],
                Required: ["DetailType", "SalesItemLineDetail", "Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Description: {
                        maxLen: "Max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description: 'Set to <span class="literal">SalesItemLineDetail</span>for this type of line.',
                        requiredFlag: "Required",
                    },
                    SalesItemLineDetail: {
                        type: "SalesItemLineDetail",
                        requiredFlag: "Required",
                        $ref: [
                            {
                                salesitemlinedetail: "SalesItemLineDetail",
                            },
                        ],
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer",
                    },
                    Amount: {
                        maxLen: "Max 15 digits in 10.5 format",
                        type: "Decimal",
                        description:
                            'The amount of the line item.\n For Invoice objects in global locales: when updating <span class="literal">Amount</span>, remove the <span class="literal">TxnTaxDetail</span> element in the object before submitting it in the update request payload.',
                        requiredFlag: "Required",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>If\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.</li>\n<li>If no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            transactionlistbyvendorquery: {
                name: "transactionlistquery ",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "date_macro",
                    "payment_method",
                    "duedate_macro",
                    "arpaid",
                    "bothamount",
                    "transaction_type",
                    "docnum",
                    "start_moddate",
                    "source_account_type",
                    "group_by",
                    "start_date",
                    "department",
                    "start_duedate",
                    "columns",
                    "end_duedate",
                    "vendor",
                    "end_date",
                    "memo",
                    "appaid",
                    "moddate_macro",
                    "printed",
                    "createdate_macro",
                    "cleared",
                    "qzurl",
                    "term",
                    "end_createdate",
                    "name",
                    "sort_by",
                    "sort_order",
                    "start_createdate",
                    "end_moddate",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    payment_method: {
                        default: "Include all payment methods",
                        type: "String",
                        description:
                            'Filters report contents based on payment method.<br />Supported Values: <span class="literal">Cash</span>, <span class="literal">Check</span>, <span class="literal">Dinners Club</span>, <span class="literal">American Express</span>, <span class="literal">Discover</span>, <span class="literal">MasterCard</span>, <span class="literal">Visa</span>',
                        requiredFlag: "Optional",
                    },
                    duedate_macro: {
                        default: "All dates",
                        type: "String",
                        description:
                            "Predefined date range of due dates for balances to include in the report; otherwise, use the start_duedate and end_duedate to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year",
                        requiredFlag: "Optional",
                    },
                    arpaid: {
                        default: '<span class="literal">All</span>',
                        type: "String",
                        description:
                            'Supported Values:<span class="literal">All</span>, <span class="literal">Paid</span>, <span class="literal">Unpaid</span>',
                        requiredFlag: "Optional",
                    },
                    bothamount: {
                        default: "Include data for all amounts",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified transaction amount. For example, <span class="literal">bothamount=1233.45</span> limits report  contents to transactions of amount 1233.45.',
                        requiredFlag: "Optional",
                    },
                    transaction_type: {
                        default: "Return data for all transactions",
                        type: "String",
                        description:
                            "Filters report contents based transaction type. Supported values include:<br />CreditCardCharge, Check, Invoice, ReceivePayment, JournalEntry, Bill, CreditCardCredit, VendorCredit, Credit, BillPaymentCheck, BillPaymentCreditCard, Charge, Transfer, Deposit, Statement, BillableCharge, TimeActivity, CashPurchase, SalesReceipt, CreditMemo, CreditRefund, Estimate, InventoryQuantityAdjustment, PurchaseOrder, GlobalTaxPayment, GlobalTaxAdjustment, Service Tax Refund, Service Tax Gross Adjustment, Service Tax Reversal, Service Tax Defer, Service Tax Partial Utilisation",
                        requiredFlag: "Optional",
                    },
                    docnum: {
                        default: "Include data for all docnums.",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified transaction number, as found in the <span class="literal">docnum</span> parameter of the transaction object.',
                        requiredFlag: "Optional",
                    },
                    start_moddate: {
                        default: '<span class="literal">moddate_macro</span>',
                        type: "String",
                        description:
                            '(Account List Detail) Specify an explicit account modification report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use the <span class="literal">moddate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                    source_account_type: {
                        default: '<span class="literal">All account types</span>',
                        table: {
                            account_types: [
                                "Show supported account types and values",
                                "Hide supported account types and values",
                            ],
                        },
                        type: "String",
                        description:
                            "Account type from which transactions are included in the report.<br />Supported Values: <span >AccountsPayable</span>, <span >AccountsReceivable</span>, <span >Bank</span>, <span >CostOfGoodsSold</span>, <span >CreditCard</span>, <span >Equity</span>, <span >Expense</span>, <span >FixedAsset</span>, <span >Income</span>, <span >LongTermLiability</span>, <span >NonPosting</span>, <span >OtherAsset</span>, <span >OtherCurrentAsset</span>, <span >OtherCurrentLiability</span>, <span >OtherExpense</span>, <span>OtherIncome</span>",
                        requiredFlag: "Optional",
                    },
                    group_by: {
                        type: "String",
                        description:
                            "The field in the transaction by which to group results. Supported Values: Name, Account, Transaction Type, Customer, Vendor, Employee, Location, Payment Method, Day, Week, Month, Quarter, Year, None",
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    start_duedate: {
                        default: "Return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    columns: {
                        default: "columns denoted with *",
                        table: {
                            columns_tax: [
                                "Show additional values supported based on multicurrency settings for the company.",
                                "Hide additional values supported based on multicurrency settings for the company.",
                            ],
                        },
                        type: "String",
                        description:
                            'Column types to be shown in the report.<br />Supported Values: account_name*, create_by, create_date, cust_msg, due_date, doc_num*, inv_date, is_ap_paid, is_cleared, is_no_post*, last_mod_by, memo*, name*, other_account*, pmt_mthd, printed, sales_cust1, sales_cust2, sales_cust3, term_name, tracking_num, tx_date*, txn_type*, term_name <br /> Additional columns when location tracking enabled: dept_name* <br /> Additional columns with location tracking enabled: dept_name* <br /> Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>.',
                        requiredFlag: "Optional",
                    },
                    end_duedate: {
                        default: "Return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "Return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.<br />Supported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    memo: {
                        default: "Include all memos",
                        type: "String",
                        description:
                            "Filters report contents to include information for specified memo.<br />Supported Values: One or more comma separated memo IDs.",
                        requiredFlag: "Optional",
                    },
                    appaid: {
                        default: '<span class="literal">All</span>',
                        type: "String",
                        description:
                            'Status of the balance.<br />Supported Values: <span class="literal">Paid</span>, <span class="literal">Unpaid</span>, <span class="literal">All</span>',
                        requiredFlag: "Optional",
                    },
                    moddate_macro: {
                        default: "All dates",
                        type: "String",
                        description:
                            "Predefined report account modification date range. Use if you want the report to cover a standard report date range when accounts were modified; otherwise, use the start_moddate and end_moddate to cover an explicit report date range. <br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year",
                        requiredFlag: "Optional",
                    },
                    printed: {
                        default: '<span class="literal">All</span>',
                        type: "String",
                        description:
                            'Filters report contents based on whether checks are printed or not.<br />Supported Values: <span class="literal">Printed</span>, <span class="literal">To_be_printed</span>',
                        requiredFlag: "Optional",
                    },
                    createdate_macro: {
                        default: "All dates",
                        type: "String",
                        description:
                            'Predefined report account create date range. Use if you want the report to cover a standard create report date range; otherwise, use <span class="literal">start_createdate</span> and <span class="literal">end_createdate</span> to cover an explicit report date range. <br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    cleared: {
                        default: "Include data for all check statuses",
                        type: "String",
                        description:
                            "Filters report contents to include information for specified check status.<br />Supported Values: Cleared, Uncleared, Reconciled, Deposited",
                        requiredFlag: "Optional",
                    },
                    qzurl: {
                        default: '<span class="literal">false</span>',
                        type: "String",
                        description:
                            'Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data.<br />Supported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        requiredFlag: "Optional",
                    },
                    term: {
                        default: "Return data for all terms",
                        type: "String",
                        description:
                            'Filters report contents based on term or terms supplied.<br />Supported Values: One or more comma separated term IDs as returned in the attribute, <span class="literal">Term.Id</span> of the Term object response code.',
                        requiredFlag: "Optional",
                    },
                    end_createdate: {
                        default: '<span class="literal">createdate_macro</span> ',
                        type: "String",
                        description:
                            'Specify an explicit account create report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">createdate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                    name: {
                        default: "Include data from all customer, vendor, and employee objects",
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Filters report contents based on the specified comma separated list of ids for the name list customer, vendor, or employee objects.<br />Query the Customer, Vendor, or Employee name list resource to determine the list of objects for this reference. Specify values found in <span class="literal">Customer.Id</span>, <span class="literal">Vendor.Id</span>, and <span class="literal">Employee.Id</span>. For example, <span class="literal">name=1,4,7</span> includes data in the report for  namelist ids 1, 4, and 7. vendor and employee objects',
                    },
                    sort_by: {
                        default: '<span class="literal">txn_type</span>',
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    start_createdate: {
                        default: '<span class="literal">createdate_macro</span> ',
                        type: "String",
                        description:
                            'Specify an explicit account create report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">createdate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                    end_moddate: {
                        default: '<span class="literal">moddate_macro</span>',
                        type: "String",
                        description:
                            '(Account List Detail) Specify an explicit account modification report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use the <span class="literal">moddate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                },
            },
            taxlinedetail: {
                name: "taxlinedetail",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "NetAmountTaxable",
                    "PercentBased",
                    "TaxInclusiveAmount",
                    "OverrideDeltaAmount",
                    "TaxPercent",
                ],
                Required: ["TaxRateRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    NetAmountTaxable: {
                        type: "Decimal",
                        description:
                            'This is the taxable amount on the total of the applicable tax rates. If TaxRate is applicable on two lines, this attribute represents the total of the two lines for which this rate is applied. This is different from the\n<span class="literal">Line.Amount</span> , which represents the final tax amount after the tax has been applied.\n\n<span style="color:#800080;">Default Value:</span>\n<span class="literal">Null</span>',
                        requiredFlag: "Optional",
                    },
                    PercentBased: {
                        type: "Boolean",
                        description:
                            '<li>\n<span class="literal">True</span>\u2014sales tax rate is expressed as a percentage.</li>\n<li>\n<span class="literal">False</span>\u2014sales tax rate is expressed as a number amount.</li>\n</ul>',
                        requiredFlag: "Optional",
                    },
                    TaxInclusiveAmount: {
                        type: "Decimal",
                        description: "This is the total amount, including tax.",
                        requiredFlag: "Optional",
                    },
                    OverrideDeltaAmount: {
                        type: "Decimal",
                        description:
                            "The difference between the actual tax and the overridden amount supplied by the user.",
                        requiredFlag: "Optional",
                    },
                    TaxRateRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to a TaxRate to apply to the entire transaction. Query the TaxRate name list resource to determine the appropriate TaxRage object for this reference. Use <span class="literal">TaxRate.Id</span> and <span class="literal">TaxRate.Name</span> from that object for <span class="literal">TaxRateRef.value</span> and <span class="literal">TaxRateRef.name</span>, respectively.\n<br/>For non-US versions of QuickBooks, the TaxRate referenced here must also be one of the rates in the referenced tax code\'s rate list\u2014either the SalesTaxRateList or the PurchaseTaxRateList\u2014as applies to the transaction type. Any given rate may only be listed once. ',
                    },
                    TaxPercent: {
                        type: "Decimal",
                        description:
                            'Numerical expression of the sales tax percent. For example, use "8.5" not "0.085".',
                        requiredFlag: "Optional",
                    },
                },
            },
            transferresponse: {
                name: "transferresponse",
                ShowFirst: ["Id"],
                Default: ["RecurDataRef"],
                Optional: ["PrivateNote", "TxnDate", "TransactionLocationType", "MetaData"],
                Required: ["ToAccountRef", "Amount", "FromAccountRef"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PrivateNote: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Memo field on the Invoice form.",
                        requiredFlag: "Optional",
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">Transfer</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "Current server date",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    ToAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Identifies the asset account to which funds are transfered. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">ToAccountRef.value</span> and <span class="literal">ToAccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.Classification</span> set to <span class="literal">Asset</span>. ',
                    },
                    Amount: {
                        type: "Decimal",
                        description: "Indicates the total amount of the transaction.",
                        requiredFlag: "Required",
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    FromAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Identifies the asset account from which funds are transfered. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">FromAccountRef.value</span> and <span class="literal">FromAccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.Classification</span> set to <span class="literal">Asset</span>.',
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.",
                    },
                },
            },
            refundreceiptrequest: {
                name: "refundreceiptrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["DepositToAccountRef", "Line [0..n]"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    DepositToAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Accounts receivable asset account from which payment money is refunded. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType is <span class="literal">Other Current Asset</span> or <span class="literal">Bank</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">DepositToAccountRef.value</span> and <span class="literal">DepositToAccountRef.name</span>, respectively. \n<strong>CurrencyRefType</strong>\nReference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. ',
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                            {
                                groupline: "GroupLine",
                            },
                        ],
                        type: "RefundReceipt line object",
                        requiredFlag: "Required",
                        description:
                            'The minimum line item required for the request is one of the following:\n<span class="literal">SalesItemLine</span> and \n<span class="literal">GroupLine</span>',
                    },
                },
            },
            creditmemo: {
                name: "creditmemo",
                ShowFirst: ["Id"],
                Default: ["HomeBalance", "TaxExemptionRef", "Balance", "HomeTotalAmt"],
                Optional: [
                    "TxnDate",
                    "CurrencyRef",
                    "ShipDate",
                    "TrackingNum",
                    "PrintStatus",
                    "CustomField",
                    "SalesTermRef",
                    "GlobalTaxCalculation",
                    "TotalAmt",
                    "DueDate",
                    "MetaData",
                    "DocNumber",
                    "PrivateNote",
                    "DepositToAccountRef",
                    "Line [0..n]",
                    "CustomerMemo",
                    "EmailStatus",
                    "Deposit",
                    "TxnTaxDetail",
                    "ExchangeRate",
                    "ShipAddr",
                    "DepartmentRef",
                    "ShipMethodRef",
                    "BillAddr",
                    "ApplyTaxAfterDiscount",
                ],
                Required: ["CustomerRef"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["BillEmail"],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\nSort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    CurrencyRef: {
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. If not set to the Customer or the Vendor currency, will default to the the home currency of the company as defined by <span class="literal">Preferences.CurrencyPrefs.HomeCurrency</span>.',
                        requiredFlag: "Optional",
                    },
                    HomeBalance: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Convenience field containing the amount in <span class="literal">Balance</span> expressed in terms of the home currency. Calculated by QuickBooks business logic. Available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter. Applicable if multicurrency is enabled for the company.',
                        minorVersion: 3,
                    },
                    ShipDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: " Date for delivery of goods or services. ",
                    },
                    TrackingNum: {
                        type: "String",
                        description:
                            " Shipping provider's tracking number for the delivery of the goods associated with the transaction.",
                        requiredFlag: "Optional",
                    },
                    PrintStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            '<span class="literal">NotSet</span>\n\n<strong>\n</strong>Printing status of the invoice.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToPrint</span>,\n<span class="literal">PrintComplete\n</span>. Printing status of the invoice.',
                    },
                    CustomField: {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    SalesTermRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description: "Reference to the Term associated with the transaction. ",
                    },
                    GlobalTaxCalculation: {
                        default: '<span class="literal">TaxExcluded</span>',
                        type: "GlobalTaxCalculationEnum",
                        description:
                            '<span class="literal">TaxExcluded</span>\nMethod in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                        locales: ["GB", "AU", "IN", "CA"],
                        requiredFlag: "Optional",
                    },
                    TotalAmt: {
                        type: "BigDecimal",
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        requiredFlag: "Optional",
                    },
                    DueDate: {
                        sortable: true,
                        description:
                            'Date when the payment of the transaction is due. If date is not provided, the number of days specified in\n<span class="literal">SalesTermRef</span> added the transaction date will be used. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of <span class="literal">Preferences:CustomTxnNumber</span> as follows:\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.</li>\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is false, resulting DocNumber is system generated by incrementing the last number by 1.</li>\n</ul>\nIf <span class="literal">Preferences:CustomTxnNumber</span> is false and a value is supplied, that value is stored even if it is a duplicate. Recommended best practice: check the setting of <span class="literal">Preferences:CustomTxnNumber</span> before setting DocNumber.\nSort order is ASC by default.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 21 chars",
                        type: "String",
                    },
                    PrivateNote: {
                        maxLen: "max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Memo field on the Invoice form.",
                        requiredFlag: "Optional",
                    },
                    DepositToAccountRef: {
                        readOnly: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            "Asset account where the payment money is deposited. If you do not specify this account, payment is applied to the Undeposited Funds account. ",
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Optional",
                        description:
                            'Individual line items of a transaction. Valid <span class="literal">Line</span> types include: <span class="literal">SalesItemLine</span>, <span class="literal">GroupLine</span>, <span class="literal">DescriptionOnlyLine</span>, <span class="literal">DiscountLine</span> and <span class="literal">SubTotalLine</span>',
                    },
                    CustomerMemo: {
                        $ref: [
                            {
                                memoref: "MemoRef",
                            },
                        ],
                        type: "MemoRef",
                        requiredFlag: "Optional",
                        description:
                            "User-entered message to the customer; this message is visible to end user on their transactions. ",
                    },
                    EmailStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        description:
                            'Email status of the invoice.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToSend</span>,\n<span class="literal">EmailSent\n</span>',
                        requiredFlag: "Optional",
                    },
                    TaxExemptionRef: {
                        minorVersion: 21,
                        description:
                            'Reference to the <span class="literal">TaxExepmtion</span> ID associated with this object. Available for companies that have <a href="https://developer.intuit.com/hub/blog/2017/12/11/using-quickbooks-online-api-automated-sales-tax" title="Automatic Sales Tax">automated sales tax</a> enabled.\n<li><span class="literal">TaxExemptionRef.Name</span>: The Tax Exemption Id for the customer to which this object is associated. This Id is typically issued by the state.</li>\n<li><span class="literal">TaxExemptionRef.value</span>: The system-generated Id of the exemption type.</li>\n</ul>\n For internal use only.',
                        systemDefined: true,
                        readOnly: true,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Deposit: {
                        type: "Decimal",
                        description: "The deposit made towards this invoice.",
                        requiredFlag: "Optional",
                    },
                    Balance: {
                        filterable: true,
                        type: "Decimal",
                        readOnly: true,
                        sortable: true,
                        description:
                            'The balance reflecting any payments made against the transaction. Initially set to the value of\n<span class="literal">TotalAmt</span>. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.',
                    },
                    CustomerRef: {
                        filterable: true,
                        requiredFlag: "Required",
                        type: "ReferenceType",
                        description: "Reference to a Customer or job. ",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    TxnTaxDetail: {
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                        type: "TxnTaxDetail",
                        requiredFlag: "Optional",
                        description:
                            'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See <a href="https://developer.intuit.com/app/developer/qbo/docs/workflows/manage-sales-tax-for-non-us-locales/" title="Global Tax Model">Global tax model</a> for more information about this element.\nIf sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored.\n',
                    },
                    SyncToken: {
                        requiredFlag: "Required for update",
                        readOnly: true,
                        type: "String",
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        systemDefined: true,
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    ShipAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Identifies the address where the goods must be shipped. If\n<span class="literal">ShipAddr</span>is not specified, and a default\n<span class="literal">Customer:ShippingAddr</span> is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    HomeTotalAmt: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            "Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic. Applicable if multicurrency is enabled for the company.",
                        systemDefined: true,
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            "Location of the transaction, as defined using location tracking in QuickBooks Online. ",
                    },
                    ShipMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            'Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string. Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string. [[Ext:ReferSection SectionID="id-referencetype"]]',
                        requiredFlag: "Optional",
                    },
                    BillAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Bill-to address of the Invoice. If <span class="literal">BillAddr</span>is not specified, and a default\n<span class="literal">Customer:BillingAddr</span> is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    ApplyTaxAfterDiscount: {
                        type: "Boolean",
                        description:
                            ' If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.\n<span style="color:#800080;">Default Value:</span> false\n<span style="color:#800080;">Constraints:</span> US versions of QuickBooks only.',
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    BillEmail: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        requiredFlag: "Conditionally required",
                        description:
                            'Identifies the e-mail address where the credit-memo is sent. If\n<span class="literal">EmailStatus=NeedToSend</span>,\n<span class="literal">BillEmail</span>is a required input. ',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique Identifier for an Intuit entity (object).\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Optional",
                        systemDefined: true,
                        readOnly: true,
                        type: "IdType",
                    },
                },
            },
            customerbalancequery: {
                name: "customerbalancequery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "accounting_method",
                    "date_macro",
                    "arpaid",
                    "report_date",
                    "sort_order",
                    "summarize_column_by",
                    "department",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute',
                        type: "String",
                        description:
                            'The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    arpaid: {
                        default: '<span class="literal">Unpaid</span>',
                        type: "String",
                        description:
                            'Supported Values:<span class="literal">All</span>, <span class="literal">Paid</span>, <span class="literal">Unpaid</span>',
                        requiredFlag: "Optional",
                    },
                    report_date: {
                        default: "today's date",
                        type: "String",
                        description:
                            'Start date to use for the report, in the format <span class="literal">YYYY-MM-DD</span>.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.<br />Supported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                },
            },
            generalledgerqueryFR: {
                name: "generalledgerqueryFR",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "account",
                    "accounting_method",
                    "source_account",
                    "end_date",
                    "date_macro",
                    "account_type",
                    "sort_by",
                    "sort_order",
                    "start_date",
                    "summarize_column_by",
                    "department",
                    "vendor",
                    "class",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    account: {
                        default: "Data for all accounts",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified accounts.<br />Supported Values: One or more comma separated account IDs as returned in the attribute, <span class="literal">Account.Id</span>, of the Account object response code.',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute',
                        type: "String",
                        description:
                            'The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    source_account: {
                        default: "Data for all accounts",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified source accounts.<br />Supported Values: One or more comma separated account IDs as returned in the attribute, <span class="literal">Account.Id</span>, of the Account object response code.',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    account_type: {
                        default: "All accounts",
                        table: {
                            account_types: ["Show child attributes", "Hide child attributes"],
                        },
                        type: "String",
                        description:
                            "(source_account_type) Account type from which transactions are included in the report.<br />Supported Values: <span >AccountsPayable</span>, <span >AccountsReceivable</span>, <span >Bank</span>, <span >CostOfGoodsSold</span>, <span >CreditCard</span>, <span >Equity</span>, <span >Expense</span>, <span >FixedAsset</span>, <span >Income</span>, <span >LongTermLiability</span>, <span >NonPosting</span>, <span >OtherAsset</span>, <span >OtherCurrentAsset</span>, <span >OtherCurrentLiability</span>, <span >OtherExpense</span>, <span>OtherIncome</span>",
                        requiredFlag: "Optional",
                    },
                    sort_by: {
                        default: '<span class="literal">txn_type</span>',
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.<br />Supported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "To return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.<br />Supported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "Include data for all classes",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified classes if so configured in the company file. <br />Supported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                },
            },
            paymentrequest: {
                name: "paymentrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["TotalAmt", "CustomerRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    TotalAmt: {
                        filterable: true,
                        sortable: true,
                        type: "Decimal",
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes.",
                        requiredFlag: "Required",
                    },
                    CustomerRef: {
                        filterable: true,
                        requiredFlag: "Required",
                        type: "ReferenceType",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. ',
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                },
            },
            itemgroupdetail: {
                name: "itemgroupdetail",
                ShowFirst: [],
                Default: [],
                Optional: ["ItemGroupLine [0..n]"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "ItemGroupLine [0..n]": {
                        $ref: [
                            {
                                itemgroupline: "ItemGroupLine",
                            },
                        ],
                        type: "ItemGroupLine",
                        requiredFlag: "Optional",
                        description:
                            'One or more Item objects that comprise a bundle; objects must already exist in the company. Query the Item name list resource for the Item objects that go into the bundle. For each object, create an ItemRef element. Use <span class="literal">Item.Id</span>, <span class="literal">Item.FullyQualifiedName</span>, and <span class="literal">Item.Type</span> for <span class="literal">ItemRef.value</span>, <span class="literal">ItemRef.name</span>, and <span class="literal">ItemRef.type</span> respectively.',
                    },
                },
            },
            companyinforesponse: {
                name: "companyinforesponse",
                ShowFirst: ["Id"],
                Default: ["CompanyStartDate"],
                Optional: [
                    "LegalAddr",
                    "SupportedLanguages",
                    "Country",
                    "Email",
                    "WebAddr",
                    "NameValue [0..n]",
                    "FiscalYearStartMonth",
                    "CustomerCommunicationAddr",
                    "PrimaryPhone",
                    "LegalName",
                    "MetaData",
                ],
                Required: [],
                RequiredForUpdate: ["SyncToken", "CompanyName", "CompanyAddr"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        requiredFlag: "Required for update",
                        readOnly: true,
                        type: "String",
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        systemDefined: true,
                    },
                    LegalAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Legal Address given to the government for any government communication. <br> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    SupportedLanguages: {
                        type: "String",
                        description: "Comma separated list of languages.",
                        requiredFlag: "Optional",
                    },
                    CompanyName: {
                        maxLen: "Maximum of 1024 chars",
                        type: "String",
                        requiredFlag: "Required for update",
                        description: "The name of the company.",
                    },
                    Country: {
                        type: "String",
                        description: "Country name to which the company belongs for financial calculations.",
                        requiredFlag: "Optional",
                    },
                    CompanyAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Required for update",
                        description:
                            'Company Address as described in preference. <br> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    Email: {
                        maxLen: "max 100 chars",
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        requiredFlag: "Optional",
                        description: "Default email address. ",
                    },
                    WebAddr: {
                        maxLen: "max 1000 chars",
                        $ref: [
                            {
                                websiteaddress: "WebsiteAddress",
                            },
                        ],
                        type: "WebSiteAddress",
                        requiredFlag: "Optional",
                        description: "Website address. ",
                    },
                    "NameValue [0..n]": {
                        table: {
                            dataservicesextensions: ["Show Data Services Extensions", "Hide Data Services Extensions"],
                        },
                        type: "NameValue pairs",
                        requiredFlag: "Optional",
                        description:
                            "Any other preference not covered with the standard set of attributes. See Data Services Extensions, below, for special reserved name/value pairs.\nNameValue.Name--Name of the element.\nNameValue.Value--Value of the element.",
                    },
                    FiscalYearStartMonth: {
                        type: "MonthEnum",
                        description: "The start month of fiscal year.",
                        requiredFlag: "Optional",
                    },
                    CustomerCommunicationAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Address of the company as given to their customer, sometimes the address given to the customer mail address is different from Company address. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    PrimaryPhone: {
                        $ref: [
                            {
                                telephonenumber: "TelephoneNumber",
                            },
                        ],
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                        description: "Primary phone number. ",
                    },
                    LegalName: {
                        maxLen: "Maximum of 1024 chars",
                        type: "String",
                        description: "The legal name of the company.",
                        requiredFlag: "Optional",
                    },
                    CompanyStartDate: {
                        readOnly: true,
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        description:
                            'DateTime when company file was created. This field and\n<span class="literal">Metadata.CreateTime</span>contain the same value. ',
                        systemDefined: true,
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                },
            },
            emailaddress: {
                name: "emailaddress",
                ShowFirst: [],
                Default: [],
                Optional: ["Address"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Address: {
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        description: "An email address. The address format must follow the RFC 822 standard.",
                        requiredFlag: "Optional",
                    },
                },
            },
            billpaymentrequest: {
                name: "billpaymentrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["VendorRef", "TotalAmt", "Line [0..n]", "PayType"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef", "CreditCardPayment", "CheckPayment"],
                type: "object",
                properties: {
                    VendorRef: {
                        sortable: true,
                        description: "Reference to the vendor for this transaction.\n",
                        filterable: true,
                        requiredFlag: "Required",
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    TotalAmt: {
                        filterable: true,
                        type: "BigDecimal",
                        sortable: true,
                        description:
                            "Indicates the total amount of the associated with this payment. This includes the total of all the payments from the BillPayment Details.",
                        requiredFlag: "Required",
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                linelinkedtxn: "LineLinkedTxn",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items representing zero or more <span class="literal">Bill</span>, <span class="literal">VendorCredit</span>, and <span class="literal">JournalEntry</span> objects linked to this BillPayment object. Valid <span class="literal">Line</span> types include:\n<br/> LinkedTxnLine:\n',
                    },
                    PayType: {
                        type: "BillPaymentTypeEnum",
                        description:
                            'The payment type.  Valid values include: <span class="literal">Check</span>, <span class="literal">CreditCard</span>',
                        requiredFlag: "Required",
                    },
                    CreditCardPayment: {
                        sortable: true,
                        description:
                            'Information about a credit card payment for the transaction. Not applicable to Estimate and SalesOrder. \nRequired when <span class="literal">PayType</span> is <span class="literal">CreditCard</span>.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        type: "BillPaymentCreditCard",
                        $ref: [
                            {
                                billpaymentcreditcard: "BillPaymentCreditCard",
                            },
                        ],
                    },
                    CheckPayment: {
                        $ref: [
                            {
                                billpaymentcheck: "BillPaymentCheck",
                            },
                        ],
                        type: "BillPaymentCheck",
                        description:
                            'Reference to the vendor for this transaction.\nRequired when <span class="literal">PayType</span> is <span class="literal">Check</span>.',
                        requiredFlag: "Conditionally required",
                    },
                },
            },
            timeactivityresponse: {
                name: "timeactivityresponse",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [
                    "ClassRef",
                    "Description",
                    "Taxable",
                    "TransactionLocationType",
                    "MetaData",
                    "CostRate",
                    "ItemRef",
                    "PayrollItemRef",
                    "BillableStatus",
                    "DepartmentRef",
                ],
                Required: ["NameOf"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [
                    "TxnDate",
                    "BreakHours BreakMinutes",
                    "EndTime",
                    "Hours",
                    "VendorRef",
                    "HourlyRate",
                    "CustomerRef",
                    "EmployeeRef",
                    "StartTime",
                ],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date for the time activity. This is the posting date that affects financial statements. If the date is not supplied, the current date on the server is used.\nSort order is ASC by default. If you provide the StartTime and EndTime without including the timeZone offset, then you would need to pass the TxnDate for any historical or future dates. \n Lets say if you want to create a historical time activity then pass the TxnDate as the date and pass StartTime and EndTime as Hours without including the timeZone offset.",
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        default: "Current server date",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    NameOf: {
                        type: "String",
                        description:
                            'Enumeration of time activity types. Required in conjunction with either\n<span class="literal">EmployeeRef</span>or\n<span class="literal">VendorRef</span>attributes for create operations. Valid values:\n<span class="literal">Vendor</span>or\n<span class="literal">Employee</span>.',
                        requiredFlag: "Required",
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with this object. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerTxn</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    "BreakHours BreakMinutes": {
                        maxLen: "Maximum of 8760 hours\n59 minutes; if hours is 8760\nminutes must be 0",
                        type: "Integer",
                        requiredFlag: "Conditionally required",
                        description:
                            'Hours and minutes of break taken between <span class="literal">StartTime</span> and <span class="literal">EndTime</span>. use when <span class="litera">StartTime</span> and <span class="literal">EndTime</span> are specified',
                    },
                    EndTime: {
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Conditionally required",
                        description:
                            'Time that work starts and ends, respectively. Required if <span class="literal">Hours</span> and <span class="literal">Minutes</span> not specified. \n Note: Kindly consider only the Hours without including the timeZone offset as it does not impact time activity hours calculation.',
                    },
                    Description: {
                        maxLen: "maximum 4000 characters",
                        type: "String",
                        description: "Description of work completed during time activity.",
                        requiredFlag: "Optional",
                    },
                    Hours: {
                        maxLen: "Maximum of 8760 hours\n59 minutes; If hours is 8760\nminutes must be 0",
                        type: "Integer",
                        description:
                            'Hours and minutes worked. Required if <span class="literal">StartTime</span> and <span class="literal">EndTime</span> not specified',
                        requiredFlag: "Conditionally required",
                    },
                    Taxable: {
                        default: '<span class="literal">false</span>',
                        type: "Boolean",
                        description: "True if the time recorded is both billable and taxable.",
                        requiredFlag: "Optional",
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: "WithinFrance",
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    VendorRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Conditionally required",
                        description:
                            'Specifies the vendor whose time is being recorded. Query the Vendor name list resource to determine the appropriate Vendor object for this reference. Use <span class="literal">Vendor.Id</span> and <span class="literal">Vendor.Name</span> from that object for <span class="literal">VendorRef.value</span> and <span class="literal">VendorRef.name</span>, respectively. Required if <span class="literal">NameOf</span> is set to <span class="literal">Vendor</span>',
                    },
                    CostRate: {
                        type: "BigDecimal",
                        description: "Pay rate of the employee or vendor for this time activity.",
                        requiredFlag: "Optional",
                    },
                    ItemRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the service item associated with this object. Query the Item name list resource, where <span class="literal">Item.Type</span> is set to <span class="literal">Service</span>, to determine the appropriate Item object for this reference. Use <span class="literal">Item.Id</span> and <span class="literal">Item.Name</span> from that object for <span class="literal">ItemRef.value</span> and <span class="literal">ItemRef.name</span>, respectively. \nFor France locales: The account associated with the referenced Item object is looked up in the account category list.\n<li>If this account has same location as specified in the transaction by the <span class="literal">TransactionLocationType</span> attribute and the same VAT as in the line item <span class="literal">TaxCodeRef</span> attribute, then the item account is used.</li>\n<li>If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.</li>\n<li>If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.</li>\n</ul>',
                    },
                    PayrollItemRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Specifies how much the employee should be paid for doing the work specified by the Compensation Id. Query the EmployeeCompensation resource to determine the appropriate PayrollCompensation object for an employee. Use <span class="literal">EmployeeCompensation.Id</span> and <span class="literal">EmployerCompensation.Name</span> from that object for <span class="literal">PayrollItemRef.value</span> and <span class="literal">PayrollItemRef.name</span>, respectively.',
                    },
                    BillableStatus: {
                        filterable: true,
                        default: '<span class="literal">NotBillable</span>',
                        type: "BillableStatusEnum",
                        description:
                            'Billable status of the time recorded. Valid values:\n<span class="literal">Billable</span>,\n<span class="literal">NotBillable</span>,\n<span class="literal">HasBeenBilled</span>.\nYou cannot directly update the status to <span class="literal">HasBeenBilled</span>. To set the status to <span class="literal">HasBeenBilled</span>, create an Invoice object and attach this TimeActivity object as a linked transaction to that Invoice.',
                        requiredFlag: "Optional",
                    },
                    HourlyRate: {
                        default: "0",
                        maxLen: "0 to 99999999999 hours",
                        type: "Decimal",
                        requiredFlag: "Conditionally required",
                        description:
                            'Hourly bill rate of the employee or vendor for this time activity. Required if <span class="literal">BillableStatus</span> is set to <span class="literal">Billable</span>',
                    },
                    CustomerRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Conditionally required",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. Required if <span class="literal">BillableStatus</span> is set to <span class="literal">Billable</span>',
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    EmployeeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Conditionally required",
                        description:
                            'Specifies the employee whose time is being recorded. Query the Employee name list resource to determine the appropriate Employee object for this reference. Use <span class="literal">Employee.Id</span> and <span class="literal">Employee.DisplayName</span> from that object for <span class="literal">EmployeerRef.value</span> and <span class="literal">EmployeeRef.Name</span>, respectively. Required if <span class="literal">NameOf</span> is set to <span class="literal">Employee</span>',
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of this object. Available if <span class="literal">Preferences.AccountingInfoPrefs.TrackDepartments</span> is set to <span class="literal">true</span>.\n<br/>Query the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    StartTime: {
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Conditionally required",
                        description:
                            'Time that work starts and ends, respectively. Required if <span class="literal">Hours</span> and <span class="literal">Minutes</span> not specified. \n Note: Kindly consider only the Hours without including the timeZone offset as it does not impact time activity hours calculation.',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object. Sort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            itemrequest: {
                name: "itemrequest",
                ShowFirst: [],
                Default: ["AssetAccountRef", "InvStartDate", "ExpenseAccountRef"],
                Optional: [],
                Required: ["Name"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["QtyOnHand", "IncomeAccountRef", "Type"],
                type: "object",
                properties: {
                    QtyOnHand: {
                        type: "Decimal",
                        sortable: true,
                        requiredFlag: "Conditionally required",
                        description:
                            'Current quantity of the <span class="literal">Inventory</span> items available for sale. Not used for <span class="literal">Service</span> or <span class="literal">NonInventory</span> type items.Required for <span class="literal">Inventory</span> type items.',
                    },
                    Name: {
                        sortable: true,
                        description: "Name of the item. This value must be unique.  Required for create.",
                        filterable: true,
                        requiredFlag: "Required",
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                    },
                    IncomeAccountRef: {
                        description:
                            'Reference to the posting account, that is, the account that records the proceeds from the sale of this item. Must be an account with account type of <span class="literal">Sales of Product Income</span>. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">IncomeAccountRef.value</span> and <span class="literal">IncomeAccountRef.name</span>, respectively.\nFor France locales:\n<li>This is an optional field.</li>\n<li>This is the sales account id, If not provided it defaults to the default sales account: 706100 and 707100 are the default expense accounts used for  <span class="literal">Service</span> and <span class="literal">Product</span> type of item, respectively.</li>\n</ul>\nRequired for <span class="literal">Inventory</span> and <span class="literal">Service</span> item types.',
                        type: "ReferenceType",
                        requiredFlag: "Conditionally required",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    AssetAccountRef: {
                        description:
                            'Reference to the Inventory Asset account that tracks the current value of the inventory. If the same account is used for all inventory items, the current balance of this account will represent the current total value of the inventory. Must be an account with account type of <span class="literal">Other Current Asset</span>. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">AssetAccountRef.value</span> and <span class="literal">AssetAccountRef.name</span>, respectively.\nRequired for <span class="literal">Inventory</span> item types.',
                        type: "ReferenceType",
                        requiredFlag: "Condtionally required",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    InvStartDate: {
                        description:
                            'Date of opening balance for the inventory transaction. Required when creating an <span class="literal">Item.Type=Inventory</span>.\nRequired for <span class="literal">Inventory</span> item types.',
                        type: "Date",
                        requiredFlag: "Condtionally required",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    Type: {
                        sortable: true,
                        description:
                            'Classification that specifies the use of this item. See the description at the top of the Item entity page for details about supported item types.\nFor requests with minor versions earlier than 4 specified, this field is read-only and system-defined as follows:\n<li><span class="literal">Inventory</span>--Default setting when <span class="literal">TrackQtyOnHand</span>, <span class="literal">InvStartDate</span>, and <span class="literal">AssetAccountRef</span> are specified. Used for goods the company sells and buys that are tracked as inventory. </li>\n<li><span class="literal">Service</span>--Default setting when <span class="literal">TrackQtyOnHand</span>, <span class="literal">InvStartDate</span>, and <span class="literal">AssetAccountRef</span> are not specified. Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees.</li>\n</ul>\nFor requests with minor version=4 query parameter, this field is required to be explicitly set with one of the following:\n<li><span class="literal">Inventory</span>--Used for goods the company sells and buys that are tracked as inventory. </li>\n<li><span class="literal">Service</span>--Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees.</li>\n<li><span class="literal">NonInventory</span>--Use for goods the company sells and buys that are not tracked as inventory. For example, office supplies or goods bought on behalf of the customer.</li>\n</ul>\nWhen querying Item objects with minor versions earlier than 4 specified, <span class="literal">NonInventory</span> types are returned as type <span class="literal">Service</span>.\nFor French locales, <span class="literal">Type</span> is tied with <span class="literal">ItemCategoryType</span>: if <span class="literal">ItemCategoryType</span> is set to <span class="literal">Service</span>, then <span class="literal">Type</span> is set to <span class="literal">Service</span>, if <span class="literal">ItemCategoryType</span> is <span class="literal">Product</span>, then <span class="literal">Type</span> is set to <span class="literal">NonInventory</span>. >Required when minor version 4 is specified.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        type: "String",
                        minorVersion: "specified.",
                    },
                    ExpenseAccountRef: {
                        description:
                            'Reference to the expense account used to pay the vendor for this item.  Must be an account with account type of <span class="literal">Cost of Goods Sold</span>. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">ExpenseAccountRef.value</span> and <span class="literal">ExpenseAccountRef.name</span>, respectively.\nFor France locales:\n<li>This is an optional field.</li>\n<li>This is the purchase account id, If not provided it defaults to the default purchase account: 605100 and 601100 are the default expense accounts used for <span class="literal">Service</span> and <span class="literal">Product</span> type of item, respectively.</li>\n</ul>\nRequired for <span class="literal">Inventory</span>, <span class="literal">NonInventory</span>, and <span class="literal">Service</span> item types.',
                        type: "ReferenceType",
                        requiredFlag: "Condtionally required",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                },
            },
            batchitemresponse: {
                name: "batchitemresponse",
                ShowFirst: [],
                Default: ["ResourceName", "QueryResponse"],
                Optional: [],
                Required: ["bId"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    ResourceName: {
                        type: "Response object",
                        description:
                            'The payload for the response. If the operation results in an error, a <span class="literal">Fault</span> object is returned.',
                    },
                    bId: {
                        type: "String",
                        description:
                            "Unique identifier for the batch item. This corresponds to the id supplied in the corresponding batch item request.",
                        requiredFlag: "Required",
                    },
                    QueryResponse: {
                        type: "array of response objects",
                        description:
                            'The payload for the query response. Returned only if a query operation is specified in the batch request. If the operation results in an error, a <span class="literal">Fault</span> object is returned.',
                    },
                },
            },
            physicaladdress: {
                name: "physicaladdress",
                ShowFirst: ["Id"],
                Default: [],
                Optional: [
                    "PostalCode",
                    "City",
                    "Country",
                    "Line5",
                    "Line4",
                    "Line3",
                    "Line2",
                    "Line1",
                    "Lat",
                    "Long",
                    "CountrySubDivisionCode",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    PostalCode: {
                        maxLen: "Maximum of 30 chars",
                        type: "String",
                        description: "Postal code. For example, zip code for USA and Canada",
                        requiredFlag: "Optional",
                    },
                    City: {
                        maxLen: "Maximum of 255 chars",
                        type: "String",
                        description: "City name.",
                        requiredFlag: "Optional",
                    },
                    Country: {
                        maxLen: "Maximum of 255 chars",
                        type: "String",
                        description:
                            "Country name. For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.",
                        requiredFlag: "Optional",
                    },
                    Line5: {
                        maxLen: "Individual maximum of 500 chars, up to combined max of 2000 chars",
                        type: "String",
                        description: "Fifth line of the address.",
                        requiredFlag: "Optional",
                    },
                    Line4: {
                        maxLen: "Individual maximum of 500 chars, up to combined max of 2000 chars",
                        type: "String",
                        description: "Fourth line of the address.",
                        requiredFlag: "Optional",
                    },
                    Line3: {
                        maxLen: "Individual maximum of 500 chars, up to combined max of 2000 chars",
                        type: "String",
                        description: "Third line of the address.",
                        requiredFlag: "Optional",
                    },
                    Line2: {
                        maxLen: "Individual maximum of 500 chars, up to combined max of 2000 chars",
                        type: "String",
                        description: "Second line of the address.",
                        requiredFlag: "Optional",
                    },
                    Line1: {
                        maxLen: "Individual maximum of 500 chars, up to combined max of 2000 chars",
                        type: "String",
                        description: "First line of the address.",
                        requiredFlag: "Optional",
                    },
                    Lat: {
                        readOnly: true,
                        systemDefined: true,
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Latitude coordinate of Geocode (Geospacial Entity Object Code).\n<span class="literal">INVALID</span>is returned for invalid addresses.',
                    },
                    Long: {
                        readOnly: true,
                        systemDefined: true,
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Longitude coordinate of Geocode (Geospacial Entity Object Code).\n<span class="literal">INVALID</span>is returned for invalid addresses.',
                    },
                    CountrySubDivisionCode: {
                        maxLen: "Maximum of 255 chars",
                        type: "String",
                        description:
                            "Region within a country. For example, state name for USA, province name for Canada.",
                        requiredFlag: "Optional",
                    },
                    Id: {
                        readOnly: true,
                        systemDefined: true,
                        type: "String",
                        requiredFlag: "Required for update",
                        description:
                            "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
                    },
                },
            },
            accountlistquery: {
                name: "accountlistquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "account_type",
                    "end_date",
                    "start_moddate",
                    "sort_by",
                    "sort_order",
                    "moddate_macro",
                    "end_moddate",
                    "account_status",
                    "createdate_macro",
                    "start_date",
                    "columns",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    account_type: {
                        default: "All account types",
                        table: {
                            account_types: [
                                "Show the supported account types and values",
                                "Hide the supported account types and values",
                            ],
                        },
                        type: "String",
                        description:
                            "Account type from which transactions are included in the report.<br />Supported Values: AccountsPayable, AccountsReceivable, Bank, CostOfGoodsSold, CreditCard, Equity, Expense, FixedAsset, Income, LongTermLiability, NonPosting, OtherAsset, OtherCurrentAsset, OtherCurrentLiability, OtherExpense, OtherIncome",
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date and end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range.',
                    },
                    start_moddate: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'If not specified value of <span class="literal">moddate_macro</span> is used. (Account List Detail) Specify an explicit account modification report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use the <span class="literal">moddate_macro</span> to cover a standard report date range.',
                    },
                    sort_by: {
                        default: "txn_type",
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: "ascend",
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    moddate_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            "Predefined report account modification date range. Use if you want the report to cover a standard report date range when accounts were modified; otherwise, use the start_moddate and end_moddate to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year",
                        requiredFlag: "Optional",
                    },
                    end_moddate: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'If not specified value of <span class="literal">moddate_macro</span> is used. (Account List Detail) Specify an explicit account modification report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use the <span class="literal">moddate_macro</span> to cover a standard report date range.',
                    },
                    account_status: {
                        default: "Not_Deleted",
                        type: "String",
                        description:
                            ' The account status. Supported values include: <span class="literal">Deleted</span>, <span class="literal">Not_Deleted</span>',
                        requiredFlag: "Optional",
                    },
                    createdate_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined report account create date range. Use if you want the report to cover a standard create report date range; otherwise, use <span class="literal">start_createdate</span> and <span class="literal">end_createdate</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date and end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range.',
                    },
                    columns: {
                        type: "String",
                        description:
                            'Column types to be shown in the report.<br />Supported Values:<br /><span class="literal">account_name*</span>, <span class="literal">account_type*</span>, <span class="literal">detail_acc_type</span>, <span class="literal">create_date</span>, <span class="literal">create_by</span>, <span class="literal">detail_acc_type*</span>, <span class="literal">last_ mod_date</span>, <span class="literal">last_ mod_by</span>, <span class="literal">account_desc*</span>, <span class="literal">account_bal*</span>',
                        requiredFlag: "Optional",
                    },
                },
            },
            budgetresponse: {
                name: "budgetresponse",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["BudgetEntryType", "Name", "BudgetDetail [0..n]", "BudgetType", "Active", "MetaData"],
                Required: ["EndDate", "StartDate"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    BudgetEntryType: {
                        readOnly: true,
                        type: "BudgetEntryTypeEnum",
                        description:
                            'Period that this budget detail covers..\n Valid values include: <span class="literal">Monthly</span>, <span class="literal">Quarterly</span>, <span class="literal">Annually</span>.',
                        requiredFlag: "Optional",
                    },
                    EndDate: {
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Required",
                        description: "Budget end date.",
                    },
                    Name: {
                        sortable: true,
                        description:
                            'User recognizable name for the Account.\n<span class="literal">Account.Name</span> attribute must not contain double quotes (") or colon (:).',
                        filterable: true,
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "String",
                    },
                    "BudgetDetail [0..n]": {
                        $ref: [
                            {
                                budgetdetail: "BudgetDetail",
                            },
                        ],
                        type: "BudgetDetail",
                        requiredFlag: "Optional",
                        description: "Container for the budget items.",
                    },
                    StartDate: {
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Required",
                        description: "Budget begin date.",
                    },
                    BudgetType: {
                        sortable: true,
                        description:
                            'Budget types.\n The only value currently supported is <span class="literal">ProfitAndLoss</span>.',
                        filterable: true,
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "BudgetTypeEnum",
                    },
                    Active: {
                        filterable: true,
                        default: "true",
                        type: "Boolean",
                        description:
                            "Whether or not active inactive accounts may be hidden from most display purposes and may not be posted to.",
                        requiredFlag: "Optional",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.\n",
                    },
                },
            },
            reportrow: {
                name: "reportrow",
                ShowFirst: [],
                Default: ["ColData", "Summary", "Rows", "Header"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    ColData: {
                        description:
                            'Information for each column of a leaf row <span class="literal">Row type=Data</span>. There must be a <span class="literal">ColData</span> definition for each column defined in the <span class="literal">Columns</span> section. Parameters:\n<li><span class="literal">id</span>\u2014The reference id of the entity as returned in the <span style="font-family: \'courier new\', courier, monospace;">Id </span>entity field. Returned where applicable.</li>\n<li><span class="literal">value</span>\u2014The value for column. The type of value is based on the column type.</li>\n<li><span class="literal">href</span>\u2014The link to the quick zoom data for this cell, available when the report endpoint specifies the <span class="literal">qzurl</span> query parameter. The <span class="literal">qzurl</span> query parameter is supported on a report by report basis; check the list of query parameters for the specific report to determine support.</li>\nThe value of the parameter is localized.\n</ul>',
                    },
                    Summary: {
                        description:
                            "Summary row for a report section. It is the cumulative total amount of money in the account, including the sub accounts.",
                    },
                    Rows: {
                        description: "Container for one or more leaf rows.",
                    },
                    Header: {
                        description: "Header row for the report section.",
                    },
                },
            },
            depositrequest: {
                name: "depositrequest",
                ShowFirst: [],
                Default: [],
                Optional: ["ExchangeRate", "DepositToAccountRef", "Line [0..n]"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>.  The CurrencyRef can be overwritten by the <span class="literal">Line.DepositLineDetail</span> Entity. If the customer that you are referring to has a default currency of USD then the currency for this Deposit will always be set as USD.',
                        requiredFlag: "Conditionally required",
                    },
                    DepositToAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Identifies the account to be used for this deposit. Query the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType</span> is <span class="literal">Other Current Asset</span> or <span class="literal">Bank</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">DepositToAccountRef.value</span> and <span class="literal">DepostiToAccountRef.name</span>, respectively.',
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                depositline: "DepositLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Optional",
                        description:
                            'Individual line items of a transaction. Valid <span class="literal">Line</span> types include: \n<br/> DepositLine',
                    },
                },
            },
            profitandlossquery: {
                name: "profitandlossquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "qzurl",
                    "accounting_method",
                    "end_date",
                    "date_macro",
                    "adjusted_gain_loss",
                    "class",
                    "item",
                    "sort_order",
                    "summarize_column_by",
                    "department",
                    "vendor",
                    "start_date",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.\nSupported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    qzurl: {
                        default: '<span class="literal">false</span>',
                        type: "String",
                        description:
                            'Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data.\nSupported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute',
                        type: "String",
                        description:
                            'The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    adjusted_gain_loss: {
                        default: '<span class="literal">false</span>',
                        type: "String",
                        description:
                            'Specifies whether unrealized gain and losses are included in the report.\nSupported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        locales: ["CA"],
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "Include data for all classes",
                        type: "String",
                        description:
                            ' Filters report contents to include information for specified classes if so configured in the company file.\nSupported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                    item: {
                        default: "Include data for all items",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified items.\nSupported Values: One or more comma separated item IDs as returned in the attribute, <span class="literal">Item.Id</span>,of the Item entity response code.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: '<span class="literal">Total</span>',
                        type: "String",
                        description:
                            "The criteria by which to group the report results.\nSupported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.\nSupported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "Return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.\nSupported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                },
            },
            employeerequest: {
                name: "employeerequest",
                ShowFirst: [],
                Default: [],
                Optional: ["GivenName", "FamilyName"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: ["PrimaryAddr"],
                type: "object",
                properties: {
                    GivenName: {
                        sortable: true,
                        description:
                            'Given name or Family name of a person. At least one of\n<span class="literal">GivenName</span> or <span class="literal">FamilyName</span> attributes is required.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    PrimaryAddr: {
                        description:
                            'Represents the physical street address for this employee. If QuickBooks Payroll is enabled for the company, the following PhysicalAddress fields are required:\n<li><span class="literal">City</span>, maximum of 255 chars</li>\n<li><span class="literal">CountrySubDivisionCode</span>, maximum of 255 chars</li>\n<li><span class="literal">PostalCode</span></li></ul>\n Required when QuickBooks Payroll is enabled. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum 30 characters",
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        type: "PhysicalAddress",
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                    },
                    FamilyName: {
                        sortable: true,
                        description:
                            'Family name or the last name of the person. At least one of\n<span class="literal">GivenName</span> or <span class="literal">FamilyName</span> attributes is required.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                },
            },
            itemgroupline: {
                name: "itemgroupline",
                ShowFirst: [],
                Default: [],
                Optional: ["Qty", "ItemRef"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Qty: {
                        type: "String",
                        description: "The quantity of this object to include in the bundle.",
                        requiredFlag: "Optional",
                    },
                    ItemRef: {
                        type: "ItemRef",
                        requiredFlag: "Optional",
                        $ref: [
                            {
                                itemreftype: "ItemRefType",
                            },
                        ],
                    },
                },
            },
            line: {
                name: "line",
                ShowFirst: ["Id"],
                Default: ["Received"],
                Optional: ["LinkedTxn [0..n]", "Description", "LineNum"],
                Required: ["Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Received: {
                        readOnly: true,
                        type: "String",
                        minorVersion: 38,
                        description:
                            "Supported for Purchase Order only. The amount/quantity received of the line, which depends on the type of the line. It can represent the received amount or received quantity based on the line type detail. Applies to existing and new entities.",
                    },
                    "LinkedTxn [0..n]": {
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                        requiredFlag: "Optional",
                        description:
                            "Transaction to which the current entity is related. For example, an invoice line may link to a sales order or estimate.",
                    },
                    Description: {
                        maxLen: "Max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer",
                    },
                    Amount: {
                        maxLen: "Max 15 digits in 10.5 format",
                        type: "Decimal",
                        requiredFlag: "Required",
                        description: "The amount of the line item.",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>If\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.</li>\n<li>If no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            changedatacaptureresponse: {
                name: "changedatacaptureresponse",
                ShowFirst: [],
                Default: ["startPosition", "maxResults", "totalCount", "NameOfResource [0..n]"],
                Optional: ["CDCResponse", "QueryResponse [0..n]"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    startPosition: {
                        type: "String",
                        description: "The starting count of the response for pagination.",
                    },
                    maxResults: {
                        type: "String",
                        description: "Number of objects in this group.",
                    },
                    totalCount: {
                        type: "String",
                        description: "The total count of qualifying objects returned in this response.",
                    },
                    CDCResponse: {
                        type: "Response object",
                        description:
                            'The payload for the response.\n<strong>array of object types</strong>\nThe payload for the query response. Each element in the array of object types corresponds to a resource specified with the <span class="literal">entities</span> query parameter in the request.\n<strong>array of response objects</strong>\nAn array of qualifying objects for the change data capture operation. For deleted objects, <span class="literal">"status":"Deleted"</span> is returned in the payload for the object.\n<strong>String</strong>\nThe starting count of the response for pagination.\n<strong>String</strong>\nNumber of objects in this group.\n<strong>String</strong>\nThe total count of qualifying objects returned in this response.',
                        requiredFlag: "Optional",
                    },
                    "NameOfResource [0..n]": {
                        type: "Array of response objects",
                        description:
                            'An array of qualifying objects for the change data capture operation. For deleted objects, <span class="literal">"status":"Deleted"</span> is returned in the payload for the object.',
                    },
                    "QueryResponse [0..n]": {
                        type: "array of object types",
                        description:
                            'The payload for the query response. Each element in the array of object types corresponds to a resource specified with the <span class="literal">entities</span> query parameter in the request.\n<strong>array of response objects</strong>\nAn array of qualifying objects for the change data capture operation. For deleted objects, <span class="literal">"status":"Deleted"</span> is returned in the payload for the object.\n<strong>String</strong>\nThe starting count of the response for pagination.\n<strong>String</strong>\nNumber of objects in this group.\n<strong>String</strong>\nThe total count of qualifying objects returned in this response.',
                        requiredFlag: "Optional",
                    },
                },
            },
            classrequest: {
                name: "classrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Name"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["ParentRef"],
                type: "object",
                properties: {
                    Name: {
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        description: "User recognizable name for the Class. ",
                        requiredFlag: "Required",
                    },
                    ParentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            "For class objects that are sub-classes: the immediate parent of this object. Required if this object is a subclass.",
                        requiredFlag: "Conditionally required",
                    },
                },
            },
            profitandlossdetailquery: {
                name: "profitandlossdetailquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "account",
                    "accounting_method",
                    "end_date",
                    "date_macro",
                    "adjusted_gain_loss",
                    "class",
                    "sort_by",
                    "payment_method",
                    "sort_order",
                    "employee",
                    "department",
                    "vendor",
                    "account_type",
                    "start_date",
                    "columns",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    account: {
                        default: "Data for all account types",
                        type: "String",
                        description:
                            '(source_account_type) Filters report contents to include information for specified accounts. <br />Supported Values: One or more comma separated account IDs as returned in the attribute, <span class="literal">Account.Id</span>, of the Account object response code.',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in prefrences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute',
                        type: "String",
                        description:
                            ' The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    adjusted_gain_loss: {
                        default: '<span class="literal">false</span>',
                        type: "String",
                        description:
                            'Specifies whether unrealized gain and losses are included in the report.<br />Supported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        locales: ["CA"],
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "Include data for all classes",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified classes if so configured in the company file.<br />Supported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                    sort_by: {
                        default: '<span class="literal">txn_type</span>',
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                        requiredFlag: "Optional",
                    },
                    payment_method: {
                        default: "Default includes information for all payment methods",
                        type: "String",
                        description:
                            'Filters report contents based on payment method.<br />Supported Values: <span class="literal">Cash</span>, <span class="literal">Check</span>, <span class="literal">Dinners Club</span>, <span class="literal">American Express</span>, <span class="literal">Discover</span>, <span class="literal">MasterCard</span>, <span class="literal">Visa</span>',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    employee: {
                        default: "Include data for all employees",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified employees.<br />Supported Values: One or more comma separated account IDs as returned in the attribute, <span class="literal">Employee.Id</span>, of the Employee entity response code.',
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "Return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.<br />Supported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    account_type: {
                        default: "All account types",
                        table: {
                            account_types: [
                                "Show supported account types and values",
                                "Hide supported account types and values",
                            ],
                        },
                        type: "String",
                        description:
                            "Account type from which transactions are included in the report.<br />Supported Values: <span>AccountsPayable</span>, <span>AccountsReceivable</span>, <span>Bank</span>, <span>CostOfGoodsSold</span>, <span>CreditCard</span>, <span>Equity</span>, <span>Expense</span>, <span>FixedAsset</span>, <span>Income</span>, <span>LongTermLiability</span>, <span>NonPosting</span>, <span>OtherAsset</span>, <span>OtherCurrentAsset</span>, <span>OtherCurrentLiability</span>, <span>OtherExpense</span>, <span>OtherIncome</span>",
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    columns: {
                        default: "columns denoted with *",
                        table: {
                            columns_generalLedger: [
                                "Show additonal values supported based on multicurrency settings for the company.",
                                "Hide additonal values supported based on multicurrency settings for the company.",
                            ],
                        },
                        type: "String",
                        description:
                            'Column types to be shown in the report.<br />Supported Values: create_by, create_date, doc_num*, last_mod_by, last_mod_date, memo*, name*, pmt_mthd, split_acc*, tx_date*, txn_type* <br /> Additional columns with tax enabled: tax_code <br /> Additional columns with class tracking enabled: klass_name* <br /> Additional columns with location tracking enabled: dept_name* <br/ > Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. <br />NonTracking status is enabled for the company if <span class="literal">CompanyInfo.NameValue.Name.NonTracking</span>  is set to  <span class="literal">true</span>. Currently enabled for Canadian company, other locales can be added in the future.',
                        requiredFlag: "Optional",
                    },
                },
            },
            estimateresponse: {
                name: "estimateresponse",
                ShowFirst: ["Id"],
                Default: ["TotalAmt", "RecurDataRef", "TaxExemptionRef", "HomeTotalAmt", "FreeFormAddress"],
                Optional: [
                    "TxnDate",
                    "ShipFromAddr",
                    "ShipDate",
                    "ClassRef",
                    "PrintStatus",
                    "CustomField",
                    "SalesTermRef",
                    "TxnStatus",
                    "LinkedTxn [0..n]",
                    "GlobalTaxCalculation",
                    "AcceptedDate",
                    "ExpirationDate",
                    "TransactionLocationType",
                    "DueDate",
                    "MetaData",
                    "DocNumber",
                    "PrivateNote",
                    "Line [0..n]",
                    "CustomerMemo",
                    "EmailStatus",
                    "TxnTaxDetail",
                    "AcceptedBy",
                    "ExchangeRate",
                    "ShipAddr",
                    "DepartmentRef",
                    "ShipMethodRef",
                    "BillAddr",
                    "ApplyTaxAfterDiscount",
                ],
                Required: ["CustomerRef"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef", "BillEmail"],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n<br/>Sort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    ShipFromAddr: {
                        minorVersion: 35,
                        description:
                            'Identifies the address where the goods are shipped from. For transactions without shipping, it represents the address where the sale took place.<br>For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/>If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                        requiredFlag: "Optional",
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        type: "PhysicalAddress",
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    ShipDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "Date for delivery of goods or services.",
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerTxn</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    PrintStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Printing status of the invoice.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToPrint</span>,\n<span class="literal">PrintComplete\n</span>. ',
                    },
                    CustomField: {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    SalesTermRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the sales term associated with the transaction. Query the Term name list resource to determine the appropriate Term object for this reference. Use <span class="literal">Term.Id</span> and <span class="literal">Term.Name</span> from that object for <span class="literal">SalesTermRef.value</span> and <span class="literal">SalesTermRef.name</span>, respectively. ',
                    },
                    TxnStatus: {
                        type: "String",
                        description:
                            'One of the following status settings: <span class="literal">Accepted, Closed, Pending, Rejected, Converted</span>',
                        requiredFlag: "Optional",
                    },
                    "LinkedTxn [0..n]": {
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                        type: "LinkedTxn",
                        requiredFlag: "Optional",
                        description:
                            'Zero or more <span class="literal">Invoice</span> objects related to this transaction.\nUse <span class="literal">LinkedTxn.TxnId</span> as the ID in a separate Invoice read request to retrieve details of the linked object. ',
                    },
                    GlobalTaxCalculation: {
                        default: "TaxExcluded",
                        type: "GlobalTaxCalculationEnum",
                        description:
                            '<span class="literal">TaxExcluded</span>\nMethod in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                        locales: ["GB", "AU", "IN", "CA"],
                        requiredFlag: "Optional",
                    },
                    TotalAmt: {
                        readOnly: true,
                        type: "BigDecimal",
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        systemDefined: true,
                    },
                    AcceptedDate: {
                        type: "Date",
                        description: "Date estimate was accepted.",
                        requiredFlag: "Optional",
                    },
                    ExpirationDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "Date by which estimate must be accepted before invalidation. ",
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    DueDate: {
                        sortable: true,
                        description:
                            'Date when the payment of the transaction is due. If date is not provided, the number of days specified in\n<span class="literal">SalesTermRef</span> added the transaction date will be used. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of <span class="literal">Preferences:CustomTxnNumber</span> as follows:\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.</li>\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is false, resulting DocNumber is system generated by incrementing the last number by 1.</li>\n</ul>\nIf <span class="literal">Preferences:CustomTxnNumber</span> is false then do not send a value as it can lead to unwanted duplicates. If a DocNumber value is sent for an Update operation, then it just updates that particular invoice and does not alter the internal system DocNumber. <br/><em>Note:</em> DocNumber is an optional field for all locales except France. For France locale if <span class="literal">Preferences:CustomTxnNumber</span> is enabled it will <b>not</b> be automatically generated and is a required field.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 21 chars",
                        type: "String",
                    },
                    PrivateNote: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Memo field on the Invoice form.",
                        requiredFlag: "Optional",
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">Estimate</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                            {
                                groupline: "GroupLine",
                            },
                            {
                                descriptiononlyline: "DescriptionOnlyLine",
                            },
                            {
                                discountline: "DiscountLine",
                            },
                            {
                                subtotalline: "SubTotalLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Optional",
                        description:
                            'Individual line items of a transaction. Valid <span class="literal">Line</span> types include:\n<span class="literal">SalesItemLine</span>, <span class="literal">GroupLine</span>, <span class="literal">DescriptionOnlyLine</span> (also used for inline Subtotal lines), <span class="literal">DiscountLine</span> and <span class="literal">SubTotalLine</span> (used for the overall transaction) ',
                    },
                    CustomerMemo: {
                        $ref: [
                            {
                                memoref: "MemoRef",
                            },
                        ],
                        type: "MemoRef",
                        requiredFlag: "Optional",
                        description:
                            "User-entered message to the customer; this message is visible to end user on their transactions. ",
                    },
                    EmailStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        description:
                            'Email status of the invoice.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToSend</span>,\n<span class="literal">EmailSent\n</span>',
                        requiredFlag: "Optional",
                    },
                    TaxExemptionRef: {
                        minorVersion: 21,
                        description:
                            'Reference to the <span class="literal">TaxExepmtion</span> ID associated with this object. Available for companies that have <a href="https://developer.intuit.com/hub/blog/2017/12/11/using-quickbooks-online-api-automated-sales-tax" title="Automatic Sales Tax">automated sales tax</a> enabled.\n<li><span class="literal">TaxExemptionRef.Name</span>: The Tax Exemption Id for the customer to which this object is associated. This Id is typically issued by the state.</li>\n<li><span class="literal">TaxExemptionRef.value</span>: The system-generated Id of the exemption type.</li>\n</ul>\n For internal use only.',
                        systemDefined: true,
                        readOnly: true,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    CustomerRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. ',
                    },
                    TxnTaxDetail: {
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                        type: "TxnTaxDetail",
                        requiredFlag: "Optional",
                        description:
                            'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See <a href="https://developer.intuit.com/app/developer/qbo/docs/workflows/manage-sales-tax-for-non-us-locales" title="Global Tax Model">Global tax model</a> for more information about this element.\nIf sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored.\n',
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    AcceptedBy: {
                        type: "String",
                        description: " Name of customer who accepted the estimate.",
                        requiredFlag: "Optional",
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    ShipAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Identifies the address where the goods must be shipped. If\n<span class="literal">ShipAddr</span>is not specified, and a default\n<span class="literal">Customer:ShippingAddr</span> is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks. <br>For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/>If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    HomeTotalAmt: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic.\nValue is valid only when <span class="literal">CurrencyRef</span> is specified. Applicable if multicurrency is enabled for the company.',
                        systemDefined: true,
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.TrackDepartments</span> is set to <span class="literal">true</span>.\nQuery the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    ShipMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            "Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string. Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string. ",
                        requiredFlag: "Optional",
                    },
                    BillAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Bill-to address of the Invoice. If\n<span class="literal">BillAddr</span>is not specified, and a default\n<span class="literal">Customer:BillingAddr</span> is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks. <br>For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/>If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    FreeFormAddress: {
                        type: "Boolean",
                        description:
                            'Denotes how <span class="literal">ShipAddr</span> is stored:&nbsp;formatted or unformatted. The value of this flag is system defined based on format of shipping address at object create time.<ul><li>If set to <span class="literal">false</span>, shipping address is returned in a formatted style using City, Country,&nbsp;CountrySubDivisionCode, Postal code.</li><li>If set to <span class="literal">true</span>, shipping address is returned in an unformatted style using Line1 through Line5 attributes.</li></ul>',
                        systemDefined: true,
                    },
                    ApplyTaxAfterDiscount: {
                        default: false,
                        type: "Boolean",
                        requiredFlag: "Optional",
                        locales: ["US"],
                        description:
                            "If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.",
                    },
                    BillEmail: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        requiredFlag: "Conditionally required",
                        description:
                            'Identifies the e-mail address where the estimate is sent. If\n<span class="literal">EmailStatus=NeedToSend</span>,\n<span class="literal">BillEmail</span>is a required input.',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            grouplinedetail: {
                name: "grouplinedetail",
                ShowFirst: [],
                Default: [],
                Optional: ["Quantity", "Line [0..n]", "GroupItemRef"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Quantity: {
                        default: "1",
                        type: "Decimal",
                        description: "Quantity of the group item.",
                        requiredFlag: "Optional",
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Optional",
                        description: "Individual ItemLine elements that comprise a bundle. Returned in responses. ",
                    },
                    GroupItemRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (<span class="literal">Item.Type=Group</span>) for this reference. Use <span class="literal">Item.Id</span> and <span class="literal">Item.Name</span> from that object for <span class="literal">GroupItemRef.value</span> and <span class="literal">GroupItemRef.name</span>, respectively. ',
                    },
                },
            },
            purchaseresponse: {
                name: "purchaseresponse",
                ShowFirst: ["Id"],
                Default: ["TotalAmt", "RecurDataRef"],
                Optional: [
                    "TxnDate",
                    "PrintStatus",
                    "RemitToAddr",
                    "TxnSource",
                    "LinkedTxn [0..n]",
                    "GlobalTaxCalculation",
                    "TransactionLocationType",
                    "MetaData",
                    "DocNumber",
                    "PrivateNote",
                    "Credit",
                    "TxnTaxDetail",
                    "PaymentMethodRef",
                    "PurchaseEx",
                    "ExchangeRate",
                    "DepartmentRef",
                    "EntityRef",
                    "IncludeInAnnualTPAR",
                ],
                Required: ["Line [0..n]", "PaymentType", "AccountRef"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n<br/>Sort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    PrintStatus: {
                        default: '<span class="literal">NeedToPrint</span>',
                        type: "String",
                        description:
                            'PrintStatus is applicable only for\n<span class="literal">Check</span>.\u00a0 Ignored for\n<span class="literal">CreditCard</span>charge or refund.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToPrint</span>,\n<span class="literal">PrintComplete.</span>',
                        requiredFlag: "Optional",
                    },
                    RemitToAddr: {
                        description:
                            'Address to which the payment should be sent. This attribute is applicable only for\n<span class="literal">Check</span>. Ignored for\n<span class="literal">CreditCard</span>\u00a0charge or refund. <br> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                        requiredFlag: "Optional",
                        readOnly: true,
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        type: "PhysicalAddress",
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                    },
                    TxnSource: {
                        type: "String",
                        description: "Used internally to specify originating source of a credit card transaction.",
                        requiredFlag: "Optional",
                    },
                    "LinkedTxn [0..n]": {
                        description:
                            'Zero or more transactions linked to this object. The <span class="literal">LinkedTxn.TxnType</span> can be set to <span class="literal">ReimburseCharge</span>. The <span class="literal">LinkedTxn.TxnId</span> can be set as the ID of the transaction.',
                        requiredFlag: "Optional",
                        readOnly: false,
                        minorVersion: 55,
                        type: "LinkedTxn",
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                    },
                    GlobalTaxCalculation: {
                        default: '<span class="literal">TaxExcluded</span>',
                        type: "GlobalTaxCalculationEnum",
                        description:
                            'Method in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                        locales: ["GB", "AU", "IN", "CA"],
                        requiredFlag: "Optional",
                    },
                    TotalAmt: {
                        readOnly: true,
                        type: "BigDecimal",
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes.\nCalculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        systemDefined: true,
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> as follows:\n<li>If <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> is true a custom value can be provided; duplicate values are not accepted. If no value is supplied, the resulting DocNumber is null.</li>\n<li>If <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> is false, resulting DocNumber is system generated by incrementing the last number by 1.</li>\n</ul>\nFor Cash/CreditCard transactions, throws an error when duplicate DocNumber is sent in the request. For Check transactions, error is thrown when duplicate DocNumber is sent in the request and <span class="literal">Preferences:OtherPrefs:NameValue.Name = WarnDuplicateCheckNumber</span> is true. Recommended best practice: check the setting of <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> before setting DocNumber. If a duplicate DocNumber needs to be supplied, add the query parameter name/value pair, <span class="literal">include=allowduplicatedocnum</span> to the URI. \nSort order is ASC by default.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 21 chars",
                        type: "String",
                    },
                    PrivateNote: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description:
                            "User-entered, organization-private note about the transaction. This field maps to the Memo field on the Expense form in the QuickBooks UI.",
                        requiredFlag: "Optional",
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">Purchase</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                itembasedexpenseline: "ItemBasedExpenseLine",
                            },
                            {
                                accountbasedexpenseline: "AccountBasedExpenseLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items of a transaction. Valid \n<span class="literal">Line</span> types include <span class="literal">ItemBasedExpenseLine</span> (Available if\n<span class="literal">Preferences.ProductAndServicesPrefs.ForPurchase</span> is set to \n<span class="literal">true</span>) and <span class="literal">AccountBasedExpenseLine</span>',
                    },
                    Credit: {
                        default: "False",
                        type: "Boolean",
                        description:
                            '<span class="literal">False</span>\u2014it represents a charge.\n\n<span class="literal">True</span>\u2014it represents a refund.\nValid only for\n<span class="literal">CreditCard</span>payment type.\n\nValidation Rules: Valid only for\n<span class="literal">CreditCard</span>transactions.',
                        requiredFlag: "Optional",
                    },
                    TxnTaxDetail: {
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                        type: "TxnTaxDetail",
                        requiredFlag: "Optional",
                        description:
                            'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See <a href="https://developer.intuit.com/app/developer/qbo/docs/workflows/manage-sales-tax-for-non-us-locales" title="Global Tax Model">Global tax model</a> for more information about this element.\nIf sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored.',
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PaymentMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a PaymentMethod associated with this transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. Use <span class="literal">PaymentMethod.Id</span> and <span class="literal">PaymentMethod.Name</span> from that object for <span class="literal">PaymentMethodRef.value</span> and <span class="literal">PaymentMethodRef.name</span>, respectively. ',
                    },
                    PurchaseEx: {
                        type: "Internal use",
                        description: "For internal use.",
                        requiredFlag: "Optional",
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company',
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.TrackDepartments</span> is set to <span class="literal">true</span>.\n<br/>Query the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively.',
                    },
                    PaymentType: {
                        type: "String",
                        description:
                            'Type can be\n<span class="literal">Cash</span>,\n<span class="literal">Check</span>, or\n<span class="literal">CreditCard</span>.',
                        requiredFlag: "Required",
                    },
                    EntityRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType,",
                        requiredFlag: "Optional",
                        description:
                            'Specifies the party with whom an expense is associated. Can be\n<span class="literal">Customer</span>,\n<span class="literal">Vendor, or Employee.</span>\n<br/>Query the corresponding name list resource of the associated type to determine the appropriate object for this reference. Use the <span class="literal">Id</span> and <span class="literal">DisplayName</span> values from that object for <span class="literal">EntityRef.value</span> and <span class="literal">EntityRef.name</span>, respectively. Set <span class="literal">EntityRef.type</span> to the type of object associated with this expense. For example, if this object represents a purchase from a vendor, then set <span class="literal">EntityRef.type</span> to <span class="literal">Vendor</span> and query the Vendor resource for the appropriate object to reference. ',
                    },
                    IncludeInAnnualTPAR: {
                        minorVersion: 40,
                        default: '<span class="literal">false</span>',
                        requiredFlag: "Optional",
                        type: "Boolean",
                        locales: ["AU"],
                        description:
                            "Include the supplier in the annual TPAR. TPAR stands for Taxable Payments Annual Report. The TPAR is mandated by ATO to get the details payments that businesses make to contractors for providing services. Some government entities also need to report the grants they have paid in a TPAR.",
                    },
                    AccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Specifies the account reference to which this purchase is applied based on the <span class="literal">PaymentType</span>. A type of <span class="literal">Check</span> should have bank account, <span class="literal">CreditCard</span> should specify credit card account, etc. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">AccountRef.value</span> and <span class="literal">AccountRef.name</span>, respectively. ',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            agedpayabledetailquery: {
                name: "agedpayabledetailquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "shipvia",
                    "term",
                    "end_duedate",
                    "accounting_method",
                    "start_duedate",
                    "custom1",
                    "custom2",
                    "custom3",
                    "report_date",
                    "num_periods",
                    "vendor",
                    "past_due",
                    "aging_period",
                    "columns",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    shipvia: {
                        default: "To include data for all shipping methods",
                        type: "String",
                        description:
                            'Filter by the shipping method as stored in <span class="literal">Invoice.ShipMethodRef.Name</span>.<br />Supported Values: Any shipping method as sent in the <span class="literal">Invoice.ShipMethodRef.Name</span> attribute at Invoice create- or update-time.',
                        requiredFlag: "Optional",
                    },
                    term: {
                        default: "to return data for all terms",
                        type: "String",
                        description:
                            'Filters report contents based on term or terms supplied.<br />Supported Values: One or more comma separated term IDs as returned in the attribute, <span class="literal">Term.Id</span> of the Term object response code.',
                        requiredFlag: "Optional",
                    },
                    end_duedate: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default: "Preferences.ReportPrefs.ReportBasis",
                        type: "String",
                        description:
                            ' The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    start_duedate: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    custom1: {
                        default: "to include data for all fields",
                        type: "String",
                        description:
                            'Filter by the specified custom field as defined by the <span class="literal">CustomField</span> attribute in transaction entities where supported.<br/>Supported Values: Name of custom field.',
                        requiredFlag: "Optional",
                    },
                    custom2: {
                        default: "to include data for all fields",
                        type: "String",
                        description:
                            'Filter by the specified custom field as defined by the <span class="literal">CustomField</span> attribute in transaction entities where supported.<br/>Supported Values: Name of custom field.',
                        requiredFlag: "Optional",
                    },
                    custom3: {
                        default: "to include data for all fields",
                        type: "String",
                        description:
                            'Filter by the specified custom field as defined by the <span class="literal">CustomField</span> attribute in transaction entities where supported.<br/>Supported Values: Name of custom field.',
                        requiredFlag: "Optional",
                    },
                    report_date: {
                        default: "Today's date",
                        type: "String",
                        description:
                            'Start date to use for the report, in the format <span class="literal">YYYY-MM-DD</span>.',
                        requiredFlag: "Optional",
                    },
                    num_periods: {
                        default: "4",
                        type: "Integer",
                        description:
                            "The number of periods to be shown in the report.<br />Supported Values: A numeric value.",
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "to return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.<br />Supported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    past_due: {
                        type: "Integer",
                        requiredFlag: "Optional",
                        description:
                            "Filters report contents based on minimum days past due.<br />Supported Values: Integer number of days. no filtering",
                    },
                    aging_period: {
                        default: "30",
                        type: "Decimal",
                        description: "The number of days in the aging period.<br />Supported Values: A numeric value.",
                        requiredFlag: "Optional",
                    },
                    columns: {
                        default: "columns denoted with *",
                        table: {
                            columns_apaging: [
                                "Show additional values supported based on multicurrency settings for the company.",
                                "Hide additional values supported based on multicurrency settings for the company.",
                            ],
                        },
                        type: "String",
                        description:
                            "Column types to be shown in the report.<br />Supported Values: create_by, create_date, doc_num*, due_date*, last_mod_by, last_mod_date, memo*, past_due*, term_name, tx_date*, txn_type*, vend_bill_addr, vend_comp_name, vend_name*, vend_pri_cont, vend_pri_email, vend_pri_tel<br /> Additional columns with location tracking enabled: dept_name*",
                        requiredFlag: "Optional",
                    },
                },
            },
            subtotallinedetail: {
                name: "subtotallinedetail",
                ShowFirst: [],
                Default: [],
                Optional: ["ItemRef"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    ItemRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use <span class="literal">Item.Id</span> and <span class="literal">Item.Name</span> from that object for <span class="literal">ItemRef.value</span> and <span class="literal">ItemRef.name</span>, respectively. When a line lacks an ItemRef it is treated as documentation and the\n<span class="literal">Line.Amount</span> attribute is ignored.\nFor France locales: The account associated with the referenced Item object is looked up in the account category list.\n<li>If this account has same location as specified in the transaction by the <span class="literal">TransactionLocationType</span> attribute and the same VAT as in the line item <span class="literal">TaxCodeRef</span> attribute, then the item account is used.</li>\n<li>If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.</li>\n<li>If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.</li>\n</ul>',
                    },
                },
            },
            vendorpaymentbankdetail: {
                name: "vendorpaymentbankdetail",
                ShowFirst: [],
                Default: ["BankAccountName", "BankBranchIdentifier", "BankAccountNumber", "StatementText"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    BankAccountName: {
                        type: "String",
                        description: "Name on the Bank Account",
                        requiredFlag: "Required if VendorPaymentBankDetail is present in the request.",
                    },
                    BankBranchIdentifier: {
                        type: "String",
                        description:
                            "bank identification number used to identify the Bank Branch. \n6 digit value in format xxx-xxx.",
                        requiredFlag: "Required if VendorPaymentBankDetail is present in the request",
                    },
                    BankAccountNumber: {
                        type: "String",
                        description: "Vendor's Bank Account number.",
                        requiredFlag:
                            "Required if VendorPaymentBankDetail is present in the request. In reponse the value is masked and last four digit is only returned",
                    },
                    StatementText: {
                        maxLen: "The maximum length of this field is 18 characters.",
                        type: "String",
                        description: "Text/note/comment for Remmittance",
                    },
                },
            },
            itemsalesquery: {
                name: "itemsalesquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "end_duedate",
                    "accounting_method",
                    "end_date",
                    "date_macro",
                    "start_duedate",
                    "class",
                    "item",
                    "sort_order",
                    "summarize_column_by",
                    "department",
                    "start_date",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    end_duedate: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute',
                        type: "String",
                        description:
                            ' The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'If not specified value of <span class="literal">date_macro</span> is used. The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    start_duedate: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "Include data for all classes",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified classes if so configured in the company file.<br />Supported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                    item: {
                        default: "Include data for all items",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified items.<br />Supported Values: One or more comma separated item IDs as returned in the attribute, <span class="literal">Item.Id</span>,of the Item entity response code.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.<br />Supported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'If not specified value of <span class="literal">date_macro</span> is used. The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                },
            },
            journalcoderesponse: {
                name: "journalcoderesponse",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Description", "CustomField ", "Type", "MetaData"],
                Required: ["Name"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description: "Version number of the entity.\nRequired for the update operation.",
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    Description: {
                        type: "String",
                        description: "A free-form description of the journal code.",
                        requiredFlag: "Optional",
                    },
                    "CustomField ": {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    Name: {
                        maxLen: "2 to 20 characters in length",
                        type: "String",
                        description: "A name representing the journal code.",
                        requiredFlag: "Required",
                    },
                    Type: {
                        type: "String",
                        description:
                            'The type of this journal code. The value cannot be changed once the object is created. Valid types include:\n<span class="literal">Expenses</span>\n<span class="literal">Sales</span>\n<span class="literal">Bank</span>\n<span class="literal">Nouveaux</span>\n<span class="literal">Wages</span>\n<span class="literal">Cash</span>\n<span class="literal">Others</span>',
                        requiredFlag: "Optional",
                    },
                    Id: {
                        sortable: true,
                        description:
                            "Unique Identifier for an Intuit entity (object).\nRequired for the update operation.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "IdType",
                    },
                    MetaData: {
                        sortable: true,
                        description:
                            "Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ModificationMetaData",
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                    },
                },
            },
            bundleresponse: {
                name: "bundleresponse",
                ShowFirst: ["Id"],
                Default: ["FullyQualifiedName"],
                Optional: [
                    "Sku",
                    "Type",
                    "PurchaseCost",
                    "Active",
                    "ItemGroupDetail",
                    "Taxable",
                    "Description",
                    "PrintGroupedItems",
                    "UnitPrice",
                    "MetaData",
                ],
                Required: ["Name"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Sku: {
                        description:
                            "The stock keeping unit (SKU) for this Item. This is a company-defined identifier for an item or product used in tracking inventory.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        minorVersion: 4,
                    },
                    SyncToken: {
                        requiredFlag: "Required for update",
                        readOnly: true,
                        type: "String",
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        systemDefined: true,
                    },
                    Name: {
                        sortable: true,
                        description: "Name of the item.",
                        filterable: true,
                        requiredFlag: "Required",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    FullyQualifiedName: {
                        filterable: true,
                        readOnly: true,
                        type: "String",
                        description:
                            'Fully qualified name of the object. System generated from <span class="literal">Name</span>.',
                        systemDefined: true,
                    },
                    Type: {
                        filterable: true,
                        type: "String",
                        sortable: true,
                        description: 'Set to the literal string, <span class="literal">Group</span>.',
                        requiredFlag: "Optional",
                    },
                    PurchaseCost: {
                        maxLen: "maximum of 99999999999",
                        type: "Decimal",
                        description: "Amount paid when buying or ordering the item, as expressed in the home currency.",
                        requiredFlag: "Optional",
                    },
                    Active: {
                        filterable: true,
                        default: "true",
                        type: "Boolean",
                        description: "If true, the object is currently enabled for use by QuickBooks.",
                        requiredFlag: "Optional",
                    },
                    ItemGroupDetail: {
                        $ref: [
                            {
                                itemgroupdetail: "ItemGroupDetail",
                            },
                        ],
                        type: "ItemGroupDetail",
                        requiredFlag: "Optional",
                        description: "Details of the bundle contents. ",
                    },
                    Taxable: {
                        type: "Boolean",
                        description:
                            "If true, transactions for this item are taxable. Applicable to US companies, only.<",
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    Description: {
                        maxLen: "maximum of 4000 chars",
                        type: "String",
                        description: "Description of the item.",
                        requiredFlag: "Optional",
                    },
                    PrintGroupedItems: {
                        default: "false",
                        type: "Boolean",
                        description:
                            "If set to true, bundle components are displayed when printing or sending transactions.",
                        requiredFlag: "Optional",
                    },
                    UnitPrice: {
                        sortable: true,
                        description:
                            'Corresponds to the Price/Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item.\nIf used for unit price, the monetary value of the service or product, as expressed in the home currency.\nIf used for a discount or tax rate, express the percentage as a fraction. For example, specify <span class="literal">0.4</span> for 40% tax.',
                        default: "0",
                        requiredFlag: "Optional",
                        maxLen: "maximum of 99999999999",
                        type: "Decimal",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique Identifier for an Intuit entity (object).",
                        filterable: true,
                        requiredFlag: "Required",
                        systemDefined: true,
                        readOnly: true,
                        type: "IdType",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                },
            },
            paymentresponse: {
                name: "paymentresponse",
                ShowFirst: ["Id"],
                Default: ["PaymentRefNum", "TaxExemptionRef"],
                Optional: [
                    "PrivateNote",
                    "PaymentMethodRef",
                    "UnappliedAmt",
                    "DepositToAccountRef",
                    "ExchangeRate",
                    "Line [0..n]",
                    "TxnSource",
                    "ARAccountRef",
                    "TxnDate",
                    "CreditCardPayment",
                    "TransactionLocationType",
                    "MetaData",
                ],
                Required: ["TotalAmt", "CustomerRef"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PrivateNote: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description: "User entered, organization-private note about the transaction.",
                        requiredFlag: "Optional",
                    },
                    PaymentMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a PaymentMethod associated with this transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. Use <span class="literal">PaymentMethod.Id</span> and <span class="literal">PaymentMethod.Name</span> from that object for <span class="literal">PaymentMethodRef.value</span> and <span class="literal">PaymentMethodRef.name</span>, respectively. ',
                    },
                    UnappliedAmt: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            "Indicates the amount that has not been applied to pay amounts owed for sales transactions.",
                        requiredFlag: "Optional",
                    },
                    DepositToAccountRef: {
                        default: "Undeposited Funds account",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Identifies the account to be used for this payment. Query the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType</span> is <span class="literal">Other Current Asset</span> or <span class="literal">Bank</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">DepositToAccountRef.value</span> and <span class="literal">DepostiToAccountRef.name</span>, respectively.\n<br/>If you do not specify this account, payment is applied to the Undeposited Funds account. ',
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    TotalAmt: {
                        type: "Decimal",
                        description:
                            'Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. If you process a linked refund transaction against a specific transaction, the \n<span class="literal">totalAmt</span> value won\'t change. It will remain the same. However, voiding the linked refund will change the \n<span class="literal">totalAmt</span> value to O.',
                        requiredFlag: "Required",
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company',
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                linelinkedtxn: "LineLinkedTxn",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Optional",
                        description:
                            'Zero or more transactions accounting for this payment. Values for\n<span class="literal">Line.LinkedTxn.TxnType</span>can be one of the following:\n<li>\n<span class="literal">Expense</span>--Payment is reimbursement for expense paid by cash made on behalf of the customer\n</li>\n<li>\n<span class="literal">Check</span>--Payment is reimbursement for expense paid by check made on behalf of the customer\n</li>\n<li>\n<span class="literal">CreditCardCredit</span>--Payment is reimbursement for a credit card credit made on behalf of the customer\n</li>\n<li>\n<span class="literal">JournalEntry</span>--Payment is linked to the representative journal entry\n</li>\n<li>\n<span class="literal">CreditMemo</span>--Payment is linked to the credit memo the customer has with the business\n</li>\n<li>\n<span class="literal">Invoice</span>--The invoice to which payment is applied\n</li>\n</ul>\nUse <span class="literal">Line.LinkedTxn.TxnId</span> as the ID in a separate read request for the specific resource to retrieve details of the linked object.',
                    },
                    TxnSource: {
                        type: "String",
                        description: "Used internally to specify originating source of a credit card transaction.",
                        requiredFlag: "Optional",
                    },
                    ARAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Specifies the accounts receivable account associated with this payment. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">ARAccountRef.value</span> and <span class="literal">ARAccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.AccountType</span> set to <span class="literal">Accounts Receivable</span>. ',
                    },
                    PaymentRefNum: {
                        sortable: true,
                        description:
                            "The reference number for the payment received. For example, \u00c2\u00a0Check # for a check, envelope # for a cash donation. Required for France locales.",
                        filterable: true,
                        requiredFlag: "Conditionally Required",
                        type: "String",
                        locales: ["FR"],
                    },
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n<br/>Sort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    CreditCardPayment: {
                        $ref: [
                            {
                                creditcardpayment: "CreditCardPayment",
                            },
                        ],
                        type: "CreditCardPayment",
                        requiredFlag: "Optional",
                        description:
                            "Information about a payment received by credit card. Inject with data only if the payment was transacted through Intuit Payments API. ",
                    },
                    TaxExemptionRef: {
                        minorVersion: 21,
                        description:
                            'Reference to the <span class="literal">TaxExepmtion</span> ID associated with this object. Available for companies that have <a href="https://developer.intuit.com/hub/blog/2017/12/11/using-quickbooks-online-api-automated-sales-tax" title="Automatic Sales Tax">automated sales tax</a> enabled.\n<li><span class="literal">TaxExemptionRef.Name</span>: The Tax Exemption Id for the customer to which this object is associated. This Id is typically issued by the state.</li>\n<li><span class="literal">TaxExemptionRef.value</span>: The system-generated Id of the exemption type.</li>\n</ul>\nFor internal use only',
                        systemDefined: true,
                        readOnly: true,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    CustomerRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. ',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                },
            },
            reimbursechargeresponse: {
                name: "reimbursechargeresponse",
                ShowFirst: ["Id"],
                Default: ["HasBeenInvoiced", "HomeTotalAmt"],
                Optional: ["PrivateNote", "LinkedTxn [0..n]", "ExchangeRate", "MetaData"],
                Required: ["Line [0..n]", "Amount", "CustomerRef"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    SyncToken: {
                        requiredFlag: "Required for update",
                        readOnly: true,
                        type: "String",
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        systemDefined: true,
                    },
                    PrivateNote: {
                        maxLen: "max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.",
                        requiredFlag: "Optional",
                    },
                    "LinkedTxn [0..n]": {
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                        type: "LinkedTxn",
                        requiredFlag: "Optional",
                        description:
                            "The LinkedTxn will contain the Invoice Id if the ReimburseCharge has been linked with an Invoice.",
                    },
                    HasBeenInvoiced: {
                        filterable: true,
                        default: "false",
                        type: "Boolean",
                        description:
                            "Boolean indicating whether the reimbursable charge has been linked to an Invoice.",
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Applicable if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    "Line [0..n]": {
                        type: "Line",
                        requiredFlag: "Required",
                        $ref: [
                            {
                                reimbursechargeline: "ReimburseChargeLine",
                            },
                        ],
                    },
                    HomeTotalAmt: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic.\nValue is valid only when <span class="literal">CurrencyRef</span> is specified. Applicable if multicurrency is enabled for the company.',
                        systemDefined: true,
                    },
                    Amount: {
                        maxLen: "Max 15 digits in 10.5 format",
                        type: "Decimal",
                        description: "The amount of the line item.",
                        requiredFlag: "Required",
                    },
                    CustomerRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. ',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Optional",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                },
            },
            timetrackingprefs: {
                name: "timetrackingprefs",
                ShowFirst: [],
                Default: [
                    "WorkWeekStartDate",
                    "MarkTimeEntriesBillable",
                    "ShowBillRateToAll",
                    "UsingSalesTax",
                    "BillCustomers",
                ],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    WorkWeekStartDate: {
                        readOnly: true,
                        type: "WeekEnum",
                        description: "Work week starting day.",
                    },
                    MarkTimeEntriesBillable: {
                        readOnly: true,
                        type: "Boolean",
                        description: "Mark time entries as billable.",
                    },
                    ShowBillRateToAll: {
                        default: false,
                        type: "Boolean",
                        description: "Billing rate to all employees enabled.",
                    },
                    UsingSalesTax: {
                        default: false,
                        type: "Boolean",
                        description: "Services for time tracking enabled.",
                    },
                    BillCustomers: {
                        type: "Boolean",
                        description: "Enables billing customers for time.",
                    },
                },
            },
            attachableresponse: {
                name: "attachableresponse",
                ShowFirst: ["Id"],
                Default: [
                    "FileAccessUri",
                    "Size",
                    "ThumbnailFileAccessUri",
                    "TempDownloadUri",
                    "ThumbnailTempDownloadUri",
                ],
                Optional: ["Category", "ContentType", "PlaceName", "AttachableRef", "Long", "Tag", "Lat", "MetaData"],
                Required: [],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["FileName", "Note"],
                type: "object",
                properties: {
                    Category: {
                        sortable: true,
                        description:
                            ' Category of the attachment. Valid values include (case sensitive): <span class="literal">Contact Photo</span>, <span class="literal">Document</span>, <span class="literal">Image</span>, <span class="literal">Receipt</span>, <span class="literal">Signature</span>, <span class="literal">Sound</span>, <span class="literal">Other</span>.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "max 100 chars",
                        type: "String",
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    FileAccessUri: {
                        readOnly: true,
                        type: "String",
                        description: "FullPath FileAccess URI of the attachment. Returned for file attachments.",
                        systemDefined: true,
                    },
                    ContentType: {
                        sortable: true,
                        description: "ContentType of the attachment. Returned for file attachments.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "max 100 chars",
                        type: "String",
                    },
                    PlaceName: {
                        sortable: true,
                        description: " PlaceName from where the attachment was requested.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "max 2000 chars",
                        type: "String",
                    },
                    Size: {
                        sortable: true,
                        description: " Size of the attachment. Returned for file attachments.",
                        filterable: true,
                        systemDefined: true,
                        readOnly: true,
                        type: "Decimal",
                    },
                    AttachableRef: {
                        $ref: [
                            {
                                attachableref: "AttachableRef",
                            },
                        ],
                        type: "AttachableRef",
                        requiredFlag: "Optional",
                        description: "Specifies the transaction object to which this attachable file is to be linked. ",
                    },
                    Long: {
                        sortable: true,
                        description: " Longitude from where the attachment was requested.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "max 100 chars",
                        type: "String",
                    },
                    FileName: {
                        sortable: true,
                        description: "FileName of the attachment. Required for file attachments.",
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum 1000 chars",
                        type: "String",
                    },
                    Note: {
                        sortable: true,
                        description:
                            'This note is either related to the attachment specified by <span class="literal">FileName</span> or is a standalone note. Required for standalone notes.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "max 2000 chars",
                        type: "String",
                    },
                    Tag: {
                        sortable: true,
                        description: "Tag name for the requested attachment.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "max 2000 chars",
                        type: "String",
                    },
                    Lat: {
                        sortable: true,
                        description: " Latitude from where the attachment was requested.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "max 100 chars",
                        type: "String",
                    },
                    ThumbnailFileAccessUri: {
                        readOnly: true,
                        type: "String",
                        description:
                            "FullPath FileAccess URI of the attachment thumbnail if the attachment file is of a content type with thumbnail support. Returned for file attachments.",
                        systemDefined: true,
                    },
                    TempDownloadUri: {
                        readOnly: true,
                        type: "String",
                        description:
                            "TempDownload URI which can be directly downloaded by clients. Returned for file attachments.",
                        systemDefined: true,
                    },
                    ThumbnailTempDownloadUri: {
                        sortable: true,
                        description:
                            "Thumbnail TempDownload URI which can be directly downloaded by clients. This is only available if the attachment file is of a content type with thumbnail support. Returned for file attachments.",
                        filterable: true,
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    Id: {
                        sortable: true,
                        description:
                            "Unique Identifier for an Intuit entity (object).\nRequired for the update operation.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "IdType",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "<br/>Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                },
            },
            accountresponse: {
                name: "accountresponse",
                ShowFirst: ["Id"],
                Default: [
                    "SubAccount",
                    "Classification",
                    "FullyQualifiedName",
                    "TxnLocationType",
                    "AccountType",
                    "CurrentBalanceWithSubAccounts",
                    "AccountAlias",
                    "TaxCodeRef",
                    "AccountSubType",
                    "CurrentBalance",
                ],
                Optional: ["CurrencyRef", "ParentRef", "Description", "Active", "MetaData"],
                Required: ["Name"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["AcctNum"],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    SubAccount: {
                        sortable: true,
                        description:
                            'Specifies whether this object represents a parent (false) or subaccount (true). Please note that accounts of these types - <span class="literal">OpeningBalanceEquity</span>, <span class="literal">UndepositedFunds</span>, <span class="literal">RetainedEarnings</span>, <span class="literal">CashReceiptIncome</span>, <span class="literal">CashExpenditureExpense</span>, <span class="literal">ExchangeGainOrLoss</span> cannot have a sub account and cannot be a sub account of another account.',
                        filterable: true,
                        systemDefined: true,
                        readOnly: true,
                        type: "Boolean",
                    },
                    Classification: {
                        description:
                            'The classification of an account. Not supported for non-posting accounts.\n Valid values include: <span class="literal">Asset</span>, <span class="literal">Equity</span>, <span class="literal">Expense</span>, <span class="literal">Liability</span>, <span class="literal">Revenue</span>',
                        filterable: true,
                        systemDefined: true,
                        default: "derived from AccountType and AccountSubtype",
                        readOnly: true,
                        type: "String",
                    },
                    FullyQualifiedName: {
                        sortable: true,
                        description:
                            'Fully qualified name of the object; derived from <span class="literal">Name</span> and <span class="literal">ParentRef</span>. The fully qualified name prepends the topmost parent, followed by each subaccount separated by colons and takes the form of\n<span class="literal">Parent:Account1:SubAccount1:SubAccount2</span>. System generated. Limited to 5 levels.',
                        filterable: true,
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    TxnLocationType: {
                        default: "WithinFrance",
                        type: "String",
                        minorVersion: 5,
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    AccountType: {
                        filterable: true,
                        table: {
                            accounttypes: ["Show child attributes", "Hide child attributes"],
                        },
                        type: "AccountTypeEnum",
                        description:
                            "A detailed account classification that specifies the use of this account. The type is based on the Classification.\n<br/> ",
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRef",
                        requiredFlag: "Optional",
                        description: "<br/>Reference to the currency in which this account holds amounts. ",
                    },
                    CurrentBalanceWithSubAccounts: {
                        filterable: true,
                        type: "Decimal",
                        readOnly: true,
                        sortable: true,
                        description:
                            "Specifies the cumulative balance amount for the current Account and all its sub-accounts.",
                    },
                    AccountAlias: {
                        default: "Account.Name",
                        type: "String",
                        minorVersion: 5,
                        locales: ["FR"],
                        description:
                            'A user friendly name for the account. It must be unique across all account categories. For France locales, only.\nFor example, if an account is created under category 211 with <span class="literal">AccountAlias</span> of <span class="literal">Terrains</span>, then the system does not allow creation of an account with same <span class="literal">AccountAlias</span> of <span class="literal">Terrains</span> for any other category except 211. In other words, 211001 and 215001 accounts cannot have same AccountAlias because both belong to different account category.\nFor France locales, only.',
                    },
                    AcctNum: {
                        type: "String",
                        requiredFlag: "Conditionally required",
                        description:
                            'User-defined account number to help the user in identifying the account within the chart-of-accounts and in deciding what should be posted to the account. The <span class="literal">Account.AcctNum</span> attribute must not contain colon (:).<ul><li>Name must be unique.</li></ul>For French Locales:<ul><This is a required field.</li><li>Length must be between 6 and 20 characters</li><li>Must start with the account number from the master category list.</li><li>Name limited to alpha-numeric characters.</li></ul>\n Max length for <span class="literal">Account.AcctNum</span>:<ul><li>AU & CA: 20 characters.</li><li>US, UK & IN: 7 characters</li></ul>',
                    },
                    TaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            '<br/>Reference to the default tax code used by this account. Tax codes are referenced by the <span class="literal">TaxCode.Id</span> in the TaxCode object. Available when endpoint is invoked with the <span class="literal">minorversion=3</span> query parameter. For global locales, only. ',
                        locales: ["GB", "AU", "IN", "CA", "FR"],
                        minorVersion: 3,
                    },
                    ParentRef: {
                        sortable: true,
                        description: "<br/>Specifies the Parent AccountId if this represents a SubAccount. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    AccountSubType: {
                        filterable: true,
                        table: {
                            accounttypes: ["Show child attributes", "Hide child attributes"],
                        },
                        type: "String",
                        description:
                            "The account sub-type classification and is based on the AccountType value.\n<br/> ",
                    },
                    CurrentBalance: {
                        filterable: true,
                        type: "Decimal",
                        readOnly: true,
                        sortable: true,
                        description:
                            "Specifies the balance amount for the current Account. Valid for Balance Sheet accounts.",
                    },
                    Description: {
                        sortable: true,
                        description:
                            "User entered description for the account, which may include user entered information to guide bookkeepers/accountants in deciding what journal entries to post to the account.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    Active: {
                        filterable: true,
                        default: "true",
                        type: "Boolean",
                        description:
                            "Whether or not active inactive accounts may be hidden from most display purposes and may not be posted to.",
                        requiredFlag: "Optional",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "<br/>Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    Name: {
                        sortable: true,
                        description:
                            'User recognizable name for the Account.\n<span class="literal">Account.Name</span> attribute must not contain double quotes (") or colon (:).',
                        filterable: true,
                        requiredFlag: "Required",
                        maxLen: "max 100 characters",
                        type: "String",
                    },
                },
            },
            budgetdetail: {
                name: "budgetdetail",
                ShowFirst: [],
                Default: [],
                Optional: ["ClassRef", "DepartmentRef", "Amount", "BudgetDate", "AccountRef", "CustomerRef"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    ClassRef: {
                        readOnly: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerLine</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    DepartmentRef: {
                        readOnly: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction, as defined using location tracking in QuickBooks Online. Query the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    Amount: {
                        readOnly: true,
                        type: "BigDecimal",
                        description: "Amount assigned to a BudgetDetail.",
                        requiredFlag: "Optional",
                    },
                    BudgetDate: {
                        readOnly: true,
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                        type: "DateTime",
                        requiredFlag: "Optional",
                        description: "Date of the individual BudgetDetail. ",
                    },
                    AccountRef: {
                        readOnly: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Account associated with this BudgetDetail. Query the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType=Expense</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">AccountRef.value</span> and <span class="literal">AccountRef.name</span>, respectively.',
                    },
                    CustomerRef: {
                        readOnly: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Customer associated with this BudgetDetail. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. ',
                    },
                },
            },
            depositlinedetail: {
                name: "depositlinedetail",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "PaymentMethodRef",
                    "ClassRef",
                    "CheckNum",
                    "TaxCodeRef",
                    "TaxApplicableOn",
                    "TxnType",
                    "Entity",
                ],
                Required: ["AccountRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    PaymentMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a PaymentMethod associated with this transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. Use <span class="literal">PaymentMethod.Id</span> and <span class="literal">PaymentMethod.Name</span> from that object for <span class="literal">PaymentMethodRef.value</span> and <span class="literal">PaymentMethodRef.name</span>, respectively. ',
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerLine</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    CheckNum: {
                        type: "String",
                        description: "Check number for the desposit.",
                        requiredFlag: "Optional",
                    },
                    TaxCodeRef: {
                        minorVersion: 4,
                        description:
                            'Sales/Purchase tax code associated with the Line. For Non US Companies. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">TaxCodeRef.value</span> and <span class="literal">TaxCodeRef.name</span>, respectively. ',
                        requiredFlag: "Optional",
                        type: "ReferenceType",
                        locales: ["GB", "AU", "IN", "CA"],
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    TaxApplicableOn: {
                        requiredFlag: "Optional",
                        type: "TaxApplicableOnEnum",
                        minorVersion: 4,
                        locales: ["GB", "AU", "IN", "CA"],
                        description:
                            'Indicates whether the tax applicable on the line is sales or purchase. For Non US Companies.\nValid value:\n<span class="literal">Sales</span>,\n<span class="literal">Purchase</span> Required if TaxCodeRef is specified.',
                    },
                    TxnType: {
                        table: {
                            txntypeenum: ["Show more details", "Hide details"],
                        },
                        type: "TxnTypeEnum",
                        description: "Type of the payment transaction. For information purposes only.",
                        requiredFlag: "Optional",
                    },
                    AccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Account where the funds are deposited. Query the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType</span> equals one of the following: <span class="literal">Income</span>, <span class="literal">Other Income</span>, <span class="literal">Expense</span>, <span class="literal">Other Expense</span>, <span class="literal">Other Current Assets</span>, <span class="literal">Equity</span> or <span class="literal">COGS</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">AccountRef.value</span> and <span class="literal">AccountRef.name</span>, respectively.\nFor France locales: The account associated with the referenced Account object is looked up in the account category list.\n<li>If this account has same location as specified in the transaction by the <span class="literal">TransactionLocationType</span> attribute and the same VAT as in the line item <span class="literal">TaxCodeRef</span> attribute, then this account is used.</li>\n<li>If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.</li>\n<li>If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.</li>\n</ul>',
                    },
                    Entity: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a customer from which deposit was received. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">Entity.value</span> and <span class="literal">Entity.name</span>, respectively. ',
                    },
                },
            },
            employeeresponse: {
                name: "employeeresponse",
                ShowFirst: ["Id"],
                Default: ["V4IDPseudonym"],
                Optional: [
                    "PrimaryEmailAddr",
                    "DisplayName",
                    "Title",
                    "BillableTime",
                    "GivenName",
                    "BirthDate",
                    "MiddleName",
                    "SSN",
                    "PrimaryPhone",
                    "Active",
                    "ReleasedDate",
                    "MetaData",
                    "CostRate",
                    "Mobile",
                    "Gender",
                    "HiredDate",
                    "BillRate",
                    "Organization",
                    "Suffix",
                    "FamilyName",
                    "PrintOnCheckName",
                    "EmployeeNumber",
                ],
                Required: [],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["PrimaryAddr"],
                type: "object",
                properties: {
                    PrimaryEmailAddr: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        requiredFlag: "Optional",
                        description: '<span class="literal">Primary email address.</span>\n',
                    },
                    DisplayName: {
                        sortable: true,
                        description:
                            'The name of the person or organization as displayed. Default Value: If not supplied, the system generates <span class="literal">DisplayName</span> by concatenating employee name components supplied in the request from the following list: <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, and <span class="literal">Suffix</span>.\nWhen QuickBooks Payroll is enabled, this attribute is read-only and a concatenation of <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, and <span class="literal">FamilyName</span>.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 500 chars",
                        type: "String",
                    },
                    Title: {
                        maxLen: "maximum 16 chars",
                        type: "String",
                        description:
                            "Title of the person.\nThis tag supports i18n, all locale.\nNot supported when QuickBooks Payroll is enabled.",
                        requiredFlag: "Optional",
                    },
                    BillableTime: {
                        default: "false",
                        type: "Boolean",
                        description: "If true, this entity is currently enabled for use by QuickBooks.",
                        requiredFlag: "Optional",
                    },
                    GivenName: {
                        sortable: true,
                        description:
                            'Given name or family name of a person. At least one of\n<span class="literal">GivenName</span> or <span class="literal">FamilyName</span> attributes is required.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    V4IDPseudonym: {
                        "system generated": true,
                        readOnly: true,
                        type: "String",
                        minorVersion: 26,
                        description: "Employee reference number. For internal use only.",
                    },
                    BirthDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "Birth date of the employee.",
                    },
                    MiddleName: {
                        sortable: true,
                        description: "Middle name of the person. The person can have zero or more middle names.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    SSN: {
                        maxLen: "max 100 chars",
                        type: "String",
                        description:
                            "Social security number (SSN) of the employee. If SSN is set, it is masked in the response with XXX-XX-XXXX. If  XXX-XX-XXXX is sent in the create or update request, XXX-XX-XXXX is ignored and the old value is preserved.\nThis attribute cannot be passed in a request when QuickBooks Payroll is enabled. Code for this field must be removed before submitting.",
                        requiredFlag: "Optional",
                    },
                    PrimaryAddr: {
                        description:
                            'Represents the physical street address for this employee. If QuickBooks Payroll is enabled for the company, the following PhysicalAddress fields are required:\n<li><span class="literal">City</span>, maximum of 255 chars</li>\n<li><span class="literal">CountrySubDivisionCode</span>, maximum of 255 chars</li>\n<li><span class="literal">PostalCode</span></li></ul>\n Required when QuickBooks Payroll is enabled.<br> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum 30 characters",
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        type: "PhysicalAddress",
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                    },
                    PrimaryPhone: {
                        maxLen: "maximum of 20 chars",
                        $ref: [
                            {
                                telephonenumber: "TelephoneNumber",
                            },
                        ],
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                        description: '<span class="literal">Primary phone number.</span>',
                    },
                    Active: {
                        filterable: true,
                        default: "true",
                        type: "Boolean",
                        description: "If true, this entity is currently enabled for use by QuickBooks.",
                        requiredFlag: "Optional",
                    },
                    ReleasedDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "Release date of the employee.",
                    },
                    MetaData: {
                        type: "ModificationMetaData",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.",
                        requiredFlag: "Optional",
                    },
                    CostRate: {
                        type: "BigDecimal",
                        description: "Pay rate of the employee",
                        requiredFlag: "Optional",
                    },
                    Mobile: {
                        maxLen: "maximum of 20 chars",
                        $ref: [
                            {
                                telephonenumber: "TelephoneNumber",
                            },
                        ],
                        type: "TelephoneNumber",
                        requiredFlag: "Optional",
                        description: "Mobile phone number.",
                    },
                    Gender: {
                        type: "String",
                        description:
                            'Gender of the employee. To clear the gender value, set to Null in a full update request. Supported values include: <span class="literal">Male</span> or <span class="literal">Female</span>.',
                        requiredFlag: "Optional",
                    },
                    HiredDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "Hire date of the employee.",
                    },
                    BillRate: {
                        type: "BigDecimal",
                        description:
                            'This attribute can only be set if <span class="literal">BillableTime</span> is true.\nNot supported when QuickBooks Payroll is enabled.',
                        requiredFlag: "Optional",
                    },
                    Organization: {
                        default: "false or null",
                        type: "Boolean",
                        description:
                            '<span class="literal">true</span>--the object represents an organization.\n<span class="literal">false</span>--the object represents a person.',
                        requiredFlag: "Optional",
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    Suffix: {
                        sortable: true,
                        description:
                            'Suffix of the name. For example, <span class="literal">Jr</span>.\nNot supported when QuickBooks Payroll is enabled.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 16 chars",
                        type: "String",
                    },
                    FamilyName: {
                        sortable: true,
                        description:
                            'Family name or the last name of the person. At least one of\n<span class="literal">GivenName</span> or <span class="literal">FamilyName</span> attributes is required.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    PrintOnCheckName: {
                        sortable: true,
                        description:
                            '<span>Name of the person or organization as printed on a check. If not provided, this is populated from <span class="literal">DisplayName</span>.</span>\nCannot be removed with sparse update.\nNot supported when QuickBooks Payroll is enabled.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    EmployeeNumber: {
                        maxLen: "max 100 chars",
                        type: "String",
                        description: "Specifies the ID number of the employee in the employer's directory.",
                        requiredFlag: "Optional",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            customerincomequery: {
                name: "customerincomequery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "term",
                    "accounting_method",
                    "end_date",
                    "date_macro",
                    "class",
                    "sort_order",
                    "summarize_column_by",
                    "department",
                    "vendor",
                    "start_date",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.\nSupported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    term: {
                        default: "Return data for all terms",
                        type: "String",
                        description:
                            'Filters report contents based on term or terms supplied.\nSupported Values: One or more comma separated term IDs as returned in the attribute, <span class="literal">Term.Id</span> of the Term object response code.',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute',
                        type: "String",
                        description:
                            'The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "Include data for all classes",
                        type: "String",
                        description:
                            ' Filters report contents to include information for specified classes if so configured in the company file.\nSupported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.\nSupported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.\nSupported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "Return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.\nSupported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                },
            },
            recurringtransactionresponse: {
                name: "recurringtransactionresponse",
                ShowFirst: ["Id"],
                Default: ["Type"],
                Optional: ["RecurDataRef", "MetaData"],
                Required: ["RecurringInfo"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        requiredFlag: "Required for update",
                        type: "String",
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        systemDefined: true,
                    },
                    RecurringInfo: {
                        $ref: [
                            {
                                recurringinfo: "RecurringInfo",
                            },
                        ],
                        type: "RecurringInfo",
                        requiredFlag: "Required",
                        description: "Describes the recurring schedules for transactions.",
                    },
                    RecurDataRef: {
                        sortable: true,
                        description: "Reference to the recur template associated with the transaction.",
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Type: {
                        filterable: true,
                        type: "String",
                        description:
                            'Specifies the list of entities that are supported for recurring transactions: <span class="literal">Bill</span>,<span class="literal">Purchase</span>,<span class="literal">CreditMemo</span>,<span class="literal">Deposit</span>,<span class="literal">Estimate</span>,<span class="literal">Invoice</span>,<span class="literal">JournalEntry</span>,<span class="literal">RefundReceipt</span>,<span class="literal">SalesReceipt</span>,<span class="literal">Transfer</span>,<span class="literal">VendorCredit</span> or <span class="literal">PurchaseOrder</span>',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Optional",
                        systemDefined: true,
                        type: "String",
                    },
                    MetaData: {
                        filterable: true,
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                },
            },
            reportrows: {
                name: "reportrows",
                ShowFirst: [],
                Default: ["Row [0..n]"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "Row [0..n]": {
                        description:
                            'Represents a row in a report. A group of rows is enclosed in a <span class="literal">Rows</span> container. Rows may be nested either as a single row or in sets, based on the accounts represented in the report and query parameters specified in the request.\nParameters:\n<li>\n<span class="literal">type</span>\u2014As an enclosing section of sub-rows, this is always the string, <span class="literal">Section</span>. As a leaf row, this is always the string, <span class="literal">Data</span>.\n</li>\n<li><span class="literal">group</span>\u2014The group name, valid when <span class="literal">type=Section</span>. Possible values include: <span class="literal">Income</span>, <span class="literal">COGS</span>, <span class="literal">GrossProfit</span>, <span class="literal">Expenses</span>, <span class="literal">NetOperatingIncome</span>, <span class="literal">OtherIncome</span>, <span class="literal">OtherExpenses</span>, <span class="literal">NetOtherIncome</span>, <span class="literal">NetIncome</span></li>\n</ul>\n',
                        $ref: [
                            {
                                reportrow: "ReportRow",
                            },
                        ],
                    },
                },
            },
            linkedtxnbill: {
                name: "linkedtxn",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["TxnLineId", "TxnId", "TxnType"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    TxnLineId: {
                        type: "String",
                        description:
                            "The line number of a specific line of the PurchaseOrder. This is required at the Line level of a Bill.",
                        requiredFlag: "Required",
                    },
                    TxnId: {
                        type: "String",
                        description: "Transaction Id of the related PurhaseOrder.",
                        requiredFlag: "Required",
                    },
                    TxnType: {
                        type: "String",
                        description: 'This should be set to <span class="literal">PurchaseOrder</span>.',
                        requiredFlag: "Required",
                    },
                },
            },
            journalentryrequest: {
                name: "journalentryrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Line [0..n]"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["JournalCodeRef", "CurrencyRef"],
                type: "object",
                properties: {
                    JournalCodeRef: {
                        minorVersion: 5,
                        description:
                            'Reference to a JournalCode object. Query the JournalCode name list resource to determine the appropriate JournalCode object for this reference. Use <span class="literal">JournalCode.Id</span> and <span class="literal">JournalCode.Name\n</span> Required for France locales.',
                        requiredFlag: "Conditionally required",
                        type: "ReferenceType",
                        locales: ["FR"],
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                journalentryline: "JournalEntryLine",
                            },
                        ],
                        type: "Line",
                        description:
                            'Individual line items of a journal entry. Two line items are required: one with <span class="literal">PostingType</span> set to <span class="literal">Debit</span> and one with <span class="literal">PostingType</span> set to <span class="literal">Credit</span>. Set <span class="literal">Line.DetailType</span> to <span class="literal">JournalEntryLine</span> for both lines. ',
                        requiredFlag: "Required",
                    },
                },
            },
            currencyref: {
                name: "currencyref",
                ShowFirst: [],
                Default: [],
                Optional: ["name"],
                Required: ["value"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    name: {
                        type: "String",
                        description: "The full name of the currency.",
                        requiredFlag: "Optional",
                    },
                    value: {
                        type: "String",
                        description:
                            'A three letter string representing the ISO 4217 code for the currency. For example, <span class="literal">USD</span>, <span class="literal">AUD</span>, <span class="literal">EUR</span>, and so on.',
                        requiredFlag: "Required",
                    },
                },
            },
            itemresponse: {
                name: "itemresponse",
                ShowFirst: ["Id"],
                Default: [
                    "FullyQualifiedName",
                    "ExpenseAccountRef",
                    "Level",
                    "IncomeAccountRef",
                    "TaxClassificationRef",
                ],
                Optional: [
                    "Sku",
                    "SalesTaxIncluded",
                    "TrackQtyOnHand",
                    "SalesTaxCodeRef",
                    "ClassRef",
                    "Source",
                    "PurchaseTaxIncluded",
                    "Description",
                    "AbatementRate",
                    "SubItem",
                    "Taxable",
                    "UQCDisplayText",
                    "ReorderPoint",
                    "PurchaseDesc",
                    "MetaData",
                    "PrefVendorRef",
                    "Active",
                    "UQCId",
                    "ReverseChargeRate",
                    "PurchaseTaxCodeRef",
                    "ServiceType",
                    "PurchaseCost",
                    "ParentRef",
                    "UnitPrice",
                ],
                Required: ["ItemCategoryType", "Name"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["InvStartDate", "Type", "QtyOnHand", "AssetAccountRef"],
                type: "object",
                properties: {
                    Sku: {
                        description:
                            "The stock keeping unit (SKU) for this Item. This is a company-defined identifier for an item or product used in tracking inventory.",
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        minorVersion: 4,
                    },
                    SalesTaxIncluded: {
                        default: "false",
                        type: "Boolean",
                        description:
                            "True if the sales tax is included in the item amount, and therefore is not calculated for the transaction.",
                        requiredFlag: "Optional",
                    },
                    TrackQtyOnHand: {
                        default: "false",
                        type: "Boolean",
                        description:
                            'True if there is quantity on hand to be tracked. Once this value is true, it cannot be updated to false. Applicable for items of type <span class="literal">Inventory</span>.\n Not applicable for <span class="literal">Service</span> or <span class="literal">NonInventory</span> item types.',
                        requiredFlag: "Optional",
                    },
                    ItemCategoryType: {
                        minorVersion: 3,
                        type: "String",
                        description:
                            'Classification that specifies the use of this item. Applicable for France companies, only. Available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter.\nRead-only after object is created.\nValid values include:\n<span class="literal">Product</span> and <span class="literal">Service</span>.',
                        locales: ["FR"],
                        requiredFlag: "Required",
                    },
                    SalesTaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the sales tax code for the Sales item. Applicable to Service and Sales item types only. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">SalesTaxCodeRef.value</span> and <span class="literal">SalesTaxCodeRef.name</span>, respectively. ',
                    },
                    ClassRef: {
                        description:
                            'Reference to the Class for the item. Query the Class name list resource to determine the appropriate object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively.',
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        minorVersion: 41,
                    },
                    Source: {
                        requiredFlag: "Optional",
                        type: "String",
                        minorVersion: 59,
                        description:
                            'The Source type of the transactions created by QuickBooks Commerce. Valid values include: <span class="literal">QBCommerce</span>',
                    },
                    InvStartDate: {
                        description:
                            'Date of opening balance for the inventory transaction.\nFor read operations, the date returned in this field is always the originally provided inventory start date.\nFor update operations, the date supplied is interpreted as the inventory adjust date, is stored as such in the underlying data model, and is reflected in the QuickBooks Online UI for the object. The inventory adjust date is not exposed for read operations through the API. Required for <span class="literal">Inventory</span> type items.',
                        type: "Date",
                        requiredFlag: "Conditionally required",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    Type: {
                        sortable: true,
                        description:
                            'Classification that specifies the use of this item. See the description at the top of the Item entity page for details about supported item types.\nFor requests with minor versions earlier than 4 specified, this field is read-only and system-defined as follows:\n<li><span class="literal">Inventory</span>--Default setting when <span class="literal">TrackQtyOnHand</span>, <span class="literal">InvStartDate</span>, and <span class="literal">AssetAccountRef</span> are specified. Used for goods the company sells and buys that are tracked as inventory. </li>\n<li><span class="literal">Service</span>--Default setting when <span class="literal">TrackQtyOnHand</span>, <span class="literal">InvStartDate</span>, and <span class="literal">AssetAccountRef</span> are not specified. Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees.</li>\n</ul>\nFor requests with minor version=4 query parameter, this field is required to be explicitly set with one of the following:\n<li><span class="literal">Inventory</span>--Used for goods the company sells and buys that are tracked as inventory. </li>\n<li><span class="literal">Service</span>--Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees.</li>\n<li><span class="literal">NonInventory</span>--Use for goods the company sells and buys that are not tracked as inventory. For example, office supplies or goods bought on behalf of the customer.</li>\n</ul>\nWhen querying Item objects with minor versions earlier than 4 specified, <span class="literal">NonInventory</span> types are returned as type <span class="literal">Service</span>.\nFor French locales, <span class="literal">Type</span> is tied with <span class="literal">ItemCategoryType</span>: if <span class="literal">ItemCategoryType</span> is set to <span class="literal">Service</span>, then <span class="literal">Type</span> is set to <span class="literal">Service</span>, if <span class="literal">ItemCategoryType</span> is <span class="literal">Product</span>, then <span class="literal">Type</span> is set to <span class="literal">NonInventory</span>. >Required when minor version 4 is specified.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        type: "String",
                        minorVersion: "specified.",
                    },
                    PurchaseTaxIncluded: {
                        default: "False",
                        type: "Boolean",
                        description:
                            "True if the purchase tax is included in the item amount, and therefore is not calculated for the transaction.",
                        requiredFlag: "Optional",
                    },
                    FullyQualifiedName: {
                        filterable: true,
                        readOnly: true,
                        type: "String",
                        description:
                            'Fully qualified name of the entity. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of\n<span class="literal">Item:SubItem</span>. Returned from an existing object and not input on a new object.Limited to 5 levels.',
                        systemDefined: true,
                    },
                    Description: {
                        maxLen: "maximum of 4000 chars",
                        type: "String",
                        description: "Description of the item.",
                        requiredFlag: "Optional",
                    },
                    AbatementRate: {
                        minorVersion: 3,
                        type: "Decimal",
                        description: "Sales tax abatement rate for India locales.",
                        locales: ["IN"],
                        requiredFlag: "Optional",
                    },
                    ExpenseAccountRef: {
                        type: "ReferenceType",
                        description:
                            'Reference to the expense account used to pay the vendor for this item. Must be an account with account type of <span class="literal">Cost of Goods Sold</span>. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">ExpenseAccountRef.value</span> and <span class="literal">ExpenseAccountRef.name</span>, respectively.\nFor France locales:\n<li>This is an optional field.</li>\n<li>This is the purchase account id, If not provided it defaults to the default purchase account: 605100 and 601100 are the default expense accounts used for <span class="literal">Service</span> and <span class="literal">Product</span> type of item, respectively.</li>\n</ul>\n Required for <span class="literal">Inventory</span>, <span class="literal">NonInventory</span>, and <span class="literal">Service</span> item types',
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    SubItem: {
                        type: "Boolean",
                        description:
                            "If true, this is a sub item. If false or null, this is a top-level item.\nCreating inventory hierarchies with traditional inventory items is being phased out in lieu of using categories and sub categories.",
                        requiredFlag: "Optional",
                    },
                    Taxable: {
                        type: "Boolean",
                        requiredFlag: "Optional",
                        locales: ["US"],
                        description:
                            "If true, transactions for this item are taxable. Applicable to US companies, only.",
                    },
                    UQCDisplayText: {
                        minorVersion: 33,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 25 chars",
                        type: "String",
                        locales: ["IN"],
                        description:
                            "Text to be displayed on customer's invoice to denote the Unit of Measure (instead of the standard code).",
                    },
                    ReorderPoint: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "The minimum quantity of a particular inventory item that you need to restock at any given time. The ReorderPoint value cannot be set to null for sparse updates(sparse=true). It can be set to null only for full updates.",
                    },
                    PurchaseDesc: {
                        maxLen: "Max 1000 chars",
                        type: "String",
                        description: "Purchase description for the item.",
                        requiredFlag: "Optional",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    PrefVendorRef: {
                        description:
                            'Reference to the preferred vendor of this item. Query the Vendor name list resource to determine the appropriate object for this reference. Use <span class="literal">Vendor.Id</span> and <span class="literal">Vendor.Name</span> from that object for <span class="literal">ParentRef.value</span> and <span class="literal">ParentRef.name</span>, respectively.',
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        minorVersion: 31,
                    },
                    Name: {
                        sortable: true,
                        description: "Name of the item. This value is unique.",
                        filterable: true,
                        requiredFlag: "Required",
                        maxLen: "maximum of 100 chars",
                        type: "String",
                    },
                    Level: {
                        default: "0",
                        readOnly: true,
                        type: "Integer",
                        description:
                            "Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be the next level with respect to the parent. Limited to 5 levels.",
                        systemDefined: true,
                    },
                    IncomeAccountRef: {
                        description:
                            'Reference to the posting account, that is, the account that records the proceeds from the sale of this item. Must be an account with account type of <span class="literal">Sales of Product Income</span>. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">IncomeAccountRef.value</span> and <span class="literal">IncomeAccountRef.name</span>, respectively.For France locales: <li>This is an optional field.</li>\n<li>This is the sales account id, If not provided it defaults to the default sales account: 706100 and 707100 are the default expense accounts used for <span class="literal">Service</span> and <span class="literal">Product</span> type of item, respectively.</li>\n</ul>\n required for <span class="literal">Inventory</span> and <span class="literal">Service</span> item types',
                        type: "ReferenceType",
                        requiredFlag: "Conditionally Required",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Active: {
                        filterable: true,
                        default: "true",
                        type: "Boolean",
                        description: "If true, the object is currently enabled for use by QuickBooks.",
                        requiredFlag: "Optional",
                    },
                    UQCId: {
                        description:
                            "Id of Standard Unit of Measure (UQC:Unique Quantity Code) of the item according to GST rule.  UQCId should be one of the following ids: ",
                        requiredFlag: "Optional",
                        table: {
                            uqid: ["Show valid values", "Hide valid values"],
                        },
                        type: "String",
                        locales: ["IN"],
                        minorVersion: 33,
                    },
                    ReverseChargeRate: {
                        minorVersion: 3,
                        type: "Decimal",
                        description: "Sales tax reverse charge rate for India locales.",
                        locales: ["IN"],
                        requiredFlag: "Optional",
                    },
                    TaxClassificationRef: {
                        type: "ReferenceType",
                        description:
                            "Tax classification segregates different items into different classifications and the tax classification is one of the key parameters to determine appropriate tax on transactions involving items. Tax classifications are sourced by either tax governing authorities as in India/Malaysia or externally like Exactor. 'Fuel', 'Garments' and 'Soft drinks' are a few examples of tax classification in layman terms. User can choose a specific tax classification for an item while creating it. A level 1 tax classification cannot be associated to an Item. ",
                        minorVersion: 34,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    PurchaseTaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the purchase tax code for the item. Applicable to Service, Other Charge, and Product (Non-Inventory) item types. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use <span class="literal">TaxCode.Id</span> and <span class="literal">TaxCode.Name</span> from that object for <span class="literal">PurchaseTaxCodeRef.value</span> and <span class="literal">PurchaseTaxCodeRef.name</span>, respectively. ',
                    },
                    SyncToken: {
                        readOnly: true,
                        description: "Version number of the entity.\nRequired for the update operation.",
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    ServiceType: {
                        minorVersion: 3,
                        requiredFlag: "Optional",
                        table: {
                            service_type: ["Show valid values", "Hide valid values"],
                        },
                        type: "String",
                        locales: ["IN"],
                        description: "Sales tax service type for India locales. ",
                    },
                    PurchaseCost: {
                        maxLen: "Maximum of 99999999999",
                        type: "Decimal",
                        description: "Amount paid when buying or ordering the item, as expressed in the home currency.",
                        requiredFlag: "Optional",
                    },
                    QtyOnHand: {
                        type: "Decimal",
                        sortable: true,
                        requiredFlag: "Conditionally required",
                        description:
                            'Current quantity of the <span class="literal">Inventory</span> items available for sale. Not used for <span class="literal">Service</span> or <span class="literal">NonInventory</span> type items.Required for <span class="literal">Inventory</span> type items.',
                    },
                    AssetAccountRef: {
                        description:
                            'Reference to the Inventory Asset account that tracks the current value of the inventory. If the same account is used for all inventory items, the current balance of this account will represent the current total value of the inventory. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">AssetAccountRef.value</span> and <span class="literal">AssetAccountRef.name</span>, respectively. Required for <span class="literal">Inventory</span> item types.',
                        type: "ReferenceType",
                        requiredFlag: "Conditionally required",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    ParentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'The immediate parent of the sub item in the hierarchical Item:SubItem list. If SubItem is true, then ParenRef is required. If SubItem is true, then ParenRef is required. Query the Item name list resource to determine the appropriate object for this reference. Use <span class="literal">Item.Id</span> and <span class="literal">Item.Name</span> from that object for <span class="literal">ParentRef.value</span> and <span class="literal">ParentRef.name</span>, respectively.',
                    },
                    UnitPrice: {
                        sortable: true,
                        description:
                            'Corresponds to the Price/Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item.\nIf used for unit price, the monetary value of the service or product, as expressed in the home currency.\nIf used for a discount or tax rate, express the percentage as a fraction. For example, specify <span class="literal">0.4</span> for 40% tax.',
                        default: "0",
                        requiredFlag: "Optional",
                        maxLen: "maximum of 99999999999",
                        type: "Decimal",
                    },
                    Id: {
                        sortable: true,
                        description:
                            "Unique Identifier for an Intuit entity (object).\nRequired for the update operation.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "IdType",
                    },
                },
            },
            journalentryline: {
                name: "journalentryline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Description", "LineNum"],
                Required: ["JournalEntryLineDetail", "DetailType", "Amount"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Description: {
                        maxLen: "Max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    JournalEntryLineDetail: {
                        type: "JournalEntryLineDetail",
                        requiredFlag: "Required",
                        $ref: [
                            {
                                journalentrylinedetail: "JournalEntryLineDetail",
                            },
                        ],
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description:
                            'Set to\n<span class="literal">JournalEntryLineDetail</span>for this type of line.',
                        requiredFlag: "Required",
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer",
                    },
                    Amount: {
                        maxLen: "Max 15 digits in 10.5 format",
                        type: "Decimal",
                        description: "The amount of the line item.",
                        requiredFlag: "Required",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item.\nIn requests, if <span class="literal">Id</span> matches that for an existing line in the transaction the line is updated. Otherwise, a new line is created. Integer as string.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            purchaseorderitemlinedetail: {
                name: "purchaseorderitemlinedetail",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "OpenQty",
                    "ItemRef",
                    "ManuallyClosed",
                    "PriceLevelRef",
                    "ClassRef",
                    "TaxCodeRef",
                    "MarkupInfo",
                    "ServiceDate",
                    "Qty",
                    "UnitPrice",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    OpenQty: {
                        readOnly: "true",
                        type: "Decimal",
                        description: "Represents the difference between the quantity ordered and actually received.",
                        requiredFlag: "Optional",
                    },
                    ItemRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Item. When a line lacks an ItemRef it is treated as documentation and the\n<span class="literal">Line.Amount</span> attribute is ignored.\nFor France locales: The account associated with the referenced Item object is looked up in the account category list.\n<li>If this account has same location as specified in the transaction by the <span class="literal">TransactionLocationType</span> attribute and the same VAT as in the line item <span class="literal">TaxCodeRef</span> attribute, then the item account is used.</li>\n<li>If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.</li>\n<li>If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.</li>\n</ul>',
                    },
                    ManuallyClosed: {
                        type: "Boolean",
                        description:
                            "The item on the line is marked as if fully received, but it is closed as no longer available.",
                        requiredFlag: "Optional",
                    },
                    PriceLevelRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description: "Reference to the PriceLevel of the service or item for the line. ",
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description: "Reference to the Class for the line item. ",
                    },
                    TaxCodeRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the\n<span class="literal">TaxCode</span>for the purchase of this item. ',
                    },
                    MarkupInfo: {
                        $ref: [
                            {
                                markupinfo: "MarkupInfo",
                            },
                        ],
                        type: "MarkupInfo",
                        requiredFlag: "Optional",
                        description: "Markup information for the expense. ",
                    },
                    ServiceDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        requiredFlag: "Optional",
                        description: "Date when the service is performed. ",
                    },
                    Qty: {
                        type: "Decimal",
                        description: "Number of items to be purchased.",
                        requiredFlag: "Optional",
                    },
                    UnitPrice: {
                        type: "Decimal",
                        description:
                            'Unit price of the subject item as referenced by\n<span class="literal">ItemRef</span>. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item.\nIf used for unit price, the monetary value of the service or product, as expressed in the home currency.\nIf used for a discount or tax rate, express the percentage as a fraction. For example, specify <span class="literal">0.4</span> for 40% tax.',
                        requiredFlag: "Optional",
                    },
                },
            },
            billresponse: {
                name: "billresponse",
                ShowFirst: ["Id"],
                Default: ["HomeBalance", "RecurDataRef", "Balance"],
                Optional: [
                    "TxnDate",
                    "APAccountRef",
                    "SalesTermRef",
                    "LinkedTxn [0..n]",
                    "GlobalTaxCalculation",
                    "TotalAmt",
                    "TransactionLocationType",
                    "DueDate",
                    "MetaData",
                    "DocNumber",
                    "PrivateNote",
                    "TxnTaxDetail",
                    "ExchangeRate",
                    "DepartmentRef",
                    "IncludeInAnnualTPAR",
                ],
                Required: ["VendorRef", "Line [0..n]"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n<br/>Sort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    APAccountRef: {
                        sortable: true,
                        description:
                            'Specifies to which AP account the bill is credited. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">APAccountRef.value</span> and <span class="literal">APAccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.Classification</span> set to <span class="literal">Liability</span> and <span class="literal">Account.AccountSubType</span> set to <span class="literal">AccountsPayable</span>.\nIf the company has a single AP account, the account is implied. However, it is recommended that the AP Account be explicitly specified in all cases to prevent unexpected errors when relating transactions to each other. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    HomeBalance: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Convenience field containing the amount in <span class="literal">Balance</span> expressed in terms of the home currency. Calculated by QuickBooks business logic. Value is valid only when <span class="literal">CurrencyRef</span> is specified and available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter. Applicable if multicurrency is enabled for the company.',
                        minorVersion: 3,
                    },
                    SalesTermRef: {
                        sortable: true,
                        description:
                            'Reference to the Term associated with the transaction. Query the Term name list resource to determine the appropriate Term object for this reference. Use <span class="literal">Term.Id</span> and <span class="literal">Term.Name</span> from that object for <span class="literal">SalesTermRef.value</span> and <span class="literal">SalesTermRef.name</span>, respectively. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    "LinkedTxn [0..n]": {
                        readOnly: false,
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                        type: "LinkedTxn",
                        requiredFlag: "Optional",
                        description:
                            'Zero or more transactions linked to this Bill object. The <span class="literal">LinkedTxn.TxnType</span> can be set to <span class="literal">PurchaseOrder</span>, <span class="literal">BillPaymentCheck</span> or if using Minor Version 55 and above <span class="literal">ReimburseCharge</span>. Use <span class="literal">LinkedTxn.TxnId</span> as the ID of the transaction.',
                    },
                    GlobalTaxCalculation: {
                        default: '<span class="literal">TaxExcluded</span>',
                        type: "GlobalTaxCalculationEnum",
                        description:
                            'Method in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                        locales: ["GB", "AU", "IN", "CA"],
                        requiredFlag: "Optional",
                    },
                    TotalAmt: {
                        sortable: true,
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        filterable: true,
                        requiredFlag: "Optional",
                        readOnly: true,
                        type: "BigDecimal",
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    DueDate: {
                        sortable: true,
                        description:
                            'Date when the payment of the transaction is due. If date is not provided, the number of days specified in\n<span class="literal">SalesTermRef</span> added the transaction date will be used. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, a custom value can be provided. If no value is supplied, the resulting DocNumber is null.\nThrows an error when duplicate DocNumber is sent in the request. \nRecommended best practice: check the setting of <span class="literal">Preferences:OtherPrefs </span> before setting DocNumber. If a duplicate DocNumber needs to be supplied, add the query parameter name/value pair, <span class="literal">include=allowduplicatedocnum</span> to the URI.\nSort order is ASC by default.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "maximum of 21 chars",
                        type: "String",
                    },
                    PrivateNote: {
                        maxLen: "max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Memo field on the Invoice form.",
                        requiredFlag: "Optional",
                    },
                    VendorRef: {
                        sortable: true,
                        description:
                            'Reference to the vendor for this transaction. Query the Vendor name list resource to determine the appropriate Vendor object for this reference. Use <span class="literal">Vendor.Id</span> and <span class="literal">Vendor.Name</span> from that object for <span class="literal">VendorRef.value</span> and <span class="literal">VendorRef.name</span>, respectively. ',
                        filterable: true,
                        requiredFlag: "Required",
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">Bill</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                itembasedexpenselinebill: "ItemBasedExpenseLine",
                            },
                            {
                                accountbasedexpenselinebill: "AccountBasedExpenseLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items of a transaction. \nValid <span class="literal">Line</span> types include:\n<span class="literal">ItemBasedExpenseLine</span> and <span class="literal">AccountBasedExpenseLine</span>',
                    },
                    Balance: {
                        filterable: true,
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'The balance reflecting any payments made against the transaction. Initially set to the value of\n<span class="literal">TotalAmt</span>. A Balance of 0 indicates the bill is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.',
                    },
                    TxnTaxDetail: {
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                        type: "TxnTaxDetail",
                        requiredFlag: "Optional",
                        locales: ["GB", "AU", "IN", "CA"],
                        description:
                            'This data type provides information for taxes charged on the transaction as a whole. It captures the details of all taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction.\nIf sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored.',
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction, as defined using location tracking in QuickBooks Online. Query the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    IncludeInAnnualTPAR: {
                        minorVersion: 40,
                        default: '<span class="literal">false</span>',
                        requiredFlag: "Optional",
                        type: "Boolean",
                        locales: ["AU"],
                        description:
                            "Include the supplier in the annual TPAR. TPAR stands for Taxable Payments Annual Report. The TPAR is mandated by ATO to get the details payments that businesses make to contractors for providing services. Some government entities also need to report the grants they have paid in a TPAR.",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            categoryupdaterequest: {
                name: "categoryupdaterequest",
                ShowFirst: ["Id"],
                Default: ["Level", "FullyQualifiedName", "ParentRef"],
                Optional: ["Active", "MetaData"],
                Required: ["Name", "Type"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["SubItem"],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    Name: {
                        maxLen: "maximum of 100 chars",
                        type: "String",
                        description: "Name of the category.",
                        requiredFlag: "Required",
                    },
                    Level: {
                        readOnly: true,
                        type: "Integer",
                        description:
                            'Specifies the level of the hierarchy in which the object is located. First sub-category level below the top-most category is 1. Returned in the response body only when SubItem is set to <span class="literal">true</span>.\nSub-categories can be nested to a maximum depth of three levels below a top-level category.',
                        systemDefined: true,
                    },
                    FullyQualifiedName: {
                        readOnly: true,
                        type: "String",
                        description:
                            'Colon-separated list of the top-level category, followed by each sub-category in the hierarchy. Takes the form of <span class="literal">Category:SubCategory1:SubCategory2:...</span>. Limited to 5 levels: 4 category levels with an inventory, non-inventory, or service item as the 5th.',
                        systemDefined: true,
                    },
                    SubItem: {
                        type: "Boolean",
                        requiredFlag: "Conditionally required",
                        description:
                            '<span class="literal">true</span>--The object is a sub-category.\n<span class="literal">false</span>--The object is a top-level category (default).\nSub-categories can be nested to a maximum depth of three levels below a top-level category. Required if this is a sub-category object.',
                    },
                    ParentRef: {
                        type: "ReferenceType",
                        description:
                            'The immediate parent of the sub item in the hierarchical Category:Sub-category list. If SubItem is true, then ParenRef is required. Query the Item name list resource to determine the appropriate object for this reference. Use <span class="literal">Item.Id</span> and <span class="literal">Item.Name</span> from that object for <span class="literal">ParentRef.value</span> and <span class="literal">ParentRef.name</span>, respectively. ',
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Active: {
                        type: "Boolean",
                        description: 'For categories, this is always set to <span class="literal">true</span>.',
                        requiredFlag: "Optional",
                    },
                    Type: {
                        type: "String",
                        description:
                            'Must be set to the literal string, <span class="literal">Category</span>\nAvailable when endpoint is envoked with the <span class="literal">minorversion=4</span> query paramter. Without <span class="literal">minorversion=4</span>, the type is set to <span class="literal">Service</span>.',
                        requiredFlag: "Required",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        description:
                            "Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. ",
                        systemDefined: true,
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                    },
                },
            },
            vendorrequest: {
                name: "vendorrequest",
                ShowFirst: [],
                Default: [],
                Optional: ["DisplayName"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: ["Suffix", "Title", "MiddleName", "FamilyName", "GivenName"],
                type: "object",
                properties: {
                    DisplayName: {
                        sortable: true,
                        description:
                            'The name of the vendor as displayed. Must be unique across all Vendor, Customer, and Employee objects. Cannot be removed with sparse update.\nIf not supplied, the system generates <span class="literal">DisplayName</span> by concatenating vendor name components supplied in the request from the following list: <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, and <span class="literal">Suffix</span>.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 500 chars",
                        type: "String",
                    },
                    Suffix: {
                        sortable: true,
                        description:
                            'Suffix of the name. For example, <span class="literal">Jr</span>. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "Maximum of 16 chars",
                        type: "String",
                    },
                    Title: {
                        maxLen: "Maximum of 16 chars",
                        type: "String",
                        requiredFlag: "Conditionally required",
                        description:
                            'Title of the person. This tag supports i18n, all locales. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, <span class="literal">Suffix</span>, or <span class="literal">FullyQualifiedName</span> attributes are required during create.',
                    },
                    MiddleName: {
                        sortable: true,
                        description:
                            'Middle name of the person. The person can have zero or more middle names. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                    },
                    FamilyName: {
                        sortable: true,
                        description:
                            'Family name or the last name of the person. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                    },
                    GivenName: {
                        sortable: true,
                        description:
                            'Given name or first name of a person. The <span class="literal">DisplayName</span> attribute or at least one of <span class="literal">Title</span>, <span class="literal">GivenName</span>, <span class="literal">MiddleName</span>, <span class="literal">FamilyName</span>, or <span class="literal">Suffix</span> attributes is required for object create.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "Maximum of 100 chars",
                        type: "String",
                    },
                },
            },
            journalreportquery: {
                name: "journalreportquery",
                ShowFirst: [],
                Default: [],
                Optional: ["journal_code", "end_date", "date_macro", "sort_by", "sort_order", "start_date", "columns"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    journal_code: {
                        default: "Include data for all journal codes",
                        type: "String",
                        description:
                            "Filters report contents to include information for specified journal codes.\nSupported Values: One or more comma separated journal codes. For example AN, BQ1, VT, and so on.",
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    sort_by: {
                        default: '<span class="literal">txn_type</span>',
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    columns: {
                        default: "columns denoted with *",
                        type: "String",
                        description:
                            "Column types to be shown in the report.\nSupported Values: acct_num_with_extn*, account_name*, credit_amt*, create_by, create_date, debt_amt*, doc_num*, due_date*, is_ar_paid*, is_ap_paid*, item_name, journal_code_name*, last_mod_by, last_mod_date, memo*, name, neg_open_bal, paid_date*, pmt_mthd*, quantity, rate, tx_date*, txn_num*, txn_type*",
                        requiredFlag: "Optional",
                    },
                },
            },
            salesreceiptrequest: {
                name: "salesreceiptrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Line [0..n]"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company',
                        requiredFlag: "Conditionally required",
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                            {
                                groupline: "GroupLine",
                            },
                        ],
                        requiredFlag: "Required",
                        description:
                            'The minimum line item required for the request is one of the following: \n<span class="literal">SalesItemLine</span> and \n<span class="literal">GroupLine</span>',
                    },
                },
            },
            fecreportquery: {
                name: "fecreportquery ",
                ShowFirst: [],
                Default: [],
                Optional: ["attachmentType", "withQboIdentifier", "start_date", "end_date", "add_due_date"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    attachmentType: {
                        default: "The Attachment type",
                        type: "String",
                        description:
                            'The parameter attachment type is a string value, and can accept one of the values : <span class="literal">TEMPORARY_LINKS</span> or <span class="literal">NONE</span> only.',
                        requiredFlag: "Optional",
                    },
                    withQboIdentifier: {
                        default: '<span class="literal">withQboIdentifier</span>',
                        type: "Boolean",
                        requiredFlag: "Optional",
                        description:
                            'The parameter <span class="literal">withQboIdentifier</span> is a boolean value, in the format <span class="literal">true</span> or <span class="literal">false</span>. This parameter can be used to add the columns transaction id and sequence in the response of the query',
                    },
                    start_date: {
                        default: '<span class="literal">start_date</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    end_date: {
                        default: '<span class="literal">end_date</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    add_due_date: {
                        default: '<span class="literal">add_due_date</span>',
                        type: "Boolean",
                        requiredFlag: "Optional",
                        description:
                            'The parameter add_due_date is a boolean value, in the format <span class="literal">true</span>. <span class="literal">false</span>',
                    },
                },
            },
            invoiceresponse: {
                name: "invoiceresponse",
                ShowFirst: ["Id"],
                Default: [
                    "HomeBalance",
                    "DeliveryInfo",
                    "TotalAmt",
                    "InvoiceLink",
                    "RecurDataRef",
                    "TaxExemptionRef",
                    "Balance",
                    "HomeTotalAmt",
                    "FreeFormAddress",
                    "AllowOnlinePayment",
                    "AllowIPNPayment",
                ],
                Optional: [
                    "TxnDate",
                    "ShipFromAddr",
                    "ShipDate",
                    "TrackingNum",
                    "ClassRef",
                    "PrintStatus",
                    "SalesTermRef",
                    "TxnSource",
                    "LinkedTxn [0..n]",
                    "DepositToAccountRef",
                    "GlobalTaxCalculation",
                    "AllowOnlineACHPayment",
                    "TransactionLocationType",
                    "DueDate",
                    "MetaData",
                    "PrivateNote",
                    "BillEmailCc",
                    "CustomerMemo",
                    "EmailStatus",
                    "ExchangeRate",
                    "Deposit",
                    "TxnTaxDetail",
                    "AllowOnlineCreditCardPayment",
                    "CustomField",
                    "ShipAddr",
                    "DepartmentRef",
                    "BillEmailBcc",
                    "ShipMethodRef",
                    "BillAddr",
                    "ApplyTaxAfterDiscount",
                ],
                Required: ["Line [0..n]", "CustomerRef"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef", "DocNumber", "BillEmail"],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred. <ul><li><em>yyyy/MM/dd</em> is the valid date format.</li><li>For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.</li><li>Sort order is ASC by default.</li></ul>",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    ShipFromAddr: {
                        minorVersion: 35,
                        description:
                            'Identifies the address where the goods are shipped from. For transactions without shipping, it represents the address where the sale took place.<br> For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                        requiredFlag: "Optional",
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        type: "PhysicalAddress",
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Applicable if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    HomeBalance: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Convenience field containing the amount in <span class="literal">Balance</span> expressed in terms of the home currency. Calculated by QuickBooks business logic.\nValue is valid only when <span class="literal">CurrencyRef</span> is specified and available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter. Applicable if multicurrency is enabled for the company',
                        minorVersion: 3,
                    },
                    ShipDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description: "Date for delivery of goods or services. ",
                    },
                    TrackingNum: {
                        type: "String",
                        description:
                            "Shipping provider's tracking number for the delivery of the goods associated with the transaction.",
                        requiredFlag: "Optional",
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerTxn</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    PrintStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Printing status of the invoice.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToPrint</span>,\n<span class="literal">PrintComplete\n</span>.',
                    },
                    SalesTermRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the sales term associated with the transaction. Query the Term name list resource to determine the appropriate Term object for this reference. Use <span class="literal">Term.Id</span> and <span class="literal">Term.Name</span> from that object for <span class="literal">SalesTermRef.value</span> and <span class="literal">SalesTermRef.name</span>, respectively. ',
                    },
                    DeliveryInfo: {
                        readOnly: true,
                        type: "DeliveryInfo",
                        description:
                            "Email delivery information. Returned when a request has been made to deliver email with the send operation. ",
                        $ref: [
                            {
                                deliveryinfo: "DeliveryInfo",
                            },
                        ],
                    },
                    TxnSource: {
                        type: "String",
                        description: "Used internally to specify originating source of a credit card transaction.",
                        requiredFlag: "Optional",
                    },
                    "LinkedTxn [0..n]": {
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                        type: "LinkedTxn",
                        requiredFlag: "Optional",
                        description:
                            'Zero or more related transactions to this Invoice object. The following linked relationships are supported:<ul><li>\nLinks to <span class="literal">Estimate</span> and <span class="literal">TimeActivity</span> objects can be established directly to this Invoice object with UI or with the API. Create, Read, Update, and Query operations are avaialble at the API level for these types of links.\n</li>\n<li>Only one link can be made to an <span class="literal">Estimate</span>. Progress Invoicing is not supported via the API. </li><li>\nLinks to expenses incurred on behalf of the customer are returned in the response with <span class="literal">LinkedTxn.TxnType</span> set to <span class="literal">ReimburseCharge</span>, <span class="literal">ChargeCredit</span> or <span class="literal">StatementCharge</span> corresponding to billable customer expenses of type <span class="literal">Cash</span>, <span class="literal">Delayed Credit</span>, and <span class="literal">Delayed Charge</span>, respectively. Links to these types of transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.\n</li>\n<li>\nLinks to payments applied to an Invoice object are returned in the response with <span class="literal">LinkedTxn.TxnType</span> set to <span class="literal">Payment</span>. Links to Payment transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.\n</li>\n</ul>\nUse <span class="literal">LinkedTxn.TxnId</span> as the ID in a separate read request for the specific resource to retrieve details of the linked object.',
                    },
                    DepositToAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Account to which money is deposited. Query the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType</span> is <span class="literal">Other Current Asset</span> or <span class="literal">Bank</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">DepositToAccountRef.value</span> and <span class="literal">DepositToAccountRef.name</span>, respectively.\n<br/>Before you can use this field ensure that the company allows deposits in their invoices first. This can be found by querying the <a href="https://developer.intuit.com/app/developer/qbo/docs/api/accounting/all-entities/preferences">Preferences endpoint</a>.  <span class="literal">SalesFormsPrefs.AllowDeposit</span> must be equal to true. If you do not specify this account the payment is applied to the Undeposited Funds account.',
                    },
                    GlobalTaxCalculation: {
                        default: '<span class="literal">TaxExcluded</span>',
                        type: "GlobalTaxCalculationEnum",
                        description:
                            'Method in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                        locales: ["GB", "AU", "IN", "CA"],
                        requiredFlag: "Optional",
                    },
                    TotalAmt: {
                        readOnly: true,
                        type: "BigDecimal",
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        systemDefined: true,
                    },
                    InvoiceLink: {
                        readOnly: true,
                        description:
                            "Sharable link for the invoice sent to external customers. The link is generated only for invoices with online payment enabled and having a valid customer email address. Include query param `include=invoiceLink` to get the link back on query response.",
                        type: "String",
                        minorVersion: 36,
                        systemDefined: true,
                    },
                    AllowOnlineACHPayment: {
                        default: '<span class="literal">false</span>',
                        type: "Boolean",
                        description:
                            'Specifies if this invoice can be paid with online bank transfers and corresponds to the <b>Free bank transfer</b> online payment check box on the QuickBooks UI. Active when <span class="literal">Preferences.SalesFormsPrefs.ETransactionPaymentEnabled</span> is set to <span class="literal">true</span>.\n<li>If set to <span class="literal">true</span>, allow invoice to be paid with online bank transfers. The <b>Free bank transfer</b> online payment check box is checked on the QuickBooks UI for this invoice.</li>\n<li>If set to <span class="literal">false</span>, online bank transfers are not allowed. The <b>Free bank transfer</b> online payment check box is not checked on the QuickBooks UI for this invoice.</li></ul>',
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        table: {
                            locationtype: ["Show valid values", "Hide valid values"],
                        },
                        type: "String",
                        locales: ["FR", "IN", "UAE"],
                        description:
                            'The account location. For France locale valid values include:\n<ul><li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li></ul>\nFor UAE, valid values include <ul><li><span class="literal">ABUDHABI</span></li>\n<li><span class="literal">AJMAN</span></li>\n<li><span class="literal">SHARJAH</span></li>\n<li><span class="literal">DUBAI</span></li>\n<li><span class="literal">FUJAIRAH</span></li>\n<li><span class="literal">RAS_AL_KHAIMAH</span></li>\n<li><span class="literal">UMM_AL_QUWAIN</span></li>\n<li><span class="literal">OTHER_GCC</span></li>\n</ul>\nFor India locale, use state code values from the list below:',
                    },
                    DueDate: {
                        sortable: true,
                        description:
                            'Date when the payment of the transaction is due. If date is not provided, the number of days specified in\n<span class="literal">SalesTermRef</span> added the transaction date will be used. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of <span class="literal">Preferences:CustomTxnNumber</span> as follows:\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.</li>\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is false, resulting DocNumber is system generated by incrementing the last number by 1.</li>\n</ul>\nIf <span class="literal">Preferences:CustomTxnNumber</span> is false then do not send a value as it can lead to unwanted duplicates. If a DocNumber value is sent for an Update operation, then it just updates that particular invoice and does not alter the internal system DocNumber. <br/><em>Note:</em> DocNumber is an optional field for all locales except France. For France locale if <span class="literal">Preferences:CustomTxnNumber</span> is enabled it will <b>not</b> be automatically generated and is a required field. If a duplicate DocNumber needs to be supplied, add the query parameter name/value pair, <span class="literal">include=allowduplicatedocnum</span> to the URI.',
                        filterable: true,
                        requiredFlag: "Conditionally required",
                        maxLen: "maximum of 21 chars",
                        type: "String",
                    },
                    PrivateNote: {
                        maxLen: "max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.",
                        requiredFlag: "Optional",
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">Invoice</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                            {
                                groupline: "GroupLine",
                            },
                            {
                                descriptiononlyline: "DescriptionOnlyLine",
                            },
                            {
                                discountline: "DiscountLine",
                            },
                            {
                                subtotalline: "SubTotalLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items of a transaction. Valid <span class="literal">Line</span> types include \n<span class="literal">SalesItemLine</span>,\n<span class="literal">GroupLine</span>,\n<span class="literal">DescriptionOnlyLine</span> (also used for inline Subtotal lines),\n<span class="literal">DiscountLine</span> and \n<span class="literal">SubTotalLine</span> (used for the overall transaction) ',
                    },
                    BillEmailCc: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        description:
                            'Identifies the carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in <span class="literal">Preferences.SalesFormsPrefs.SalesEmailCc</span>. If this email address is invalid, carbon copy email is not sent. ',
                        minorVersion: 8,
                        requiredFlag: "Optional",
                    },
                    CustomerMemo: {
                        $ref: [
                            {
                                memoref: "MemoRef",
                            },
                        ],
                        type: "MemoRef",
                        requiredFlag: "Optional",
                        description:
                            "User-entered message to the customer; this message is visible to end user on their transactions. ",
                    },
                    EmailStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        description:
                            'Email status of the invoice.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToSend</span>,\n<span class="literal">EmailSent\n</span>',
                        requiredFlag: "Optional",
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    TaxExemptionRef: {
                        minorVersion: 21,
                        description:
                            'Reference to the <span class="literal">TaxExepmtion</span> ID associated with this object. Available for companies that have <a href="https://developer.intuit.com/hub/blog/2017/12/11/using-quickbooks-online-api-automated-sales-tax" title="Automatic Sales Tax">automated sales tax</a> enabled.\n<li><span class="literal">TaxExemptionRef.Name</span>: The Tax Exemption Id for the customer to which this object is associated. This Id is typically issued by the state.</li>\n<li><span class="literal">TaxExemptionRef.value</span>: The system-generated Id of the exemption type.</li>\n</ul>\n For internal use only',
                        systemDefined: true,
                        readOnly: true,
                        type: "ReferenceType",
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    Deposit: {
                        type: "Decimal",
                        description: "The deposit made towards this invoice.",
                        locales: ["GB", "AU", "IN", "CA", "US"],
                        requiredFlag: "Optional",
                    },
                    Balance: {
                        filterable: true,
                        type: "Decimal",
                        readOnly: true,
                        sortable: true,
                        description:
                            'The balance reflecting any payments made against the transaction. Initially set to the value of\n<span class="literal">TotalAmt</span>. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks. If you process a linked transaction against a specific transaction, the \n<span class="literal">balance</span> value won\'t change. It will remain the same.',
                    },
                    CustomerRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. ',
                    },
                    TxnTaxDetail: {
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                        type: "TxnTaxDetail",
                        requiredFlag: "Optional",
                        description:
                            'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See <a href="https://developer.intuit.com/app/developer/qbo/docs/workflows/manage-sales-tax-for-non-us-locales" title="Global Tax Model">Global tax model</a> for more information about this element.\n<br/>If sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored. ',
                    },
                    AllowOnlineCreditCardPayment: {
                        default: '<span class="literal">false</span>',
                        type: "Boolean",
                        description:
                            'Specifies if online credit card payments are allowed for this invoice and corresponds to the <b>Cards</b> online payment check box on the QuickBooks UI. Active when <span class="literal">Preferences.SalesFormsPrefs.ETransactionPaymentEnabled</span> is set to <span class="literal">true</span>.\n<li>If set to <span class="literal">true</span>, allow invoice to be paid with online credit card payments. The <b>Cards</b> online payment check box is checked on the QuickBooks UI.</li>\n<li>If set to <span class="literal">false</span>, online credit card payments are not allowed. The <b>Cards</b> online payment check box is not checked on the QuickBooks UI.</li></ul>',
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    CustomField: {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    ShipAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Identifies the address where the goods must be shipped. If\n<span class="literal">ShipAddr</span>is not specified, and a default\n<span class="literal">Customer:ShippingAddr</span> is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks. <br> For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    HomeTotalAmt: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic.\nValue is valid only when <span class="literal">CurrencyRef</span> is specified. Applicable if multicurrency is enabled for the company.',
                        systemDefined: true,
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.TrackDepartments</span> is set to <span class="literal">true</span>.\n<br/>Query the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    BillEmailBcc: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        description:
                            'Identifies the blind carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in <span class="literal">Preferences.SalesFormsPrefs.SalesEmailBcc</span>. If this email address is invalid, blind carbon copy email is not sent. ',
                        minorVersion: 8,
                        requiredFlag: "Optional",
                    },
                    ShipMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            "Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string. Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string.",
                        requiredFlag: "Optional",
                    },
                    BillAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Bill-to address of the Invoice. If\n<span class="literal">BillAddr</span>is not specified, and a default\n<span class="literal">Customer:BillingAddr</span> is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks. <br> For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>\n\nStarting <span class="literal">minorversion=54</span> if you update the <span class="literal">CustomerRef</span>, the address passed using <span class="literal">BillAddr</span> will be honored.',
                    },
                    FreeFormAddress: {
                        type: "Boolean",
                        description:
                            'Denotes how <span class="literal">ShipAddr</span> is stored:&nbsp;formatted or unformatted. The value of this flag is system defined based on format of shipping address at object create time.<ul><li>If set to <span class="literal">false</span>, shipping address is returned in a formatted style using City, Country,&nbsp;CountrySubDivisionCode, Postal code.</li><li>If set to <span class="literal">true</span>, shipping address is returned in an unformatted style using Line1 through Line5 attributes.</li></ul>',
                        systemDefined: true,
                    },
                    ApplyTaxAfterDiscount: {
                        default: "false",
                        type: "Boolean",
                        description:
                            "If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.",
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    BillEmail: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        requiredFlag: "Conditionally required",
                        description:
                            'Identifies the e-mail address where the invoice is sent. If\n<span class="literal">EmailStatus=NeedToSend</span>,\n<span class="literal">BillEmail</span>is a required input. ',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    AllowOnlinePayment: {
                        deprecated: true,
                        type: "Boolean",
                        description:
                            'Deprecated flag to allow online payments. In use before <span class="literal">AllowOnlineCreditCardPayment</span> and <span class="literal">AllowOnlineACHPayment</span> flags existed and provided to maintain backward compatibility.\n<li>If set to <span class="literal">true</span>, this invoice was created before <span class="literal">AllowOnlinePayment</span> was deprecated and denotes both CC and ACH payments are allowed. In addition, the <span class="literal">AllowOnlineCreditCardPayment</span> and <span class="literal">AllowOnlineACHPayment</span> flags must be set to <span class="literal">true</span>.</li>\n<li>If set to <span class="literal">false</span>, this invoice was created after the <span class="literal">AllowOnlinePayment</span> flag was deprecated and is not used.</li>\n</ul> Do not modify.',
                    },
                    AllowIPNPayment: {
                        deprecated: true,
                        type: "Boolean",
                        description:
                            'Flag to allow payments from legacy Intuit Payment Network (IPN). Provided to maintain backward compatibility and must always be set to <span class="literal">false</span>. Do not modify',
                    },
                },
            },
            depositresponse: {
                name: "depositresponse",
                ShowFirst: ["Id"],
                Default: ["RecurDataRef", "TotalAmt", "HomeTotalAmt"],
                Optional: [
                    "PrivateNote",
                    "GlobalTaxCalculation",
                    "ExchangeRate",
                    "DepartmentRef",
                    "TxnSource",
                    "TxnDate",
                    "CashBack",
                    "TransactionLocationType",
                    "TxnTaxDetail",
                    "MetaData",
                ],
                Required: ["DepositToAccountRef", "Line [0..n]"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PrivateNote: {
                        maxLen: "max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Memo field on the Invoice form.",
                        requiredFlag: "Optional",
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">Deposit</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    DepositToAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Identifies the account to be used for this deposit. Query the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType</span> is <span class="literal">Other Current Asset</span> or <span class="literal">Bank</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">DepositToAccountRef.value</span> and <span class="literal">DepostiToAccountRef.name</span>, respectively. ',
                    },
                    GlobalTaxCalculation: {
                        minorVersion: 3,
                        default: '<span class="literal">TaxExcluded</span>',
                        requiredFlag: "Optional",
                        type: "GlobalTaxCalculationEnum",
                        locales: ["GB", "AU", "IN", "CA"],
                        description:
                            'Method in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                    },
                    TotalAmt: {
                        readOnly: true,
                        type: "BigDecimal",
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        systemDefined: true,
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>.  The CurrencyRef can be overwritten by the <span class="literal">Line.DepositLineDetail</span> Entity. If the customer that you are referring to has a default currency of USD then the currency for this Deposit will always be set as USD.',
                        requiredFlag: "Conditionally required",
                    },
                    HomeTotalAmt: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic.\nValue is valid only when <span class="literal">CurrencyRef</span> is specified. Applicable if multicurrency is enabled for the company.',
                        systemDefined: true,
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction, as defined using location tracking in QuickBooks Online. Available if <span class="literal">Preferences.AccountingInfoPrefs.TrackDepartments</span> is set to <span class="literal">true</span>.\nQuery the Department name list resource to determine the appropriate Department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    TxnSource: {
                        type: "String",
                        description: "Used internally to specify originating source of a credit card transaction.",
                        requiredFlag: "Optional",
                    },
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n<br/>Sort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                linelinkedtxn: "LineLinkedTxn",
                            },
                            {
                                depositline: "DepositLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items comprising the deposit. Specify a <span class="literal">Line.LinkedTxn</span> element along with DepositLine detail type if this line is to record a deposit for an existing transaction. Select <span class="literal">UndepositedFunds</span> account on the existing transaction to make it available for the Deposit.\n<li>\nPossible types of transactions that can be linked to a Deposit include:\n<span class="literal">Transfer</span>,\n<span class="literal">Payment</span> (for Cash, CreditCard, and Check payment method types),\n<span class="literal">SalesReceipt</span>,\n<span class="literal">RefundReceipt</span>,\n<span class="literal">JournalEntry</span>.\n</li>\n<li>\nIn addition, any expense object whose line item has <span class="literal">AccountReceivable</span> can be linked to a Payment and then that Payment can be linked to a Deposit object.\n</li>\n</ul>\nUse <span class="literal">Line.LinkedTxn.TxnId</span> as the ID in a separate read request for the specific resource to retrieve details of the linked object. Valid <span class="literal">Line</span> types include: <span class="literal">LinkedTxn</span> and <span class="literal">DepositLine</span>',
                    },
                    CashBack: {
                        type: "CashBackInfo",
                        requiredFlag: "Optional",
                        $ref: [
                            {
                                cashbackinfo: "CashbackInfo",
                            },
                        ],
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    TxnTaxDetail: {
                        minorVersion: 4,
                        description:
                            'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. For non-US companies.\nSee <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-sales-tax-for-non-us-locales/non-us_sales_tax_integrations" title="Global Tax Model">Global tax model</a> for more information about this element.\nIf sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored.\n',
                        requiredFlag: "Optional",
                        type: "TxnTaxDetail",
                        locales: ["GB", "AU", "IN", "CA"],
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                },
            },
            referencetype: {
                name: "referencetype",
                ShowFirst: [],
                Default: [],
                Optional: ["name"],
                Required: ["value"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    name: {
                        type: "string",
                        description:
                            'An identifying name for the object being referenced by <span class="literal">value</span> and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use <span class="literal">Customer.DisplayName</span> to populate this field. Optionally returned in responses, implementation dependent.',
                        requiredFlag: "Optional",
                    },
                    value: {
                        type: "string",
                        description:
                            "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
                        requiredFlag: "Required",
                    },
                },
            },
            exchangerateresponse: {
                name: "exchangerateresponse",
                ShowFirst: [],
                Default: [],
                Optional: ["CustomField ", "TargetCurrencyCode", "MetaData"],
                Required: [],
                RequiredForUpdate: ["SyncToken", "AsOfDate", "SourceCurrencyCode", "Rate"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    AsOfDate: {
                        filterable: true,
                        type: "Boolean",
                        requiredFlag: "Required for update",
                        description: "Date on which this exchange rate was set.",
                    },
                    "CustomField ": {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    SourceCurrencyCode: {
                        filterable: true,
                        maxLen: "Exactly 3 chars",
                        type: "String",
                        description:
                            'The source currency from which the exchange rate is specified, and usually. Specify as a three letter string representing the ISO 4217 code for the currency. For example, <span class="literal">USD</span>, <span class="literal">AUD</span>, <span class="literal">EUR</span>, and so on.\nFor example, in the equation <span class="literal">65 INR = 1 USD</span>, <span class="literal">INR</span> is the source currency.',
                        requiredFlag: "Required for update",
                    },
                    Rate: {
                        type: "Decimal",
                        requiredFlag: "Required for update",
                        description:
                            'The exchange rate between <span class="literal">SourceCurrencyCode</span> and <span class="literal">TargetCurrencyCode</span> on the <span class="literal">AsOfDate</span> date.',
                    },
                    TargetCurrencyCode: {
                        default: "The home currency as defined in company preferences",
                        maxLen: "Exactly 3 chars",
                        type: "String",
                        description:
                            'The target currency against which the exchange rate is specified. Specify as a three letter string representing the ISO 4217 code for the currency. For example, <span class="literal">USD</span>, <span class="literal">AUD</span>, <span class="literal">EUR</span>, and so on.\nFor example, in the equation <span class="literal">65 INR = 1 USD</span>, <span class="literal">USA</span> is the target currency.',
                        requiredFlag: "Optional",
                    },
                    MetaData: {
                        sortable: true,
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "ModificationMetaData",
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                    },
                },
            },
            purchaseorderresponse: {
                name: "purchaseorderresponse",
                ShowFirst: ["Id"],
                Default: ["TotalAmt", "RecurDataRef"],
                Optional: [
                    "TxnDate",
                    "CustomField ",
                    "POEmail",
                    "ClassRef",
                    "SalesTermRef",
                    "LinkedTxn [0..n]",
                    "GlobalTaxCalculation",
                    "Memo",
                    "POStatus",
                    "TransactionLocationType",
                    "DueDate",
                    "MetaData",
                    "DocNumber",
                    "PrivateNote",
                    "ShipMethodRef",
                    "TxnTaxDetail",
                    "ShipTo",
                    "ExchangeRate",
                    "ShipAddr",
                    "VendorAddr",
                    "EmailStatus",
                ],
                Required: ["APAccountRef", "VendorRef", "Line [0..n]"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n<br/>Sort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company',
                        requiredFlag: "Conditionally required",
                    },
                    "CustomField ": {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    APAccountRef: {
                        filterable: false,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Specifies to which AP account the bill is credited. Query the Account name list resource to determine the appropriate Account object for this reference. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">APAccountRef.value</span> and <span class="literal">APAccountRef.name</span>, respectively. The specified account must have <span class="literal">Account.Classification</span> set to <span class="literal">Liability</span> and <span class="literal">Account.AccountSubType</span> set to <span class="literal">AccountsPayable</span>.\n<br/>If the company has a single AP account, the account is implied. However, it is recommended that the AP Account be explicitly specified in all cases to prevent unexpected errors when relating transactions to each other. ',
                    },
                    POEmail: {
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                        type: "EmailAddress",
                        description: "Used to specify the vendor e-mail address where the purchase req is sent.",
                        minorVersion: 17,
                        requiredFlag: "Optional",
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerTxn</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    SalesTermRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the sales term associated with the transaction. Query the Term name list resource to determine the appropriate Term object for this reference. Use <span class="literal">Term.Id</span> and <span class="literal">Term.Name</span> from that object for <span class="literal">SalesTermRef.value</span> and <span class="literal">SalesTermRef.name</span>, respectively. ',
                    },
                    "LinkedTxn [0..n]": {
                        readOnly: false,
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                        type: "LinkedTxn",
                        requiredFlag: "Optional",
                        description:
                            'Zero or more Bill objects linked to this purchase order; <span class="literal">LinkedTxn.TxnType</span> is set to <span class="literal">Bill</span>. To retrieve details of a linked Bill transaction, issue a separate request to read the Bill whose ID is <span class="literal">linkedTxn.TxnId</span>. ',
                    },
                    GlobalTaxCalculation: {
                        default: '<span class="literal">TaxExcluded</span>',
                        type: "GlobalTaxCalculationEnum",
                        description:
                            'Method in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                        locales: ["GB", "AU", "IN", "CA"],
                        requiredFlag: "Optional",
                    },
                    TotalAmt: {
                        readOnly: true,
                        type: "BigDecimal",
                        description:
                            "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
                        systemDefined: true,
                    },
                    Memo: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description:
                            "A message for the vendor. This text appears on the Purchase Order object sent to the vendor.",
                        requiredFlag: "Optional",
                    },
                    POStatus: {
                        type: "String",
                        description:
                            'Purchase order status. Valid values are: <span class="literal">Open</span> and <span class="literal">Closed</span>.',
                        requiredFlag: "Optional",
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: "WithinFrance",
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    DueDate: {
                        sortable: true,
                        description:
                            'Date when the payment of the transaction is due. If date is not provided, the number of days specified in\n<span class="literal">SalesTermRef</span> added the transaction date will be used. ',
                        filterable: true,
                        requiredFlag: "Optional",
                        type: "Date",
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> as follows:\n<li>If <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.</li>\n<li>If <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> is false, resulting DocNumber is system generated by incrementing the last number by 1.</li>\n</ul>\nThrows an error when duplicate DocNumber is sent in the request. Recommended best practice: check the setting of <span class="literal">Preferences:OtherPrefs:NameValue.Name = VendorAndPurchasesPrefs.UseCustomTxnNumbers</span> before setting DocNumber. If a duplicate DocNumber needs to be supplied, add the query parameter name/value pair, <span class="literal">include=allowduplicatedocnum</span> to the URI.\nSort order is ASC by default.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 21 chars",
                        type: "String",
                    },
                    PrivateNote: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the purchase order to the vendor. This field maps to the Memo field on the Purchase Order form.",
                        requiredFlag: "Optional",
                    },
                    VendorRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to the vendor for this transaction. Query the Vendor name list resource to determine the appropriate Vendor object for this reference. Use <span class="literal">Vendor.Id</span> and <span class="literal">Vendor.Name</span> from that object for <span class="literal">VendorRef.value</span> and <span class="literal">VendorRef.name</span>, respectively. ',
                    },
                    ShipMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the user-defined ShipMethod associated with the transaction. Store shipping method string in both <span class="literal">ShipMethodRef.value</span> and <span class="literal">ShipMethodRef.name</span>. ',
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">PurchaseOrder</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                itembasedexpenseline: "ItemBasedExpenseLine",
                            },
                            {
                                accountbasedexpenseline: "AccountBasedExpenseLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items of a transaction. Valid <span class="literal">Line</span> types include:\n<span class="literal">ItemBasedExpenseLine</span> and \n<span class="literal">AccountBasedExpenseLine</span> ',
                    },
                    TxnTaxDetail: {
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                        type: "TxnTaxDetail",
                        requiredFlag: "Optional",
                        description:
                            'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See <a href="https://developer.intuit.com/app/developer/qbo/docs/workflows/manage-sales-tax-for-non-us-locales" title="Global Tax Model">Global tax model</a> for more information about this element.\nIf sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored.\n',
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    ShipTo: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description:
                            "Reference to the customer to whose shipping address the order will be shipped to.",
                        requiredFlag: "Optional",
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    ShipAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Address to which the vendor shipped or will ship any goods associated with the purchase. <br> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    VendorAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Address to which the payment should be sent. <br> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    EmailStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        description:
                            'Email status of the purchase order.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToSend</span>,\n<span class="literal">EmailSent\n</span>',
                        minorVersion: 45,
                        requiredFlag: "Optional",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            itembasedexpenseline: {
                name: "itembasedexpenseline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["LinkedTxn [0..n]", "Description", "LineNum"],
                Required: ["ItemBasedExpenseLineDetail", "Amount", "DetailType"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "LinkedTxn [0..n]": {
                        description:
                            'Zero or more transactions linked to this object. The <span class="literal">LinkedTxn.TxnType</span> can be set to <span class="literal">ReimburseCharge</span>. The <span class="literal">LinkedTxn.TxnId</span> can be set as the ID of the transaction.',
                        requiredFlag: "Optional",
                        readOnly: false,
                        minorVersion: 55,
                        type: "LinkedTxn",
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                    },
                    Description: {
                        maxLen: "Max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    ItemBasedExpenseLineDetail: {
                        type: "ItemBasedExpenseLineDetail",
                        requiredFlag: "Required",
                        $ref: [
                            {
                                itembasedexpenselinedetail: "ItemBasedExpenseLineDetail",
                            },
                        ],
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer.",
                    },
                    Amount: {
                        maxLen: "Max 15 digits in 10.5 format",
                        type: "Decimal",
                        description: "The amount of the line item.",
                        requiredFlag: "Required",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description:
                            'Set to\n<span class="literal">ItemBasedExpenseLineDetail</span> for this type of line.',
                        requiredFlag: "Required",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>If\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.</li>\n<li>If no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            vendorbalancedetailquery: {
                name: "vendorbalancedetailquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "term",
                    "end_duedate",
                    "accounting_method",
                    "date_macro",
                    "start_duedate",
                    "duedate_macro",
                    "sort_by",
                    "report_date",
                    "sort_order",
                    "appaid",
                    "department",
                    "vendor",
                    "columns",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    term: {
                        default: "Return data for all terms",
                        type: "String",
                        description:
                            'Filters report contents based on term or terms supplied.\nSupported Values: One or more comma separated term IDs as returned in the attribute, <span class="literal">Term.Id</span> of the Term object response code.',
                        requiredFlag: "Optional",
                    },
                    end_duedate: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute.',
                        type: "String",
                        description:
                            'The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    start_duedate: {
                        default: "To return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    duedate_macro: {
                        default: '<span class="literal">This Fiscal Year-to-date</span>',
                        type: "String",
                        description:
                            "Predefined date range of due dates for balances to include in the report; otherwise, use the start_duedate and end_duedate to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year",
                        requiredFlag: "Optional",
                    },
                    sort_by: {
                        default: '<span class="literal">txn_type</span>',
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                        requiredFlag: "Optional",
                    },
                    report_date: {
                        default: "Today's date",
                        type: "String",
                        description:
                            'Start date to use for the report, in the format <span class="literal">YYYY-MM-DD</span>.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    appaid: {
                        default: '<span class="literal">Unpaid</span>',
                        type: "String",
                        description:
                            'Status of the balance.\nSupported Values: <span class="literal">Paid</span>, <span class="literal">Unpaid</span>, <span class="literal">All</span>',
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.\nSupported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    vendor: {
                        default: "Return data for all vendors",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified vendors.\nSupported Values: One or more comma separated vendor IDs as returned in the attribute, <span class="literal">Vendor.Id</span>, of the Vendor object response code.',
                        requiredFlag: "Optional",
                    },
                    columns: {
                        default: "columns denoted with *",
                        table: {
                            columns_apaging: [
                                "Show additional values supported based on multicurrency settings for the company.",
                                "Hide additional values supported based on multicurrency settings for the company.",
                            ],
                        },
                        type: "String",
                        description:
                            "Column types to be shown in the report.\nSupported Values: create_by, create_date, doc_num*, due_date*, last_mod_by, last_mod_date, memo*, term_name, tx_date*, txn_type*, vend_bill_addr, vend_comp_name, vend_name*, vend_pri_cont, vend_pri_email, vend_pri_tel <br/> Additional columns with location tracking enabled: dept_name*",
                        requiredFlag: "Optional",
                    },
                },
            },
            vendorcreditrequest: {
                name: "vendorcreditrequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["VendorRef", "Line [0..n]"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\nMulticurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company',
                        requiredFlag: "Conditionally required",
                    },
                    VendorRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description: "The vendor reference for this transaction.",
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                itembasedexpenseline: "ItemBasedExpenseLine",
                            },
                            {
                                accountbasedexpenseline: "AccountBasedExpenseLine",
                            },
                        ],
                        type: "Line",
                        requiredFlag: "Required",
                        description:
                            'Individual line items of a transaction. Valid <span class="literal">Line</span> types include:\n<span class="literal">ItemBasedExpenseLine</span> and \n<span class="literal">AccountBasedExpenseLine</span>',
                    },
                },
            },
            transactionlistbycustomerquery: {
                name: "transactionlistquery ",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "date_macro",
                    "payment_method",
                    "duedate_macro",
                    "arpaid",
                    "bothamount",
                    "transaction_type",
                    "docnum",
                    "start_moddate",
                    "source_account_type",
                    "group_by",
                    "start_date",
                    "department",
                    "start_duedate",
                    "columns",
                    "end_duedate",
                    "end_date",
                    "memo",
                    "appaid",
                    "moddate_macro",
                    "printed",
                    "createdate_macro",
                    "cleared",
                    "customer",
                    "qzurl",
                    "term",
                    "end_createdate",
                    "name",
                    "sort_by",
                    "sort_order",
                    "start_createdate",
                    "end_moddate",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    payment_method: {
                        default: "Include all payment methods",
                        type: "String",
                        description:
                            'Filters report contents based on payment method.<br />Supported Values: <span class="literal">Cash</span>, <span class="literal">Check</span>, <span class="literal">Dinners Club</span>, <span class="literal">American Express</span>, <span class="literal">Discover</span>, <span class="literal">MasterCard</span>, <span class="literal">Visa</span>',
                        requiredFlag: "Optional",
                    },
                    duedate_macro: {
                        default: "All dates",
                        type: "String",
                        description:
                            "Predefined date range of due dates for balances to include in the report; otherwise, use the start_duedate and end_duedate to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year",
                        requiredFlag: "Optional",
                    },
                    arpaid: {
                        default: '<span class="literal">All</span>',
                        type: "String",
                        description:
                            'Supported Values:<span class="literal">All</span>, <span class="literal">Paid</span>, <span class="literal">Unpaid</span>',
                        requiredFlag: "Optional",
                    },
                    bothamount: {
                        default: "Include data for all amounts",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified transaction amount. For example, <span class="literal">bothamount=1233.45</span> limits report  contents to transactions of amount 1233.45.',
                        requiredFlag: "Optional",
                    },
                    transaction_type: {
                        default: "Return data for all transactions",
                        type: "String",
                        description:
                            "Filters report contents based transaction type. Supported values include:<br />CreditCardCharge, Check, Invoice, ReceivePayment, JournalEntry, Bill, CreditCardCredit, VendorCredit, Credit, BillPaymentCheck, BillPaymentCreditCard, Charge, Transfer, Deposit, Statement, BillableCharge, TimeActivity, CashPurchase, SalesReceipt, CreditMemo, CreditRefund, Estimate, InventoryQuantityAdjustment, PurchaseOrder, GlobalTaxPayment, GlobalTaxAdjustment, Service Tax Refund, Service Tax Gross Adjustment, Service Tax Reversal, Service Tax Defer, Service Tax Partial Utilisation",
                        requiredFlag: "Optional",
                    },
                    docnum: {
                        default: "Include data for all docnums.",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified transaction number, as found in the <span class="literal">docnum</span> parameter of the transaction object.',
                        requiredFlag: "Optional",
                    },
                    start_moddate: {
                        default: '<span class="literal">moddate_macro</span>',
                        type: "String",
                        description:
                            '(Account List Detail) Specify an explicit account modification report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use the <span class="literal">moddate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                    source_account_type: {
                        default: '<span class="literal">All account types</span>',
                        table: {
                            account_types: [
                                "Show supported account types and values",
                                "Hide supported account types and values",
                            ],
                        },
                        type: "String",
                        description:
                            "Account type from which transactions are included in the report.<br />Supported Values: <span >AccountsPayable</span>, <span >AccountsReceivable</span>, <span >Bank</span>, <span >CostOfGoodsSold</span>, <span >CreditCard</span>, <span >Equity</span>, <span >Expense</span>, <span >FixedAsset</span>, <span >Income</span>, <span >LongTermLiability</span>, <span >NonPosting</span>, <span >OtherAsset</span>, <span >OtherCurrentAsset</span>, <span >OtherCurrentLiability</span>, <span >OtherExpense</span>, <span>OtherIncome</span>",
                        requiredFlag: "Optional",
                    },
                    group_by: {
                        type: "String",
                        description:
                            "The field in the transaction by which to group results. Supported Values: Name, Account, Transaction Type, Customer, Vendor, Employee, Location, Payment Method, Day, Week, Month, Quarter, Year, None",
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    start_duedate: {
                        default: "Return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    columns: {
                        default: "columns denoted with *",
                        table: {
                            columns_tax: [
                                "Show additional values supported based on multicurrency settings for the company.",
                                "Hide additional values supported based on multicurrency settings for the company.",
                            ],
                        },
                        type: "String",
                        description:
                            'Column types to be shown in the report.<br />Supported Values: account_name*, create_by, create_date, cust_msg, due_date, doc_num*, inv_date, is_ap_paid, is_cleared, is_no_post*, last_mod_by, memo*, name*, other_account*, pmt_mthd, printed, sales_cust1, sales_cust2, sales_cust3, term_name, tracking_num, tx_date*, txn_type*, term_name <br /> Additional columns when location tracking enabled: dept_name* <br /> Additional columns with location tracking enabled: dept_name* <br /> Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>.',
                        requiredFlag: "Optional",
                    },
                    end_duedate: {
                        default: "Return all receivables due data",
                        type: "String",
                        description:
                            'The range of dates over which receivables are due, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_duedate</span> must be less than <span class="literal">end_duedate</span>. If not specified, all data is returned.',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        default: '<span class="literal">date_macro</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    memo: {
                        default: "Include all memos",
                        type: "String",
                        description:
                            "Filters report contents to include information for specified memo.<br />Supported Values: One or more comma separated memo IDs.",
                        requiredFlag: "Optional",
                    },
                    appaid: {
                        default: '<span class="literal">All</span>',
                        type: "String",
                        description:
                            'Status of the balance.<br />Supported Values: <span class="literal">Paid</span>, <span class="literal">Unpaid</span>, <span class="literal">All</span>',
                        requiredFlag: "Optional",
                    },
                    moddate_macro: {
                        default: "All dates",
                        type: "String",
                        description:
                            "Predefined report account modification date range. Use if you want the report to cover a standard report date range when accounts were modified; otherwise, use the start_moddate and end_moddate to cover an explicit report date range. <br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year",
                        requiredFlag: "Optional",
                    },
                    printed: {
                        default: '<span class="literal">All</span>',
                        type: "String",
                        description:
                            'Filters report contents based on whether checks are printed or not.<br />Supported Values: <span class="literal">Printed</span>, <span class="literal">To_be_printed</span>',
                        requiredFlag: "Optional",
                    },
                    createdate_macro: {
                        default: "All dates",
                        type: "String",
                        description:
                            'Predefined report account create date range. Use if you want the report to cover a standard create report date range; otherwise, use <span class="literal">start_createdate</span> and <span class="literal">end_createdate</span> to cover an explicit report date range. <br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    cleared: {
                        default: "Include data for all check statuses",
                        type: "String",
                        description:
                            "Filters report contents to include information for specified check status.<br />Supported Values: Cleared, Uncleared, Reconciled, Deposited",
                        requiredFlag: "Optional",
                    },
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    qzurl: {
                        default: '<span class="literal">false</span>',
                        type: "String",
                        description:
                            'Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data.<br />Supported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        requiredFlag: "Optional",
                    },
                    term: {
                        default: "Return data for all terms",
                        type: "String",
                        description:
                            'Filters report contents based on term or terms supplied.<br />Supported Values: One or more comma separated term IDs as returned in the attribute, <span class="literal">Term.Id</span> of the Term object response code.',
                        requiredFlag: "Optional",
                    },
                    end_createdate: {
                        default: '<span class="literal">createdate_macro</span> ',
                        type: "String",
                        description:
                            'Specify an explicit account create report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">createdate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                    name: {
                        default: "Include data from all customer, vendor, and employee objects",
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Filters report contents based on the specified comma separated list of ids for the name list customer, vendor, or employee objects.<br />Query the Customer, Vendor, or Employee name list resource to determine the list of objects for this reference. Specify values found in <span class="literal">Customer.Id</span>, <span class="literal">Vendor.Id</span>, and <span class="literal">Employee.Id</span>. For example, <span class="literal">name=1,4,7</span> includes data in the report for  namelist ids 1, 4, and 7. vendor and employee objects',
                    },
                    sort_by: {
                        default: '<span class="literal">txn_type</span>',
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    start_createdate: {
                        default: '<span class="literal">createdate_macro</span> ',
                        type: "String",
                        description:
                            'Specify an explicit account create report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">createdate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                    end_moddate: {
                        default: '<span class="literal">moddate_macro</span>',
                        type: "String",
                        description:
                            '(Account List Detail) Specify an explicit account modification report date range, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use the <span class="literal">moddate_macro</span> to cover a standard report date range.',
                        requiredFlag: "Optional",
                    },
                },
            },
            balancesheetreportrows: {
                name: "balancesheetreportrows",
                ShowFirst: [],
                Default: ["Row [0..n]"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "Row [0..n]": {
                        table: {
                            group_balancesheet: ["Show possible values for group", "Hide possible values for group"],
                        },
                        description:
                            'Represents a row in a report. A group of rows is enclosed in a <span class="literal">Rows</span> container. Rows may be nested either as a single row or in sets, based on the accounts represented in the report and query parameters specified in the request.\nParameters:\n<li>\n<span class="literal">type</span>\u2014As an enclosing section of sub-rows, this is always the string, <span class="literal">Section</span>. As a leaf row, this is always the string, <span class="literal">Data</span>.\n</li>\n<li><span class="literal">group</span>\u2014The group name, valid when <span class="literal">type=Section</span>. </li>\n</ul>\n',
                        $ref: [
                            {
                                reportrow: "reportrow",
                            },
                        ],
                    },
                },
            },
            classsalesquery: {
                name: "classsalesquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "accounting_method",
                    "end_date",
                    "date_macro",
                    "class",
                    "item",
                    "summarize_column_by",
                    "department",
                    "start_date",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.\nSupported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute',
                        type: "String",
                        description:
                            'The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "Include data for all classes",
                        type: "String",
                        description:
                            ' Filters report contents to include information for specified classes if so configured in the company file.\nSupported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                    item: {
                        default: "Include data for all items",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified items.\nSupported Values: One or more comma separated item IDs as returned in the attribute, <span class="literal">Item.Id</span>,of the Item entity response code.',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.\nSupported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.\nSupported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                },
            },
            paymentmethodresponse: {
                name: "paymentmethodresponse",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["Active", "Type", "MetaData"],
                Required: ["Name"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    Name: {
                        maxLen: "Maximum of 31 chars",
                        type: "String",
                        description: "User recognizable name for the payment method.",
                        requiredFlag: "Required",
                    },
                    Active: {
                        sortable: true,
                        description: "If true, this entity is currently enabled for use by QuickBooks.",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "true",
                        type: "Boolean",
                    },
                    Type: {
                        type: "String",
                        description:
                            'Defines the type of payment. Valid values include <span class="literal">CREDIT_CARD</span> or <span class="literal">NON_CREDIT_CARD</span>.',
                        requiredFlag: "Optional",
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.",
                    },
                },
            },
            paymentlinedetail: {
                name: "paymentlinedetail",
                ShowFirst: [],
                Default: ["Balance"],
                Optional: ["ClassRef", "Discount", "ItemRef"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the expense. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerLine</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively.',
                    },
                    Discount: {
                        $ref: [
                            {
                                discountoverride: "DiscountOverride",
                            },
                        ],
                        type: "DiscountOverride",
                        requiredFlag: "Optional",
                        description: "Reference to a Discount item and its properties that this line can overwrite. ",
                    },
                    Balance: {
                        readOnly: true,
                        type: "Decimal",
                        description: "Indicates the unpaid amount of the transaction after this payment is applied.",
                    },
                    ItemRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use <span class="literal">Item.Id</span> and <span class="literal">Item.Name</span> from that object for <span class="literal">ItemRef.value</span> and <span class="literal">ItemRef.name</span>, respectively. When a line lacks an ItemRef it is treated as documentation and the\n<span class="literal">Line.Amount</span> attribute is ignored.\nFor France locales: The account associated with the referenced Item object is looked up in the account category list.\n<li>If this account has same location as specified in the transaction by the <span class="literal">TransactionLocationType</span> attribute and the same VAT as in the line item <span class="literal">TaxCodeRef</span> attribute, then the item account is used.</li>\n<li>If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.</li>\n<li>If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.</li>\n</ul>',
                    },
                },
            },
            invoicerequest: {
                name: "invoicerequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["CustomerRef", "Line [0..n]"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company.',
                        requiredFlag: "Conditionally required",
                    },
                    CustomerRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively.',
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                            {
                                groupline: "GroupLine",
                            },
                            {
                                descriptiononlyline: "DescriptionOnlyLine",
                            },
                        ],
                        type: "Invoice line object",
                        requiredFlag: "Required",
                        description:
                            'The minimum line item required for the request is one of the following.\n<span class="literal">SalesItemLine</span>,\n<span class="literal">GroupLine</span> and \nInline subtotal using <span class="literal">DescriptionOnlyLine</span>',
                    },
                },
            },
            telephonenumber30: {
                name: "telephonenumber30",
                ShowFirst: [],
                Default: [],
                Optional: ["FreeFormNumber"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    FreeFormNumber: {
                        maxLen: "Maximum of 30 chars",
                        type: "String",
                        description: "Specifies the telephone number in free form.",
                        requiredFlag: "Optional",
                    },
                },
            },
            cashflowtoplevel: {
                name: "cashflowtoplevel",
                ShowFirst: [],
                Default: ["Header", "Rows", "Columns"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Header: {
                        description: "The report header.\n",
                        $ref: [
                            {
                                reportheader: "reportheader",
                            },
                        ],
                    },
                    Rows: {
                        description: "Top level container holding information for Aged Receivables report rows.\n",
                        $ref: [
                            {
                                cashflowreportrows: "cashflowreportrows",
                            },
                        ],
                    },
                    Columns: {
                        description: "Top level container holding information for report columns or subcolumns.\n",
                        $ref: [
                            {
                                reportcolumns: "reportcolumns",
                            },
                        ],
                    },
                },
            },
            customertyperef: {
                name: "CustomerTypeRef",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["value"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    value: {
                        type: "String",
                        description:
                            'The unique numeric Id of the customer type.  This maps to the CustomerType entity: <span class="literal">CustomerType.Id</span>.',
                        requiredFlag: "Required",
                    },
                },
            },
            productandservicesprefs: {
                name: "accountlistquery",
                ShowFirst: [],
                Default: [
                    "RevenueRecognitionEnabled",
                    "RecognitionFrequencyType",
                    "ForSales",
                    "QuantityOnHand",
                    "QuantityWithPriceAndRate",
                    "ForPurchase",
                ],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    RevenueRecognitionEnabled: {
                        default: "False",
                        type: "Boolean",
                        minorVersion: 65,
                        description: "Revenue recognition enabled.(QBO Advanced only)",
                    },
                    RecognitionFrequencyType: {
                        type: "String",
                        minorVersion: 65,
                        description:
                            "Indicates how frequently revenue is recognised.Possible values are Daily, Weekly, Monthly.(QBO Advanced only)",
                    },
                    ForSales: {
                        default: "False",
                        type: "Boolean",
                        description: "Product and Services for Sales enabled.",
                    },
                    QuantityOnHand: {
                        default: "False",
                        type: "Boolean",
                        description: "Quantity on hand enabled.",
                    },
                    QuantityWithPriceAndRate: {
                        default: "False",
                        type: "Boolean",
                        description: "Quantity with price and rate enabled.",
                    },
                    ForPurchase: {
                        default: "False",
                        type: "Boolean",
                        description: "Product and Services for Purchase enabled.",
                    },
                },
            },
            recurringtransactionrequest: {
                name: "recurringtransactionresponse",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["RecurringInfo"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    RecurringInfo: {
                        $ref: [
                            {
                                recurringinfo: "RecurringInfo",
                            },
                        ],
                        type: "RecurringInfo",
                        requiredFlag: "Required",
                        description: "Describes the recurring schedules for transactions.",
                    },
                },
            },
            taxsummaryquery: {
                name: "taxsummaryquery",
                ShowFirst: [],
                Default: [],
                Optional: ["accounting_method", "end_date", "date_macro", "sort_order", "start_date"],
                Required: ["agency_id"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    accounting_method: {
                        default:
                            'Method defined in preferences by the <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute',
                        type: "String",
                        description:
                            'The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    agency_id: {
                        default: '<span class="literal">Report_Date</span>',
                        type: "String",
                        description:
                            "The ID of the Tax Agency for which to generate the report. Read the TaxAgency object to get all valid values for this field. \n",
                        requiredFlag: "Required",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                },
            },
            taxclassification: {
                name: "taxclassification",
                ShowFirst: [],
                Default: ["Level"],
                Optional: ["ApplicableTo", "Code", "Name", "Description"],
                Required: ["ParentRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    ApplicableTo: {
                        type: "ItemTypeEnum",
                        requiredFlag: "Optional",
                        description:
                            "List of item types the tax classification is applicable to. Includes Inventory, NonInventory, Bundle and Service.",
                    },
                    Code: {
                        type: "String",
                        requiredFlag: "Optional",
                        description: "Code",
                    },
                    Name: {
                        type: "String",
                        requiredFlag: "Optional",
                        description: "Name of the tax classification",
                    },
                    Level: {
                        readOnly: true,
                        type: "String",
                        description:
                            "Tax classification level (Numeric value 1, or 2. 1 specifies parent tax classification)",
                        systemDefined: true,
                    },
                    ParentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        description: "Reference Type for parent",
                        requiredFlag: "Required",
                    },
                    Description: {
                        type: "String",
                        requiredFlag: "Optional",
                        description: "Description of the tax classification",
                    },
                },
            },
            taxline: {
                name: "taxline",
                ShowFirst: [],
                Default: [],
                Optional: ["Amount"],
                Required: ["DetailType", "TaxLineDetail"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description: 'Set to\n<span class="literal">TaxLineDetail</span>for this type of line.',
                        requiredFlag: "Required",
                    },
                    Amount: {
                        maxLen: "Max 15 digits in 10.5 format",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The amount of tax for this tax line.  This value is negative for JournalEntry objects with <span class="literal">PostingType</span> set to <span class="literal">Credit.</span>',
                    },
                    TaxLineDetail: {
                        $ref: [
                            {
                                taxlinedetail: "TaxLineDetail",
                            },
                        ],
                        type: "TaxLineDetail",
                        description: "<strong>TaxLineDetail</strong>",
                        requiredFlag: "Required",
                    },
                },
            },
            agedpayablesreportrows: {
                name: "agedpayablesreportrows",
                ShowFirst: [],
                Default: ["Row [0..n]"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "Row [0..n]": {
                        table: {
                            group_agedpayablessheet: [
                                "Show possible values for group",
                                "Hide possible values for group",
                            ],
                        },
                        description:
                            'Represents a row in a report. A group of rows is enclosed in a <span class="literal">Rows</span> container. Rows may be nested either as a single row or in sets, based on the accounts represented in the report and query parameters specified in the request.\nParameters:\n<li>\n<span class="literal">type</span>\u2014As an enclosing section of sub-rows, this is always the string, <span class="literal">Section</span>. As a leaf row, this is always the string, <span class="literal">Data</span>.\n</li>\n<li><span class="literal">group</span>\u2014The group name, valid when <span class="literal">type=Section</span>. </li>\n</ul>\n',
                        $ref: [
                            {
                                reportrow: "reportrow",
                            },
                        ],
                    },
                },
            },
            date: {
                name: "date",
                ShowFirst: [],
                Default: ["date"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    date: {
                        type: "String",
                        description:
                            'Local timezone: <em>\n<span class="literal">YYYY-MM-DD \n<span style="display: none;"></span>\n</span>\n</em>UTC: <span class="literal">\n<em>YYYY-MM-DD</em>Z <span style="display: none;"></span>\n</span>\nSpecific time zone: <em>\n<span class="literal">YYYY-MM-DD+/-HH:MM <span style="display: none;"></span>\n</span>\n</em><br> The date format follows the <a href="https://www.w3.org/TR/xmlschema-2/" target=_blank>XML Schema standard.</a>',
                    },
                },
            },
            descriptiononlyline: {
                name: "descriptiononlyline",
                ShowFirst: ["Id"],
                Default: ["Amount"],
                Optional: ["Description", "LineNum"],
                Required: ["DetailType", "DescriptionLineDetail"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Description: {
                        maxLen: "max 4000 chars",
                        type: "String",
                        description:
                            'A string representing one of the following:\n<li>\nFree form text description of the line item that appears in the printed record.\n</li>\n<li>\nA subtotal line inline with other lines on the sales form and holds the sum of amounts on all lines above it. This is distinct from the overall transaction subtotal represented with a SubTotal detail line.\n<li>\nIn create requests, set to <span class="literal">Subtotal:</span> (case sensitive) to create the subtotal line; the amount is generated by QuickBooks Online business logic.\n</li>\n<li>\nIn read requests, lines with <span class="literal">Subtotal: nn.nn</span> returned in this field denote subtotal lines in the object.\n</li>\n</ul></li>\n</ul>',
                        requiredFlag: "Optional",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description: 'Set to\n<span class="literal">DescriptionOnly</span>for this type of line.',
                        requiredFlag: "Required",
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive integer.",
                    },
                    Amount: {
                        readOnly: true,
                        type: "Decimal",
                        minorVersion: 23,
                        description:
                            'The amount of the line item. Available when <span class="literal">Amount</span> is set via the QuickBooks UI. Returned only for Description Only line items that have a non-empty amount associated with them.',
                    },
                    DescriptionLineDetail: {
                        type: "DescriptionLineDetail",
                        requiredFlag: "Required",
                        $ref: [
                            {
                                descriptiononly: "DescriptionOnly",
                            },
                        ],
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>If\n<span class="literal">Id</span>is greater than zero and exists for the transaction, the request is considered an update operation for the description line item.</li>\n<li>If no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the transaction then the request is considered a create operation for the description line item.</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                },
            },
            journalreportqueryUS: {
                name: "journalreportquery",
                ShowFirst: [],
                Default: [],
                Optional: ["end_date", "date_macro", "sort_by", "sort_order", "start_date", "columns"],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.\nSupported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    sort_by: {
                        default: '<span class="literal">txn_type</span>',
                        type: "String",
                        description:
                            "The column type used in sorting report rows. Specify a column type as defined with the columns query parameter.",
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.\nSupported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    columns: {
                        default: "columns denoted with *",
                        type: "String",
                        description:
                            "Default columns included in the report are denoted with *.\nColumn types to be shown in the report.\n Supported Values: acct_num_with_extn*, account_name*, credit_amt*, create_by, create_date, debt_amt*, doc_num*, due_date*, is_ar_paid*, is_ap_paid*, item_name, journal_code_name*, last_mod_by, last_mod_date, memo*, name, neg_open_bal, paid_date*, pmt_mthd*, quantity, rate, tx_date*, txn_num*, txn_type* </br> <strong>To retrieve the account number (acct_num_with_extn) it's also needed to request the account name (account_name) in the same request.</strong> <br> The account number will only be returned if the company has enabled the 'enable account numbers' option in its Chart of Accounts preferences.",
                        requiredFlag: "Optional",
                    },
                },
            },
            salesreceiptresponse: {
                name: "salesreceiptresponse",
                ShowFirst: ["Id"],
                Default: [
                    "HomeBalance",
                    "DeliveryInfo",
                    "RecurDataRef",
                    "TotalAmt",
                    "Balance",
                    "HomeTotalAmt",
                    "FreeFormAddress",
                ],
                Optional: [
                    "TxnDate",
                    "ShipFromAddr",
                    "CustomField ",
                    "ShipDate",
                    "TrackingNum",
                    "ClassRef",
                    "PrintStatus",
                    "PaymentRefNum",
                    "TxnSource",
                    "LinkedTxn [0..n]",
                    "GlobalTaxCalculation",
                    "TransactionLocationType",
                    "ApplyTaxAfterDiscount",
                    "DocNumber",
                    "PrivateNote",
                    "DepositToAccountRef",
                    "CustomerMemo",
                    "EmailStatus",
                    "CreditCardPayment",
                    "TxnTaxDetail",
                    "PaymentMethodRef",
                    "ExchangeRate",
                    "ShipAddr",
                    "DepartmentRef",
                    "ShipMethodRef",
                    "BillAddr",
                    "MetaData",
                ],
                Required: ["Line [0..n]", "CustomerRef"],
                RequiredForUpdate: ["SyncToken"],
                ConditionallyRequired: ["CurrencyRef", "BillEmail"],
                type: "object",
                properties: {
                    TxnDate: {
                        sortable: true,
                        description:
                            "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\n<br/>Sort order is ASC by default. ",
                        filterable: true,
                        requiredFlag: "Optional",
                        default: "current server date",
                        type: "Date",
                    },
                    ShipFromAddr: {
                        minorVersion: 35,
                        description:
                            'Identifies the address where the goods are shipped from. For transactions without shipping, it represents the address where the sale took place.<br> For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                        requiredFlag: "Optional",
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        type: "PhysicalAddress",
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>. Required if multicurrency is enabled for the company',
                        requiredFlag: "Conditionally required",
                    },
                    "CustomField ": {
                        $ref: [
                            {
                                customfield: "CustomField",
                            },
                        ],
                        type: "CustomField",
                        requiredFlag: "Optional",
                        description:
                            'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check <span class="literal">Preferences.SalesFormsPrefs.CustomField</span> and <span class="literal">Preferences.VendorAndPurchasesPrefs.POCustomField</span> for custom fields currenly configured. <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/create-custom-fields" title="Custom Fields">Click here</a> to learn about managing custom fields. ',
                    },
                    HomeBalance: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Convenience field containing the amount in <span class="literal">Balance</span> expressed in terms of the home currency. Calculated by QuickBooks business logic. Value is valid only when <span class="literal">CurrencyRef</span> is specified and available when endpoint is evoked with the <span class="literal">minorversion=3</span> query parameter. Applicable if multicurrency is enabled for the company',
                        minorVersion: 3,
                    },
                    ShipDate: {
                        $ref: [
                            {
                                date: "Date",
                            },
                        ],
                        type: "Date",
                        requiredFlag: "Optional",
                        description:
                            "Location of the transaction, as defined using location tracking in QuickBooks Online. ",
                    },
                    TrackingNum: {
                        type: "String",
                        description:
                            "Shipping provider's tracking number for the delivery of the goods associated with the transaction.",
                        requiredFlag: "Optional",
                    },
                    ClassRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to the Class associated with the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.ClassTrackingPerTxn</span> is set to <span class="literal">true</span>. Query the Class name list resource to determine the appropriate Class object for this reference. Use <span class="literal">Class.Id</span> and <span class="literal">Class.Name</span> from that object for <span class="literal">ClassRef.value</span> and <span class="literal">ClassRef.name</span>, respectively. ',
                    },
                    PrintStatus: {
                        default: '<span class="literal">NotSet</span>',
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'Printing status of the invoice.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToPrint</span>,\n<span class="literal">PrintComplete\n</span>.',
                    },
                    PaymentRefNum: {
                        maxLen: "Max 21 characters",
                        type: "String",
                        description:
                            "The reference number for the payment received. For example, \u00c2\u00a0Check # for a check, envelope # for a cash donation.",
                        requiredFlag: "Optional",
                    },
                    DeliveryInfo: {
                        readOnly: true,
                        type: "DeliveryInfo",
                        description:
                            "Email delivery information. Returned when a request has been made to deliver email with the send operation. ",
                        $ref: [
                            {
                                deliveryinfo: "DeliveryInfo",
                            },
                        ],
                    },
                    TxnSource: {
                        type: "String",
                        description: "Used internally to specify originating source of a credit card transaction.",
                        requiredFlag: "Optional",
                    },
                    "LinkedTxn [0..n]": {
                        $ref: [
                            {
                                linkedtxn: "LinkedTxn",
                            },
                        ],
                        type: "LinkedTxn",
                        requiredFlag: "Optional",
                        description:
                            'Zero or more related transactions to this sales receipt object. The following linked relationships are supported:<ul><li>\nLinks to <span class="literal">Estimate</span> and <span class="literal">TimeActivity</span> objects can be established directly to this sales receipt object with UI or with the API. Create, Read, Update, and Query operations are avaialble at the API level for these types of links.\n</li>\n<li>Only one link can be made to an <span class="literal">Estimate</span>. </li><li>\nLinks to expenses incurred on behalf of the customer are returned in the response with <span class="literal">LinkedTxn.TxnType</span> set to <span class="literal">ReimburseCharge</span>, <span class="literal">ChargeCredit</span> or <span class="literal">StatementCharge</span> corresponding to billable customer expenses of type <span class="literal">Cash</span>, <span class="literal">Delayed Credit</span>, and <span class="literal">Delayed Charge</span>, respectively. Links to these types of transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.\n</li>\n<li>\nLinks to payments applied to an sales receipt object are returned in the response with <span class="literal">LinkedTxn.TxnType</span> set to <span class="literal">Payment</span>. Links to Payment transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.\n</li>\n<li>Links the sales receipt to refundReceipt objects that are applied to the sales receipt. Returned in the response if \n<span class="literal">linkedTxnTxnType</span> is a refundReceipt. Note that linking sales receipts to refund receipts can only be done via the customer-facing QuickBooks UI. This is only available as read-only via our API\n</li>\n</ul>\nUse <span class="literal">LinkedTxn.TxnId</span> as the ID in a separate read request for the specific resource to retrieve details of the linked object.',
                    },
                    RecurDataRef: {
                        readOnly: true,
                        type: "ReferenceType",
                        description:
                            'A reference to the Recurring Transaction. It captures what recurring transaction template the <span class="literal">SalesReceipt</span> was created from.',
                        minorVersion: 52,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                    },
                    GlobalTaxCalculation: {
                        default: '<span class="literal">TaxExcluded</span>',
                        type: "GlobalTaxCalculationEnum",
                        description:
                            'Method in which tax is applied. Allowed values are:\n<span class="literal">TaxExcluded</span>,\n<span class="literal">TaxInclusive</span>, and\n<span class="literal">NotApplicable</span>.',
                        locales: ["GB", "AU", "IN", "CA"],
                        requiredFlag: "Optional",
                    },
                    TotalAmt: {
                        filterable: true,
                        readOnly: true,
                        type: "BigDecimal",
                        description:
                            'Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks. If you process a linked refund transaction against a specific transaction, the \n<span class="literal">totalAmt</span> value won\'t change. It will remain the same. However, voiding the linked refund will change the \n<span class="literal">totalAmt</span> value to O.',
                        systemDefined: true,
                    },
                    TransactionLocationType: {
                        minorVersion: 4,
                        default: '<span class="literal">WithinFrance</span>',
                        requiredFlag: "Optional",
                        type: "String",
                        locales: ["FR"],
                        description:
                            'The account location. Valid values include:\n<li><span class="literal">WithinFrance</span></li>\n<li><span class="literal">FranceOverseas</span></li>\n<li><span class="literal">OutsideFranceWithEU</span></li>\n<li><span class="literal">OutsideEU</span></li>\n</ul>\nFor France locales, only.',
                    },
                    ApplyTaxAfterDiscount: {
                        type: "Boolean",
                        description:
                            'If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.\n<span style="color:#800080;">Default Value:</span> false\n<span style="color:#800080;">Constraints:</span> US versions of QuickBooks only.',
                        locales: ["US"],
                        requiredFlag: "Optional",
                    },
                    DocNumber: {
                        sortable: true,
                        description:
                            'Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of <span class="literal">Preferences:CustomTxnNumber</span> as follows:\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.</li>\n<li>If <span class="literal">Preferences:CustomTxnNumber</span> is false, resulting DocNumber is system generated by incrementing the last number by 1.</li>\n</ul>\nIf <span class="literal">Preferences:CustomTxnNumber</span> is false then do not send a value as it can lead to unwanted duplicates. If a DocNumber value is sent for an Update operation, then it just updates that particular invoice and does not alter the internal system DocNumber.  <br/><em>Note:</em> DocNumber is an optional field for all locales except France. For France locale if <span class="literal">Preferences:CustomTxnNumber</span> is enabled it will <b>not</b> be automatically generated and is a required field.',
                        filterable: true,
                        requiredFlag: "Optional",
                        maxLen: "Maximum of 21 chars",
                        type: "String",
                    },
                    PrivateNote: {
                        maxLen: "Max of 4000 chars",
                        type: "String",
                        description:
                            "User entered, organization-private note about the transaction. This note does not appear on the transaction form to the customer. This field maps to the Memo field on the Sales Receipt form.",
                        requiredFlag: "Optional",
                    },
                    DepositToAccountRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Account to which payment money is deposited. Query the Account name list resource to determine the appropriate Account object for this reference, where <span class="literal">Account.AccountType</span> is <span class="literal">Other Current Asset</span> or <span class="literal">Bank</span>. Use <span class="literal">Account.Id</span> and <span class="literal">Account.Name</span> from that object for <span class="literal">DepositToAccountRef.value</span> and <span class="literal">DepositToAccountRef.name</span>, respectively.\n<br/>If you do not specify this account, payment is applied to the Undeposited Funds account. ',
                    },
                    "Line [0..n]": {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                            {
                                groupline: "GroupLine",
                            },
                            {
                                descriptiononlyline: "DescriptionOnlyLine",
                            },
                            {
                                discountline: "DiscountLine",
                            },
                            {
                                subtotalline: "SubTotalLine",
                            },
                        ],
                        type: "Line",
                        description:
                            'Individual line items of a transaction. \nValid <span class="literal">Line</span> types include:\n<span class="literal">SalesItemLine</span>,\n<span class="literal">GroupLine</span>,\n<span class="literal">DescriptionOnlyLine</span>,\n<span class="literal">DiscountLine</span> and \n<span class="literal">SubTotalLine</span> (read-only)',
                        requiredFlag: "Required",
                    },
                    CustomerMemo: {
                        $ref: [
                            {
                                memoref: "MemoRef",
                            },
                        ],
                        type: "MemoRef",
                        requiredFlag: "Optional",
                        description:
                            "User-entered message to the customer; this message is visible to end user on their transactions. ",
                    },
                    EmailStatus: {
                        type: "String",
                        description:
                            'Email status of the receipt.\nValid values:\n<span class="literal">NotSet</span>,\n<span class="literal">NeedToSend</span>,\n<span class="literal">EmailSent\n</span>.',
                        requiredFlag: "Optional",
                    },
                    CreditCardPayment: {
                        $ref: [
                            {
                                creditcardpayment: "CreditCardPayment",
                            },
                        ],
                        type: "CreditCardPayment",
                        requiredFlag: "Optional",
                        description:
                            'Information about a credit card payment for the transaction. Used when PaymentType is <span class="literal">CreditCard</span>. Inject with data only if the payment was transacted through Intuit Payments API. ',
                    },
                    Balance: {
                        filterable: true,
                        type: "Decimal",
                        readOnly: true,
                        sortable: true,
                        description:
                            'The balance reflecting any payments made against the transaction. Initially set to the value of\n<span class="literal">TotalAmt</span>. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.',
                    },
                    CustomerRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively. ',
                    },
                    TxnTaxDetail: {
                        $ref: [
                            {
                                txntaxdetail: "TxnTaxDetail",
                            },
                        ],
                        type: "TxnTaxDetail",
                        requiredFlag: "Optional",
                        description:
                            'This element provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See <a href="https://developer.intuit.com/app/developer/qbo/docs/workflows/manage-sales-tax-for-non-us-locales" title="Global Tax Model">Global tax model</a> for more information about this element.\nIf sales tax is disabled (<span class="literal">Preferences.TaxPrefs.UsingSalesTax</span> is set to <span class="literal">false</span>) then <span class="literal">TxnTaxDetail</span> is ignored and not stored.',
                    },
                    SyncToken: {
                        readOnly: true,
                        description:
                            'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its <span class="literal">SyncToken</span> is incremented. Attempts to modify an object specifying an older <span class="literal">SyncToken</span> fails. Only the latest version of the object is maintained by QuickBooks Online.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    PaymentMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'Reference to a PaymentMethod associated with this transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. Use <span class="literal">PaymentMethod.Id</span> and <span class="literal">PaymentMethod.Name</span> from that object for <span class="literal">PaymentMethodRef.value</span> and <span class="literal">PaymentMethodRef.name</span>, respectively. ',
                    },
                    ExchangeRate: {
                        default: "1",
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            'The number of home currency units it takes to equal one unit of currency specified by <span class="literal">CurrencyRef</span>. Applicable if multicurrency is enabled for the company.',
                    },
                    ShipAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Identifies the address where the goods must be shipped. If\n<span class="literal">ShipAddr</span>is not specified, and a default\n<span class="literal">Customer:ShippingAddr</span> is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks. <br> For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    HomeTotalAmt: {
                        readOnly: true,
                        type: "Decimal",
                        description:
                            'Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic.\nValue is valid only when <span class="literal">CurrencyRef</span> is specified. Applicable if multicurrency is enabled for the company',
                        systemDefined: true,
                    },
                    DepartmentRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            'A reference to a Department object specifying the location of the transaction. Available if <span class="literal">Preferences.AccountingInfoPrefs.TrackDepartments</span> is set to <span class="literal">true</span>.\n<br/>Query the Department name list resource to determine the appropriate department object for this reference. Use <span class="literal">Department.Id</span> and <span class="literal">Department.Name</span> from that object for <span class="literal">DepartmentRef.value</span> and <span class="literal">DepartmentRef.name</span>, respectively. ',
                    },
                    ShipMethodRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Optional",
                        description:
                            "Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string. ",
                    },
                    BillAddr: {
                        table: {
                            physical_address: ["Show more details", "Hide details"],
                        },
                        $ref: [
                            {
                                physicaladdress: "PhysicalAddress",
                            },
                        ],
                        type: "PhysicalAddress",
                        requiredFlag: "Optional",
                        description:
                            'Bill-to address of the Invoice. If\n<span class="literal">BillAddr</span>is not specified, and a default\n<span class="literal">Customer:BillingAddr</span> is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks. <br> For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. <br/> If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:</p><ul><li><span class="literal">Line1</span> and <span class="literal">Line2</span> elements are populated with the customer name and company name.</li><li>Original <span class="literal">Line1</span> through <span class="literal">Line 5</span> contents, <span class="literal">City</span>, <span class="literal">SubDivisionCode</span>, and <span class="literal">PostalCode</span> flow into <span class="literal">Line3</span> through <span class="literal">Line5</span>as a free format strings.</li></ul>',
                    },
                    FreeFormAddress: {
                        type: "Boolean",
                        description:
                            'Denotes how <span class="literal">ShipAddr</span> is stored:&nbsp;formatted or unformatted. The value of this flag is system defined based on format of shipping address at object create time.<ul><li>If set to <span class="literal">false</span>, shipping address is returned in a formatted style using City, Country,&nbsp;CountrySubDivisionCode, Postal code.</li><li>If set to <span class="literal">true</span>, shipping address is returned in an unformatted style using Line1 through Line5 attributes.</li></ul>',
                        systemDefined: true,
                    },
                    MetaData: {
                        $ref: [
                            {
                                modificationmetadata: "ModificationMetadata",
                            },
                        ],
                        type: "ModificationMetaData",
                        requiredFlag: "Optional",
                        description:
                            "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. ",
                    },
                    BillEmail: {
                        description:
                            'Identifies the e-mail address where the invoice is sent. Required if <span class="literal">EmailStatus=NeedToSend</span>',
                        type: "EmailAddress",
                        requiredFlag: "Conditionally required",
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                    },
                    Id: {
                        sortable: true,
                        description: "Unique identifier for this object.\nSort order is ASC by default.",
                        filterable: true,
                        requiredFlag: "Required for update",
                        systemDefined: true,
                        readOnly: true,
                        type: "String",
                    },
                },
            },
            customersalesquery: {
                name: "customersalesquery",
                ShowFirst: [],
                Default: [],
                Optional: [
                    "customer",
                    "qzurl",
                    "accounting_method",
                    "end_date",
                    "date_macro",
                    "class",
                    "item",
                    "sort_order",
                    "summarize_column_by",
                    "department",
                    "start_date",
                ],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    customer: {
                        default: "Include data for all customers",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified customers.<br />Supported Values: One or more comma separated customer IDs as returned in the attribute, <span class="literal">Customer.Id</span>, of the Customer object response code.',
                        requiredFlag: "Optional",
                    },
                    qzurl: {
                        default: '<span class="literal">false</span>',
                        type: "String",
                        description:
                            'Specifies whether Quick Zoom URL information should be generated for rows in the report. Quick Zoom URL is a hyperlink to another report containing further details about the particular column of data.<br />Supported Values: <span class="literal">true</span>, <span class="literal">false</span>',
                        requiredFlag: "Optional",
                    },
                    accounting_method: {
                        default:
                            'Method defined in preferences by the  <span class="literal">Preferences.ReportPrefs.ReportBasis</span> attribute',
                        type: "String",
                        description:
                            ' The accounting method used in the report. Supported Values:<span class="literal">Cash</span>, <span class="literal">Accrual</span>',
                        requiredFlag: "Optional",
                    },
                    end_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The end date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                    date_macro: {
                        default: "This Fiscal Year-to-date",
                        type: "String",
                        description:
                            'Predefined date range. Use if you want the report to cover a standard report date range; otherwise, use the <span class="literal">start_date</span> and <span class="literal">end_date</span> to cover an explicit report date range.<br />Supported Values: Today, Yesterday, This Week, Last Week, This Week-to-date, Last Week-to-date, Next Week, Next 4 Weeks, This Month, Last Month, This Month-to-date, Last Month-to-date, Next Month, This Fiscal Quarter, Last Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, Last Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year-to-date, Next Fiscal Year',
                        requiredFlag: "Optional",
                    },
                    class: {
                        default: "Include data for all classes",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified classes if so configured in the company file.<br />Supported Values: One or more comma separated class IDs as returned in the attribute, <span class="literal">Class.Id</span>, of the Class entity response code.',
                        requiredFlag: "Optional",
                    },
                    item: {
                        default: "Include data for all items",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified items.<br />Supported Values: One or more comma separated item IDs as returned in the attribute, <span class="literal">Item.Id</span>,of the Item entity response code.',
                        requiredFlag: "Optional",
                    },
                    sort_order: {
                        default: '<span class="literal">ascend</span>',
                        type: "String",
                        description:
                            'The sort order.<br />Supported Values: <span class="literal">ascend</span>, <span class="literal">descend </span>',
                        requiredFlag: "Optional",
                    },
                    summarize_column_by: {
                        default: "Total*",
                        type: "String",
                        description:
                            "The criteria by which to group the report results.<br />Supported Values: Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices",
                        requiredFlag: "Optional",
                    },
                    department: {
                        default: "Include data for all departments",
                        type: "String",
                        description:
                            'Filters report contents to include information for specified departments if so configured in the company file.<br />Supported Values: One or more comma separated department IDs as returned in the attribute, <span class="literal">Department.Id</span> of the Department object response code.',
                        requiredFlag: "Optional",
                    },
                    start_date: {
                        type: "String",
                        requiredFlag: "Optional",
                        description:
                            'The start date of the report, in the format <span class="literal">YYYY-MM-DD</span>. <span class="literal">start_date</span> must be less than <span class="literal">end_date</span>. Use if you want the report to cover an explicit date range; otherwise, use <span class="literal">date_macro</span> to cover a standard report date range. If not specified value of <span class="literal">date_macro</span> is used',
                    },
                },
            },
            emailmessagesprefs: {
                name: "emailmessagesprefs",
                ShowFirst: [],
                Default: ["InvoiceMessage", "EstimateMessage", "SalesReceiptMessage", "StatementMessage"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    InvoiceMessage: {
                        type: "EmailMessageType",
                        description: "Email message details for Invoice.",
                        $ref: [
                            {
                                emailmessagetype: "EmailMessageType",
                            },
                        ],
                    },
                    EstimateMessage: {
                        type: "EmailMessageType",
                        description: "Email message details for Estimate.",
                        $ref: [
                            {
                                emailmessagetype: "EmailMessageType",
                            },
                        ],
                    },
                    SalesReceiptMessage: {
                        type: "EmailMessageType",
                        description: "Email message details for SalesReceipt.",
                        $ref: [
                            {
                                emailmessagetype: "EmailMessageType",
                            },
                        ],
                    },
                    StatementMessage: {
                        type: "EmailMessageType",
                        description: "Email message details for Statement.",
                        $ref: [
                            {
                                emailmessagetype: "EmailMessageType",
                            },
                        ],
                    },
                },
            },
            linkedtxn: {
                name: "linkedtxn",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["TxnId", "TxnType"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["TxnLineId"],
                type: "object",
                properties: {
                    TxnLineId: {
                        type: "String",
                        description:
                            'Required for Deposit and Bill entities. The line number of a specific line of the linked transaction. If supplied, the\n<span class="literal">TxnId</span> and\n<span class="literal">TxnType</span> attributes of the linked transaction must also be populated.',
                        requiredFlag: "Conditionally required",
                    },
                    TxnId: {
                        type: "String",
                        description: "Transaction Id of the related transaction.",
                        requiredFlag: "Required",
                    },
                    TxnType: {
                        type: "String",
                        description: "Transaction type of the linked object.",
                        requiredFlag: "Required",
                    },
                },
            },
            estimaterequest: {
                name: "estimaterequest",
                ShowFirst: [],
                Default: [],
                Optional: [],
                Required: ["Line", "CustomerRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: ["CurrencyRef"],
                type: "object",
                properties: {
                    Line: {
                        $ref: [
                            {
                                salesitemline: "SalesItemLine",
                            },
                            {
                                groupline: "GroupLine",
                            },
                        ],
                        type: "Estimate line object",
                        requiredFlag: "Required",
                        description:
                            "The minimum line item required for the request is one of the following.\nSales item line type\nGroup item line type",
                    },
                    CustomerRef: {
                        filterable: true,
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        type: "ReferenceType",
                        requiredFlag: "Required",
                        description:
                            'Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use <span class="literal">Customer.Id</span> and <span class="literal">Customer.DisplayName</span> from that object for <span class="literal">CustomerRef.value</span> and <span class="literal">CustomerRef.name</span>, respectively.',
                    },
                    CurrencyRef: {
                        $ref: [
                            {
                                currencyref: "CurrencyRef",
                            },
                        ],
                        type: "CurrencyRefType",
                        description:
                            'Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.\n<br/>Multicurrency is enabled for the company if <span class="literal">Preferences.MultiCurrencyEnabled</span> is set to <span class="literal">true</span>. Read more about multicurrency support <a href="https://developer.intuit.com/app/developer/qbo/docs/develop/tutorials/manage-multiple-currencies" title="Currency">here</a>.  Required if multicurrency is enabled for the company',
                        requiredFlag: "Conditionally required",
                    },
                },
            },
            reporttoplevel: {
                name: "reporttoplevel",
                ShowFirst: [],
                Default: ["Header", "Rows", "Columns"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    Header: {
                        description: "The report header.\n",
                        $ref: [
                            {
                                reportheader: "ReportHeader",
                            },
                        ],
                    },
                    Rows: {
                        description: "Top level container holding information for report rows.\n",
                        $ref: [
                            {
                                reportrows: "ReportRows",
                            },
                        ],
                    },
                    Columns: {
                        description: "Top level container holding information for report columns or subcolumns.\n",
                        $ref: [
                            {
                                reportcolumns: "ReportColumns",
                            },
                        ],
                    },
                },
            },
            accountbasedexpenselinebill: {
                name: "accountbasedexpenseline",
                ShowFirst: ["Id"],
                Default: [],
                Optional: ["LinkedTxn [0..n]", "Description", "LineNum"],
                Required: ["DetailType", "Amount", "AccountBasedExpenseLineDetail"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    "LinkedTxn [0..n]": {
                        readOnly: false,
                        $ref: [
                            {
                                linkedtxnbill: "LinkedTxn",
                            },
                        ],
                        type: "LinkedTxn",
                        requiredFlag: "Optional",
                        description:
                            'Zero or more PurchaseOrder transactions linked to this Bill object. The <span class="literal">LinkedTxn.TxnType</span> should always be set to <span class="literal">PurchaseOrder</span>. Use <span class="literal">LinkedTxn.TxnId</span> as the ID of the PurchaseOrder.  When updating an existing Bill to link to a PurchaseOrder a new Line must be created. This behavior matches the QuickBooks UI as it does not allow the linking of an existing line, but rather a new line must be added to link the PurchaseOrder. Over the API this is achieved by simply updating the Bill <span class="literal">Line.Id</span> to something new. This will ensure old bill line is deleted and the new line is linked to the PurchaseOrder.',
                    },
                    Description: {
                        maxLen: "max 4000 chars",
                        type: "String",
                        description: "Free form text description of the line item that appears in the printed record.",
                        requiredFlag: "Optional",
                    },
                    DetailType: {
                        type: "LineDetailTypeEnum",
                        description:
                            'Set to\n<span class="literal">AccountBasedExpenseLineDetail</span>for this type of line.',
                        requiredFlag: "Required",
                    },
                    LineNum: {
                        type: "Decimal",
                        requiredFlag: "Optional",
                        description:
                            "Specifies the position of the line in the collection of transaction lines. Positive Integer.",
                    },
                    Amount: {
                        maxLen: "max 15 digits in 10.5 format",
                        type: "Decimal",
                        description: "The amount of the line item.",
                        requiredFlag: "Required",
                    },
                    Id: {
                        readOnly: true,
                        description:
                            'The Id of the line item. Its use in requests is as folllows:\n<li>If\n<span class="literal">Id</span>is greater than zero and exists for the company, the request is considered an update operation for a line item.</li>\n<li>If no\n<span class="literal">Id</span>is provided, the\n<span class="literal">Id</span>provided is less than or equal to zero, or the\n<span class="literal">Id</span>provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.</li>\n</ul>\nAvailable in all objects that use lines and support the update operation.',
                        type: "String",
                        requiredFlag: "Required for update",
                        systemDefined: true,
                    },
                    AccountBasedExpenseLineDetail: {
                        $ref: [
                            {
                                accountbasedexpenselinedetail: "AccountBasedExpenseLineDetail",
                            },
                        ],
                        type: "AccountBasedExpense",
                        description: "<strong>LineDetail</strong>",
                        requiredFlag: "Required",
                    },
                },
            },
            entitlementsresponse: {
                name: "entitlementsresponse",
                ShowFirst: [],
                Default: [
                    "PlanName",
                    "Entitlement [0..n]",
                    "SupportedLanguages",
                    "Entitlement",
                    "CompanyStartDate",
                    "EmployerId",
                    "QboCompany",
                    "Email",
                    "WebAddr",
                    "FiscalYearStartMonth",
                    "Thresholds [0..n]",
                    "DaysRemainingTrial",
                    "MaxUsers",
                    "CurrentUsers",
                ],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    PlanName: {
                        type: "String",
                        description: "Billing plan associated with this company.",
                    },
                    "Entitlement [0..n]": {
                        description:
                            '<span class="literal">Entitlement.id</span>--Integer. Name of the entitlement.\n<span class="literal">Entitlement.name</span>--String. Name of the entitlement.\n<span class="literal">Entitlement.Term</span>--Boolean. Availability of entitlement: <span class="literal">On</span> or <span class="literal">Off</span>.',
                    },
                    SupportedLanguages: {
                        type: "String",
                        description: " Comma separated list of languages.",
                    },
                    Entitlement: {
                        maxLen: "maximum of 20 chars",
                        type: "TelephoneNumber",
                        description: "Primary phone number. ",
                        $ref: [
                            {
                                telephonenumber: "TelephoneNumber",
                            },
                        ],
                    },
                    CompanyStartDate: {
                        type: "DateTime",
                        description:
                            ' DateTime when company file was created. This field and <span class="literal">Metadata.CreateTime</span> contain the same value. ',
                        $ref: [
                            {
                                datetime: "DateTime",
                            },
                        ],
                    },
                    EmployerId: {
                        type: "String",
                        description: "Employer identifier (EIN).",
                    },
                    QboCompany: {
                        type: "Boolean",
                        description:
                            ' Check if the company is a QuickBooks Online company. <span class="literal">false</span> is returned if not a QuickBooks Online company, the company exists in the Intuit ecosystem, but is not a QuickBooks Online company, or the company is a QuickBooks Online company, but the current user does not belong to the company.',
                    },
                    Email: {
                        maxLen: "max 100 chars",
                        type: "EmailAddress",
                        description: " Default email address. ",
                        $ref: [
                            {
                                emailaddress: "EmailAddress",
                            },
                        ],
                    },
                    WebAddr: {
                        type: "WebSiteAddress",
                        description: " Website address. ",
                        $ref: [
                            {
                                websiteaddress: "WebsiteAddress",
                            },
                        ],
                    },
                    FiscalYearStartMonth: {
                        type: "MonthEnum",
                        description: " The start month of fiscal year.",
                    },
                    "Thresholds [0..n]": {
                        $ref: [
                            {
                                threshold: "threshold",
                            },
                        ],
                        type: "Threshold",
                        description: "The threshold for this company.",
                        minorVersion: 43,
                    },
                    DaysRemainingTrial: {
                        type: "Integer",
                        description: " Remaining trial period days.",
                    },
                    MaxUsers: {
                        type: "Integer",
                        description: "Maximum billable users allowed in the company.",
                    },
                    CurrentUsers: {
                        type: "Integer",
                        description: "Billable users currently in the company. ",
                    },
                },
            },
            taxratedetail: {
                name: "taxratedetail",
                ShowFirst: [],
                Default: [],
                Optional: ["TaxTypeApplicable", "TaxOrder"],
                Required: ["TaxRateRef"],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    TaxTypeApplicable: {
                        type: "String",
                        description: "Applicable TaxType enum. Valid values: TaxOnAmount, TaxOnAmountPlusTax, TaxOnTax",
                        requiredFlag: "Optional",
                    },
                    TaxRateRef: {
                        $ref: [
                            {
                                referencetype: "ReferenceType",
                            },
                        ],
                        requiredFlag: "Required",
                        description: "Reference to the tax rate.",
                    },
                    TaxOrder: {
                        type: "Integer",
                        description: "Applicable Tax Order.",
                        requiredFlag: "Optional",
                    },
                },
            },
            reportcolumn: {
                name: "reportcolumn",
                ShowFirst: [],
                Default: ["ColType", "ColTitle"],
                Optional: [],
                Required: [],
                RequiredForUpdate: [],
                ConditionallyRequired: [],
                type: "object",
                properties: {
                    ColType: {
                        type: "ColumnTypeEnum",
                        description:
                            'The type of information found in the column. Possible values include:\n<li><span class="literal">Account</span>\u2014This column in the row represents an account for the row item. The row further defines the specific account.</li>\n<li><span class="literal">Money</span>\u2014This column in the row represents an amount for the row item.</li>\n</ul>',
                    },
                    ColTitle: {
                        type: "String",
                        description:
                            "The column label. This string appears at the top of the column. If not defined, the column does not have a label. The value of this attribute is localized.",
                    },
                },
            },
        },
    },
    codes: {
        qbpayments: {
            Cards: {
                "Delete0-request": '{\n  "id": "200161921532106731364534"\n}',
                "Delete0-response": "{}",
                "createCardFromToken0-request": '{\n  "value": "F+hgXXynTwwTi3B70MFysfj/s7o="\n}',
                "Get0-request":
                    '{\n  "updated": "2015-03-25T22:05:39Z", \n  "name": "Richard Jones", \n  "accountNumber": "35834534", \n  "default": false, \n  "created": "2015-03-25T22:05:39Z", \n  "inputType": "KEYED", \n  "phone": "6047296480", \n  "accountType": "PERSONAL_CHECKING", \n  "routingNumber": "121000358", \n  "id": "200161921532106731364534"\n}',
                "List0-response":
                    '[\n  {\n    "updated": "2015-03-25T22:24:33Z", \n    "expMonth": "12", \n    "name": "Test User", \n    "created": "2015-03-25T22:24:33Z", \n    "default": false, \n    "number": "xxxxxxxxxxxx7893", \n    "cvvVerification": {\n      "date": "2015-03-25T22:24:33Z", \n      "result": "NOT_DONE"\n    }, \n    "address": {\n      "postalCode": "44112", \n      "city": "Richmond", \n      "region": "VA", \n      "streetAddress": "1245 Hana Rd", \n      "country": "US"\n    }, \n    "expYear": "2026", \n    "isBusiness": false, \n    "id": "101101015602106732027893"\n  }\n]',
                "createCard0-response":
                    '{\n  "updated": "2015-03-25T22:24:33Z", \n  "name": "Test User", \n  "created": "2015-03-25T22:24:33Z", \n  "default": false, \n  "number": "xxxxxxxxxxxx7893", \n  "expMonth": "12", \n  "address": {\n    "postalCode": "44112", \n    "city": "Richmond", \n    "region": "VA", \n    "streetAddress": "1245 Hana Rd", \n    "country": "US"\n  }, \n  "expYear": "2026", \n  "isBusiness": false, \n  "id": "101101015602106732027893"\n}',
                "createCard0-request":
                    '{\n  "expMonth": "12", \n  "address": {\n    "postalCode": "44112", \n    "city": "Richmond", \n    "streetAddress": "1245 Hana Rd", \n    "region": "VA", \n    "country": "US"\n  }, \n  "number": "4408041234567893", \n  "name": "Test User", \n  "expYear": "2026"\n}',
                "createCardFromToken0-response":
                    '{\n  "updated": "2015-03-25T22:24:33Z", \n  "name": "Test User", \n  "created": "2015-03-25T22:24:33Z", \n  "default": false, \n  "number": "xxxxxxxxxxxx7893", \n  "expMonth": "12", \n  "address": {\n    "postalCode": "44112", \n    "city": "Richmond", \n    "region": "VA", \n    "streetAddress": "1245 Hana Rd", \n    "country": "US"\n  }, \n  "expYear": "2026", \n  "isBusiness": false, \n  "id": "101101015602106732027893"\n}',
                "Get0-response":
                    '{\n  "updated": "2015-03-25T22:24:33Z", \n  "expMonth": "12", \n  "name": "Test User", \n  "created": "2015-03-25T22:24:33Z", \n  "default": false, \n  "number": "xxxxxxxxxxxx7893", \n  "cvvVerification": {\n    "date": "2015-03-25T22:24:33Z", \n    "result": "NOT_DONE"\n  }, \n  "address": {\n    "postalCode": "44112", \n    "city": "Richmond", \n    "region": "VA", \n    "streetAddress": "1245 Hana Rd", \n    "country": "US"\n  }, \n  "expYear": "2026", \n  "isBusiness": false, \n  "id": "101101015602106732027893"\n}',
            },
            Charges: {
                "Create1-response":
                    '{\n  "status": "CAPTURED", \n  "created": "2014-11-03T16:41:42Z", \n  "authCode": "792668", \n  "token": "bFy3h7W3D2tmOfYxl2msnLbUirY=", \n  "currency": "USD", \n  "amount": "10.55", \n  "id": "EMU254189574"\n}',
                "Create1-request":
                    '{\n  "currency": "USD", \n  "amount": "10.55", \n  "context": {\n    "mobile": "false", \n    "isEcommerce": "true"\n  }, \n  "card": {\n    "name": "emulate=0", \n    "number": "4111111111111111", \n    "expMonth": "02", \n    "address": {\n      "postalCode": "94086", \n      "country": "US", \n      "region": "CA", \n      "streetAddress": "1130 Kifer Rd", \n      "city": "Sunnyvale"\n    }, \n    "expYear": "2022", \n    "cvc": "123"\n  }\n}',
                "List0-response":
                    '[\n  {\n    "status": "CAPTURED", \n    "capture": true, \n    "created": "2014-09-12T19:34:29Z", \n    "authcode": "357376", \n    "currency": "USD", \n    "amount": "10.55", \n    "context": {\n      "deviceInfo": {}, \n      "recurring": false, \n      "tax": null\n    }, \n    "id": "EMU148374120", \n    "card": {\n      "expMonth": "02", \n      "address": {\n        "postalCode": "94086", \n        "city": "Sunnyvale", \n        "region": "CA", \n        "streetAddress": "1130 Kifer Rd", \n        "country": "USA"\n      }, \n      "expYear": "20", \n      "number": "xxxxxxxxxxxx1111", \n      "name": "emulate=0"\n    }\n  }, \n  {\n    "status": "CAPTURED", \n    "capture": true, \n    "description": "123", \n    "created": "2014-09-12T19:04:43Z", \n    "authcode": "822920", \n    "currency": "USD", \n    "amount": "190.14", \n    "context": {\n      "deviceInfo": {}, \n      "recurring": false, \n      "tax": "190.14"\n    }, \n    "id": "EMU538000254", \n    "card": {\n      "expMonth": "02", \n      "address": {\n        "postalCode": "94086", \n        "city": "Sunnyvale", \n        "region": "CA", \n        "streetAddress": "1130 Kifer Rd.", \n        "country": "USA"\n      }, \n      "expYear": "17", \n      "number": "xxxxxxxxxxxx1111", \n      "name": "Fefe Fefe"\n    }\n  }\n]',
                "VoidTransaction0-response":
                    '{\n  "status": "ISSUED", \n  "created": "2019-05-23T21:19:23Z", \n  "amount": "1.00", \n  "context": {\n    "mobile": false, \n    "recurring": false\n  }, \n  "type": "VOID", \n  "id": "E7UT68A501QI"\n}',
                "RefundsById0-response":
                    '{\n  "id": "EMU891209421", \n  "amount": "5.00", \n  "description": "first refund", \n  "context": {\n    "deviceInfo": {}, \n    "recurring": false, \n    "tax": "0.00"\n  }, \n  "created": "2014-09-23T01:49:12Z"\n}',
                "Read0-response":
                    '{\n  "status": "CAPTURED", \n  "capture": true, \n  "created": "2014-09-12T19:34:29Z", \n  "authcode": "357376", \n  "refundDetail": [], \n  "currency": "USD", \n  "amount": "10.55", \n  "context": {\n    "deviceInfo": {}, \n    "recurring": false, \n    "tax": null\n  }, \n  "id": "EMU148374120", \n  "card": {\n    "expMonth": "02", \n    "address": {\n      "postalCode": "94086", \n      "city": "Sunnyvale", \n      "region": "CA", \n      "streetAddress": "1130 Kifer Rd", \n      "country": "USA"\n    }, \n    "expYear": "20", \n    "number": "xxxxxxxxxxxx1111", \n    "name": "emulate=0"\n  }\n}',
                "Create0-response":
                    '{\n  "status": "CAPTURED", \n  "created": "2014-09-12T19:34:29Z", \n  "currency": "USD", \n  "amount": "10.55", \n  "id": "EMU148374120", \n  "card": {\n    "expMonth": "02", \n    "address": {\n      "postalCode": "94086", \n      "city": "Sunnyvale", \n      "region": "CA", \n      "streetAddress": "1130 Kifer Rd", \n      "country": "US"\n    }, \n    "expYear": "2020", \n    "number": "xxxxxxxxxxxx1111", \n    "name": "emulate=0"\n  }\n}',
                "Create2-request": '""',
                "Create2-response":
                    '{\n  "status": "CAPTURED", \n  "created": "2014-11-03T16:41:42Z", \n  "authCode": "792668", \n  "token": "bFy3h7W3D2tmOfYxl2msnLbUirY=", \n  "currency": "USD", \n  "amount": "10.55", \n  "id": "EMU254189574"\n}',
                "captureCharge0-request":
                    '{\n  "amount": 5.0, \n  "context": {\n    "mobile": "false", \n    "isEcommerce": "true"\n  }\n}',
                "refundCharge0-request":
                    '{\n  "amount": 5.0, \n  "description": "first refund", \n  "context": {\n    "mobile": "false", \n    "deviceInfo": {\n      "macAddress": "", \n      "ipAddress": "", \n      "longitude": "", \n      "phoneNumber": "", \n      "latitude": "", \n      "type": "", \n      "id": ""\n    }, \n    "tax": 0, \n    "isEcommerce": "true"\n  }\n}',
                "refundCharge0-response":
                    '{\n  "id": "EMU891209421", \n  "amount": "5.00", \n  "description": "first refund", \n  "context": {\n    "deviceInfo": {\n      "macAddress": "", \n      "ipAddress": "", \n      "longitude": "", \n      "phoneNumber": "", \n      "latitude": "", \n      "type": "", \n      "id": ""\n    }, \n    "recurring": false, \n    "tax": "0.00"\n  }, \n  "created": "2014-09-23T01:49:12Z"\n}',
                "captureCharge0-response":
                    '{\n  "status": "CAPTURED", \n  "capture": true, \n  "created": "2014-09-23T01:35:51Z", \n  "authCode": "194914", \n  "currency": "USD", \n  "amount": "5.00", \n  "context": {\n    "deviceInfo": {}, \n    "recurring": false, \n    "tax": "0.00"\n  }, \n  "id": "EMU815292842", \n  "card": {\n    "expMonth": "12", \n    "address": {}, \n    "expYear": "2020", \n    "number": "xxxxxxxxxxxx2773", \n    "name": "lucytest"\n  }\n}',
                "Create0-request":
                    '{\n  "currency": "USD", \n  "amount": "10.55", \n  "context": {\n    "mobile": "false", \n    "isEcommerce": "true"\n  }, \n  "card": {\n    "name": "emulate=0", \n    "number": "4111111111111111", \n    "expMonth": "02", \n    "address": {\n      "postalCode": "94086", \n      "country": "US", \n      "region": "CA", \n      "streetAddress": "1130 Kifer Rd", \n      "city": "Sunnyvale"\n    }, \n    "expYear": "2022", \n    "cvc": "123"\n  }\n}',
            },
            Tokens: {
                "Create0-response": '{\n  "value": "bFy3h7W3D2tmOfYxl2msnLbUirY="\n}',
                "Create1-response": '{\n  "value": "bFy3h7W3D2tmOfYxl2msnLbUirY="\n}',
                "Create0-request":
                    '{\n  "card": {\n    "name": "emulate=0", \n    "number": "4111111111111111", \n    "expMonth": "02", \n    "address": {\n      "postalCode": "94086", \n      "country": "US", \n      "region": "CA", \n      "streetAddress": "1130 Kifer Rd", \n      "city": "Sunnyvale"\n    }, \n    "expYear": "2020", \n    "cvc": "123"\n  }\n}',
                "Create1-request": '""',
            },
            Echecks: {
                "Debit0-request":
                    '{\n  "bankAccount": {\n    "phone": "1234567890", \n    "routingNumber": "490000018", \n    "name": "Fname LName", \n    "accountType": "PERSONAL_CHECKING", \n    "accountNumber": "11000000333456781"\n  }, \n  "description": "Check Auth test call", \n  "checkNumber": "12345678", \n  "paymentMode": "WEB", \n  "amount": "1.11", \n  "context": {\n    "deviceInfo": {\n      "macAddress": "macaddress", \n      "ipAddress": "34", \n      "longitude": "longitude", \n      "phoneNumber": "phonenu", \n      "latitude": "", \n      "type": "type", \n      "id": "1"\n    }\n  }\n}',
                "Retrieve1-response":
                    '{\n  "status": "VOIDED", \n  "bankAccount": {\n    "phone": "1234567890", \n    "routingNumber": "xxxxx0018", \n    "name": "Fname LName", \n    "accountType": "PERSONAL_SAVINGS", \n    "accountNumber": "xxxxxxxxxxxxx6781"\n  }, \n  "description": "Check Auth test call", \n  "created": "2015-03-24T18:20:24Z", \n  "checkNumber": "12345678", \n  "authCode": "698-256", \n  "paymentMode": "WEB", \n  "refundDetail": [\n    {\n      "status": "SUCCEEDED", \n      "created": "2015-03-25T18:48:05Z", \n      "amount": "5.55", \n      "context": {\n        "deviceInfo": {}\n      }, \n      "type": "VOID", \n      "id": "102088892426191754709279"\n    }\n  ], \n  "amount": "5.55", \n  "context": {\n    "deviceInfo": {\n      "macAddress": "macaddress", \n      "ipAddress": "34", \n      "longitude": "longitude", \n      "phoneNumber": "phonenu", \n      "latitude": "latitude", \n      "type": "type"\n    }\n  }, \n  "id": "102088863639971869833376"\n}',
                "Debit1-response":
                    '{\n  "status": "CAPTURED", \n  "created": "2014-11-03T16:41:42Z", \n  "authCode": "792668", \n  "token": "bFy3h7W3D2tmOfYxl2msnLbUirY=", \n  "currency": "USD", \n  "amount": "10.55", \n  "id": "EMU254189574"\n}',
                "Debit2-request": '""',
                "RefundsById0-response":
                    '{\n  "status": "VOIDED", \n  "bankAccount": {\n    "phone": "1234567890", \n    "routingNumber": "xxxxx0018", \n    "name": "Fname LName", \n    "accountType": "PERSONAL_SAVINGS", \n    "accountNumber": "xxxxxxxxxxxxx6781"\n  }, \n  "description": "Check Auth test call", \n  "created": "2015-03-24T18:20:24Z", \n  "checkNumber": "12345678", \n  "authCode": "698-256", \n  "paymentMode": "WEB", \n  "refundDetail": [\n    {\n      "status": "SUCCEEDED", \n      "created": "2015-03-25T18:48:05Z", \n      "amount": "5.55", \n      "context": {\n        "deviceInfo": {}\n      }, \n      "type": "VOID", \n      "id": "102088892426191754709279"\n    }\n  ], \n  "amount": "5.55", \n  "context": {\n    "deviceInfo": {\n      "macAddress": "macaddress", \n      "ipAddress": "34", \n      "longitude": "longitude", \n      "phoneNumber": "phonenu", \n      "latitude": "latitude", \n      "type": "type"\n    }\n  }, \n  "id": "102088863639971869833376"\n}',
                "voidOrRefund0-response":
                    '{\n  "status": "SUCCEEDED", \n  "amount": "1.11", \n  "type": "VOID", \n  "id": "102088892426191754709279", \n  "created": "2015-03-25T18:48:05Z"\n}',
                "Debit1-request": '""',
                "Retrieve0-response":
                    '{\n  "status": "VOIDED", \n  "bankAccount": {\n    "phone": "1234567890", \n    "routingNumber": "xxxxx0018", \n    "name": "Fname LName", \n    "accountType": "PERSONAL_SAVINGS", \n    "accountNumber": "xxxxxxxxxxxxx6781"\n  }, \n  "description": "Check Auth test call", \n  "created": "2015-03-24T18:20:24Z", \n  "checkNumber": "12345678", \n  "authCode": "698-256", \n  "paymentMode": "WEB", \n  "refundDetail": [\n    {\n      "status": "SUCCEEDED", \n      "created": "2015-03-25T18:48:05Z", \n      "amount": "5.55", \n      "context": {\n        "deviceInfo": {}\n      }, \n      "type": "VOID", \n      "id": "102088892426191754709279"\n    }\n  ], \n  "amount": "5.55", \n  "context": {\n    "deviceInfo": {\n      "macAddress": "macaddress", \n      "ipAddress": "34", \n      "longitude": "longitude", \n      "phoneNumber": "phonenu", \n      "latitude": "latitude", \n      "type": "type"\n    }\n  }, \n  "id": "102088863639971869833376"\n}',
                "voidOrRefund0-request": '{\n  "amount": "1.11"\n}',
                "Debit0-response":
                    '{\n  "status": "SUCCEEDED", \n  "bankAccount": {\n    "phone": "1234567890", \n    "routingNumber": "xxxxx0018", \n    "name": "Fname LName", \n    "accountType": "PERSONAL_SAVINGS", \n    "accountNumber": "xxxxxxxxxxxxx6781"\n  }, \n  "description": "Check Auth test call", \n  "created": "2015-03-24T18:20:24Z", \n  "checkNumber": "12345678", \n  "authCode": "698-256", \n  "paymentMode": "WEB", \n  "amount": "5.55", \n  "context": {\n    "deviceInfo": {\n      "macAddress": "macaddress", \n      "ipAddress": "34", \n      "longitude": "longitude", \n      "phoneNumber": "phonenu", \n      "latitude": "latitude", \n      "type": "type"\n    }\n  }, \n  "id": "102088863639971869833376"\n}',
                "Debit2-response":
                    '{\n  "status": "CAPTURED", \n  "created": "2014-11-03T16:41:42Z", \n  "authCode": "792668", \n  "token": "bFy3h7W3D2tmOfYxl2msnLbUirY=", \n  "currency": "USD", \n  "amount": "10.55", \n  "id": "EMU254189574"\n}',
            },
            Bankaccounts: {
                "Delete0-request": '{\n  "id": "200161921532106731364534"\n}',
                "Delete0-response": "{}",
                "createBankAccount0-request":
                    '{\n  "phone": "6047296480", \n  "routingNumber": "XXXXX0358", \n  "name": "My Checking", \n  "accountType": "PERSONAL_CHECKING", \n  "accountNumber": "XXXX4534"\n}',
                "List0-response":
                    '[\n  {\n    "updated": "2015-03-25T22:05:39Z", \n    "name": "Richard Jones", \n    "accountNumber": "XXXX4534", \n    "default": false, \n    "created": "2015-03-25T22:05:39Z", \n    "inputType": "KEYED", \n    "phone": "6047296480", \n    "accountType": "PERSONAL_CHECKING", \n    "routingNumber": "XXXXX0358", \n    "id": "200161921532106731364534"\n  }\n]',
                "createBankAccount1-response":
                    '{\n  "updated": "2015-03-25T22:05:39Z", \n  "name": "Richard Jones", \n  "accountNumber": "35834534", \n  "default": false, \n  "created": "2015-03-25T22:05:39Z", \n  "inputType": "KEYED", \n  "phone": "6047296480", \n  "accountType": "PERSONAL_CHECKING", \n  "routingNumber": "121000358", \n  "id": "200161921532106731364534"\n}',
                "createBankAccountFromToken0-request": '{\n  "value": "F+hgXXynTwwTi3B70MFysfj/s7o="\n}',
                "getBankAccount0-response":
                    '{\n  "updated": "2015-03-25T22:05:39Z", \n  "name": "Richard Jones", \n  "accountNumber": "XXXX4534", \n  "default": false, \n  "created": "2015-03-25T22:05:39Z", \n  "inputType": "KEYED", \n  "phone": "6047296480", \n  "accountType": "PERSONAL_CHECKING", \n  "routingNumber": "XXXXX0358", \n  "id": "200161921532106731364534"\n}',
                "getBankAccount0-request":
                    '{\n  "updated": "2015-03-25T22:05:39Z", \n  "name": "Richard Jones", \n  "accountNumber": "XXXX4534", \n  "default": false, \n  "created": "2015-03-25T22:05:39Z", \n  "inputType": "KEYED", \n  "phone": "6047296480", \n  "accountType": "PERSONAL_CHECKING", \n  "routingNumber": "XXXXX0358", \n  "id": "200161921532106731364534"\n}',
                "createBankAccount0-response":
                    '{\n  "updated": "2015-03-25T22:05:39Z", \n  "name": "Richard Jones", \n  "accountNumber": "XXXX4534", \n  "default": false, \n  "created": "2015-03-25T22:05:39Z", \n  "inputType": "KEYED", \n  "phone": "6047296480", \n  "accountType": "PERSONAL_CHECKING", \n  "routingNumber": "XXXXX0358", \n  "id": "200161921532106731364534"\n}',
                "createBankAccountFromToken0-response":
                    '{\n  "updated": "2015-03-25T22:05:39Z", \n  "name": "Richard Jones", \n  "accountNumber": "XXXX4534", \n  "default": false, \n  "created": "2015-03-25T22:05:39Z", \n  "inputType": "KEYED", \n  "phone": "6047296480", \n  "accountType": "PERSONAL_CHECKING", \n  "routingNumber": "XXXXX0358", \n  "id": "200161921532106731364534"\n}',
                "createBankAccount1-request": '{\n  "value": "F+hgXXynTwwTi3B70MFysfj/s7o="\n}',
            },
        },
        qbo: {
            Aragingdetail: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/AgedReceivableDetail?report_date=2015-06-30&start_duedate=2015-01-01&end_duedate=2015-06-30&columns=due_date,cust_name"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "AgedReceivableDetail", \n    "Currency": "USD", \n    "EndPeriod": "2015-06-30", \n    "Option": [\n      {\n        "Name": "report_date", \n        "Value": "2015-06-30"\n      }, \n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "Time": "2016-03-09T10:16:56-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "31 - 60 days past due"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "id": "8", \n                  "value": "Freeman Sporting Goods:0969 Ocean View Road"\n                }, \n                {\n                  "value": "2015-05-24"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section"\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "Total for 31 - 60 days past due"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {}, \n        "type": "Section"\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "1 - 30 days past due"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "id": "20", \n                  "value": "Red Rock Diner"\n                }, \n                {\n                  "value": "2015-05-31"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "id": "1", \n                  "value": "Amy\'s Bird Sanctuary"\n                }, \n                {\n                  "value": "2015-06-16"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "id": "16", \n                  "value": "Kookies by Kathy"\n                }, \n                {\n                  "value": "2015-06-20"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "id": "2", \n                  "value": "Bill\'s Windsurf Shop"\n                }, \n                {\n                  "value": "2015-06-21"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "id": "9", \n                  "value": "Freeman Sporting Goods:55 Twin Lane"\n                }, \n                {\n                  "value": "2015-06-21"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section"\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "Total for 1 - 30 days past due"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "type": "Section"\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "cust_name", \n        "ColTitle": "Client"\n      }, \n      {\n        "ColType": "due_date", \n        "ColTitle": "Due Date"\n      }\n    ]\n  }\n}',
            },
            Preferences: {
                "Query0-request": '"select * from Preferences\\n"',
                "Update0-response":
                    '{\n  "Preferences": {\n    "EmailMessagesPrefs": {\n      "InvoiceMessage": {\n        "Message": "Your invoice is attached.  Please remit payment at your earliest convenience.\\nThank you for your business - we appreciate it very much.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Invoice from Craig\'s Design and Landscaping Services"\n      }, \n      "EstimateMessage": {\n        "Message": "Please review the estimate below.  Feel free to contact us if you have any questions.\\nWe look forward to working with you.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Estimate from Craig\'s Design and Landscaping Services"\n      }, \n      "SalesReceiptMessage": {\n        "Message": "Your sales receipt is attached.\\nThank you for your business - we appreciate it very much.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Sales Receipt from Craig\'s Design and Landscaping Services"\n      }, \n      "StatementMessage": {\n        "Message": "Your statement is attached.  Please remit payment at your earliest convenience.\\nThank you for your business - we appreciate it very much.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Statement from Craig\'s Design and Landscaping Services"\n      }\n    }, \n    "ProductAndServicesPrefs": {\n      "QuantityWithPriceAndRate": true, \n      "ForPurchase": true, \n      "QuantityOnHand": true, \n      "ForSales": true\n    }, \n    "domain": "QBO", \n    "SyncToken": "6", \n    "ReportPrefs": {\n      "ReportBasis": "Accrual", \n      "CalcAgingReportFromTxnDate": false\n    }, \n    "AccountingInfoPrefs": {\n      "FirstMonthOfFiscalYear": "January", \n      "UseAccountNumbers": true, \n      "TaxYearMonth": "January", \n      "ClassTrackingPerTxn": false, \n      "TrackDepartments": true, \n      "TaxForm": "6", \n      "CustomerTerminology": "Customers", \n      "BookCloseDate": "2018-12-31", \n      "DepartmentTerminology": "Location", \n      "ClassTrackingPerTxnLine": true\n    }, \n    "SalesFormsPrefs": {\n      "ETransactionPaymentEnabled": false, \n      "CustomTxnNumbers": false, \n      "AllowShipping": false, \n      "AllowServiceDate": false, \n      "ETransactionEnabledStatus": "NotApplicable", \n      "DefaultCustomerMessage": "Thank you for your business and have a great day!", \n      "EmailCopyToCompany": false, \n      "AllowEstimates": true, \n      "DefaultTerms": {\n        "value": "3"\n      }, \n      "AllowDiscount": true, \n      "DefaultDiscountAccount": "86", \n      "AllowDeposit": true, \n      "AutoApplyPayments": true, \n      "IPNSupportEnabled": false, \n      "AutoApplyCredit": true, \n      "CustomField": [\n        {\n          "CustomField": [\n            {\n              "BooleanValue": false, \n              "Type": "BooleanType", \n              "Name": "SalesFormsPrefs.UseSalesCustom3"\n            }, \n            {\n              "BooleanValue": false, \n              "Type": "BooleanType", \n              "Name": "SalesFormsPrefs.UseSalesCustom2"\n            }, \n            {\n              "BooleanValue": true, \n              "Type": "BooleanType", \n              "Name": "SalesFormsPrefs.UseSalesCustom1"\n            }\n          ]\n        }, \n        {\n          "CustomField": [\n            {\n              "StringValue": "Crew #", \n              "Type": "StringType", \n              "Name": "SalesFormsPrefs.SalesCustomName1"\n            }\n          ]\n        }\n      ], \n      "UsingPriceLevels": false, \n      "ETransactionAttachPDF": false\n    }, \n    "VendorAndPurchasesPrefs": {\n      "BillableExpenseTracking": true, \n      "TrackingByCustomer": true, \n      "POCustomField": [\n        {\n          "CustomField": [\n            {\n              "BooleanValue": false, \n              "Type": "BooleanType", \n              "Name": "PurchasePrefs.UsePurchaseCustom3"\n            }, \n            {\n              "BooleanValue": true, \n              "Type": "BooleanType", \n              "Name": "PurchasePrefs.UsePurchaseCustom2"\n            }, \n            {\n              "BooleanValue": true, \n              "Type": "BooleanType", \n              "Name": "PurchasePrefs.UsePurchaseCustom1"\n            }\n          ]\n        }, \n        {\n          "CustomField": [\n            {\n              "StringValue": "Sales Rep", \n              "Type": "StringType", \n              "Name": "PurchasePrefs.PurchaseCustomName2"\n            }, \n            {\n              "StringValue": "Crew #", \n              "Type": "StringType", \n              "Name": "PurchasePrefs.PurchaseCustomName1"\n            }\n          ]\n        }\n      ]\n    }, \n    "TaxPrefs": {\n      "TaxGroupCodeRef": {\n        "value": "2"\n      }, \n      "UsingSalesTax": true\n    }, \n    "OtherPrefs": {\n      "NameValue": [\n        {\n          "Name": "SalesFormsPrefs.DefaultCustomerMessage", \n          "Value": "Thank you for your business and have a great day!"\n        }, \n        {\n          "Name": "SalesFormsPrefs.DefaultItem", \n          "Value": "1"\n        }, \n        {\n          "Name": "DTXCopyMemo", \n          "Value": "false"\n        }, \n        {\n          "Name": "UncategorizedAssetAccountId", \n          "Value": "32"\n        }, \n        {\n          "Name": "UncategorizedIncomeAccountId", \n          "Value": "30"\n        }, \n        {\n          "Name": "UncategorizedExpenseAccountId", \n          "Value": "31"\n        }, \n        {\n          "Name": "SFCEnabled", \n          "Value": "true"\n        }, \n        {\n          "Name": "DataPartner", \n          "Value": "false"\n        }, \n        {\n          "Name": "Vendor1099Enabled", \n          "Value": "true"\n        }, \n        {\n          "Name": "TimeTrackingFeatureEnabled", \n          "Value": "true"\n        }, \n        {\n          "Name": "FDPEnabled", \n          "Value": "false"\n        }, \n        {\n          "Name": "ProjectsEnabled", \n          "Value": "false"\n        }, \n        {\n          "Name": "DateFormat", \n          "Value": "Month Date Year separated by a slash"\n        }, \n        {\n          "Name": "DateFormatMnemonic", \n          "Value": "MMDDYYYY_SEP_SLASH"\n        }, \n        {\n          "Name": "NumberFormat", \n          "Value": "US Number Format"\n        }, \n        {\n          "Name": "NumberFormatMnemonic", \n          "Value": "US_NB"\n        }, \n        {\n          "Name": "WarnDuplicateCheckNumber", \n          "Value": "true"\n        }, \n        {\n          "Name": "WarnDuplicateBillNumber", \n          "Value": "false"\n        }, \n        {\n          "Name": "SignoutInactiveMinutes", \n          "Value": "60"\n        }, \n        {\n          "Name": "AccountingInfoPrefs.ShowAccountNumbers", \n          "Value": "false"\n        }\n      ]\n    }, \n    "sparse": false, \n    "TimeTrackingPrefs": {\n      "WorkWeekStartDate": "Monday", \n      "MarkTimeEntriesBillable": true, \n      "ShowBillRateToAll": false, \n      "UseServices": true, \n      "BillCustomers": true\n    }, \n    "CurrencyPrefs": {\n      "HomeCurrency": {\n        "value": "USD"\n      }, \n      "MultiCurrencyEnabled": false\n    }, \n    "Id": "1", \n    "MetaData": {\n      "CreateTime": "2017-10-25T01:05:43-07:00", \n      "LastUpdatedTime": "2018-03-08T13:24:26-08:00"\n    }\n  }, \n  "time": "2018-03-12T08:45:52.965-07:00"\n}',
                "Update0-request-xml":
                    '<Preferences xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n   <Id>1</Id>\r\n   <SyncToken>2</SyncToken>\r\n   <MetaData>\r\n      <CreateTime>2013-04-20T10:32:18-07:00</CreateTime>\r\n      <LastUpdatedTime>2013-07-11T17:31:39-07:00</LastUpdatedTime>\r\n   </MetaData>\r\n   <AccountingInfoPrefs>\r\n      <CustomerTerminology>customer</CustomerTerminology>\r\n   </AccountingInfoPrefs>\r\n   <ProductAndServicesPrefs>\r\n      <ForSales>false</ForSales>\r\n      <ForPurchase>false</ForPurchase>\r\n      <QuantityWithPriceAndRate>false</QuantityWithPriceAndRate>\r\n      <QuantityOnHand>true</QuantityOnHand>\r\n   </ProductAndServicesPrefs>\r\n   <SalesFormsPrefs>\r\n      <CustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="BooleanTypeCustomFieldDefinition">\r\n         <CustomField>\r\n            <Name>SalesFormsPrefs.UseSalesCustom3</Name>\r\n            <Type>BooleanType</Type>\r\n            <BooleanValue>true</BooleanValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>SalesFormsPrefs.UseSalesCustom2</Name>\r\n            <Type>BooleanType</Type>\r\n            <BooleanValue>true</BooleanValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>SalesFormsPrefs.UseSalesCustom1</Name>\r\n            <Type>BooleanType</Type>\r\n            <BooleanValue>true</BooleanValue>\r\n         </CustomField>\r\n      </CustomField>\r\n      <CustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="StringTypeCustomFieldDefinition">\r\n         <CustomField>\r\n            <Name>SalesFormsPrefs.PrintOrderSalesCustom3</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>3</StringValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>SalesFormsPrefs.SalesCustomName3</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>Custom 3</StringValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>SalesFormsPrefs.PrintOrderSalesCustom2</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>2</StringValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>SalesFormsPrefs.PrintOrderSalesCustom1</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>1</StringValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>SalesFormsPrefs.SalesCustomName1</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>Custom 1</StringValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>SalesFormsPrefs.SalesCustomName2</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>Custom 2</StringValue>\r\n         </CustomField>\r\n      </CustomField>\r\n      <CustomTxnNumbers>false</CustomTxnNumbers>\r\n      <AllowDeposit>true</AllowDeposit>\r\n      <AllowDiscount>true</AllowDiscount>\r\n      <AllowEstimates>false</AllowEstimates>\r\n      <IPNSupportEnabled>false</IPNSupportEnabled>\r\n      <AllowServiceDate>true</AllowServiceDate>\r\n      <AllowShipping>true</AllowShipping>\r\n      <DefaultTerms>3</DefaultTerms>\r\n      <DefaultCustomerMessage>CustomerMessage 0mw270kOzJR0</DefaultCustomerMessage>\r\n   </SalesFormsPrefs>\r\n   <VendorAndPurchasesPrefs>\r\n      <TrackingByCustomer>true</TrackingByCustomer>\r\n      <BillableExpenseTracking>true</BillableExpenseTracking>\r\n      <DefaultTerms name="Net 30">3</DefaultTerms>\r\n      <DefaultMarkup>10</DefaultMarkup>\r\n      <POCustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="BooleanTypeCustomFieldDefinition">\r\n         <CustomField>\r\n            <Name>PurchasePrefs.UsePurchaseCustom3</Name>\r\n            <Type>BooleanType</Type>\r\n            <BooleanValue>true</BooleanValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>PurchasePrefs.UsePurchaseCustom2</Name>\r\n            <Type>BooleanType</Type>\r\n            <BooleanValue>true</BooleanValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>PurchasePrefs.UsePurchaseCustom1</Name>\r\n            <Type>BooleanType</Type>\r\n            <BooleanValue>true</BooleanValue>\r\n         </CustomField>\r\n      </POCustomField>\r\n      <POCustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="StringTypeCustomFieldDefinition">\r\n         <CustomField>\r\n            <Name>PurchasePrefs.PurchaseCustomName3</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>Custom 3</StringValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>PurchasePrefs.PurchaseCustomName2</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>Custom 2</StringValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>PurchasePrefs.PurchaseCustomName1</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>Custom 1</StringValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>PurchasePrefs.PrintOrderPurchaseCustom2</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>2</StringValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>PurchasePrefs.PrintOrderPurchaseCustom3</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>3</StringValue>\r\n         </CustomField>\r\n         <CustomField>\r\n            <Name>PurchasePrefs.PrintOrderPurchaseCustom1</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>1</StringValue>\r\n         </CustomField>\r\n      </POCustomField>\r\n   </VendorAndPurchasesPrefs>\r\n   <TimeTrackingPrefs>\r\n      <UseServices>true</UseServices>\r\n      <BillCustomers>true</BillCustomers>\r\n      <ShowBillRateToAll>true</ShowBillRateToAll>\r\n      <WorkWeekStartDate>Sunday</WorkWeekStartDate>\r\n      <MarkTimeEntriesBillable>true</MarkTimeEntriesBillable>\r\n   </TimeTrackingPrefs>\r\n   <TaxPrefs>\r\n      <UsingSalesTax>true</UsingSalesTax>\r\n   </TaxPrefs>\r\n   <CurrencyPrefs>\r\n      <MultiCurrencyEnabled>false</MultiCurrencyEnabled>\r\n      <HomeCurrency>USD</HomeCurrency>\r\n   </CurrencyPrefs>\r\n   <OtherPrefs>\r\n      <NameValue>\r\n         <Name>SalesFormsPrefs.DefaultCustomerMessage</Name>\r\n      </NameValue>\r\n      <NameValue>\r\n         <Name>SalesFormsPrefs.DefaultItem</Name>\r\n         <Value>1</Value>\r\n      </NameValue>\r\n   </OtherPrefs>\r\n</Preferences>',
                "Read0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2018-03-12T08:44:41.982-07:00">\r\n    <Preferences domain="QBO" sparse="false">\r\n        <Id>1</Id>\r\n        <SyncToken>6</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2017-10-25T01:05:43-07:00</CreateTime>\r\n            <LastUpdatedTime>2018-03-08T13:24:26-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <AccountingInfoPrefs>\r\n            <UseAccountNumbers>true</UseAccountNumbers>\r\n            <TrackDepartments>true</TrackDepartments>\r\n            <DepartmentTerminology>Location</DepartmentTerminology>\r\n            <ClassTrackingPerTxn>false</ClassTrackingPerTxn>\r\n            <ClassTrackingPerTxnLine>true</ClassTrackingPerTxnLine>\r\n            <FirstMonthOfFiscalYear>January</FirstMonthOfFiscalYear>\r\n            <TaxYearMonth>January</TaxYearMonth>\r\n            <TaxForm>6</TaxForm>\r\n            <BookCloseDate>2018-12-31</BookCloseDate>\r\n            <CustomerTerminology>Customers</CustomerTerminology>\r\n        </AccountingInfoPrefs>\r\n        <ProductAndServicesPrefs>\r\n            <ForSales>true</ForSales>\r\n            <ForPurchase>true</ForPurchase>\r\n            <QuantityWithPriceAndRate>true</QuantityWithPriceAndRate>\r\n            <QuantityOnHand>true</QuantityOnHand>\r\n        </ProductAndServicesPrefs>\r\n        <SalesFormsPrefs>\r\n            <CustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="BooleanTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.UseSalesCustom3</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>false</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.UseSalesCustom2</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>false</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.UseSalesCustom1</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>true</BooleanValue>\r\n                </CustomField>\r\n            </CustomField>\r\n            <CustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="StringTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.SalesCustomName1</Name>\r\n                    <Type>StringType</Type>\r\n                    <StringValue>Crew #</StringValue>\r\n                </CustomField>\r\n            </CustomField>\r\n            <CustomTxnNumbers>false</CustomTxnNumbers>\r\n            <EmailCopyToCompany>false</EmailCopyToCompany>\r\n            <AllowDeposit>true</AllowDeposit>\r\n            <AllowDiscount>true</AllowDiscount>\r\n            <DefaultDiscountAccount>86</DefaultDiscountAccount>\r\n            <AllowEstimates>true</AllowEstimates>\r\n            <ETransactionEnabledStatus>NotApplicable</ETransactionEnabledStatus>\r\n            <ETransactionAttachPDF>false</ETransactionAttachPDF>\r\n            <ETransactionPaymentEnabled>false</ETransactionPaymentEnabled>\r\n            <IPNSupportEnabled>false</IPNSupportEnabled>\r\n            <AllowServiceDate>false</AllowServiceDate>\r\n            <AllowShipping>false</AllowShipping>\r\n            <DefaultTerms>3</DefaultTerms>\r\n            <AutoApplyCredit>true</AutoApplyCredit>\r\n            <AutoApplyPayments>true</AutoApplyPayments>\r\n            <UsingPriceLevels>false</UsingPriceLevels>\r\n            <DefaultCustomerMessage>Thank you for your business and have a great day!</DefaultCustomerMessage>\r\n        </SalesFormsPrefs>\r\n        <EmailMessagesPrefs>\r\n            <InvoiceMessage>\r\n                <Subject>Invoice from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Your invoice is attached.  Please remit payment at your earliest convenience.\r\nThank you for your business - we appreciate it very much.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </InvoiceMessage>\r\n            <EstimateMessage>\r\n                <Subject>Estimate from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Please review the estimate below.  Feel free to contact us if you have any questions.\r\nWe look forward to working with you.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </EstimateMessage>\r\n            <SalesReceiptMessage>\r\n                <Subject>Sales Receipt from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Your sales receipt is attached.\r\nThank you for your business - we appreciate it very much.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </SalesReceiptMessage>\r\n            <StatementMessage>\r\n                <Subject>Statement from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Your statement is attached.  Please remit payment at your earliest convenience.\r\nThank you for your business - we appreciate it very much.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </StatementMessage>\r\n        </EmailMessagesPrefs>\r\n        <VendorAndPurchasesPrefs>\r\n            <TrackingByCustomer>true</TrackingByCustomer>\r\n            <BillableExpenseTracking>true</BillableExpenseTracking>\r\n            <POCustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="BooleanTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.UsePurchaseCustom3</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>false</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.UsePurchaseCustom2</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>true</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.UsePurchaseCustom1</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>true</BooleanValue>\r\n                </CustomField>\r\n            </POCustomField>\r\n            <POCustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="StringTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.PurchaseCustomName2</Name>\r\n                    <Type>StringType</Type>\r\n                    <StringValue>Sales Rep</StringValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.PurchaseCustomName1</Name>\r\n                    <Type>StringType</Type>\r\n                    <StringValue>Crew #</StringValue>\r\n                </CustomField>\r\n            </POCustomField>\r\n        </VendorAndPurchasesPrefs>\r\n        <TimeTrackingPrefs>\r\n            <UseServices>true</UseServices>\r\n            <BillCustomers>true</BillCustomers>\r\n            <ShowBillRateToAll>false</ShowBillRateToAll>\r\n            <WorkWeekStartDate>Monday</WorkWeekStartDate>\r\n            <MarkTimeEntriesBillable>true</MarkTimeEntriesBillable>\r\n        </TimeTrackingPrefs>\r\n        <TaxPrefs>\r\n            <UsingSalesTax>true</UsingSalesTax>\r\n            <TaxGroupCodeRef>2</TaxGroupCodeRef>\r\n        </TaxPrefs>\r\n        <CurrencyPrefs>\r\n            <MultiCurrencyEnabled>false</MultiCurrencyEnabled>\r\n            <HomeCurrency>USD</HomeCurrency>\r\n        </CurrencyPrefs>\r\n        <ReportPrefs>\r\n            <ReportBasis>Accrual</ReportBasis>\r\n            <CalcAgingReportFromTxnDate>false</CalcAgingReportFromTxnDate>\r\n        </ReportPrefs>\r\n        <OtherPrefs>\r\n            <NameValue>\r\n                <Name>SalesFormsPrefs.DefaultCustomerMessage</Name>\r\n                <Value>Thank you for your business and have a great day!</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>SalesFormsPrefs.DefaultItem</Name>\r\n                <Value>1</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DTXCopyMemo</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>UncategorizedAssetAccountId</Name>\r\n                <Value>32</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>UncategorizedIncomeAccountId</Name>\r\n                <Value>30</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>UncategorizedExpenseAccountId</Name>\r\n                <Value>31</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>SFCEnabled</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DataPartner</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>Vendor1099Enabled</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>TimeTrackingFeatureEnabled</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>FDPEnabled</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>ProjectsEnabled</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DateFormat</Name>\r\n                <Value>Month Date Year separated by a slash</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DateFormatMnemonic</Name>\r\n                <Value>MMDDYYYY_SEP_SLASH</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>NumberFormat</Name>\r\n                <Value>US Number Format</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>NumberFormatMnemonic</Name>\r\n                <Value>US_NB</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>WarnDuplicateCheckNumber</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>WarnDuplicateBillNumber</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>SignoutInactiveMinutes</Name>\r\n                <Value>60</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>AccountingInfoPrefs.ShowAccountNumbers</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n        </OtherPrefs>\r\n    </Preferences>\r\n</IntuitResponse>',
                "Update0-request":
                    '{\n  "ProductAndServicesPrefs": {\n    "ForPurchase": true, \n    "ForSales": true\n  }, \n  "SyncToken": "20", \n  "sparse": false, \n  "SalesFormsPrefs": {\n    "AllowEstimates": true\n  }, \n  "Id": "1"\n}',
                "Read0-response":
                    '{\n  "Preferences": {\n    "EmailMessagesPrefs": {\n      "InvoiceMessage": {\n        "Message": "Your invoice is attached.  Please remit payment at your earliest convenience.\\nThank you for your business - we appreciate it very much.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Invoice from Craig\'s Design and Landscaping Services"\n      }, \n      "EstimateMessage": {\n        "Message": "Please review the estimate below.  Feel free to contact us if you have any questions.\\nWe look forward to working with you.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Estimate from Craig\'s Design and Landscaping Services"\n      }, \n      "SalesReceiptMessage": {\n        "Message": "Your sales receipt is attached.\\nThank you for your business - we appreciate it very much.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Sales Receipt from Craig\'s Design and Landscaping Services"\n      }, \n      "StatementMessage": {\n        "Message": "Your statement is attached.  Please remit payment at your earliest convenience.\\nThank you for your business - we appreciate it very much.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Statement from Craig\'s Design and Landscaping Services"\n      }\n    }, \n    "ProductAndServicesPrefs": {\n      "QuantityWithPriceAndRate": true, \n      "ForPurchase": true, \n      "QuantityOnHand": true, \n      "ForSales": true\n    }, \n    "domain": "QBO", \n    "SyncToken": "6", \n    "ReportPrefs": {\n      "ReportBasis": "Accrual", \n      "CalcAgingReportFromTxnDate": false\n    }, \n    "AccountingInfoPrefs": {\n      "FirstMonthOfFiscalYear": "January", \n      "UseAccountNumbers": true, \n      "TaxYearMonth": "January", \n      "ClassTrackingPerTxn": false, \n      "TrackDepartments": true, \n      "TaxForm": "6", \n      "CustomerTerminology": "Customers", \n      "BookCloseDate": "2018-12-31", \n      "DepartmentTerminology": "Location", \n      "ClassTrackingPerTxnLine": true\n    }, \n    "SalesFormsPrefs": {\n      "ETransactionPaymentEnabled": false, \n      "CustomTxnNumbers": false, \n      "AllowShipping": false, \n      "AllowServiceDate": false, \n      "ETransactionEnabledStatus": "NotApplicable", \n      "DefaultCustomerMessage": "Thank you for your business and have a great day!", \n      "EmailCopyToCompany": false, \n      "AllowEstimates": true, \n      "DefaultTerms": {\n        "value": "3"\n      }, \n      "AllowDiscount": true, \n      "DefaultDiscountAccount": "86", \n      "AllowDeposit": true, \n      "AutoApplyPayments": true, \n      "IPNSupportEnabled": false, \n      "AutoApplyCredit": true, \n      "CustomField": [\n        {\n          "CustomField": [\n            {\n              "BooleanValue": false, \n              "Type": "BooleanType", \n              "Name": "SalesFormsPrefs.UseSalesCustom3"\n            }, \n            {\n              "BooleanValue": false, \n              "Type": "BooleanType", \n              "Name": "SalesFormsPrefs.UseSalesCustom2"\n            }, \n            {\n              "BooleanValue": true, \n              "Type": "BooleanType", \n              "Name": "SalesFormsPrefs.UseSalesCustom1"\n            }\n          ]\n        }, \n        {\n          "CustomField": [\n            {\n              "StringValue": "Crew #", \n              "Type": "StringType", \n              "Name": "SalesFormsPrefs.SalesCustomName1"\n            }\n          ]\n        }\n      ], \n      "UsingPriceLevels": false, \n      "ETransactionAttachPDF": false\n    }, \n    "VendorAndPurchasesPrefs": {\n      "BillableExpenseTracking": true, \n      "TrackingByCustomer": true, \n      "POCustomField": [\n        {\n          "CustomField": [\n            {\n              "BooleanValue": false, \n              "Type": "BooleanType", \n              "Name": "PurchasePrefs.UsePurchaseCustom3"\n            }, \n            {\n              "BooleanValue": true, \n              "Type": "BooleanType", \n              "Name": "PurchasePrefs.UsePurchaseCustom2"\n            }, \n            {\n              "BooleanValue": true, \n              "Type": "BooleanType", \n              "Name": "PurchasePrefs.UsePurchaseCustom1"\n            }\n          ]\n        }, \n        {\n          "CustomField": [\n            {\n              "StringValue": "Sales Rep", \n              "Type": "StringType", \n              "Name": "PurchasePrefs.PurchaseCustomName2"\n            }, \n            {\n              "StringValue": "Crew #", \n              "Type": "StringType", \n              "Name": "PurchasePrefs.PurchaseCustomName1"\n            }\n          ]\n        }\n      ]\n    }, \n    "TaxPrefs": {\n      "TaxGroupCodeRef": {\n        "value": "2"\n      }, \n      "UsingSalesTax": true\n    }, \n    "OtherPrefs": {\n      "NameValue": [\n        {\n          "Name": "SalesFormsPrefs.DefaultCustomerMessage", \n          "Value": "Thank you for your business and have a great day!"\n        }, \n        {\n          "Name": "SalesFormsPrefs.DefaultItem", \n          "Value": "1"\n        }, \n        {\n          "Name": "DTXCopyMemo", \n          "Value": "false"\n        }, \n        {\n          "Name": "UncategorizedAssetAccountId", \n          "Value": "32"\n        }, \n        {\n          "Name": "UncategorizedIncomeAccountId", \n          "Value": "30"\n        }, \n        {\n          "Name": "UncategorizedExpenseAccountId", \n          "Value": "31"\n        }, \n        {\n          "Name": "SFCEnabled", \n          "Value": "true"\n        }, \n        {\n          "Name": "DataPartner", \n          "Value": "false"\n        }, \n        {\n          "Name": "Vendor1099Enabled", \n          "Value": "true"\n        }, \n        {\n          "Name": "TimeTrackingFeatureEnabled", \n          "Value": "true"\n        }, \n        {\n          "Name": "FDPEnabled", \n          "Value": "false"\n        }, \n        {\n          "Name": "ProjectsEnabled", \n          "Value": "false"\n        }, \n        {\n          "Name": "DateFormat", \n          "Value": "Month Date Year separated by a slash"\n        }, \n        {\n          "Name": "DateFormatMnemonic", \n          "Value": "MMDDYYYY_SEP_SLASH"\n        }, \n        {\n          "Name": "NumberFormat", \n          "Value": "US Number Format"\n        }, \n        {\n          "Name": "NumberFormatMnemonic", \n          "Value": "US_NB"\n        }, \n        {\n          "Name": "WarnDuplicateCheckNumber", \n          "Value": "true"\n        }, \n        {\n          "Name": "WarnDuplicateBillNumber", \n          "Value": "false"\n        }, \n        {\n          "Name": "SignoutInactiveMinutes", \n          "Value": "60"\n        }, \n        {\n          "Name": "AccountingInfoPrefs.ShowAccountNumbers", \n          "Value": "false"\n        }\n      ]\n    }, \n    "sparse": false, \n    "TimeTrackingPrefs": {\n      "WorkWeekStartDate": "Monday", \n      "MarkTimeEntriesBillable": true, \n      "ShowBillRateToAll": false, \n      "UseServices": true, \n      "BillCustomers": true\n    }, \n    "CurrencyPrefs": {\n      "HomeCurrency": {\n        "value": "USD"\n      }, \n      "MultiCurrencyEnabled": false\n    }, \n    "Id": "1", \n    "MetaData": {\n      "CreateTime": "2017-10-25T01:05:43-07:00", \n      "LastUpdatedTime": "2018-03-08T13:24:26-08:00"\n    }\n  }, \n  "time": "2018-03-12T08:22:43.280-07:00"\n}',
                "Update0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2018-03-12T08:44:41.982-07:00">\r\n    <Preferences domain="QBO" sparse="false">\r\n        <Id>1</Id>\r\n        <SyncToken>6</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2017-10-25T01:05:43-07:00</CreateTime>\r\n            <LastUpdatedTime>2018-03-08T13:24:26-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <AccountingInfoPrefs>\r\n            <UseAccountNumbers>true</UseAccountNumbers>\r\n            <TrackDepartments>true</TrackDepartments>\r\n            <DepartmentTerminology>Location</DepartmentTerminology>\r\n            <ClassTrackingPerTxn>false</ClassTrackingPerTxn>\r\n            <ClassTrackingPerTxnLine>true</ClassTrackingPerTxnLine>\r\n            <FirstMonthOfFiscalYear>January</FirstMonthOfFiscalYear>\r\n            <TaxYearMonth>January</TaxYearMonth>\r\n            <TaxForm>6</TaxForm>\r\n            <BookCloseDate>2018-12-31</BookCloseDate>\r\n            <CustomerTerminology>Customers</CustomerTerminology>\r\n        </AccountingInfoPrefs>\r\n        <ProductAndServicesPrefs>\r\n            <ForSales>true</ForSales>\r\n            <ForPurchase>true</ForPurchase>\r\n            <QuantityWithPriceAndRate>true</QuantityWithPriceAndRate>\r\n            <QuantityOnHand>true</QuantityOnHand>\r\n        </ProductAndServicesPrefs>\r\n        <SalesFormsPrefs>\r\n            <CustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="BooleanTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.UseSalesCustom3</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>false</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.UseSalesCustom2</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>false</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.UseSalesCustom1</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>true</BooleanValue>\r\n                </CustomField>\r\n            </CustomField>\r\n            <CustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="StringTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.SalesCustomName1</Name>\r\n                    <Type>StringType</Type>\r\n                    <StringValue>Crew #</StringValue>\r\n                </CustomField>\r\n            </CustomField>\r\n            <CustomTxnNumbers>false</CustomTxnNumbers>\r\n            <EmailCopyToCompany>false</EmailCopyToCompany>\r\n            <AllowDeposit>true</AllowDeposit>\r\n            <AllowDiscount>true</AllowDiscount>\r\n            <DefaultDiscountAccount>86</DefaultDiscountAccount>\r\n            <AllowEstimates>true</AllowEstimates>\r\n            <ETransactionEnabledStatus>NotApplicable</ETransactionEnabledStatus>\r\n            <ETransactionAttachPDF>false</ETransactionAttachPDF>\r\n            <ETransactionPaymentEnabled>false</ETransactionPaymentEnabled>\r\n            <IPNSupportEnabled>false</IPNSupportEnabled>\r\n            <AllowServiceDate>false</AllowServiceDate>\r\n            <AllowShipping>false</AllowShipping>\r\n            <DefaultTerms>3</DefaultTerms>\r\n            <AutoApplyCredit>true</AutoApplyCredit>\r\n            <AutoApplyPayments>true</AutoApplyPayments>\r\n            <UsingPriceLevels>false</UsingPriceLevels>\r\n            <DefaultCustomerMessage>Thank you for your business and have a great day!</DefaultCustomerMessage>\r\n        </SalesFormsPrefs>\r\n        <EmailMessagesPrefs>\r\n            <InvoiceMessage>\r\n                <Subject>Invoice from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Your invoice is attached.  Please remit payment at your earliest convenience.\r\nThank you for your business - we appreciate it very much.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </InvoiceMessage>\r\n            <EstimateMessage>\r\n                <Subject>Estimate from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Please review the estimate below.  Feel free to contact us if you have any questions.\r\nWe look forward to working with you.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </EstimateMessage>\r\n            <SalesReceiptMessage>\r\n                <Subject>Sales Receipt from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Your sales receipt is attached.\r\nThank you for your business - we appreciate it very much.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </SalesReceiptMessage>\r\n            <StatementMessage>\r\n                <Subject>Statement from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Your statement is attached.  Please remit payment at your earliest convenience.\r\nThank you for your business - we appreciate it very much.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </StatementMessage>\r\n        </EmailMessagesPrefs>\r\n        <VendorAndPurchasesPrefs>\r\n            <TrackingByCustomer>true</TrackingByCustomer>\r\n            <BillableExpenseTracking>true</BillableExpenseTracking>\r\n            <POCustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="BooleanTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.UsePurchaseCustom3</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>false</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.UsePurchaseCustom2</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>true</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.UsePurchaseCustom1</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>true</BooleanValue>\r\n                </CustomField>\r\n            </POCustomField>\r\n            <POCustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="StringTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.PurchaseCustomName2</Name>\r\n                    <Type>StringType</Type>\r\n                    <StringValue>Sales Rep</StringValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.PurchaseCustomName1</Name>\r\n                    <Type>StringType</Type>\r\n                    <StringValue>Crew #</StringValue>\r\n                </CustomField>\r\n            </POCustomField>\r\n        </VendorAndPurchasesPrefs>\r\n        <TimeTrackingPrefs>\r\n            <UseServices>true</UseServices>\r\n            <BillCustomers>true</BillCustomers>\r\n            <ShowBillRateToAll>false</ShowBillRateToAll>\r\n            <WorkWeekStartDate>Monday</WorkWeekStartDate>\r\n            <MarkTimeEntriesBillable>true</MarkTimeEntriesBillable>\r\n        </TimeTrackingPrefs>\r\n        <TaxPrefs>\r\n            <UsingSalesTax>true</UsingSalesTax>\r\n            <TaxGroupCodeRef>2</TaxGroupCodeRef>\r\n        </TaxPrefs>\r\n        <CurrencyPrefs>\r\n            <MultiCurrencyEnabled>false</MultiCurrencyEnabled>\r\n            <HomeCurrency>USD</HomeCurrency>\r\n        </CurrencyPrefs>\r\n        <ReportPrefs>\r\n            <ReportBasis>Accrual</ReportBasis>\r\n            <CalcAgingReportFromTxnDate>false</CalcAgingReportFromTxnDate>\r\n        </ReportPrefs>\r\n        <OtherPrefs>\r\n            <NameValue>\r\n                <Name>SalesFormsPrefs.DefaultCustomerMessage</Name>\r\n                <Value>Thank you for your business and have a great day!</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>SalesFormsPrefs.DefaultItem</Name>\r\n                <Value>1</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DTXCopyMemo</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>UncategorizedAssetAccountId</Name>\r\n                <Value>32</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>UncategorizedIncomeAccountId</Name>\r\n                <Value>30</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>UncategorizedExpenseAccountId</Name>\r\n                <Value>31</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>SFCEnabled</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DataPartner</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>Vendor1099Enabled</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>TimeTrackingFeatureEnabled</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>FDPEnabled</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>ProjectsEnabled</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DateFormat</Name>\r\n                <Value>Month Date Year separated by a slash</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DateFormatMnemonic</Name>\r\n                <Value>MMDDYYYY_SEP_SLASH</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>NumberFormat</Name>\r\n                <Value>US Number Format</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>NumberFormatMnemonic</Name>\r\n                <Value>US_NB</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>WarnDuplicateCheckNumber</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>WarnDuplicateBillNumber</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>SignoutInactiveMinutes</Name>\r\n                <Value>60</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>AccountingInfoPrefs.ShowAccountNumbers</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n        </OtherPrefs>\r\n    </Preferences>\r\n</IntuitResponse>',
                "Query0-response":
                    '{\n  "Preferences": {\n    "EmailMessagesPrefs": {\n      "InvoiceMessage": {\n        "Message": "Your invoice is attached.  Please remit payment at your earliest convenience.\\nThank you for your business - we appreciate it very much.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Invoice from Craig\'s Design and Landscaping Services"\n      }, \n      "EstimateMessage": {\n        "Message": "Please review the estimate below.  Feel free to contact us if you have any questions.\\nWe look forward to working with you.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Estimate from Craig\'s Design and Landscaping Services"\n      }, \n      "SalesReceiptMessage": {\n        "Message": "Your sales receipt is attached.\\nThank you for your business - we appreciate it very much.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Sales Receipt from Craig\'s Design and Landscaping Services"\n      }, \n      "StatementMessage": {\n        "Message": "Your statement is attached.  Please remit payment at your earliest convenience.\\nThank you for your business - we appreciate it very much.\\n\\nSincerely,\\nCraig\'s Design and Landscaping Services", \n        "Subject": "Statement from Craig\'s Design and Landscaping Services"\n      }\n    }, \n    "ProductAndServicesPrefs": {\n      "QuantityWithPriceAndRate": true, \n      "ForPurchase": true, \n      "QuantityOnHand": true, \n      "ForSales": true\n    }, \n    "domain": "QBO", \n    "SyncToken": "6", \n    "ReportPrefs": {\n      "ReportBasis": "Accrual", \n      "CalcAgingReportFromTxnDate": false\n    }, \n    "AccountingInfoPrefs": {\n      "FirstMonthOfFiscalYear": "January", \n      "UseAccountNumbers": true, \n      "TaxYearMonth": "January", \n      "ClassTrackingPerTxn": false, \n      "TrackDepartments": true, \n      "TaxForm": "6", \n      "CustomerTerminology": "Customers", \n      "BookCloseDate": "2018-12-31", \n      "DepartmentTerminology": "Location", \n      "ClassTrackingPerTxnLine": true\n    }, \n    "SalesFormsPrefs": {\n      "ETransactionPaymentEnabled": false, \n      "CustomTxnNumbers": false, \n      "AllowShipping": false, \n      "AllowServiceDate": false, \n      "ETransactionEnabledStatus": "NotApplicable", \n      "DefaultCustomerMessage": "Thank you for your business and have a great day!", \n      "EmailCopyToCompany": false, \n      "AllowEstimates": true, \n      "DefaultTerms": {\n        "value": "3"\n      }, \n      "AllowDiscount": true, \n      "DefaultDiscountAccount": "86", \n      "AllowDeposit": true, \n      "AutoApplyPayments": true, \n      "IPNSupportEnabled": false, \n      "AutoApplyCredit": true, \n      "CustomField": [\n        {\n          "CustomField": [\n            {\n              "BooleanValue": false, \n              "Type": "BooleanType", \n              "Name": "SalesFormsPrefs.UseSalesCustom3"\n            }, \n            {\n              "BooleanValue": false, \n              "Type": "BooleanType", \n              "Name": "SalesFormsPrefs.UseSalesCustom2"\n            }, \n            {\n              "BooleanValue": true, \n              "Type": "BooleanType", \n              "Name": "SalesFormsPrefs.UseSalesCustom1"\n            }\n          ]\n        }, \n        {\n          "CustomField": [\n            {\n              "StringValue": "Crew #", \n              "Type": "StringType", \n              "Name": "SalesFormsPrefs.SalesCustomName1"\n            }\n          ]\n        }\n      ], \n      "UsingPriceLevels": false, \n      "ETransactionAttachPDF": false\n    }, \n    "VendorAndPurchasesPrefs": {\n      "BillableExpenseTracking": true, \n      "TrackingByCustomer": true, \n      "POCustomField": [\n        {\n          "CustomField": [\n            {\n              "BooleanValue": false, \n              "Type": "BooleanType", \n              "Name": "PurchasePrefs.UsePurchaseCustom3"\n            }, \n            {\n              "BooleanValue": true, \n              "Type": "BooleanType", \n              "Name": "PurchasePrefs.UsePurchaseCustom2"\n            }, \n            {\n              "BooleanValue": true, \n              "Type": "BooleanType", \n              "Name": "PurchasePrefs.UsePurchaseCustom1"\n            }\n          ]\n        }, \n        {\n          "CustomField": [\n            {\n              "StringValue": "Sales Rep", \n              "Type": "StringType", \n              "Name": "PurchasePrefs.PurchaseCustomName2"\n            }, \n            {\n              "StringValue": "Crew #", \n              "Type": "StringType", \n              "Name": "PurchasePrefs.PurchaseCustomName1"\n            }\n          ]\n        }\n      ]\n    }, \n    "TaxPrefs": {\n      "TaxGroupCodeRef": {\n        "value": "2"\n      }, \n      "UsingSalesTax": true\n    }, \n    "OtherPrefs": {\n      "NameValue": [\n        {\n          "Name": "SalesFormsPrefs.DefaultCustomerMessage", \n          "Value": "Thank you for your business and have a great day!"\n        }, \n        {\n          "Name": "SalesFormsPrefs.DefaultItem", \n          "Value": "1"\n        }, \n        {\n          "Name": "DTXCopyMemo", \n          "Value": "false"\n        }, \n        {\n          "Name": "UncategorizedAssetAccountId", \n          "Value": "32"\n        }, \n        {\n          "Name": "UncategorizedIncomeAccountId", \n          "Value": "30"\n        }, \n        {\n          "Name": "UncategorizedExpenseAccountId", \n          "Value": "31"\n        }, \n        {\n          "Name": "SFCEnabled", \n          "Value": "true"\n        }, \n        {\n          "Name": "DataPartner", \n          "Value": "false"\n        }, \n        {\n          "Name": "Vendor1099Enabled", \n          "Value": "true"\n        }, \n        {\n          "Name": "TimeTrackingFeatureEnabled", \n          "Value": "true"\n        }, \n        {\n          "Name": "FDPEnabled", \n          "Value": "false"\n        }, \n        {\n          "Name": "ProjectsEnabled", \n          "Value": "false"\n        }, \n        {\n          "Name": "DateFormat", \n          "Value": "Month Date Year separated by a slash"\n        }, \n        {\n          "Name": "DateFormatMnemonic", \n          "Value": "MMDDYYYY_SEP_SLASH"\n        }, \n        {\n          "Name": "NumberFormat", \n          "Value": "US Number Format"\n        }, \n        {\n          "Name": "NumberFormatMnemonic", \n          "Value": "US_NB"\n        }, \n        {\n          "Name": "WarnDuplicateCheckNumber", \n          "Value": "true"\n        }, \n        {\n          "Name": "WarnDuplicateBillNumber", \n          "Value": "false"\n        }, \n        {\n          "Name": "SignoutInactiveMinutes", \n          "Value": "60"\n        }, \n        {\n          "Name": "AccountingInfoPrefs.ShowAccountNumbers", \n          "Value": "false"\n        }\n      ]\n    }, \n    "sparse": false, \n    "TimeTrackingPrefs": {\n      "WorkWeekStartDate": "Monday", \n      "MarkTimeEntriesBillable": true, \n      "ShowBillRateToAll": false, \n      "UseServices": true, \n      "BillCustomers": true\n    }, \n    "CurrencyPrefs": {\n      "HomeCurrency": {\n        "value": "USD"\n      }, \n      "MultiCurrencyEnabled": false\n    }, \n    "Id": "1", \n    "MetaData": {\n      "CreateTime": "2017-10-25T01:05:43-07:00", \n      "LastUpdatedTime": "2018-03-08T13:24:26-08:00"\n    }\n  }, \n  "time": "2018-03-12T08:45:52.965-07:00"\n}',
                "Query0-request-xml": "select * from Preferences\n",
                "Query0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2018-03-12T08:44:41.982-07:00">\r\n    <Preferences domain="QBO" sparse="false">\r\n        <Id>1</Id>\r\n        <SyncToken>6</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2017-10-25T01:05:43-07:00</CreateTime>\r\n            <LastUpdatedTime>2018-03-08T13:24:26-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <AccountingInfoPrefs>\r\n            <UseAccountNumbers>true</UseAccountNumbers>\r\n            <TrackDepartments>true</TrackDepartments>\r\n            <DepartmentTerminology>Location</DepartmentTerminology>\r\n            <ClassTrackingPerTxn>false</ClassTrackingPerTxn>\r\n            <ClassTrackingPerTxnLine>true</ClassTrackingPerTxnLine>\r\n            <FirstMonthOfFiscalYear>January</FirstMonthOfFiscalYear>\r\n            <TaxYearMonth>January</TaxYearMonth>\r\n            <TaxForm>6</TaxForm>\r\n            <BookCloseDate>2018-12-31</BookCloseDate>\r\n            <CustomerTerminology>Customers</CustomerTerminology>\r\n        </AccountingInfoPrefs>\r\n        <ProductAndServicesPrefs>\r\n            <ForSales>true</ForSales>\r\n            <ForPurchase>true</ForPurchase>\r\n            <QuantityWithPriceAndRate>true</QuantityWithPriceAndRate>\r\n            <QuantityOnHand>true</QuantityOnHand>\r\n        </ProductAndServicesPrefs>\r\n        <SalesFormsPrefs>\r\n            <CustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="BooleanTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.UseSalesCustom3</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>false</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.UseSalesCustom2</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>false</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.UseSalesCustom1</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>true</BooleanValue>\r\n                </CustomField>\r\n            </CustomField>\r\n            <CustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="StringTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>SalesFormsPrefs.SalesCustomName1</Name>\r\n                    <Type>StringType</Type>\r\n                    <StringValue>Crew #</StringValue>\r\n                </CustomField>\r\n            </CustomField>\r\n            <CustomTxnNumbers>false</CustomTxnNumbers>\r\n            <EmailCopyToCompany>false</EmailCopyToCompany>\r\n            <AllowDeposit>true</AllowDeposit>\r\n            <AllowDiscount>true</AllowDiscount>\r\n            <DefaultDiscountAccount>86</DefaultDiscountAccount>\r\n            <AllowEstimates>true</AllowEstimates>\r\n            <ETransactionEnabledStatus>NotApplicable</ETransactionEnabledStatus>\r\n            <ETransactionAttachPDF>false</ETransactionAttachPDF>\r\n            <ETransactionPaymentEnabled>false</ETransactionPaymentEnabled>\r\n            <IPNSupportEnabled>false</IPNSupportEnabled>\r\n            <AllowServiceDate>false</AllowServiceDate>\r\n            <AllowShipping>false</AllowShipping>\r\n            <DefaultTerms>3</DefaultTerms>\r\n            <AutoApplyCredit>true</AutoApplyCredit>\r\n            <AutoApplyPayments>true</AutoApplyPayments>\r\n            <UsingPriceLevels>false</UsingPriceLevels>\r\n            <DefaultCustomerMessage>Thank you for your business and have a great day!</DefaultCustomerMessage>\r\n        </SalesFormsPrefs>\r\n        <EmailMessagesPrefs>\r\n            <InvoiceMessage>\r\n                <Subject>Invoice from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Your invoice is attached.  Please remit payment at your earliest convenience.\r\nThank you for your business - we appreciate it very much.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </InvoiceMessage>\r\n            <EstimateMessage>\r\n                <Subject>Estimate from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Please review the estimate below.  Feel free to contact us if you have any questions.\r\nWe look forward to working with you.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </EstimateMessage>\r\n            <SalesReceiptMessage>\r\n                <Subject>Sales Receipt from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Your sales receipt is attached.\r\nThank you for your business - we appreciate it very much.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </SalesReceiptMessage>\r\n            <StatementMessage>\r\n                <Subject>Statement from Craig\'s Design and Landscaping Services</Subject>\r\n                <Message>Your statement is attached.  Please remit payment at your earliest convenience.\r\nThank you for your business - we appreciate it very much.\r\n\r\nSincerely,\r\nCraig\'s Design and Landscaping Services</Message>\r\n            </StatementMessage>\r\n        </EmailMessagesPrefs>\r\n        <VendorAndPurchasesPrefs>\r\n            <TrackingByCustomer>true</TrackingByCustomer>\r\n            <BillableExpenseTracking>true</BillableExpenseTracking>\r\n            <POCustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="BooleanTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.UsePurchaseCustom3</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>false</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.UsePurchaseCustom2</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>true</BooleanValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.UsePurchaseCustom1</Name>\r\n                    <Type>BooleanType</Type>\r\n                    <BooleanValue>true</BooleanValue>\r\n                </CustomField>\r\n            </POCustomField>\r\n            <POCustomField xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="StringTypeCustomFieldDefinition">\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.PurchaseCustomName2</Name>\r\n                    <Type>StringType</Type>\r\n                    <StringValue>Sales Rep</StringValue>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <Name>PurchasePrefs.PurchaseCustomName1</Name>\r\n                    <Type>StringType</Type>\r\n                    <StringValue>Crew #</StringValue>\r\n                </CustomField>\r\n            </POCustomField>\r\n        </VendorAndPurchasesPrefs>\r\n        <TimeTrackingPrefs>\r\n            <UseServices>true</UseServices>\r\n            <BillCustomers>true</BillCustomers>\r\n            <ShowBillRateToAll>false</ShowBillRateToAll>\r\n            <WorkWeekStartDate>Monday</WorkWeekStartDate>\r\n            <MarkTimeEntriesBillable>true</MarkTimeEntriesBillable>\r\n        </TimeTrackingPrefs>\r\n        <TaxPrefs>\r\n            <UsingSalesTax>true</UsingSalesTax>\r\n            <TaxGroupCodeRef>2</TaxGroupCodeRef>\r\n        </TaxPrefs>\r\n        <CurrencyPrefs>\r\n            <MultiCurrencyEnabled>false</MultiCurrencyEnabled>\r\n            <HomeCurrency>USD</HomeCurrency>\r\n        </CurrencyPrefs>\r\n        <ReportPrefs>\r\n            <ReportBasis>Accrual</ReportBasis>\r\n            <CalcAgingReportFromTxnDate>false</CalcAgingReportFromTxnDate>\r\n        </ReportPrefs>\r\n        <OtherPrefs>\r\n            <NameValue>\r\n                <Name>SalesFormsPrefs.DefaultCustomerMessage</Name>\r\n                <Value>Thank you for your business and have a great day!</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>SalesFormsPrefs.DefaultItem</Name>\r\n                <Value>1</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DTXCopyMemo</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>UncategorizedAssetAccountId</Name>\r\n                <Value>32</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>UncategorizedIncomeAccountId</Name>\r\n                <Value>30</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>UncategorizedExpenseAccountId</Name>\r\n                <Value>31</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>SFCEnabled</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DataPartner</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>Vendor1099Enabled</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>TimeTrackingFeatureEnabled</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>FDPEnabled</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>ProjectsEnabled</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DateFormat</Name>\r\n                <Value>Month Date Year separated by a slash</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>DateFormatMnemonic</Name>\r\n                <Value>MMDDYYYY_SEP_SLASH</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>NumberFormat</Name>\r\n                <Value>US Number Format</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>NumberFormatMnemonic</Name>\r\n                <Value>US_NB</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>WarnDuplicateCheckNumber</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>WarnDuplicateBillNumber</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>SignoutInactiveMinutes</Name>\r\n                <Value>60</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>AccountingInfoPrefs.ShowAccountNumbers</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n        </OtherPrefs>\r\n    </Preferences>\r\n</IntuitResponse>',
            },
            Purchase: {
                "Delete0-request": '{\n  "SyncToken": "2", \n  "Id": "595"\n}',
                "Query0-request-xml": "select * from Purchase where TotalAmt < '100.00'",
                "Read0-response":
                    '{\n  "Purchase": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "PurchaseEx": {\n      "any": [\n        {\n          "name": "{http://schema.intuit.com/finance/v3}NameValue", \n          "nil": false, \n          "value": {\n            "Name": "TxnType", \n            "Value": "54"\n          }, \n          "declaredType": "com.intuit.schema.finance.v3.NameValue", \n          "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n          "globalScope": true, \n          "typeSubstituted": false\n        }\n      ]\n    }, \n    "TxnDate": "2015-07-27", \n    "TotalAmt": 10.0, \n    "PaymentType": "Cash", \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "AccountBasedExpenseLineDetail", \n        "Amount": 10.0, \n        "Id": "1", \n        "AccountBasedExpenseLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "AccountRef": {\n            "name": "Meals and Entertainment", \n            "value": "13"\n          }, \n          "BillableStatus": "NotBillable"\n        }\n      }\n    ], \n    "AccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "CustomField": [], \n    "Id": "252", \n    "MetaData": {\n      "CreateTime": "2015-07-27T10:37:26-07:00", \n      "LastUpdatedTime": "2015-07-27T10:37:26-07:00"\n    }\n  }, \n  "time": "2015-07-27T10:39:33.171-07:00"\n}',
                "Create2-request":
                    '{\n  "PaymentType": "Cash", \n  "AccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }, \n  "Line": [\n    {\n      "DetailType": "AccountBasedExpenseLineDetail", \n      "Amount": 10.0, \n      "AccountBasedExpenseLineDetail": {\n        "AccountRef": {\n          "name": "Meals and Entertainment", \n          "value": "13"\n        }\n      }\n    }\n  ]\n}',
                "Create2-response":
                    '{\n  "Purchase": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "PurchaseEx": {\n      "any": [\n        {\n          "name": "{http://schema.intuit.com/finance/v3}NameValue", \n          "nil": false, \n          "value": {\n            "Name": "TxnType", \n            "Value": "54"\n          }, \n          "declaredType": "com.intuit.schema.finance.v3.NameValue", \n          "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n          "globalScope": true, \n          "typeSubstituted": false\n        }\n      ]\n    }, \n    "TxnDate": "2015-07-27", \n    "TotalAmt": 10.0, \n    "PaymentType": "Cash", \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "AccountBasedExpenseLineDetail", \n        "Amount": 10.0, \n        "Id": "1", \n        "AccountBasedExpenseLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "AccountRef": {\n            "name": "Meals and Entertainment", \n            "value": "13"\n          }, \n          "BillableStatus": "NotBillable"\n        }\n      }\n    ], \n    "AccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "CustomField": [], \n    "Id": "252", \n    "MetaData": {\n      "CreateTime": "2015-07-27T10:37:26-07:00", \n      "LastUpdatedTime": "2015-07-27T10:37:26-07:00"\n    }\n  }, \n  "time": "2015-07-27T10:37:26.319-07:00"\n}',
                "Update0-response":
                    '{\n  "Purchase": {\n    "SyncToken": "2", \n    "domain": "QBO", \n    "PurchaseEx": {\n      "any": [\n        {\n          "name": "{http://schema.intuit.com/finance/v3}NameValue", \n          "nil": false, \n          "value": {\n            "Name": "TxnType", \n            "Value": "54"\n          }, \n          "declaredType": "com.intuit.schema.finance.v3.NameValue", \n          "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n          "globalScope": true, \n          "typeSubstituted": false\n        }\n      ]\n    }, \n    "TxnDate": "2015-07-27", \n    "TotalAmt": 10.0, \n    "PrivateNote": "Added an updated private note via update.", \n    "PaymentType": "Cash", \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "AccountBasedExpenseLineDetail", \n        "Amount": 10.0, \n        "Id": "1", \n        "AccountBasedExpenseLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "AccountRef": {\n            "name": "Meals and Entertainment", \n            "value": "13"\n          }, \n          "BillableStatus": "NotBillable"\n        }\n      }\n    ], \n    "AccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "CustomField": [], \n    "Id": "252", \n    "MetaData": {\n      "CreateTime": "2015-07-27T10:37:26-07:00", \n      "LastUpdatedTime": "2015-07-27T10:45:20-07:00"\n    }\n  }, \n  "time": "2015-07-27T10:45:20.806-07:00"\n}',
                "Create0-response":
                    '{\n  "Purchase": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "PurchaseEx": {\n      "any": [\n        {\n          "name": "{http://schema.intuit.com/finance/v3}NameValue", \n          "nil": false, \n          "value": {\n            "Name": "TxnType", \n            "Value": "54"\n          }, \n          "declaredType": "com.intuit.schema.finance.v3.NameValue", \n          "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n          "globalScope": true, \n          "typeSubstituted": false\n        }\n      ]\n    }, \n    "Credit": false, \n    "TotalAmt": 10.0, \n    "PaymentType": "CreditCard", \n    "TxnDate": "2015-07-27", \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "AccountBasedExpenseLineDetail", \n        "Amount": 10.0, \n        "Id": "1", \n        "AccountBasedExpenseLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "AccountRef": {\n            "name": "Meals and Entertainment", \n            "value": "13"\n          }, \n          "BillableStatus": "NotBillable"\n        }\n      }\n    ], \n    "AccountRef": {\n      "name": "Visa", \n      "value": "42"\n    }, \n    "CustomField": [], \n    "Id": "247", \n    "MetaData": {\n      "CreateTime": "2015-07-27T10:27:01-07:00", \n      "LastUpdatedTime": "2015-07-27T10:27:01-07:00"\n    }\n  }, \n  "time": "2015-07-27T10:27:01.593-07:00"\n}',
                "Create1-request":
                    '{\n  "PaymentType": "Check", \n  "AccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }, \n  "Line": [\n    {\n      "DetailType": "AccountBasedExpenseLineDetail", \n      "Amount": 10.0, \n      "AccountBasedExpenseLineDetail": {\n        "AccountRef": {\n          "name": "Meals and Entertainment", \n          "value": "13"\n        }\n      }\n    }\n  ]\n}',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-27T10:32:49.668-07:00">\r\n  <Purchase domain="QBO" sparse="false">\r\n    <Id>248</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-07-27T10:32:49-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-27T10:32:49-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-07-27</TxnDate>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <Amount>10.00</Amount>\r\n      <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n      <AccountBasedExpenseLineDetail>\r\n        <AccountRef name="Meals and Entertainment">13</AccountRef>\r\n        <BillableStatus>NotBillable</BillableStatus>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </AccountBasedExpenseLineDetail>\r\n    </Line>\r\n    <AccountRef name="Visa">42</AccountRef>\r\n    <PaymentType>CreditCard</PaymentType>\r\n    <Credit>false</Credit>\r\n    <TotalAmt>10.00</TotalAmt>\r\n    <PurchaseEx>\r\n      <NameValue>\r\n        <Name>TxnType</Name>\r\n        <Value>54</Value>\r\n      </NameValue>\r\n    </PurchaseEx>\r\n  </Purchase>\r\n</IntuitResponse>',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-04-22T09:13:16.868-07:00">\r\n  <Purchase domain="QBO" status="Deleted">\r\n    <Id>603</Id>\r\n  </Purchase>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "PaymentType": "CreditCard", \n  "AccountRef": {\n    "name": "Visa", \n    "value": "42"\n  }, \n  "Line": [\n    {\n      "DetailType": "AccountBasedExpenseLineDetail", \n      "Amount": 10.0, \n      "AccountBasedExpenseLineDetail": {\n        "AccountRef": {\n          "name": "Meals and Entertainment", \n          "value": "13"\n        }\n      }\n    }\n  ]\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-27T09:07:48.039-07:00">\r\n    <QueryResponse startPosition="1" maxResults="8">\r\n        <Purchase domain="QBO" sparse="false">\r\n            <Id>139</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-10-03T14:35:37-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-10-03T14:35:37-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-10-03</TxnDate>\r\n            <PrivateNote>Monthly Payment</PrivateNote>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Amount>900.00</Amount>\r\n                <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                <AccountBasedExpenseLineDetail>\r\n                    <AccountRef name="Checking">35</AccountRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </AccountBasedExpenseLineDetail>\r\n            </Line>\r\n            <AccountRef name="Mastercard">41</AccountRef>\r\n            <PaymentType>CreditCard</PaymentType>\r\n            <Credit>true</Credit>\r\n            <TotalAmt>900.00</TotalAmt>\r\n            <PurchaseEx>\r\n                <NameValue>\r\n                    <Name>TxnType</Name>\r\n                    <Value>11</Value>\r\n                </NameValue>\r\n            </PurchaseEx>\r\n        </Purchase>\r\n        <Purchase domain="QBO" sparse="false">\r\n            <Id>133</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-10-03T14:17:55-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-10-03T14:17:55-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DocNumber>70</DocNumber>\r\n            <TxnDate>2014-09-11</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Amount>185.00</Amount>\r\n                <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                <AccountBasedExpenseLineDetail>\r\n                    <AccountRef name="Maintenance and Repair">72</AccountRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </AccountBasedExpenseLineDetail>\r\n            </Line>\r\n            <AccountRef name="Checking">35</AccountRef>\r\n            <PaymentType>Check</PaymentType>\r\n            <EntityRef name="Chin\'s Gas and Oil" type="Vendor">33</EntityRef>\r\n            <TotalAmt>185.00</TotalAmt>\r\n            <PrintStatus>NotSet</PrintStatus>\r\n            <PurchaseEx>\r\n                <NameValue>\r\n                    <Name>TxnType</Name>\r\n                    <Value>3</Value>\r\n                </NameValue>\r\n            </PurchaseEx>\r\n        </Purchase>\r\n        <Purchase domain="QBO" sparse="false">\r\n            <Id>115</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-19T12:51:46-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-19T12:51:46-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DocNumber>75</DocNumber>\r\n            <TxnDate>2014-09-19</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Description>Rock Fountain</Description>\r\n                <Amount>125.00</Amount>\r\n                <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n                <ItemBasedExpenseLineDetail>\r\n                    <ItemRef name="Rock Fountain">5</ItemRef>\r\n                    <UnitPrice>125</UnitPrice>\r\n                    <Qty>1</Qty>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                </ItemBasedExpenseLineDetail>\r\n            </Line>\r\n            <Line>\r\n                <Id>2</Id>\r\n                <Description>Sprinkler Heads</Description>\r\n                <Amount>11.25</Amount>\r\n                <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n                <ItemBasedExpenseLineDetail>\r\n                    <ItemRef name="Sprinkler Heads">16</ItemRef>\r\n                    <UnitPrice>0.75</UnitPrice>\r\n                    <Qty>15</Qty>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                </ItemBasedExpenseLineDetail>\r\n            </Line>\r\n            <Line>\r\n                <Id>3</Id>\r\n                <Description>Sprinkler Pipes</Description>\r\n                <Amount>62.50</Amount>\r\n                <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n                <ItemBasedExpenseLineDetail>\r\n                    <ItemRef name="Sprinkler Pipes">17</ItemRef>\r\n                    <UnitPrice>2.5</UnitPrice>\r\n                    <Qty>25</Qty>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                </ItemBasedExpenseLineDetail>\r\n            </Line>\r\n            <Line>\r\n                <Id>4</Id>\r\n                <Description>Fountain Pump</Description>\r\n                <Amount>30.00</Amount>\r\n                <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n                <ItemBasedExpenseLineDetail>\r\n                    <ItemRef name="Pump">11</ItemRef>\r\n                    <UnitPrice>10</UnitPrice>\r\n                    <Qty>3</Qty>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                </ItemBasedExpenseLineDetail>\r\n            </Line>\r\n            <AccountRef name="Checking">35</AccountRef>\r\n            <PaymentType>Check</PaymentType>\r\n            <EntityRef name="Hicks Hardware" type="Vendor">41</EntityRef>\r\n            <RemitToAddr>\r\n                <Id>37</Id>\r\n                <Line1>42 Main St.</Line1>\r\n                <City>Middlefield</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94303</PostalCode>\r\n                <Lat>37.445013</Lat>\r\n                <Long>-122.1391443</Long>\r\n            </RemitToAddr>\r\n            <TotalAmt>228.75</TotalAmt>\r\n            <PrintStatus>NotSet</PrintStatus>\r\n            <PurchaseEx>\r\n                <NameValue>\r\n                    <Name>TxnType</Name>\r\n                    <Value>3</Value>\r\n                </NameValue>\r\n            </PurchaseEx>\r\n        </Purchase>\r\n        <Purchase domain="QBO" sparse="false">\r\n            <Id>107</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-19T12:36:23-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-19T12:36:23-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DocNumber>12</DocNumber>\r\n            <TxnDate>2014-07-09</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Amount>250.00</Amount>\r\n                <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                <AccountBasedExpenseLineDetail>\r\n                    <AccountRef name="Legal &amp; Professional Fees:Accounting">69</AccountRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </AccountBasedExpenseLineDetail>\r\n            </Line>\r\n            <AccountRef name="Checking">35</AccountRef>\r\n            <PaymentType>Cash</PaymentType>\r\n            <EntityRef name="Robertson &amp; Associates" type="Vendor">49</EntityRef>\r\n            <TotalAmt>250.00</TotalAmt>\r\n            <PurchaseEx>\r\n                <NameValue>\r\n                    <Name>TxnType</Name>\r\n                    <Value>54</Value>\r\n                </NameValue>\r\n            </PurchaseEx>\r\n        </Purchase>\r\n        <Purchase domain="QBO" sparse="false">\r\n            <Id>87</Id>\r\n            <SyncToken>1</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-18T13:14:42-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-18T13:17:06-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DocNumber>15</DocNumber>\r\n            <TxnDate>2014-08-16</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Amount>108.09</Amount>\r\n                <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                <AccountBasedExpenseLineDetail>\r\n                    <AccountRef name="Job Expenses">58</AccountRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </AccountBasedExpenseLineDetail>\r\n            </Line>\r\n            <AccountRef name="Checking">35</AccountRef>\r\n            <PaymentType>Cash</PaymentType>\r\n            <EntityRef name="Tania\'s Nursery" type="Vendor">50</EntityRef>\r\n            <TotalAmt>108.09</TotalAmt>\r\n            <PurchaseEx>\r\n                <NameValue>\r\n                    <Name>TxnType</Name>\r\n                    <Value>54</Value>\r\n                </NameValue>\r\n            </PurchaseEx>\r\n        </Purchase>\r\n        <Purchase domain="QBO" sparse="false">\r\n            <Id>85</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-18T13:12:01-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-18T13:12:01-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DocNumber>3</DocNumber>\r\n            <TxnDate>2014-07-16</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Amount>158.08</Amount>\r\n                <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                <AccountBasedExpenseLineDetail>\r\n                    <AccountRef name="Job Expenses:Job Materials:Plants and Soil">66</AccountRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </AccountBasedExpenseLineDetail>\r\n            </Line>\r\n            <AccountRef name="Mastercard">41</AccountRef>\r\n            <PaymentType>CreditCard</PaymentType>\r\n            <EntityRef name="Tania\'s Nursery" type="Vendor">50</EntityRef>\r\n            <Credit>false</Credit>\r\n            <TotalAmt>158.08</TotalAmt>\r\n            <PurchaseEx>\r\n                <NameValue>\r\n                    <Name>TxnType</Name>\r\n                    <Value>54</Value>\r\n                </NameValue>\r\n            </PurchaseEx>\r\n        </Purchase>\r\n        <Purchase domain="QBO" sparse="false">\r\n            <Id>83</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-18T13:08:20-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-18T13:08:20-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DocNumber>13</DocNumber>\r\n            <TxnDate>2014-09-13</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Amount>215.66</Amount>\r\n                <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                <AccountBasedExpenseLineDetail>\r\n                    <AccountRef name="Job Expenses:Job Materials:Sprinklers and Drip Systems">67</AccountRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </AccountBasedExpenseLineDetail>\r\n            </Line>\r\n            <AccountRef name="Checking">35</AccountRef>\r\n            <PaymentType>Cash</PaymentType>\r\n            <EntityRef name="Hicks Hardware" type="Vendor">41</EntityRef>\r\n            <TotalAmt>215.66</TotalAmt>\r\n            <PurchaseEx>\r\n                <NameValue>\r\n                    <Name>TxnType</Name>\r\n                    <Value>54</Value>\r\n                </NameValue>\r\n            </PurchaseEx>\r\n        </Purchase>\r\n        <Purchase domain="QBO" sparse="false">\r\n            <Id>51</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-17T11:45:45-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-17T11:45:45-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DocNumber>1</DocNumber>\r\n            <TxnDate>2014-09-17</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Description>Equipment rental for 5 days</Description>\r\n                <Amount>112.00</Amount>\r\n                <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                <AccountBasedExpenseLineDetail>\r\n                    <AccountRef name="Equipment Rental">29</AccountRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </AccountBasedExpenseLineDetail>\r\n            </Line>\r\n            <AccountRef name="Mastercard">41</AccountRef>\r\n            <PaymentType>CreditCard</PaymentType>\r\n            <EntityRef name="Ellis Equipment Rental" type="Vendor">38</EntityRef>\r\n            <Credit>false</Credit>\r\n            <TotalAmt>112.00</TotalAmt>\r\n            <PurchaseEx>\r\n                <NameValue>\r\n                    <Name>TxnType</Name>\r\n                    <Value>54</Value>\r\n                </NameValue>\r\n            </PurchaseEx>\r\n        </Purchase>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Query0-request": "\"select * from Purchase where TotalAmt < '100.00'\"",
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-27T10:39:51.538-07:00">\r\n    <Purchase domain="QBO" sparse="false">\r\n        <Id>252</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-27T10:37:26-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-27T10:37:26-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2015-07-27</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Amount>10.00</Amount>\r\n            <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n            <AccountBasedExpenseLineDetail>\r\n                <AccountRef name="Meals and Entertainment">13</AccountRef>\r\n                <BillableStatus>NotBillable</BillableStatus>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </AccountBasedExpenseLineDetail>\r\n        </Line>\r\n        <AccountRef name="Checking">35</AccountRef>\r\n        <PaymentType>Cash</PaymentType>\r\n        <TotalAmt>10.00</TotalAmt>\r\n        <PurchaseEx>\r\n            <NameValue>\r\n                <Name>TxnType</Name>\r\n                <Value>54</Value>\r\n            </NameValue>\r\n        </PurchaseEx>\r\n    </Purchase>\r\n</IntuitResponse>\r\n',
                "Create2-request-xml":
                    '<Purchase xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n  <Line>\r\n    <Amount>10.00</Amount>\r\n    <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n    <AccountBasedExpenseLineDetail>\r\n       <AccountRef name="Meals and Entertainment">13</AccountRef>\r\n    </AccountBasedExpenseLineDetail>\r\n  </Line>\r\n  <AccountRef name="Checking">35</AccountRef>\r\n  <PaymentType>Cash</PaymentType>\r\n</Purchase>',
                "Update0-request-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-27T10:42:11.700-07:00">\r\n    <Purchase domain="QBO" sparse="false">\r\n        <Id>252</Id>\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-27T10:37:26-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-27T10:42:11-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2015-07-27</TxnDate>\r\n        <PrivateNote>Added a private note via update.</PrivateNote>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Amount>10.00</Amount>\r\n            <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n            <AccountBasedExpenseLineDetail>\r\n                <AccountRef name="Meals and Entertainment">13</AccountRef>\r\n                <BillableStatus>NotBillable</BillableStatus>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </AccountBasedExpenseLineDetail>\r\n        </Line>\r\n        <AccountRef name="Checking">35</AccountRef>\r\n        <PaymentType>Cash</PaymentType>\r\n        <TotalAmt>10.00</TotalAmt>\r\n        <PurchaseEx>\r\n            <NameValue>\r\n                <Name>TxnType</Name>\r\n                <Value>54</Value>\r\n            </NameValue>\r\n        </PurchaseEx>\r\n    </Purchase>\r\n</IntuitResponse>\r\n',
                "Create1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-27T10:33:58.218-07:00">\r\n    <Purchase domain="QBO" sparse="false">\r\n        <Id>249</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-27T10:33:58-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-27T10:33:58-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2015-07-27</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Amount>10.00</Amount>\r\n            <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n            <AccountBasedExpenseLineDetail>\r\n                <AccountRef name="Meals and Entertainment">13</AccountRef>\r\n                <BillableStatus>NotBillable</BillableStatus>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </AccountBasedExpenseLineDetail>\r\n        </Line>\r\n        <AccountRef name="Checking">35</AccountRef>\r\n        <PaymentType>Check</PaymentType>\r\n        <TotalAmt>10.00</TotalAmt>\r\n        <PrintStatus>NotSet</PrintStatus>\r\n        <PurchaseEx>\r\n            <NameValue>\r\n                <Name>TxnType</Name>\r\n                <Value>3</Value>\r\n            </NameValue>\r\n        </PurchaseEx>\r\n    </Purchase>\r\n</IntuitResponse>\r\n',
                "Delete0-response":
                    '{\n  "Purchase": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "595"\n  }, \n  "time": "2014-04-22T12:00:52.298-07:00"\n}',
                "Create1-response":
                    '{\n  "Purchase": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "PurchaseEx": {\n      "any": [\n        {\n          "name": "{http://schema.intuit.com/finance/v3}NameValue", \n          "nil": false, \n          "value": {\n            "Name": "TxnType", \n            "Value": "3"\n          }, \n          "declaredType": "com.intuit.schema.finance.v3.NameValue", \n          "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n          "globalScope": true, \n          "typeSubstituted": false\n        }\n      ]\n    }, \n    "TxnDate": "2015-07-27", \n    "TotalAmt": 10.0, \n    "PrintStatus": "NotSet", \n    "PaymentType": "Check", \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "AccountBasedExpenseLineDetail", \n        "Amount": 10.0, \n        "Id": "1", \n        "AccountBasedExpenseLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "AccountRef": {\n            "name": "Meals and Entertainment", \n            "value": "13"\n          }, \n          "BillableStatus": "NotBillable"\n        }\n      }\n    ], \n    "AccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "CustomField": [], \n    "Id": "251", \n    "MetaData": {\n      "CreateTime": "2015-07-27T10:36:29-07:00", \n      "LastUpdatedTime": "2015-07-27T10:36:29-07:00"\n    }\n  }, \n  "time": "2015-07-27T10:36:29.179-07:00"\n}',
                "Create2-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-27T10:34:36.501-07:00">\r\n    <Purchase domain="QBO" sparse="false">\r\n        <Id>250</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-27T10:34:36-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-27T10:34:36-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2015-07-27</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Amount>10.00</Amount>\r\n            <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n            <AccountBasedExpenseLineDetail>\r\n                <AccountRef name="Meals and Entertainment">13</AccountRef>\r\n                <BillableStatus>NotBillable</BillableStatus>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </AccountBasedExpenseLineDetail>\r\n        </Line>\r\n        <AccountRef name="Checking">35</AccountRef>\r\n        <PaymentType>Cash</PaymentType>\r\n        <TotalAmt>10.00</TotalAmt>\r\n        <PurchaseEx>\r\n            <NameValue>\r\n                <Name>TxnType</Name>\r\n                <Value>54</Value>\r\n            </NameValue>\r\n        </PurchaseEx>\r\n    </Purchase>\r\n</IntuitResponse>\r\n',
                "Delete0-request-xml":
                    '<Purchase xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n  <Id>603</Id>\r\n  <SyncToken>1</SyncToken>\r\n</Purchase>',
                "Update0-request":
                    '{\n  "SyncToken": "1", \n  "domain": "QBO", \n  "PurchaseEx": {\n    "any": [\n      {\n        "name": "{http://schema.intuit.com/finance/v3}NameValue", \n        "nil": false, \n        "value": {\n          "Name": "TxnType", \n          "Value": "54"\n        }, \n        "declaredType": "com.intuit.schema.finance.v3.NameValue", \n        "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n        "globalScope": true, \n        "typeSubstituted": false\n      }\n    ]\n  }, \n  "TxnDate": "2015-07-27", \n  "TotalAmt": 10.0, \n  "PrivateNote": "Added an updated private note via update.", \n  "PaymentType": "Cash", \n  "sparse": false, \n  "Line": [\n    {\n      "DetailType": "AccountBasedExpenseLineDetail", \n      "Amount": 10.0, \n      "Id": "1", \n      "AccountBasedExpenseLineDetail": {\n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "AccountRef": {\n          "name": "Meals and Entertainment", \n          "value": "13"\n        }, \n        "BillableStatus": "NotBillable"\n      }\n    }\n  ], \n  "AccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }, \n  "CustomField": [], \n  "Id": "252", \n  "MetaData": {\n    "CreateTime": "2015-07-27T10:37:26-07:00", \n    "LastUpdatedTime": "2015-07-27T10:42:11-07:00"\n  }\n}',
                "Create1-request-xml":
                    '<Purchase xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n  <Line>\r\n    <Amount>10.00</Amount>\r\n    <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n    <AccountBasedExpenseLineDetail>\r\n       <AccountRef name="Meals and Entertainment">13</AccountRef>\r\n    </AccountBasedExpenseLineDetail>\r\n  </Line>\r\n  <AccountRef name="Checking">35</AccountRef>\r\n  <PaymentType>Check</PaymentType>\r\n</Purchase>\r\n',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-04-22T09:02:04.982-07:00">\r\n  <QueryResponse startPosition="1" maxResults="1">\r\n    <Purchase domain="QBO" sparse="false">\r\n      <Id>603</Id>\r\n      <SyncToken>2</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2018-07-18T00:00:00-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-04-22T09:00:40-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <TxnDate>2018-07-18</TxnDate>\r\n      <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n      <PrivateNote>Taxable expense.</PrivateNote>\r\n      <Line>\r\n        <Id>1</Id>\r\n        <Amount>28.40</Amount>\r\n        <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n        <AccountBasedExpenseLineDetail>\r\n          <CustomerRef name="Andres, Cristina">21</CustomerRef>\r\n          <ClassRef name="Landscaping">100000000000368490</ClassRef>\r\n          <AccountRef name="Automobile:Fuel">76</AccountRef>\r\n          <BillableStatus>Billable</BillableStatus>\r\n          <MarkupInfo>\r\n            <Percent>10</Percent>\r\n          </MarkupInfo>\r\n          <TaxCodeRef>TAX</TaxCodeRef>\r\n        </AccountBasedExpenseLineDetail>\r\n      </Line>\r\n      <AccountRef name="CalOil Card">50</AccountRef>\r\n      <PaymentType>CreditCard</PaymentType>\r\n      <EntityRef name="Bayshore CalOil Service" type="Vendor">81</EntityRef>\r\n      <Credit>false</Credit>\r\n      <TotalAmt>28.40</TotalAmt>\r\n    </Purchase>\r\n  </QueryResponse>\r\n</IntuitResponse>',
                "Create0-request-xml":
                    '<Purchase xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n  <Line>\r\n    <Amount>10.00</Amount>\r\n    <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n    <AccountBasedExpenseLineDetail>\r\n      <AccountRef>79</AccountRef>\r\n    </AccountBasedExpenseLineDetail>\r\n  </Line>\r\n  <AccountRef name="QuickBooks Credit Card">126</AccountRef>\r\n  <PaymentType>CreditCard</PaymentType>\r\n</Purchase>',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "Purchase": [\n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "PurchaseEx": {\n          "any": [\n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "TxnType", \n                "Value": "11"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }\n          ]\n        }, \n        "Credit": true, \n        "TotalAmt": 900.0, \n        "PrivateNote": "Monthly Payment", \n        "PaymentType": "CreditCard", \n        "TxnDate": "2014-10-03", \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "AccountBasedExpenseLineDetail", \n            "Amount": 900.0, \n            "Id": "1", \n            "AccountBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "AccountRef": {\n                "name": "Checking", \n                "value": "35"\n              }, \n              "BillableStatus": "NotBillable"\n            }\n          }\n        ], \n        "AccountRef": {\n          "name": "Mastercard", \n          "value": "41"\n        }, \n        "Id": "139", \n        "MetaData": {\n          "CreateTime": "2014-10-03T14:35:37-07:00", \n          "LastUpdatedTime": "2014-10-03T14:35:37-07:00"\n        }\n      }, \n      {\n        "DocNumber": "70", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "PurchaseEx": {\n          "any": [\n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "TxnType", \n                "Value": "3"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }\n          ]\n        }, \n        "TxnDate": "2014-09-11", \n        "TotalAmt": 185.0, \n        "PrintStatus": "NotSet", \n        "PaymentType": "Check", \n        "EntityRef": {\n          "type": "Vendor", \n          "name": "Chin\'s Gas and Oil", \n          "value": "33"\n        }, \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "AccountBasedExpenseLineDetail", \n            "Amount": 185.0, \n            "Id": "1", \n            "AccountBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "AccountRef": {\n                "name": "Maintenance and Repair", \n                "value": "72"\n              }, \n              "BillableStatus": "NotBillable"\n            }\n          }\n        ], \n        "AccountRef": {\n          "name": "Checking", \n          "value": "35"\n        }, \n        "Id": "133", \n        "MetaData": {\n          "CreateTime": "2014-10-03T14:17:55-07:00", \n          "LastUpdatedTime": "2014-10-03T14:17:55-07:00"\n        }\n      }, \n      {\n        "DocNumber": "75", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "PurchaseEx": {\n          "any": [\n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "TxnType", \n                "Value": "3"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }\n          ]\n        }, \n        "TxnDate": "2014-09-19", \n        "TotalAmt": 228.75, \n        "Id": "115", \n        "PrintStatus": "NotSet", \n        "PaymentType": "Check", \n        "EntityRef": {\n          "type": "Vendor", \n          "name": "Hicks Hardware", \n          "value": "41"\n        }, \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "ItemBasedExpenseLineDetail", \n            "Amount": 125.0, \n            "Id": "1", \n            "ItemBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 1, \n              "BillableStatus": "NotBillable", \n              "UnitPrice": 125, \n              "ItemRef": {\n                "name": "Rock Fountain", \n                "value": "5"\n              }\n            }, \n            "Description": "Rock Fountain"\n          }, \n          {\n            "DetailType": "ItemBasedExpenseLineDetail", \n            "Amount": 11.25, \n            "Id": "2", \n            "ItemBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 15, \n              "BillableStatus": "NotBillable", \n              "UnitPrice": 0.75, \n              "ItemRef": {\n                "name": "Sprinkler Heads", \n                "value": "16"\n              }\n            }, \n            "Description": "Sprinkler Heads"\n          }, \n          {\n            "DetailType": "ItemBasedExpenseLineDetail", \n            "Amount": 62.5, \n            "Id": "3", \n            "ItemBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 25, \n              "BillableStatus": "NotBillable", \n              "UnitPrice": 2.5, \n              "ItemRef": {\n                "name": "Sprinkler Pipes", \n                "value": "17"\n              }\n            }, \n            "Description": "Sprinkler Pipes"\n          }, \n          {\n            "DetailType": "ItemBasedExpenseLineDetail", \n            "Amount": 30.0, \n            "Id": "4", \n            "ItemBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 3, \n              "BillableStatus": "NotBillable", \n              "UnitPrice": 10, \n              "ItemRef": {\n                "name": "Pump", \n                "value": "11"\n              }\n            }, \n            "Description": "Fountain Pump"\n          }\n        ], \n        "AccountRef": {\n          "name": "Checking", \n          "value": "35"\n        }, \n        "RemitToAddr": {\n          "City": "Middlefield", \n          "Line1": "42 Main St.", \n          "PostalCode": "94303", \n          "Lat": "37.445013", \n          "Long": "-122.1391443", \n          "CountrySubDivisionCode": "CA", \n          "Id": "37"\n        }, \n        "MetaData": {\n          "CreateTime": "2014-09-19T12:51:46-07:00", \n          "LastUpdatedTime": "2014-09-19T12:51:46-07:00"\n        }\n      }, \n      {\n        "DocNumber": "12", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "PurchaseEx": {\n          "any": [\n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "TxnType", \n                "Value": "54"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }\n          ]\n        }, \n        "TxnDate": "2014-07-09", \n        "TotalAmt": 250.0, \n        "PaymentType": "Cash", \n        "EntityRef": {\n          "type": "Vendor", \n          "name": "Robertson & Associates", \n          "value": "49"\n        }, \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "AccountBasedExpenseLineDetail", \n            "Amount": 250.0, \n            "Id": "1", \n            "AccountBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "AccountRef": {\n                "name": "Legal & Professional Fees:Accounting", \n                "value": "69"\n              }, \n              "BillableStatus": "NotBillable"\n            }\n          }\n        ], \n        "AccountRef": {\n          "name": "Checking", \n          "value": "35"\n        }, \n        "Id": "107", \n        "MetaData": {\n          "CreateTime": "2014-09-19T12:36:23-07:00", \n          "LastUpdatedTime": "2014-09-19T12:36:23-07:00"\n        }\n      }, \n      {\n        "DocNumber": "15", \n        "SyncToken": "1", \n        "domain": "QBO", \n        "PurchaseEx": {\n          "any": [\n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "TxnType", \n                "Value": "54"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }\n          ]\n        }, \n        "TxnDate": "2014-08-16", \n        "TotalAmt": 108.09, \n        "PaymentType": "Cash", \n        "EntityRef": {\n          "type": "Vendor", \n          "name": "Tania\'s Nursery", \n          "value": "50"\n        }, \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "AccountBasedExpenseLineDetail", \n            "Amount": 108.09, \n            "Id": "1", \n            "AccountBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "AccountRef": {\n                "name": "Job Expenses", \n                "value": "58"\n              }, \n              "BillableStatus": "NotBillable"\n            }\n          }\n        ], \n        "AccountRef": {\n          "name": "Checking", \n          "value": "35"\n        }, \n        "Id": "87", \n        "MetaData": {\n          "CreateTime": "2014-09-18T13:14:42-07:00", \n          "LastUpdatedTime": "2014-09-18T13:17:06-07:00"\n        }\n      }, \n      {\n        "DocNumber": "3", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "PurchaseEx": {\n          "any": [\n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "TxnType", \n                "Value": "54"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }\n          ]\n        }, \n        "Credit": false, \n        "TotalAmt": 158.08, \n        "PaymentType": "CreditCard", \n        "TxnDate": "2014-07-16", \n        "EntityRef": {\n          "type": "Vendor", \n          "name": "Tania\'s Nursery", \n          "value": "50"\n        }, \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "AccountBasedExpenseLineDetail", \n            "Amount": 158.08, \n            "Id": "1", \n            "AccountBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "AccountRef": {\n                "name": "Job Expenses:Job Materials:Plants and Soil", \n                "value": "66"\n              }, \n              "BillableStatus": "NotBillable"\n            }\n          }\n        ], \n        "AccountRef": {\n          "name": "Mastercard", \n          "value": "41"\n        }, \n        "Id": "85", \n        "MetaData": {\n          "CreateTime": "2014-09-18T13:12:01-07:00", \n          "LastUpdatedTime": "2014-09-18T13:12:01-07:00"\n        }\n      }, \n      {\n        "DocNumber": "13", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "PurchaseEx": {\n          "any": [\n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "TxnType", \n                "Value": "54"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }\n          ]\n        }, \n        "TxnDate": "2014-09-13", \n        "TotalAmt": 215.66, \n        "PaymentType": "Cash", \n        "EntityRef": {\n          "type": "Vendor", \n          "name": "Hicks Hardware", \n          "value": "41"\n        }, \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "AccountBasedExpenseLineDetail", \n            "Amount": 215.66, \n            "Id": "1", \n            "AccountBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "AccountRef": {\n                "name": "Job Expenses:Job Materials:Sprinklers and Drip Systems", \n                "value": "67"\n              }, \n              "BillableStatus": "NotBillable"\n            }\n          }\n        ], \n        "AccountRef": {\n          "name": "Checking", \n          "value": "35"\n        }, \n        "Id": "83", \n        "MetaData": {\n          "CreateTime": "2014-09-18T13:08:20-07:00", \n          "LastUpdatedTime": "2014-09-18T13:08:20-07:00"\n        }\n      }, \n      {\n        "DocNumber": "1", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "PurchaseEx": {\n          "any": [\n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "TxnType", \n                "Value": "54"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }\n          ]\n        }, \n        "Credit": false, \n        "TotalAmt": 112.0, \n        "PaymentType": "CreditCard", \n        "TxnDate": "2014-09-17", \n        "EntityRef": {\n          "type": "Vendor", \n          "name": "Ellis Equipment Rental", \n          "value": "38"\n        }, \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "AccountBasedExpenseLineDetail", \n            "Amount": 112.0, \n            "Id": "1", \n            "AccountBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "AccountRef": {\n                "name": "Equipment Rental", \n                "value": "29"\n              }, \n              "BillableStatus": "NotBillable"\n            }, \n            "Description": "Equipment rental for 5 days"\n          }\n        ], \n        "AccountRef": {\n          "name": "Mastercard", \n          "value": "41"\n        }, \n        "Id": "51", \n        "MetaData": {\n          "CreateTime": "2014-09-17T11:45:45-07:00", \n          "LastUpdatedTime": "2014-09-17T11:45:45-07:00"\n        }\n      }\n    ], \n    "maxResults": 8\n  }, \n  "time": "2015-07-27T09:09:11.269-07:00"\n}',
            },
            Exchangerate: {
                "Update0-response":
                    '{\n  "ExchangeRate": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "AsOfDate": "2015-07-08", \n    "SourceCurrencyCode": "INR", \n    "Rate": 7, \n    "sparse": false, \n    "TargetCurrencyCode": "USD", \n    "MetaData": {\n      "LastUpdatedTime": "2015-07-08T09:21:46-07:00"\n    }\n  }, \n  "time": "2015-07-08T09:21:46.310-07:00"\n}',
                "Query1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-08T09:32:40.203-07:00">\r\n    <ExchangeRate domain="QBO" sparse="false">\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <LastUpdatedTime>2015-07-08T09:24:02-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <SourceCurrencyCode>EUR</SourceCurrencyCode>\r\n        <TargetCurrencyCode>USD</TargetCurrencyCode>\r\n        <Rate>2.5</Rate>\r\n        <AsOfDate>2015-07-07</AsOfDate>\r\n    </ExchangeRate>\r\n</IntuitResponse>',
                "Query0-request":
                    "\"select * from exchangerate where sourcecurrencycode in ('EUR', 'INR') and asofdate='2015-07-07'\"",
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-08T09:24:02.761-07:00">\r\n    <ExchangeRate domain="QBO" sparse="false">\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <LastUpdatedTime>2015-07-08T09:24:02-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <SourceCurrencyCode>EUR</SourceCurrencyCode>\r\n        <TargetCurrencyCode>USD</TargetCurrencyCode>\r\n        <Rate>2.5</Rate>\r\n        <AsOfDate>2015-07-07</AsOfDate>\r\n    </ExchangeRate>\r\n</IntuitResponse>\r\n',
                "Query1-response":
                    '{\n  "ExchangeRate": {\n    "SyncToken": "1", \n    "domain": "QBO", \n    "AsOfDate": "2015-07-07", \n    "SourceCurrencyCode": "EUR", \n    "Rate": 2.5, \n    "sparse": false, \n    "TargetCurrencyCode": "USD", \n    "MetaData": {\n      "LastUpdatedTime": "2015-07-08T09:24:02-07:00"\n    }\n  }, \n  "time": "2015-07-08T09:40:58.146-07:00"\n}',
                "Update0-request-xml":
                    ' <ExchangeRate xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n        <LastUpdatedTime>2015-07-07T12:40:08-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <SourceCurrencyCode>EUR</SourceCurrencyCode>\r\n    <TargetCurrencyCode>USD</TargetCurrencyCode>\r\n    <Rate>2.5</Rate>\r\n    <AsOfDate>2015-07-07</AsOfDate>\r\n</ExchangeRate>\r\n',
                "Update0-request":
                    '{\n  "SyncToken": "0", \n  "AsOfDate": "2015-07-08", \n  "SourceCurrencyCode": "INR", \n  "Rate": 7, \n  "TargetCurrencyCode": "USD", \n  "MetaData": {\n    "LastUpdatedTime": "2015-07-07T12:38:40-07:00"\n  }\n}',
                "Query1-request": '"?sourcecurrencycode=<USA>&asofdate=<yyyy-mm-dd>\\n"',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "ExchangeRate": [\n      {\n        "SyncToken": "0", \n        "AsOfDate": "2015-05-15", \n        "SourceCurrencyCode": "INR", \n        "Rate": 5, \n        "TargetCurrencyCode": "USD", \n        "MetaData": {\n          "LastUpdatedTime": "2015-07-07T12:38:40-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "AsOfDate": "2015-07-07", \n        "SourceCurrencyCode": "EUR", \n        "Rate": 5, \n        "TargetCurrencyCode": "USD", \n        "MetaData": {\n          "LastUpdatedTime": "2015-07-07T12:40:08-07:00"\n        }\n      }\n    ], \n    "maxResults": 2, \n    "totalCount": 2\n  }, \n  "time": "2015-07-08T09:19:44.495-07:00"\n}',
                "Query0-request-xml":
                    "select * from exchangerate where sourcecurrencycode in ('EUR', 'INR') and asofdate='2015-07-07'",
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-08T09:18:44.070-07:00">\r\n    <QueryResponse startPosition="1" maxResults="2" totalCount="2">\r\n        <ExchangeRate>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <LastUpdatedTime>2015-07-07T12:38:40-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <SourceCurrencyCode>INR</SourceCurrencyCode>\r\n            <TargetCurrencyCode>USD</TargetCurrencyCode>\r\n            <Rate>5</Rate>\r\n            <AsOfDate>2015-07-07</AsOfDate>\r\n        </ExchangeRate>\r\n        <ExchangeRate>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <LastUpdatedTime>2015-07-07T12:40:08-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <SourceCurrencyCode>EUR</SourceCurrencyCode>\r\n            <TargetCurrencyCode>USD</TargetCurrencyCode>\r\n            <Rate>5</Rate>\r\n            <AsOfDate>2015-07-07</AsOfDate>\r\n        </ExchangeRate>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
            },
            Recurringtransaction: {
                "Delete0-request": '{\n  "Invoice": {\n    "SyncToken": "0", \n    "Id": "1483"\n  }\n}',
                "Delete0-response":
                    '{\n  "time": "2020-08-13T17:40:08.008-07:00", \n  "RecurringTransaction": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Invoice": {\n      "Id": "1483"\n    }\n  }\n}',
                "Create0-request-xml":
                    '<RecurringTransaction xmlns="http://schema.intuit.com/finance/v3">>\n        <Invoice>\n           \n            <CustomField>\n                <DefinitionId>1</DefinitionId>\n                <Name>Crew #</Name>\n                <Type>StringType</Type>\n            </CustomField>\n            <DepartmentRef name="DeptName100768f890d64">1</DepartmentRef>\n            <CurrencyRef name="United States Dollar">USD</CurrencyRef>\n            <ExchangeRate>1</ExchangeRate>\n            <Line>\n                <Id>1</Id>\n                <LineNum>1</LineNum>\n                <Amount>55.00</Amount>\n                <DetailType>SalesItemLineDetail</DetailType>\n                <SalesItemLineDetail>\n                    <ItemRef name="Hours">2</ItemRef>\n                    <UnitPrice>55</UnitPrice>\n                    <Qty>1</Qty>\n                    <TaxCodeRef>NON</TaxCodeRef>\n                </SalesItemLineDetail>\n            </Line>\n            <Line>\n                <Amount>55.00</Amount>\n                <DetailType>SubTotalLineDetail</DetailType>\n                <SubTotalLineDetail/>\n            </Line>\n            <TxnTaxDetail>\n                <TotalTax>0</TotalTax>\n            </TxnTaxDetail>\n            <RecurDataRef>5</RecurDataRef>\n            <RecurringInfo>\n                <Name>RecurTemplate3</Name>\n                <RecurType>Automated</RecurType>\n                <Active>true</Active>\n                <ScheduleInfo>\n                    <IntervalType>Monthly</IntervalType>\n                    <NumInterval>1</NumInterval>\n                    <DayOfMonth>1</DayOfMonth>\n                    <DaysBefore>2</DaysBefore>\n                    <MaxOccurrences>10</MaxOccurrences>\n                    <StartDate>2020-09-01</StartDate>\n                    <NextDate>2020-09-01</NextDate>\n                </ScheduleInfo>\n            </RecurringInfo>\n            <CustomerRef name="Travis Waldron">26</CustomerRef>\n            <BillAddr>\n                <Id>714</Id>\n                <Line1>78 First St.</Line1>\n                <City>Monlo Park</City>\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\n                <PostalCode>94304</PostalCode>\n            </BillAddr>\n            <ShipAddr>\n                <Id>715</Id>\n                <Line1>78 First St.</Line1>\n                <City>Monlo Park</City>\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\n                <PostalCode>94304</PostalCode>\n            </ShipAddr>\n            <DueDate>2020-08-13</DueDate>\n            <TotalAmt>55.00</TotalAmt>\n            <HomeTotalAmt>55.00</HomeTotalAmt>\n            <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\n            <PrintStatus>NeedToPrint</PrintStatus>\n            <EmailStatus>NeedToSend</EmailStatus>\n            <BillEmail>\n                <Address>Travis@Waldron.com</Address>\n            </BillEmail>\n            <Balance>55.00</Balance>\n            <DeliveryInfo>\n                <DeliveryType>Email</DeliveryType>\n            </DeliveryInfo>\n            <AllowIPNPayment>false</AllowIPNPayment>\n            <AllowOnlinePayment>false</AllowOnlinePayment>\n            <AllowOnlineCreditCardPayment>false</AllowOnlineCreditCardPayment>\n            <AllowOnlineACHPayment>false</AllowOnlineACHPayment>\n        </Invoice>\n    </RecurringTransaction>\n',
                "Delete0-request-xml":
                    ' <RecurringTransaction xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\n        <Invoice>\n            <Id>1484</Id>\n            <SyncToken>0</SyncToken>\n        </Invoice>\n </RecurringTransaction>',
                "Create0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-08-13T17:35:04.950-07:00">\n    <RecurringTransaction>\n        <Invoice domain="QBO" sparse="false">\n            <Id>1484</Id>\n            <SyncToken>0</SyncToken>\n            <MetaData>\n                <CreateTime>2020-08-13T17:35:05-07:00</CreateTime>\n                <LastUpdatedTime>2020-08-13T17:35:05-07:00</LastUpdatedTime>\n            </MetaData>\n            <CustomField>\n                <DefinitionId>1</DefinitionId>\n                <Name>Crew #</Name>\n                <Type>StringType</Type>\n            </CustomField>\n            <DepartmentRef name="DeptName100768f890d64">1</DepartmentRef>\n            <CurrencyRef name="United States Dollar">USD</CurrencyRef>\n            <ExchangeRate>1</ExchangeRate>\n            <Line>\n                <Id>1</Id>\n                <LineNum>1</LineNum>\n                <Amount>55.00</Amount>\n                <DetailType>SalesItemLineDetail</DetailType>\n                <SalesItemLineDetail>\n                    <ItemRef name="Hours">2</ItemRef>\n                    <UnitPrice>55</UnitPrice>\n                    <Qty>1</Qty>\n                    <TaxCodeRef>NON</TaxCodeRef>\n                </SalesItemLineDetail>\n            </Line>\n            <Line>\n                <Amount>55.00</Amount>\n                <DetailType>SubTotalLineDetail</DetailType>\n                <SubTotalLineDetail/>\n            </Line>\n            <TxnTaxDetail>\n                <TotalTax>0</TotalTax>\n            </TxnTaxDetail>\n            <RecurDataRef>7</RecurDataRef>\n            <RecurringInfo>\n                <Name>RecurTemplate3</Name>\n                <RecurType>Automated</RecurType>\n                <Active>true</Active>\n                <ScheduleInfo>\n                    <IntervalType>Monthly</IntervalType>\n                    <NumInterval>1</NumInterval>\n                    <DayOfMonth>1</DayOfMonth>\n                    <DaysBefore>2</DaysBefore>\n                    <MaxOccurrences>10</MaxOccurrences>\n                    <StartDate>2020-09-01</StartDate>\n                    <NextDate>2020-09-01</NextDate>\n                </ScheduleInfo>\n            </RecurringInfo>\n            <CustomerRef name="Travis Waldron">26</CustomerRef>\n            <BillAddr>\n                <Id>718</Id>\n                <Line1>78 First St.</Line1>\n                <City>Monlo Park</City>\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\n                <PostalCode>94304</PostalCode>\n            </BillAddr>\n            <ShipAddr>\n                <Id>719</Id>\n                <Line1>78 First St.</Line1>\n                <City>Monlo Park</City>\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\n                <PostalCode>94304</PostalCode>\n            </ShipAddr>\n            <DueDate>2020-08-13</DueDate>\n            <TotalAmt>55.00</TotalAmt>\n            <HomeTotalAmt>55.00</HomeTotalAmt>\n            <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\n            <PrintStatus>NeedToPrint</PrintStatus>\n            <EmailStatus>NeedToSend</EmailStatus>\n            <BillEmail>\n                <Address>Travis@Waldron.com</Address>\n            </BillEmail>\n            <Balance>55.00</Balance>\n            <DeliveryInfo>\n                <DeliveryType>Email</DeliveryType>\n            </DeliveryInfo>\n            <AllowIPNPayment>false</AllowIPNPayment>\n            <AllowOnlinePayment>false</AllowOnlinePayment>\n            <AllowOnlineCreditCardPayment>false</AllowOnlineCreditCardPayment>\n            <AllowOnlineACHPayment>false</AllowOnlineACHPayment>\n        </Invoice>\n    </RecurringTransaction>\n</IntuitResponse>',
                "Query0-request": '"Select * From RecurringTransaction"',
                "Read0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "maxResults": 1, \n    "RecurringTransaction": [\n      {\n        "Bill": {\n          "SyncToken": "0", \n          "domain": "QBO", \n          "RecurringInfo": {\n            "Active": true, \n            "RecurType": "Automated", \n            "ScheduleInfo": {\n              "NumInterval": 1, \n              "NextDate": "2020-08-01", \n              "DayOfMonth": 1, \n              "PreviousDate": "2020-07-01", \n              "IntervalType": "Monthly"\n            }, \n            "Name": "Telephone Bill"\n          }, \n          "RecurDataRef": {\n            "value": "2"\n          }, \n          "CurrencyRef": {\n            "name": "United States Dollar", \n            "value": "USD"\n          }, \n          "TotalAmt": 74.36, \n          "APAccountRef": {\n            "name": "Name_01ff6", \n            "value": "33"\n          }, \n          "Id": "20", \n          "sparse": false, \n          "VendorRef": {\n            "name": "Cal Telephone", \n            "value": "32"\n          }, \n          "Line": [\n            {\n              "Description": "Monthly Phone Bill", \n              "DetailType": "AccountBasedExpenseLineDetail", \n              "LineNum": 1, \n              "Amount": 74.36, \n              "Id": "1", \n              "AccountBasedExpenseLineDetail": {\n                "TaxCodeRef": {\n                  "value": "NON"\n                }, \n                "AccountRef": {\n                  "name": "Utilities:Telephone", \n                  "value": "77"\n                }, \n                "BillableStatus": "NotBillable"\n              }\n            }\n          ], \n          "Balance": 74.36, \n          "SalesTermRef": {\n            "value": "3"\n          }, \n          "MetaData": {\n            "CreateTime": "2019-02-17T15:27:25-08:00", \n            "LastUpdatedTime": "2020-07-05T01:19:13-07:00"\n          }\n        }\n      }\n    ]\n  }, \n  "time": "2020-07-09T10:18:02.049-07:00"\n}',
                "Create0-response":
                    '{\n  "time": "2020-08-13T17:04:57.367-07:00", \n  "RecurringTransaction": {\n    "Invoice": {\n      "AllowOnlineACHPayment": false, \n      "domain": "QBO", \n      "CurrencyRef": {\n        "name": "United States Dollar", \n        "value": "USD"\n      }, \n      "PrintStatus": "NeedToPrint", \n      "BillEmail": {\n        "Address": "Travis@Waldron.com"\n      }, \n      "DeliveryInfo": {\n        "DeliveryType": "Email"\n      }, \n      "TotalAmt": 55.0, \n      "Line": [\n        {\n          "LineNum": 1, \n          "Amount": 55.0, \n          "SalesItemLineDetail": {\n            "TaxCodeRef": {\n              "value": "NON"\n            }, \n            "Qty": 1, \n            "UnitPrice": 55, \n            "ItemRef": {\n              "name": "Hours", \n              "value": "2"\n            }\n          }, \n          "Id": "1", \n          "DetailType": "SalesItemLineDetail"\n        }, \n        {\n          "DetailType": "SubTotalLineDetail", \n          "Amount": 55.0, \n          "SubTotalLineDetail": {}\n        }\n      ], \n      "DueDate": "2020-08-13", \n      "MetaData": {\n        "CreateTime": "2020-08-13T17:04:57-07:00", \n        "LastUpdatedTime": "2020-08-13T17:04:57-07:00"\n      }, \n      "sparse": false, \n      "RecurDataRef": {\n        "value": "6"\n      }, \n      "Balance": 55.0, \n      "CustomerRef": {\n        "name": "Travis Waldron", \n        "value": "26"\n      }, \n      "TxnTaxDetail": {\n        "TotalTax": 0\n      }, \n      "AllowOnlineCreditCardPayment": false, \n      "SyncToken": "0", \n      "LinkedTxn": [], \n      "RecurringInfo": {\n        "Active": true, \n        "RecurType": "Automated", \n        "ScheduleInfo": {\n          "StartDate": "2020-09-01", \n          "MaxOccurrences": 10, \n          "IntervalType": "Monthly", \n          "DaysBefore": 2, \n          "NextDate": "2020-09-01", \n          "NumInterval": 1, \n          "DayOfMonth": 1\n        }, \n        "Name": "RecurTemplate2"\n      }, \n      "ExchangeRate": 1, \n      "ShipAddr": {\n        "CountrySubDivisionCode": "CA", \n        "City": "Monlo Park", \n        "PostalCode": "94304", \n        "Id": "717", \n        "Line1": "78 First St."\n      }, \n      "HomeTotalAmt": 55.0, \n      "DepartmentRef": {\n        "name": "DeptName100768f890d64", \n        "value": "1"\n      }, \n      "EmailStatus": "NeedToSend", \n      "BillAddr": {\n        "CountrySubDivisionCode": "CA", \n        "City": "Monlo Park", \n        "PostalCode": "94304", \n        "Id": "716", \n        "Line1": "78 First St."\n      }, \n      "ApplyTaxAfterDiscount": false, \n      "CustomField": [\n        {\n          "DefinitionId": "1", \n          "Type": "StringType", \n          "Name": "Crew #"\n        }\n      ], \n      "Id": "1483", \n      "AllowOnlinePayment": false, \n      "AllowIPNPayment": false\n    }\n  }\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-07-09T10:17:26.684-07:00">\r\n    <QueryResponse startPosition="1" maxResults="1">\r\n        <RecurringTransaction>\r\n            <Bill domain="QBO" sparse="false">\r\n                <Id>20</Id>\r\n                <SyncToken>0</SyncToken>\r\n                <MetaData>\r\n                    <CreateTime>2019-02-17T15:27:25-08:00</CreateTime>\r\n                    <LastUpdatedTime>2020-07-05T01:19:13-07:00</LastUpdatedTime>\r\n                </MetaData>\r\n                <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n                <Line>\r\n                    <Id>1</Id>\r\n                    <LineNum>1</LineNum>\r\n                    <Description>Monthly Phone Bill</Description>\r\n                    <Amount>74.36</Amount>\r\n                    <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                    <AccountBasedExpenseLineDetail>\r\n                        <AccountRef name="Utilities:Telephone">77</AccountRef>\r\n                        <BillableStatus>NotBillable</BillableStatus>\r\n                        <TaxCodeRef>NON</TaxCodeRef>\r\n                    </AccountBasedExpenseLineDetail>\r\n                </Line>\r\n                <RecurDataRef>2</RecurDataRef>\r\n                <RecurringInfo>\r\n                    <Name>Telephone Bill</Name>\r\n                    <RecurType>Automated</RecurType>\r\n                    <Active>true</Active>\r\n                    <ScheduleInfo>\r\n                        <IntervalType>Monthly</IntervalType>\r\n                        <NumInterval>1</NumInterval>\r\n                        <DayOfMonth>1</DayOfMonth>\r\n                        <NextDate>2020-08-01</NextDate>\r\n                        <PreviousDate>2020-07-01</PreviousDate>\r\n                    </ScheduleInfo>\r\n                </RecurringInfo>\r\n                <VendorRef name="Cal Telephone">32</VendorRef>\r\n                <APAccountRef name="Name_01ff6">33</APAccountRef>\r\n                <TotalAmt>74.36</TotalAmt>\r\n                <SalesTermRef>3</SalesTermRef>\r\n                <Balance>74.36</Balance>\r\n            </Bill>\r\n        </RecurringTransaction>\r\n    </QueryResponse>\r\n</IntuitResponse> ',
                "Delete0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-08-13T17:38:14.907-07:00">\n    <RecurringTransaction domain="QBO" status="Deleted">\n        <Invoice>\n            <Id>1484</Id>\n        </Invoice>\n    </RecurringTransaction>\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "Invoice": {\n    "AllowOnlineACHPayment": false, \n    "ShipFromAddr": {\n      "Id": "713", \n      "Line1": "123 Sierra Way, San Pablo, CA, 87999, USA"\n    }, \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "HomeBalance": 55, \n    "PrintStatus": "NeedToPrint", \n    "BillEmail": {\n      "Address": "Travis@Waldron.com"\n    }, \n    "DeliveryInfo": {\n      "DeliveryType": "Email"\n    }, \n    "TotalAmt": 55, \n    "Line": [\n      {\n        "LineNum": 1, \n        "Amount": 55, \n        "SalesItemLineDetail": {\n          "ItemRef": {\n            "name": "Hours", \n            "value": "2"\n          }, \n          "Qty": 1, \n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "ItemAccountRef": {\n            "name": "Services", \n            "value": "1"\n          }, \n          "UnitPrice": 55, \n          "TaxClassificationRef": {\n            "value": "EUC-99990201-V1-00020000"\n          }\n        }, \n        "Id": "1", \n        "DetailType": "SalesItemLineDetail"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 55, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "RecurDataRef": {\n      "value": "4"\n    }, \n    "TaxExemptionRef": {}, \n    "Balance": 55, \n    "CustomerRef": {\n      "name": "Travis Waldron", \n      "value": "26"\n    }, \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "AllowOnlineCreditCardPayment": false, \n    "LinkedTxn": [], \n    "RecurringInfo": {\n      "Active": true, \n      "RecurType": "Automated", \n      "ScheduleInfo": {\n        "StartDate": "2020-09-01", \n        "MaxOccurrences": 10, \n        "IntervalType": "Monthly", \n        "DaysBefore": 2, \n        "NextDate": "2020-09-01", \n        "NumInterval": 1, \n        "DayOfMonth": 1\n      }, \n      "Name": "RecurTemplate2"\n    }, \n    "ExchangeRate": 1, \n    "ShipAddr": {\n      "City": "Monlo Park", \n      "Line1": "78 First St.", \n      "PostalCode": "94304", \n      "Lat": "37.4585825", \n      "Long": "-122.1352789", \n      "CountrySubDivisionCode": "CA", \n      "Id": "27"\n    }, \n    "DepartmentRef": {\n      "name": "DeptName100768f890d64", \n      "value": "1"\n    }, \n    "EmailStatus": "NeedToSend", \n    "BillAddr": {\n      "City": "Monlo Park", \n      "Line1": "78 First St.", \n      "PostalCode": "94304", \n      "Lat": "37.4585825", \n      "Long": "-122.1352789", \n      "CountrySubDivisionCode": "CA", \n      "Id": "27"\n    }, \n    "FreeFormAddress": true, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "HomeTotalAmt": 55, \n    "AllowOnlinePayment": false, \n    "AllowIPNPayment": false\n  }\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-07-06T17:39:46.777-07:00">\r\n    <QueryResponse startPosition="1" maxResults="3">\r\n        <RecurringTransaction>\r\n            <Invoice domain="QBO" sparse="false">\r\n                <Id>1537</Id>\r\n                <SyncToken>0</SyncToken>\r\n                <MetaData>\r\n                    <CreateTime>2020-07-06T14:24:00-07:00</CreateTime>\r\n                    <LastUpdatedTime>2020-07-06T14:24:00-07:00</LastUpdatedTime>\r\n                </MetaData>\r\n                <CustomField>\r\n                    <DefinitionId>1</DefinitionId>\r\n                    <Name>Crew #</Name>\r\n                    <Type>StringType</Type>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <DefinitionId>2</DefinitionId>\r\n                    <Name>PO #</Name>\r\n                    <Type>StringType</Type>\r\n                </CustomField>\r\n                <CustomField>\r\n                    <DefinitionId>3</DefinitionId>\r\n                    <Name>Sales #</Name>\r\n                    <Type>StringType</Type>\r\n                </CustomField>\r\n                <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n                <Line>\r\n                    <Id>1</Id>\r\n                    <LineNum>1</LineNum>\r\n                    <Amount>11111.00</Amount>\r\n                    <DetailType>SalesItemLineDetail</DetailType>\r\n                    <SalesItemLineDetail>\r\n                        <ItemRef name="Garden Supplies3223">211</ItemRef>\r\n                        <TaxCodeRef>NON</TaxCodeRef>\r\n                    </SalesItemLineDetail>\r\n                </Line>\r\n                <Line>\r\n                    <Amount>11111.00</Amount>\r\n                    <DetailType>SubTotalLineDetail</DetailType>\r\n                    <SubTotalLineDetail/>\r\n                </Line>\r\n                <TxnTaxDetail>\r\n                    <TotalTax>0</TotalTax>\r\n                </TxnTaxDetail>\r\n                <RecurDataRef>4</RecurDataRef>\r\n                <RecurringInfo>\r\n                    <Name>Testing</Name>\r\n                    <RecurType>Automated</RecurType>\r\n                    <Active>true</Active>\r\n                    <ScheduleInfo>\r\n                        <IntervalType>Monthly</IntervalType>\r\n                        <NumInterval>1</NumInterval>\r\n                        <DayOfMonth>1</DayOfMonth>\r\n                        <NextDate>2020-08-01</NextDate>\r\n                    </ScheduleInfo>\r\n                </RecurringInfo>\r\n                <CustomerRef name="0c9ff29a3c3640cdaf7a">401</CustomerRef>\r\n                <TotalAmt>11111.00</TotalAmt>\r\n                <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n                <PrintStatus>NeedToPrint</PrintStatus>\r\n                <EmailStatus>NotSet</EmailStatus>\r\n                <Balance>11111.00</Balance>\r\n                <AllowIPNPayment>false</AllowIPNPayment>\r\n                <AllowOnlinePayment>false</AllowOnlinePayment>\r\n                <AllowOnlineCreditCardPayment>false</AllowOnlineCreditCardPayment>\r\n                <AllowOnlineACHPayment>false</AllowOnlineACHPayment>\r\n            </Invoice>\r\n        </RecurringTransaction>\r\n        <RecurringTransaction>\r\n            <Bill domain="QBO" sparse="false">\r\n                <Id>20</Id>\r\n                <SyncToken>0</SyncToken>\r\n                <MetaData>\r\n                    <CreateTime>2019-02-17T15:27:25-08:00</CreateTime>\r\n                    <LastUpdatedTime>2020-07-05T01:19:13-07:00</LastUpdatedTime>\r\n                </MetaData>\r\n                <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n                <Line>\r\n                    <Id>1</Id>\r\n                    <LineNum>1</LineNum>\r\n                    <Description>Monthly Phone Bill</Description>\r\n                    <Amount>74.36</Amount>\r\n                    <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                    <AccountBasedExpenseLineDetail>\r\n                        <AccountRef name="Utilities:Telephone">77</AccountRef>\r\n                        <BillableStatus>NotBillable</BillableStatus>\r\n                        <TaxCodeRef>NON</TaxCodeRef>\r\n                    </AccountBasedExpenseLineDetail>\r\n                </Line>\r\n                <RecurDataRef>2</RecurDataRef>\r\n                <RecurringInfo>\r\n                    <Name>Telephone Bill</Name>\r\n                    <RecurType>Automated</RecurType>\r\n                    <Active>true</Active>\r\n                    <ScheduleInfo>\r\n                        <IntervalType>Monthly</IntervalType>\r\n                        <NumInterval>1</NumInterval>\r\n                        <DayOfMonth>1</DayOfMonth>\r\n                        <NextDate>2020-08-01</NextDate>\r\n                        <PreviousDate>2020-07-01</PreviousDate>\r\n                    </ScheduleInfo>\r\n                </RecurringInfo>\r\n                <VendorRef name="Cal Telephone">32</VendorRef>\r\n                <APAccountRef name="Name_01ff6">33</APAccountRef>\r\n                <TotalAmt>74.36</TotalAmt>\r\n                <SalesTermRef>3</SalesTermRef>\r\n                <Balance>74.36</Balance>\r\n            </Bill>\r\n        </RecurringTransaction>\r\n        <RecurringTransaction>\r\n            <Bill domain="QBO" sparse="false">\r\n                <Id>23</Id>\r\n                <SyncToken>0</SyncToken>\r\n                <MetaData>\r\n                    <CreateTime>2019-02-17T15:31:18-08:00</CreateTime>\r\n                    <LastUpdatedTime>2020-07-05T01:19:12-07:00</LastUpdatedTime>\r\n                </MetaData>\r\n                <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n                <Line>\r\n                    <Id>1</Id>\r\n                    <LineNum>1</LineNum>\r\n                    <Description>Building Lease</Description>\r\n                    <Amount>900.00</Amount>\r\n                    <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                    <AccountBasedExpenseLineDetail>\r\n                        <AccountRef name="Rent or Lease">17</AccountRef>\r\n                        <BillableStatus>NotBillable</BillableStatus>\r\n                        <TaxCodeRef>NON</TaxCodeRef>\r\n                    </AccountBasedExpenseLineDetail>\r\n                </Line>\r\n                <RecurDataRef>3</RecurDataRef>\r\n                <RecurringInfo>\r\n                    <Name>Monthly Building Lease</Name>\r\n                    <RecurType>Automated</RecurType>\r\n                    <Active>true</Active>\r\n                    <ScheduleInfo>\r\n                        <IntervalType>Monthly</IntervalType>\r\n                        <NumInterval>1</NumInterval>\r\n                        <DayOfMonth>1</DayOfMonth>\r\n                        <NextDate>2020-08-01</NextDate>\r\n                        <PreviousDate>2020-07-01</PreviousDate>\r\n                    </ScheduleInfo>\r\n                </RecurringInfo>\r\n                <VendorRef name="Hall Properties">40</VendorRef>\r\n                <APAccountRef name="Name_01ff6">33</APAccountRef>\r\n                <TotalAmt>900.00</TotalAmt>\r\n                <SalesTermRef>3</SalesTermRef>\r\n                <Balance>900.00</Balance>\r\n            </Bill>\r\n        </RecurringTransaction>\r\n    </QueryResponse>\r\n</IntuitResponse>',
                "Query0-request-xml": "select * from RecurringTransaction",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "maxResults": 3, \n    "RecurringTransaction": [\n      {\n        "Invoice": {\n          "AllowOnlineACHPayment": false, \n          "domain": "QBO", \n          "CurrencyRef": {\n            "name": "United States Dollar", \n            "value": "USD"\n          }, \n          "PrintStatus": "NeedToPrint", \n          "TotalAmt": 11111.0, \n          "Line": [\n            {\n              "LineNum": 1, \n              "Amount": 11111.0, \n              "SalesItemLineDetail": {\n                "TaxCodeRef": {\n                  "value": "NON"\n                }, \n                "ItemRef": {\n                  "name": "Garden Supplies3223", \n                  "value": "211"\n                }\n              }, \n              "Id": "1", \n              "DetailType": "SalesItemLineDetail"\n            }, \n            {\n              "DetailType": "SubTotalLineDetail", \n              "Amount": 11111.0, \n              "SubTotalLineDetail": {}\n            }\n          ], \n          "ApplyTaxAfterDiscount": false, \n          "RecurDataRef": {\n            "value": "4"\n          }, \n          "Balance": 11111.0, \n          "CustomerRef": {\n            "name": "0c9ff29a3c3640cdaf7a", \n            "value": "401"\n          }, \n          "TxnTaxDetail": {\n            "TotalTax": 0\n          }, \n          "AllowOnlineCreditCardPayment": false, \n          "SyncToken": "0", \n          "LinkedTxn": [], \n          "RecurringInfo": {\n            "Active": true, \n            "RecurType": "Automated", \n            "ScheduleInfo": {\n              "NumInterval": 1, \n              "NextDate": "2020-08-01", \n              "DayOfMonth": 1, \n              "IntervalType": "Monthly"\n            }, \n            "Name": "Testing"\n          }, \n          "EmailStatus": "NotSet", \n          "sparse": false, \n          "MetaData": {\n            "CreateTime": "2020-07-06T14:24:00-07:00", \n            "LastUpdatedTime": "2020-07-06T14:24:00-07:00"\n          }, \n          "CustomField": [\n            {\n              "DefinitionId": "1", \n              "Type": "StringType", \n              "Name": "Crew #"\n            }, \n            {\n              "DefinitionId": "2", \n              "Type": "StringType", \n              "Name": "PO #"\n            }, \n            {\n              "DefinitionId": "3", \n              "Type": "StringType", \n              "Name": "Sales #"\n            }\n          ], \n          "Id": "1537", \n          "AllowOnlinePayment": false, \n          "AllowIPNPayment": false\n        }\n      }, \n      {\n        "Bill": {\n          "SyncToken": "0", \n          "domain": "QBO", \n          "RecurringInfo": {\n            "Active": true, \n            "RecurType": "Automated", \n            "ScheduleInfo": {\n              "NumInterval": 1, \n              "NextDate": "2020-08-01", \n              "DayOfMonth": 1, \n              "PreviousDate": "2020-07-01", \n              "IntervalType": "Monthly"\n            }, \n            "Name": "Telephone Bill"\n          }, \n          "RecurDataRef": {\n            "value": "2"\n          }, \n          "CurrencyRef": {\n            "name": "United States Dollar", \n            "value": "USD"\n          }, \n          "TotalAmt": 74.36, \n          "APAccountRef": {\n            "name": "Name_01ff6", \n            "value": "33"\n          }, \n          "Id": "20", \n          "sparse": false, \n          "VendorRef": {\n            "name": "Cal Telephone", \n            "value": "32"\n          }, \n          "Line": [\n            {\n              "Description": "Monthly Phone Bill", \n              "DetailType": "AccountBasedExpenseLineDetail", \n              "LineNum": 1, \n              "Amount": 74.36, \n              "Id": "1", \n              "AccountBasedExpenseLineDetail": {\n                "TaxCodeRef": {\n                  "value": "NON"\n                }, \n                "AccountRef": {\n                  "name": "Utilities:Telephone", \n                  "value": "77"\n                }, \n                "BillableStatus": "NotBillable"\n              }\n            }\n          ], \n          "Balance": 74.36, \n          "SalesTermRef": {\n            "value": "3"\n          }, \n          "MetaData": {\n            "CreateTime": "2019-02-17T15:27:25-08:00", \n            "LastUpdatedTime": "2020-07-05T01:19:13-07:00"\n          }\n        }\n      }, \n      {\n        "Bill": {\n          "SyncToken": "0", \n          "domain": "QBO", \n          "RecurringInfo": {\n            "Active": true, \n            "RecurType": "Automated", \n            "ScheduleInfo": {\n              "NumInterval": 1, \n              "NextDate": "2020-08-01", \n              "DayOfMonth": 1, \n              "PreviousDate": "2020-07-01", \n              "IntervalType": "Monthly"\n            }, \n            "Name": "Monthly Building Lease"\n          }, \n          "RecurDataRef": {\n            "value": "3"\n          }, \n          "CurrencyRef": {\n            "name": "United States Dollar", \n            "value": "USD"\n          }, \n          "TotalAmt": 900.0, \n          "APAccountRef": {\n            "name": "Name_01ff6", \n            "value": "33"\n          }, \n          "Id": "23", \n          "sparse": false, \n          "VendorRef": {\n            "name": "Hall Properties", \n            "value": "40"\n          }, \n          "Line": [\n            {\n              "Description": "Building Lease", \n              "DetailType": "AccountBasedExpenseLineDetail", \n              "LineNum": 1, \n              "Amount": 900.0, \n              "Id": "1", \n              "AccountBasedExpenseLineDetail": {\n                "TaxCodeRef": {\n                  "value": "NON"\n                }, \n                "AccountRef": {\n                  "name": "Rent or Lease", \n                  "value": "17"\n                }, \n                "BillableStatus": "NotBillable"\n              }\n            }\n          ], \n          "Balance": 900.0, \n          "SalesTermRef": {\n            "value": "3"\n          }, \n          "MetaData": {\n            "CreateTime": "2019-02-17T15:31:18-08:00", \n            "LastUpdatedTime": "2020-07-05T01:19:12-07:00"\n          }\n        }\n      }\n    ]\n  }, \n  "time": "2020-07-06T17:33:54.221-07:00"\n}',
            },
            Creditmemo: {
                "Delete0-request": '{\n  "SyncToken": "0", \n  "Id": "73"\n}',
                "Delete0-response":
                    '{\n  "CreditMemo": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "73"\n  }, \n  "time": "2015-05-26T13:53:33.118-07:00"\n}',
                "Create0-request-xml":
                    '<CreditMemo xmlns="http://schema.intuit.com/finance/v3">\r\n    <Line>\r\n        <Amount>50</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n            <ItemRef name="Concrete">3</ItemRef>\r\n            <TaxCodeRef>TAX</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n    </Line>\r\n    <CustomerRef name="Cool Cars">3</CustomerRef>\r\n</CreditMemo>\r\n',
                "Send0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-23T09:10:07.878-07:00">\r\n    <CreditMemo domain="QBO" sparse="false">\r\n        <Id>73</Id>\r\n        <SyncToken>3</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-18T12:51:27-07:00</CreateTime>\r\n            <LastUpdatedTime>2019-09-19T10:43:46-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1026</DocNumber>\r\n        <TxnDate>2014-09-02</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Pest Control Services</Description>\r\n            <Amount>100.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pest Control">10</ItemRef>\r\n                <UnitPrice>100</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>100.00</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n        <CustomerMemo>Updated customer memo.</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>79</Id>\r\n            <Line1>Amy Lauterbach</Line1>\r\n            <Line2>Amy\'s Bird Sanctuary</Line2>\r\n            <Line3>4581 Finch St.</Line3>\r\n            <Line4>Bayshore, CA 94326</Line4>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>108</Id>\r\n            <Line1>4581 Finch St.</Line1>\r\n            <City>Bayshore</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94326</PostalCode>\r\n        </ShipAddr>\r\n        <TotalAmt>100.00</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <EmailStatus>EmailSent</EmailStatus>\r\n        <BillEmail>\r\n            <Address>Birds@Intuit.com</Address>\r\n        </BillEmail>\r\n         <DeliveryInfo>\r\n            <DeliveryType>Email</DeliveryType>\r\n            <DeliveryTime>2019-09-19T10:43:46-07:00</DeliveryTime>\r\n        </DeliveryInfo>\r\n        <Balance>0</Balance>\r\n        <RemainingCredit>0</RemainingCredit>\r\n    </CreditMemo>\r\n</IntuitResponse>\r\n',
                "Delete0-request-xml":
                    '<CreditMemo xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>73</Id>\r\n    <SyncToken>0</SyncToken>\r\n</CreditMemo>',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-31T09:39:59.991-08:00">\r\n    <CreditMemo domain="QBO" sparse="false">\r\n        <Id>149</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-12-31T09:40:00-08:00</CreateTime>\r\n            <LastUpdatedTime>2014-12-31T09:40:00-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1038</DocNumber>\r\n        <TxnDate>2014-12-31</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Amount>50.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Concrete">3</ItemRef>\r\n                <TaxCodeRef>TAX</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>50.00</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Cool Cars">3</CustomerRef>\r\n        <BillAddr>\r\n            <Id>4</Id>\r\n            <Line1>65 Ocean Dr.</Line1>\r\n            <City>Half Moon Bay</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94213</PostalCode>\r\n            <Lat>37.4300318</Lat>\r\n            <Long>-122.4336537</Long>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>4</Id>\r\n            <Line1>65 Ocean Dr.</Line1>\r\n            <City>Half Moon Bay</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94213</PostalCode>\r\n            <Lat>37.4300318</Lat>\r\n            <Long>-122.4336537</Long>\r\n        </ShipAddr>\r\n        <TotalAmt>50.00</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <Balance>50.00</Balance>\r\n        <RemainingCredit>50.00</RemainingCredit>\r\n    </CreditMemo>\r\n</IntuitResponse>\r\n',
                "Query0-request": "\"Select * from CreditMemo where TxnDate > '2014-04-15'\"",
                "Update0-response":
                    '{\n  "CreditMemo": {\n    "DocNumber": "1026", \n    "SyncToken": "5", \n    "domain": "QBO", \n    "Balance": 0, \n    "BillAddr": {\n      "Line4": "Bayshore, CA  94326", \n      "Line3": "4581 Finch St.", \n      "Id": "79", \n      "Line1": "Amy Lauterbach", \n      "Line2": "Amy\'s Bird Sanctuary"\n    }, \n    "BillEmail": {\n      "Address": "Birds@Intuit.com"\n    }, \n    "TxnDate": "2014-09-02", \n    "TotalAmt": 100.0, \n    "CustomerRef": {\n      "name": "Amy\'s Bird Sanctuary", \n      "value": "1"\n    }, \n    "CustomerMemo": {\n      "value": "Another memo update."\n    }, \n    "ShipAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Bayshore", \n      "PostalCode": "94326", \n      "Id": "108", \n      "Line1": "4581 Finch St."\n    }, \n    "RemainingCredit": 0, \n    "PrintStatus": "NeedToPrint", \n    "EmailStatus": "NotSet", \n    "sparse": false, \n    "Line": [\n      {\n        "Description": "Pest Control Services", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 1, \n          "UnitPrice": 100, \n          "ItemRef": {\n            "name": "Pest Control", \n            "value": "10"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 100.0, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 100.0, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "73", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-18T12:51:27-07:00", \n      "LastUpdatedTime": "2015-07-23T09:23:52-07:00"\n    }\n  }, \n  "time": "2015-07-23T09:23:52.115-07:00"\n}',
                "Update0-request-xml":
                    '<CreditMemo xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n    <Id>73</Id>\r\n    <SyncToken>3</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2014-09-18T12:51:27-07:00</CreateTime>\r\n        <LastUpdatedTime>2015-07-01T09:16:28-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomField>\r\n        <DefinitionId>1</DefinitionId>\r\n        <Name>Crew #</Name>\r\n        <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>1026</DocNumber>\r\n    <TxnDate>2014-09-02</TxnDate>\r\n    <Line>\r\n        <Id>1</Id>\r\n        <LineNum>1</LineNum>\r\n        <Description>Pest Control Services</Description>\r\n        <Amount>100.00</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n            <ItemRef name="Pest Control">10</ItemRef>\r\n            <UnitPrice>100</UnitPrice>\r\n            <Qty>1</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n        <Amount>100.00</Amount>\r\n        <DetailType>SubTotalLineDetail</DetailType>\r\n        <SubTotalLineDetail />\r\n    </Line>\r\n    <TxnTaxDetail>\r\n        <TotalTax>0</TotalTax>\r\n    </TxnTaxDetail>\r\n    <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n    <CustomerMemo>Memo change via update operation.</CustomerMemo>\r\n    <BillAddr>\r\n        <Id>79</Id>\r\n        <Line1>Amy Lauterbach</Line1>\r\n        <Line2>Amy\'s Bird Sanctuary</Line2>\r\n        <Line3>4581 Finch St.</Line3>\r\n        <Line4>Bayshore, CA 94326</Line4>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n        <Id>108</Id>\r\n        <Line1>4581 Finch St.</Line1>\r\n        <City>Bayshore</City>\r\n        <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n        <PostalCode>94326</PostalCode>\r\n    </ShipAddr>\r\n    <TotalAmt>100.00</TotalAmt>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NeedToPrint</PrintStatus>\r\n    <EmailStatus>NotSet</EmailStatus>\r\n    <BillEmail>\r\n        <Address>Birds@Intuit.com</Address>\r\n    </BillEmail>\r\n    <Balance>0</Balance>\r\n    <RemainingCredit>0</RemainingCredit>\r\n</CreditMemo>\r\n',
                "Read0-response":
                    '{\n  "CreditMemo": {\n    "DocNumber": "1026", \n    "SyncToken": "3", \n    "domain": "QBO", \n    "Balance": 0, \n    "BillAddr": {\n      "Line4": "Bayshore, CA  94326", \n      "Line3": "4581 Finch St.", \n      "Id": "79", \n      "Line1": "Amy Lauterbach", \n      "Line2": "Amy\'s Bird Sanctuary"\n    }, \n    "BillEmail": {\n      "Address": "Birds@Intuit.com"\n    }, \n    "TxnDate": "2014-09-02", \n    "TotalAmt": 100.0, \n    "CustomerRef": {\n      "name": "Amy\'s Bird Sanctuary", \n      "value": "1"\n    }, \n    "CustomerMemo": {\n      "value": "Updated customer memo."\n    }, \n    "ShipAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Bayshore", \n      "PostalCode": "94326", \n      "Id": "108", \n      "Line1": "4581 Finch St."\n    }, \n    "RemainingCredit": 0, \n    "PrintStatus": "NeedToPrint", \n    "EmailStatus": "NotSet", \n    "sparse": false, \n    "Line": [\n      {\n        "Description": "Pest Control Services", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 1, \n          "UnitPrice": 100, \n          "ItemRef": {\n            "name": "Pest Control", \n            "value": "10"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 100.0, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 100.0, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "73", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-18T12:51:27-07:00", \n      "LastUpdatedTime": "2015-07-01T09:16:28-07:00"\n    }\n  }, \n  "time": "2015-07-23T09:10:45.624-07:00"\n}',
                "Create0-response":
                    '{\n  "CreditMemo": {\n    "DocNumber": "1039", \n    "SyncToken": "0", \n    "domain": "QBO", \n    "Balance": 50.0, \n    "BillAddr": {\n      "City": "Half Moon Bay", \n      "Line1": "65 Ocean Dr.", \n      "PostalCode": "94213", \n      "Lat": "37.4300318", \n      "Long": "-122.4336537", \n      "CountrySubDivisionCode": "CA", \n      "Id": "4"\n    }, \n    "TxnDate": "2014-12-31", \n    "TotalAmt": 50.0, \n    "CustomerRef": {\n      "name": "Cool Cars", \n      "value": "3"\n    }, \n    "ShipAddr": {\n      "City": "Half Moon Bay", \n      "Line1": "65 Ocean Dr.", \n      "PostalCode": "94213", \n      "Lat": "37.4300318", \n      "Long": "-122.4336537", \n      "CountrySubDivisionCode": "CA", \n      "Id": "4"\n    }, \n    "RemainingCredit": 50.0, \n    "PrintStatus": "NeedToPrint", \n    "EmailStatus": "NotSet", \n    "sparse": false, \n    "Line": [\n      {\n        "LineNum": 1, \n        "Amount": 50.0, \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "ItemRef": {\n            "name": "Concrete", \n            "value": "3"\n          }\n        }, \n        "Id": "1", \n        "DetailType": "SalesItemLineDetail"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 50.0, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "150", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2014-12-31T09:44:40-08:00", \n      "LastUpdatedTime": "2014-12-31T09:44:40-08:00"\n    }\n  }, \n  "time": "2014-12-31T09:44:40.726-08:00"\n}',
                "Update0-request":
                    '{\n  "DocNumber": "1026", \n  "SyncToken": "4", \n  "domain": "QBO", \n  "Balance": 0, \n  "BillAddr": {\n    "Line4": "Bayshore, CA  94326", \n    "Line3": "4581 Finch St.", \n    "Id": "79", \n    "Line1": "Amy Lauterbach", \n    "Line2": "Amy\'s Bird Sanctuary"\n  }, \n  "BillEmail": {\n    "Address": "Birds@Intuit.com"\n  }, \n  "TxnDate": "2014-09-02", \n  "TotalAmt": 100.0, \n  "CustomerRef": {\n    "name": "Amy\'s Bird Sanctuary", \n    "value": "1"\n  }, \n  "CustomerMemo": {\n    "value": "Another memo update."\n  }, \n  "ShipAddr": {\n    "CountrySubDivisionCode": "CA", \n    "City": "Bayshore", \n    "PostalCode": "94326", \n    "Id": "108", \n    "Line1": "4581 Finch St."\n  }, \n  "RemainingCredit": 0, \n  "PrintStatus": "NeedToPrint", \n  "EmailStatus": "NotSet", \n  "sparse": false, \n  "Line": [\n    {\n      "Description": "Pest Control Services", \n      "DetailType": "SalesItemLineDetail", \n      "SalesItemLineDetail": {\n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "Qty": 1, \n        "UnitPrice": 100, \n        "ItemRef": {\n          "name": "Pest Control", \n          "value": "10"\n        }\n      }, \n      "LineNum": 1, \n      "Amount": 100.0, \n      "Id": "1"\n    }, \n    {\n      "DetailType": "SubTotalLineDetail", \n      "Amount": 100.0, \n      "SubTotalLineDetail": {}\n    }\n  ], \n  "ApplyTaxAfterDiscount": false, \n  "CustomField": [\n    {\n      "DefinitionId": "1", \n      "Type": "StringType", \n      "Name": "Crew #"\n    }\n  ], \n  "Id": "73", \n  "TxnTaxDetail": {\n    "TotalTax": 0\n  }, \n  "MetaData": {\n    "CreateTime": "2014-09-18T12:51:27-07:00", \n    "LastUpdatedTime": "2015-07-01T09:16:28-07:00"\n  }\n}',
                "Send0-response":
                    '{\n  "CreditMemo": {\n    "TxnDate": "2014-09-02", \n    "domain": "QBO", \n    "PrintStatus": "NeedToPrint", \n    "DeliveryInfo": {\n      "DeliveryType": "Email", \n      "DeliveryTime": "2019-09-19T10:43:46-07:00"\n    }, \n    "TotalAmt": 100.0, \n    "RemainingCredit": 0, \n    "Line": [\n      {\n        "Description": "Pest Control Services", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 1, \n          "UnitPrice": 100, \n          "ItemRef": {\n            "name": "Pest Control", \n            "value": "10"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 100.0, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 100.0, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "DocNumber": "1026", \n    "sparse": false, \n    "CustomerMemo": {\n      "value": "Updated customer memo."\n    }, \n    "Balance": 0, \n    "CustomerRef": {\n      "name": "Amy\'s Bird Sanctuary", \n      "value": "1"\n    }, \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "SyncToken": "3", \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "ShipAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Bayshore", \n      "PostalCode": "94326", \n      "Id": "108", \n      "Line1": "4581 Finch St."\n    }, \n    "EmailStatus": "EmailSent", \n    "BillAddr": {\n      "Line4": "Bayshore, CA  94326", \n      "Line3": "4581 Finch St.", \n      "Id": "79", \n      "Line1": "Amy Lauterbach", \n      "Line2": "Amy\'s Bird Sanctuary"\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-18T12:51:27-07:00", \n      "LastUpdatedTime": "2019-09-19T10:43:46-07:00"\n    }, \n    "BillEmail": {\n      "Address": "Birds@Intuit.com"\n    }, \n    "Id": "73"\n  }, \n  "time": "2019-09-19T10:43:46-07:00"\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-23T09:10:07.878-07:00">\r\n    <CreditMemo domain="QBO" sparse="false">\r\n        <Id>73</Id>\r\n        <SyncToken>3</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-18T12:51:27-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-01T09:16:28-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1026</DocNumber>\r\n        <TxnDate>2014-09-02</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Pest Control Services</Description>\r\n            <Amount>100.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pest Control">10</ItemRef>\r\n                <UnitPrice>100</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>100.00</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n        <CustomerMemo>Updated customer memo.</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>79</Id>\r\n            <Line1>Amy Lauterbach</Line1>\r\n            <Line2>Amy\'s Bird Sanctuary</Line2>\r\n            <Line3>4581 Finch St.</Line3>\r\n            <Line4>Bayshore, CA 94326</Line4>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>108</Id>\r\n            <Line1>4581 Finch St.</Line1>\r\n            <City>Bayshore</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94326</PostalCode>\r\n        </ShipAddr>\r\n        <TotalAmt>100.00</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <BillEmail>\r\n            <Address>Birds@Intuit.com</Address>\r\n        </BillEmail>\r\n        <Balance>0</Balance>\r\n        <RemainingCredit>0</RemainingCredit>\r\n    </CreditMemo>\r\n</IntuitResponse>\r\n',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-23T09:19:58.180-07:00">\r\n    <CreditMemo domain="QBO" sparse="false">\r\n        <Id>73</Id>\r\n        <SyncToken>4</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-18T12:51:27-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-23T09:19:58-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1026</DocNumber>\r\n        <TxnDate>2014-09-02</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Pest Control Services</Description>\r\n            <Amount>100.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pest Control">10</ItemRef>\r\n                <UnitPrice>100</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>100.00</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n        <CustomerMemo>Memo change via update operation.</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>79</Id>\r\n            <Line1>Amy Lauterbach</Line1>\r\n            <Line2>Amy\'s Bird Sanctuary</Line2>\r\n            <Line3>4581 Finch St.</Line3>\r\n            <Line4>Bayshore, CA 94326</Line4>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>108</Id>\r\n            <Line1>4581 Finch St.</Line1>\r\n            <City>Bayshore</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94326</PostalCode>\r\n        </ShipAddr>\r\n        <TotalAmt>100.00</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <BillEmail>\r\n            <Address>Birds@Intuit.com</Address>\r\n        </BillEmail>\r\n        <Balance>0</Balance>\r\n        <RemainingCredit>0</RemainingCredit>\r\n    </CreditMemo>\r\n</IntuitResponse>\r\n',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-05-26T13:12:16.102-07:00">\r\n    <CreditMemo domain="QBO" status="Deleted">\r\n        <Id>73</Id>\r\n    </CreditMemo>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "Line": [\n    {\n      "DetailType": "SalesItemLineDetail", \n      "Amount": 50, \n      "SalesItemLineDetail": {\n        "ItemRef": {\n          "name": "Concrete", \n          "value": "3"\n        }\n      }\n    }\n  ], \n  "CustomerRef": {\n    "name": "CoolCars", \n    "value": "3"\n  }\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-23T09:14:22.897-07:00">\r\n    <QueryResponse startPosition="1" maxResults="2">\r\n        <CreditMemo domain="QBO" sparse="false">\r\n            <Id>73</Id>\r\n            <SyncToken>3</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-18T12:51:27-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-01T09:16:28-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <CustomField>\r\n                <DefinitionId>1</DefinitionId>\r\n                <Name>Crew #</Name>\r\n                <Type>StringType</Type>\r\n            </CustomField>\r\n            <DocNumber>1026</DocNumber>\r\n            <TxnDate>2014-09-02</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <LineNum>1</LineNum>\r\n                <Description>Pest Control Services</Description>\r\n                <Amount>100.00</Amount>\r\n                <DetailType>SalesItemLineDetail</DetailType>\r\n                <SalesItemLineDetail>\r\n                    <ItemRef name="Pest Control">10</ItemRef>\r\n                    <UnitPrice>100</UnitPrice>\r\n                    <Qty>1</Qty>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </SalesItemLineDetail>\r\n            </Line>\r\n            <Line>\r\n                <Amount>100.00</Amount>\r\n                <DetailType>SubTotalLineDetail</DetailType>\r\n                <SubTotalLineDetail />\r\n            </Line>\r\n            <TxnTaxDetail>\r\n                <TotalTax>0</TotalTax>\r\n            </TxnTaxDetail>\r\n            <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n            <CustomerMemo>Updated customer memo.</CustomerMemo>\r\n            <BillAddr>\r\n                <Id>79</Id>\r\n                <Line1>Amy Lauterbach</Line1>\r\n                <Line2>Amy\'s Bird Sanctuary</Line2>\r\n                <Line3>4581 Finch St.</Line3>\r\n                <Line4>Bayshore, CA 94326</Line4>\r\n            </BillAddr>\r\n            <ShipAddr>\r\n                <Id>108</Id>\r\n                <Line1>4581 Finch St.</Line1>\r\n                <City>Bayshore</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94326</PostalCode>\r\n            </ShipAddr>\r\n            <TotalAmt>100.00</TotalAmt>\r\n            <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n            <PrintStatus>NeedToPrint</PrintStatus>\r\n            <EmailStatus>NotSet</EmailStatus>\r\n            <BillEmail>\r\n                <Address>Birds@Intuit.com</Address>\r\n            </BillEmail>\r\n            <Balance>0</Balance>\r\n            <RemainingCredit>0</RemainingCredit>\r\n        </CreditMemo>\r\n        <CreditMemo domain="QBO" sparse="false">\r\n            <Id>158</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-01-13T10:32:35-08:00</CreateTime>\r\n                <LastUpdatedTime>2015-01-13T10:32:35-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <CustomField>\r\n                <DefinitionId>1</DefinitionId>\r\n                <Name>Crew #</Name>\r\n                <Type>StringType</Type>\r\n            </CustomField>\r\n            <DocNumber>1039</DocNumber>\r\n            <TxnDate>2015-01-13</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <LineNum>1</LineNum>\r\n                <Amount>50.00</Amount>\r\n                <DetailType>SalesItemLineDetail</DetailType>\r\n                <SalesItemLineDetail>\r\n                    <ItemRef name="Concrete">3</ItemRef>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </SalesItemLineDetail>\r\n            </Line>\r\n            <Line>\r\n                <Amount>50.00</Amount>\r\n                <DetailType>SubTotalLineDetail</DetailType>\r\n                <SubTotalLineDetail />\r\n            </Line>\r\n            <TxnTaxDetail>\r\n                <TotalTax>0</TotalTax>\r\n            </TxnTaxDetail>\r\n            <CustomerRef name="Cool Cars">3</CustomerRef>\r\n            <BillAddr>\r\n                <Id>4</Id>\r\n                <Line1>65 Ocean Dr.</Line1>\r\n                <City>Half Moon Bay</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94213</PostalCode>\r\n                <Lat>37.4300318</Lat>\r\n                <Long>-122.4336537</Long>\r\n            </BillAddr>\r\n            <TotalAmt>50.00</TotalAmt>\r\n            <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n            <PrintStatus>NeedToPrint</PrintStatus>\r\n            <EmailStatus>NotSet</EmailStatus>\r\n            <Balance>50.00</Balance>\r\n            <RemainingCredit>50.00</RemainingCredit>\r\n        </CreditMemo>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Query0-request-xml": "Select * from CreditMemo where TxnDate > '2014-04-15'\r\n",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "CreditMemo": [\n      {\n        "DocNumber": "1026", \n        "SyncToken": "3", \n        "domain": "QBO", \n        "Balance": 0, \n        "BillAddr": {\n          "Line4": "Bayshore, CA  94326", \n          "Line3": "4581 Finch St.", \n          "Id": "79", \n          "Line1": "Amy Lauterbach", \n          "Line2": "Amy\'s Bird Sanctuary"\n        }, \n        "BillEmail": {\n          "Address": "Birds@Intuit.com"\n        }, \n        "TxnDate": "2014-09-02", \n        "TotalAmt": 100.0, \n        "CustomerRef": {\n          "name": "Amy\'s Bird Sanctuary", \n          "value": "1"\n        }, \n        "CustomerMemo": {\n          "value": "Updated customer memo."\n        }, \n        "ShipAddr": {\n          "CountrySubDivisionCode": "CA", \n          "City": "Bayshore", \n          "PostalCode": "94326", \n          "Id": "108", \n          "Line1": "4581 Finch St."\n        }, \n        "RemainingCredit": 0, \n        "PrintStatus": "NeedToPrint", \n        "EmailStatus": "NotSet", \n        "sparse": false, \n        "Line": [\n          {\n            "Description": "Pest Control Services", \n            "DetailType": "SalesItemLineDetail", \n            "SalesItemLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 1, \n              "UnitPrice": 100, \n              "ItemRef": {\n                "name": "Pest Control", \n                "value": "10"\n              }\n            }, \n            "LineNum": 1, \n            "Amount": 100.0, \n            "Id": "1"\n          }, \n          {\n            "DetailType": "SubTotalLineDetail", \n            "Amount": 100.0, \n            "SubTotalLineDetail": {}\n          }\n        ], \n        "ApplyTaxAfterDiscount": false, \n        "CustomField": [\n          {\n            "DefinitionId": "1", \n            "Type": "StringType", \n            "Name": "Crew #"\n          }\n        ], \n        "Id": "73", \n        "TxnTaxDetail": {\n          "TotalTax": 0\n        }, \n        "MetaData": {\n          "CreateTime": "2014-09-18T12:51:27-07:00", \n          "LastUpdatedTime": "2015-07-01T09:16:28-07:00"\n        }\n      }, \n      {\n        "DocNumber": "1039", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "Balance": 50.0, \n        "BillAddr": {\n          "City": "Half Moon Bay", \n          "Line1": "65 Ocean Dr.", \n          "PostalCode": "94213", \n          "Lat": "37.4300318", \n          "Long": "-122.4336537", \n          "CountrySubDivisionCode": "CA", \n          "Id": "4"\n        }, \n        "TxnDate": "2015-01-13", \n        "TotalAmt": 50.0, \n        "CustomerRef": {\n          "name": "Cool Cars", \n          "value": "3"\n        }, \n        "RemainingCredit": 50.0, \n        "PrintStatus": "NeedToPrint", \n        "EmailStatus": "NotSet", \n        "sparse": false, \n        "Line": [\n          {\n            "LineNum": 1, \n            "Amount": 50.0, \n            "SalesItemLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "ItemRef": {\n                "name": "Concrete", \n                "value": "3"\n              }\n            }, \n            "Id": "1", \n            "DetailType": "SalesItemLineDetail"\n          }, \n          {\n            "DetailType": "SubTotalLineDetail", \n            "Amount": 50.0, \n            "SubTotalLineDetail": {}\n          }\n        ], \n        "ApplyTaxAfterDiscount": false, \n        "CustomField": [\n          {\n            "DefinitionId": "1", \n            "Type": "StringType", \n            "Name": "Crew #"\n          }\n        ], \n        "Id": "158", \n        "TxnTaxDetail": {\n          "TotalTax": 0\n        }, \n        "MetaData": {\n          "CreateTime": "2015-01-13T10:32:35-08:00", \n          "LastUpdatedTime": "2015-01-13T10:32:35-08:00"\n        }\n      }\n    ], \n    "maxResults": 2\n  }, \n  "time": "2015-07-23T09:13:36.246-07:00"\n}',
            },
            Taxrate: {
                "Query0-request": '"Select * From TaxRate"',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-27T13:28:08.935-07:00">\r\n  <TaxRate domain="QBO" sparse="false">\r\n    <Id>2</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-18T12:17:04-07:00</CreateTime>\r\n      <LastUpdatedTime>2014-09-18T12:17:04-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Tucson City</Name>\r\n    <Description>Sales Tax</Description>\r\n    <Active>true</Active>\r\n    <RateValue>2</RateValue>\r\n    <AgencyRef>1</AgencyRef>\r\n    <SpecialTaxType>NONE</SpecialTaxType>\r\n    <DisplayType>ReadOnly</DisplayType>\r\n  </TaxRate>\r\n</IntuitResponse>',
                "Read0-response":
                    '{\n  "TaxRate": {\n    "RateValue": 2, \n    "AgencyRef": {\n      "value": "1"\n    }, \n    "domain": "QBO", \n    "Name": "Tucson City", \n    "SyncToken": "0", \n    "SpecialTaxType": "NONE", \n    "DisplayType": "ReadOnly", \n    "sparse": false, \n    "Active": true, \n    "MetaData": {\n      "CreateTime": "2014-09-18T12:17:04-07:00", \n      "LastUpdatedTime": "2014-09-18T12:17:04-07:00"\n    }, \n    "Id": "2", \n    "Description": "Sales Tax"\n  }, \n  "time": "2015-07-27T13:29:41.836-07:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 3, \n    "TaxRate": [\n      {\n        "RateValue": 7.1, \n        "AgencyRef": {\n          "value": "1"\n        }, \n        "domain": "QBO", \n        "Name": "AZ State tax", \n        "SyncToken": "0", \n        "SpecialTaxType": "NONE", \n        "DisplayType": "ReadOnly", \n        "sparse": false, \n        "Active": true, \n        "MetaData": {\n          "CreateTime": "2014-09-18T12:17:04-07:00", \n          "LastUpdatedTime": "2014-09-18T12:17:04-07:00"\n        }, \n        "Id": "1", \n        "Description": "Sales Tax"\n      }, \n      {\n        "RateValue": 8, \n        "AgencyRef": {\n          "value": "2"\n        }, \n        "domain": "QBO", \n        "Name": "California", \n        "SyncToken": "0", \n        "SpecialTaxType": "NONE", \n        "DisplayType": "ReadOnly", \n        "sparse": false, \n        "Active": true, \n        "MetaData": {\n          "CreateTime": "2014-09-18T12:17:04-07:00", \n          "LastUpdatedTime": "2014-09-18T12:17:04-07:00"\n        }, \n        "Id": "3", \n        "Description": "Sales Tax"\n      }, \n      {\n        "RateValue": 2, \n        "AgencyRef": {\n          "value": "1"\n        }, \n        "domain": "QBO", \n        "Name": "Tucson City", \n        "SyncToken": "0", \n        "SpecialTaxType": "NONE", \n        "DisplayType": "ReadOnly", \n        "sparse": false, \n        "Active": true, \n        "MetaData": {\n          "CreateTime": "2014-09-18T12:17:04-07:00", \n          "LastUpdatedTime": "2014-09-18T12:17:04-07:00"\n        }, \n        "Id": "2", \n        "Description": "Sales Tax"\n      }\n    ], \n    "maxResults": 3\n  }, \n  "time": "2015-07-27T13:32:06.76-07:00"\n}',
                "Query0-request-xml": "select * from TaxRate",
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-27T13:10:18.062-07:00">\r\n  <QueryResponse startPosition="1" maxResults="3" totalCount="3">\r\n    <TaxRate domain="QBO" sparse="false">\r\n      <Id>1</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-18T12:17:04-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-18T12:17:04-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>AZ State tax</Name>\r\n      <Description>Sales Tax</Description>\r\n      <Active>true</Active>\r\n      <RateValue>7.1</RateValue>\r\n      <AgencyRef>1</AgencyRef>\r\n      <SpecialTaxType>NONE</SpecialTaxType>\r\n      <DisplayType>ReadOnly</DisplayType>\r\n    </TaxRate>\r\n    <TaxRate domain="QBO" sparse="false">\r\n      <Id>3</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-18T12:17:04-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-18T12:17:04-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>California</Name>\r\n      <Description>Sales Tax</Description>\r\n      <Active>true</Active>\r\n      <RateValue>8</RateValue>\r\n      <AgencyRef>2</AgencyRef>\r\n      <SpecialTaxType>NONE</SpecialTaxType>\r\n      <DisplayType>ReadOnly</DisplayType>\r\n    </TaxRate>\r\n    <TaxRate domain="QBO" sparse="false">\r\n      <Id>2</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-18T12:17:04-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-18T12:17:04-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>Tucson City</Name>\r\n      <Description>Sales Tax</Description>\r\n      <Active>true</Active>\r\n      <RateValue>2</RateValue>\r\n      <AgencyRef>1</AgencyRef>\r\n      <SpecialTaxType>NONE</SpecialTaxType>\r\n      <DisplayType>ReadOnly</DisplayType>\r\n    </TaxRate>\r\n  </QueryResponse>\r\n</IntuitResponse>',
            },
            Entitlements: {
                "Read0-response-xml":
                    '<EntitlementsResponse>\r\n  <QboCompany>true</QboCompany>\r\n  <PlanName>QBWEBPLUSPAYROLLMONTHLY</PlanName>\r\n  <MaxUsers>10</MaxUsers>\r\n  <CurrentUsers>4</CurrentUsers>\r\n  <DaysRemainingTrial>0</DaysRemainingTrial>\r\n  <Entitlement id="7">\r\n    <name>PayPal</name>\r\n    <term>Off</term>\r\n  </Entitlement>\r\n  <Entitlement id="8">\r\n    <name>Merchant Service</name>\r\n    <term>Off</term>\r\n  </Entitlement>\r\n  <Entitlement id="1">\r\n    <name>Class Tracking</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="3">\r\n    <name>Expense Tracking by Customer</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="4">\r\n    <name>Time Tracking</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="5">\r\n    <name>Budgets</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="6">\r\n    <name>Custom Invoice Styles</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="9">\r\n    <name>1099 Forms for Vendors</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="10">\r\n    <name>Managing Bills to Pay Later</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="11">\r\n    <name>Complete Set of Reports</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="12">\r\n    <name>Enhanced Reporting</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="13">\r\n    <name>Exporting to Excel</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="15">\r\n    <name>Delayed Charges</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="16">\r\n    <name>Custom Sales Fields</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="17">\r\n    <name>More Users -- up to 20</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="19">\r\n    <name>Recurring Transactions</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="20">\r\n    <name>Closing the Books</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="21">\r\n    <name>Location Tracking</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="22">\r\n    <name>More Names</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="25">\r\n    <name>Custom Home Page</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="26">\r\n    <name>Do-it-yourself Payroll</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="28">\r\n    <name>Online Banking</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="29">\r\n    <name>Basic Sales</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="30">\r\n    <name>Basic Banking</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="31">\r\n    <name>Accounting</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="33">\r\n    <name>Reports Only User</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="35">\r\n    <name>Estimates</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="41">\r\n    <name>Company Snapshot</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="42">\r\n    <name>Purchase Order</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="43">\r\n    <name>Inventory</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="44">\r\n    <name>Do-it-yourself Payroll (Paycycle)</name>\r\n    <term>Off</term>\r\n  </Entitlement>\r\n  <Entitlement id="45">\r\n    <name>Multi-Currency</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="46">\r\n    <name>Trends</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="47">\r\n    <name>Hide Employee List</name>\r\n    <term>Off</term>\r\n  </Entitlement>\r\n  <Entitlement id="48">\r\n    <name>Simple Report List</name>\r\n    <term>Off</term>\r\n  </Entitlement>\r\n  <Entitlement id="49">\r\n    <name>Global Tax Model</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Entitlement id="52">\r\n    <name>Accountant Menu</name>\r\n    <term>On</term>\r\n  </Entitlement>\r\n  <Thresholds>\r\n    <threshold>\r\n      <name>CLASSES_AND_DEPARTMENTS</name>\r\n      <limit>40</limit>\r\n      <enforced>true</enforced>\r\n      <currentCount>19</currentCount>\r\n      <aboveThreshold>false</aboveThreshold>\r\n    </threshold>\r\n    <threshold>\r\n      <name>ACCOUNTS</name>\r\n      <limit>250</limit>\r\n      <enforced>true</enforced>\r\n      <currentCount>7</currentCount>\r\n      <aboveThreshold>false</aboveThreshold>\r\n    </threshold>\r\n    <threshold>\r\n      <name>USERS</name>\r\n      <limit>5</limit>\r\n      <enforced>true</enforced>\r\n      <currentCount>1</currentCount>\r\n      <aboveThreshold>false</aboveThreshold>\r\n    </threshold>\r\n    <threshold>\r\n      <name>ACCOUTANTS</name>\r\n      <limit>2</limit>\r\n      <enforced>false</enforced>\r\n      <currentCount>-2</currentCount>\r\n      <aboveThreshold>false</aboveThreshold>\r\n    </threshold>\r\n    <threshold>\r\n      <name>CUSTOMFIELD_ALL</name>\r\n      <limit>6</limit>\r\n      <enforced>false</enforced>\r\n      <currentCount>0</currentCount>\r\n      <aboveThreshold>false</aboveThreshold>\r\n    </threshold>\r\n    <threshold>\r\n      <name>CUSTOMFIELD_PO</name>\r\n      <limit>3</limit>\r\n      <enforced>false</enforced>\r\n      <currentCount>0</currentCount>\r\n      <aboveThreshold>false</aboveThreshold>\r\n    </threshold>\r\n    <threshold>\r\n      <name>CUSTOMFIELD_SALES</name>\r\n      <limit>3</limit>\r\n      <enforced>false</enforced>\r\n      <currentCount>0</currentCount>\r\n      <aboveThreshold>false</aboveThreshold>\r\n    </threshold>\r\n   </Thresholds>\r\n  </EntitlementsResponse>\r\n',
                "Read0-response":
                    '"<EntitlementsResponse>\\n  <QboCompany>true</QboCompany>\\n  <PlanName>QBWEBPLUSPAYROLLMONTHLY</PlanName>\\n  <MaxUsers>10</MaxUsers>\\n  <CurrentUsers>4</CurrentUsers>\\n  <DaysRemainingTrial>0</DaysRemainingTrial>\\n  <Entitlement id=\\"7\\">\\n    <name>PayPal</name>\\n    <term>Off</term>\\n  </Entitlement>\\n  <Entitlement id=\\"8\\">\\n    <name>Merchant Service</name>\\n    <term>Off</term>\\n  </Entitlement>\\n  <Entitlement id=\\"1\\">\\n    <name>Class Tracking</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"3\\">\\n    <name>Expense Tracking by Customer</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"4\\">\\n    <name>Time Tracking</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"5\\">\\n    <name>Budgets</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"6\\">\\n    <name>Custom Invoice Styles</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"9\\">\\n    <name>1099 Forms for Vendors</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"10\\">\\n    <name>Managing Bills to Pay Later</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"11\\">\\n    <name>Complete Set of Reports</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"12\\">\\n    <name>Enhanced Reporting</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"13\\">\\n    <name>Exporting to Excel</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"15\\">\\n    <name>Delayed Charges</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"16\\">\\n    <name>Custom Sales Fields</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"17\\">\\n    <name>More Users -- up to 20</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"19\\">\\n    <name>Recurring Transactions</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"20\\">\\n    <name>Closing the Books</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"21\\">\\n    <name>Location Tracking</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"22\\">\\n    <name>More Names</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"25\\">\\n    <name>Custom Home Page</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"26\\">\\n    <name>Do-it-yourself Payroll</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"28\\">\\n    <name>Online Banking</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"29\\">\\n    <name>Basic Sales</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"30\\">\\n    <name>Basic Banking</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"31\\">\\n    <name>Accounting</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"33\\">\\n    <name>Reports Only User</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"35\\">\\n    <name>Estimates</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"41\\">\\n    <name>Company Snapshot</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"42\\">\\n    <name>Purchase Order</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"43\\">\\n    <name>Inventory</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"44\\">\\n    <name>Do-it-yourself Payroll (Paycycle)</name>\\n    <term>Off</term>\\n  </Entitlement>\\n  <Entitlement id=\\"45\\">\\n    <name>Multi-Currency</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"46\\">\\n    <name>Trends</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"47\\">\\n    <name>Hide Employee List</name>\\n    <term>Off</term>\\n  </Entitlement>\\n  <Entitlement id=\\"48\\">\\n    <name>Simple Report List</name>\\n    <term>Off</term>\\n  </Entitlement>\\n  <Entitlement id=\\"49\\">\\n    <name>Global Tax Model</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Entitlement id=\\"52\\">\\n    <name>Accountant Menu</name>\\n    <term>On</term>\\n  </Entitlement>\\n  <Thresholds>\\n    <threshold>\\n      <name>CLASSES_AND_DEPARTMENTS</name>\\n      <limit>40</limit>\\n      <enforced>true</enforced>\\n      <currentCount>19</currentCount>\\n      <aboveThreshold>false</aboveThreshold>\\n    </threshold>\\n    <threshold>\\n      <name>ACCOUNTS</name>\\n      <limit>250</limit>\\n      <enforced>true</enforced>\\n      <currentCount>7</currentCount>\\n      <aboveThreshold>false</aboveThreshold>\\n    </threshold>\\n    <threshold>\\n      <name>USERS</name>\\n      <limit>5</limit>\\n      <enforced>true</enforced>\\n      <currentCount>1</currentCount>\\n      <aboveThreshold>false</aboveThreshold>\\n    </threshold>\\n    <threshold>\\n      <name>ACCOUTANTS</name>\\n      <limit>2</limit>\\n      <enforced>false</enforced>\\n      <currentCount>-2</currentCount>\\n      <aboveThreshold>false</aboveThreshold>\\n    </threshold>\\n    <threshold>\\n      <name>CUSTOMFIELD_ALL</name>\\n      <limit>6</limit>\\n      <enforced>false</enforced>\\n      <currentCount>0</currentCount>\\n      <aboveThreshold>false</aboveThreshold>\\n    </threshold>\\n    <threshold>\\n      <name>CUSTOMFIELD_PO</name>\\n      <limit>3</limit>\\n      <enforced>false</enforced>\\n      <currentCount>0</currentCount>\\n      <aboveThreshold>false</aboveThreshold>\\n    </threshold>\\n    <threshold>\\n      <name>CUSTOMFIELD_SALES</name>\\n      <limit>3</limit>\\n      <enforced>false</enforced>\\n      <currentCount>0</currentCount>\\n      <aboveThreshold>false</aboveThreshold>\\n    </threshold>\\n   </Thresholds>\\n</EntitlementsResponse>\\n"',
            },
            Employee: {
                "Create0-request-xml":
                    '<Employee xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <GivenName>Bill</GivenName>\r\n    <FamilyName>Miller</FamilyName>\r\n    <DisplayName>John Miller</DisplayName>\r\n    <PrintOnCheckName>John Miller</PrintOnCheckName>\r\n    <Active>true</Active>\r\n    <PrimaryPhone>\r\n        <FreeFormNumber>234-525-1234</FreeFormNumber>\r\n    </PrimaryPhone>\r\n    <SSN>888-77-6666</SSN>\r\n    <PrimaryAddr>\r\n        <Id>356</Id>\r\n        <Line1>45 N. Elm Street</Line1>\r\n        <City>Middlefield</City>\r\n        <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n        <PostalCode>93242</PostalCode>\r\n        <Lat>37.4601027</Lat>\r\n        <Long>-122.1523605</Long>\r\n    </PrimaryAddr>\r\n    <BillableTime>true</BillableTime>\r\n    <BillRate>50</BillRate>\r\n    <HiredDate>2013-11-01</HiredDate>\r\n</Employee>\r\n',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T08:57:31.352-07:00">\r\n  <QueryResponse startPosition="1" maxResults="1">\r\n    <Employee domain="QBO" sparse="false">\r\n      <Id>55</Id>\r\n      <SyncToken>2</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-17T11:21:48-07:00</CreateTime>\r\n        <LastUpdatedTime>2015-07-01T11:29:40-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <GivenName>Emily</GivenName>\r\n      <MiddleName>Jane</MiddleName>\r\n      <FamilyName>Platt</FamilyName>\r\n      <DisplayName>Emily Platt</DisplayName>\r\n      <PrintOnCheckName>Emily Platt</PrintOnCheckName>\r\n      <Active>true</Active>\r\n      <BillableTime>false</BillableTime>\r\n    </Employee>\r\n  </QueryResponse>\r\n</IntuitResponse>',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T09:34:35.235-07:00">\r\n  <Employee domain="QBO" sparse="false">\r\n    <Id>71</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-07-24T09:34:35-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-24T09:34:35-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <GivenName>Bill</GivenName>\r\n    <FamilyName>Miller</FamilyName>\r\n    <DisplayName>Bill Miller</DisplayName>\r\n    <PrintOnCheckName>Bill Miller</PrintOnCheckName>\r\n    <Active>true</Active>\r\n    <PrimaryPhone>\r\n      <FreeFormNumber>234-525-1234</FreeFormNumber>\r\n    </PrimaryPhone>\r\n    <SSN>XXX-XX-XXXX</SSN>\r\n    <PrimaryAddr>\r\n      <Id>116</Id>\r\n      <Line1>45 N. Elm Street</Line1>\r\n      <City>Middlefield</City>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>93242</PostalCode>\r\n    </PrimaryAddr>\r\n    <BillableTime>false</BillableTime>\r\n  </Employee>\r\n</IntuitResponse>\r\n\r\n',
                "Query0-request": "\"select * from Employee where DisplayName = 'Emily Platt'\"",
                "Update0-response":
                    '{\n  "Employee": {\n    "SyncToken": "1", \n    "domain": "QBO", \n    "DisplayName": "Bill Miller", \n    "PrimaryPhone": {\n      "FreeFormNumber": "234-525-1234"\n    }, \n    "PrintOnCheckName": "Bill Lee Miller", \n    "FamilyName": "Miller", \n    "Active": true, \n    "SSN": "XXX-XX-XXXX", \n    "PrimaryAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Middlefield", \n      "PostalCode": "93242", \n      "Id": "116", \n      "Line1": "45 N. Elm Street"\n    }, \n    "sparse": false, \n    "BillableTime": false, \n    "GivenName": "Bill", \n    "Id": "71", \n    "MetaData": {\n      "CreateTime": "2015-07-24T09:34:35-07:00", \n      "LastUpdatedTime": "2015-07-24T09:37:39-07:00"\n    }\n  }, \n  "time": "2015-07-24T09:37:39.399-07:00"\n}',
                "Update0-request-xml":
                    '<Employee xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>71</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-07-24T09:34:35-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-24T09:34:35-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <GivenName>Bill</GivenName>\r\n    <FamilyName>Miller</FamilyName>\r\n    <DisplayName>Bill Miller</DisplayName>\r\n    <PrintOnCheckName>Bill Miller</PrintOnCheckName>\r\n    <Active>true</Active>\r\n    <PrimaryPhone>\r\n      <FreeFormNumber>234-525-1234</FreeFormNumber>\r\n    </PrimaryPhone>\r\n    <SSN>XXX-XX-XXXX</SSN>\r\n    <PrimaryAddr>\r\n      <Id>116</Id>\r\n      <Line1>45 N. Main Street</Line1>\r\n      <City>Middlefield</City>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>93242</PostalCode>\r\n    </PrimaryAddr>\r\n    <BillableTime>false</BillableTime>\r\n</Employee>\r\n',
                "Read0-response":
                    '{\n  "Employee": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "DisplayName": "Bill Miller", \n    "PrimaryPhone": {\n      "FreeFormNumber": "234-525-1234"\n    }, \n    "PrintOnCheckName": "Bill Miller", \n    "FamilyName": "Miller", \n    "Active": true, \n    "SSN": "XXX-XX-XXXX", \n    "PrimaryAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Middlefield", \n      "PostalCode": "93242", \n      "Id": "116", \n      "Line1": "45 N. Elm Street"\n    }, \n    "sparse": false, \n    "BillableTime": false, \n    "GivenName": "Bill", \n    "Id": "71", \n    "MetaData": {\n      "CreateTime": "2015-07-24T09:34:35-07:00", \n      "LastUpdatedTime": "2015-07-24T09:34:35-07:00"\n    }\n  }, \n  "time": "2015-07-24T09:35:54.805-07:00"\n}',
                "Create0-response":
                    '{\n  "Employee": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "DisplayName": "John Meuller", \n    "PrimaryPhone": {\n      "FreeFormNumber": "408-525-1234"\n    }, \n    "PrintOnCheckName": "John Meuller", \n    "FamilyName": "Meuller", \n    "Active": true, \n    "SSN": "XXX-XX-XXXX", \n    "PrimaryAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Middlefield", \n      "PostalCode": "93242", \n      "Id": "115", \n      "Line1": "45 N. Elm Street"\n    }, \n    "sparse": false, \n    "BillableTime": false, \n    "GivenName": "John", \n    "Id": "70", \n    "MetaData": {\n      "CreateTime": "2015-07-24T09:24:57-07:00", \n      "LastUpdatedTime": "2015-07-24T09:24:57-07:00"\n    }\n  }, \n  "time": "2015-07-24T09:24:57.907-07:00"\n}',
                "Update0-request":
                    '{\n  "SyncToken": "0", \n  "domain": "QBO", \n  "DisplayName": "Bill Miller", \n  "PrimaryPhone": {\n    "FreeFormNumber": "234-525-1234"\n  }, \n  "PrintOnCheckName": "Bill Lee Miller", \n  "FamilyName": "Miller", \n  "Active": true, \n  "SSN": "XXX-XX-XXXX", \n  "PrimaryAddr": {\n    "CountrySubDivisionCode": "CA", \n    "City": "Middlefield", \n    "PostalCode": "93242", \n    "Id": "116", \n    "Line1": "45 N. Elm Street"\n  }, \n  "sparse": false, \n  "BillableTime": false, \n  "GivenName": "Bill", \n  "Id": "71", \n  "MetaData": {\n    "CreateTime": "2015-07-24T09:34:35-07:00", \n    "LastUpdatedTime": "2015-07-24T09:34:35-07:00"\n  }\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T09:35:27.461-07:00">\r\n  <Employee domain="QBO" sparse="false">\r\n    <Id>71</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-07-24T09:34:35-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-24T09:34:35-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <GivenName>Bill</GivenName>\r\n    <FamilyName>Miller</FamilyName>\r\n    <DisplayName>Bill Miller</DisplayName>\r\n    <PrintOnCheckName>Bill Miller</PrintOnCheckName>\r\n    <Active>true</Active>\r\n    <PrimaryPhone>\r\n      <FreeFormNumber>234-525-1234</FreeFormNumber>\r\n    </PrimaryPhone>\r\n    <SSN>XXX-XX-XXXX</SSN>\r\n    <PrimaryAddr>\r\n      <Id>116</Id>\r\n      <Line1>45 N. Elm Street</Line1>\r\n      <City>Middlefield</City>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>93242</PostalCode>\r\n    </PrimaryAddr>\r\n    <BillableTime>false</BillableTime>\r\n  </Employee>\r\n</IntuitResponse>',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T09:39:38.491-07:00">\r\n  <Employee domain="QBO" sparse="false">\r\n    <Id>71</Id>\r\n    <SyncToken>2</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-07-24T09:34:35-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-24T09:39:38-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <GivenName>Bill</GivenName>\r\n    <FamilyName>Miller</FamilyName>\r\n    <DisplayName>Bill Miller</DisplayName>\r\n    <PrintOnCheckName>Bill Miller</PrintOnCheckName>\r\n    <Active>true</Active>\r\n    <PrimaryPhone>\r\n      <FreeFormNumber>234-525-1234</FreeFormNumber>\r\n    </PrimaryPhone>\r\n    <SSN>XXX-XX-XXXX</SSN>\r\n    <PrimaryAddr>\r\n      <Id>116</Id>\r\n      <Line1>45 N. Main Street</Line1>\r\n      <City>Middlefield</City>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>93242</PostalCode>\r\n    </PrimaryAddr>\r\n    <BillableTime>false</BillableTime>\r\n  </Employee>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "GivenName": "John", \n  "SSN": "444-55-6666", \n  "PrimaryAddr": {\n    "CountrySubDivisionCode": "CA", \n    "City": "Middlefield", \n    "PostalCode": "93242", \n    "Id": "50", \n    "Line1": "45 N. Elm Street"\n  }, \n  "PrimaryPhone": {\n    "FreeFormNumber": "408-525-1234"\n  }, \n  "FamilyName": "Meuller"\n}',
                "Query0-request-xml": "select * from Employee where DisplayName = 'Emily Platt'\r\n",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "Employee": [\n      {\n        "SyncToken": "2", \n        "domain": "QBO", \n        "DisplayName": "Emily Platt", \n        "MiddleName": "Jane", \n        "FamilyName": "Platt", \n        "Active": true, \n        "PrintOnCheckName": "Emily Platt", \n        "sparse": false, \n        "BillableTime": false, \n        "GivenName": "Emily", \n        "Id": "55", \n        "MetaData": {\n          "CreateTime": "2014-09-17T11:21:48-07:00", \n          "LastUpdatedTime": "2015-07-01T11:29:40-07:00"\n        }\n      }\n    ], \n    "startPosition": 1, \n    "maxResults": 1\n  }, \n  "time": "2015-07-24T08:56:55.808-07:00"\n}',
            },
            Transactionlistbyvendor: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/TransactionListByVendor?start_date=2016-06-01&end_date=2016-07-31&group_by=Vendor"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "TransactionListByVendor", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "true"\n      }\n    ], \n    "StartPeriod": "2016-06-01", \n    "Currency": "USD", \n    "EndPeriod": "2016-07-31", \n    "Time": "2020-09-29T14:19:09-07:00"\n  }, \n  "Rows": {}, \n  "Columns": {\n    "Column": [\n      {\n        "ColTitle": "Date", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "tx_date"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Transaction Type", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "txn_type"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Num", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "doc_num"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Posting", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "is_no_post"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Memo/Description", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "memo"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Account", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "account_name"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Amount", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "nat_amount"\n          }\n        ]\n      }\n    ]\n  }\n}',
            },
            Customerincome: {
                "Query0-request": '"BaseURL/v3/company/1386066315/reports/CustomerIncome?customer=1"',
                "Query0-response":
                    '{\n  "Header": {\n    "Customer": "1", \n    "ReportName": "CustomerIncome", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "this calendar year-to-date", \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2016-01-01", \n    "Currency": "USD", \n    "EndPeriod": "2016-03-10", \n    "Time": "2016-03-10T09:28:05-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "id": "1", \n            "value": "Amy\'s Bird Sanctuary"\n          }, \n          {\n            "value": "247.66"\n          }, \n          {\n            "value": "-96.31"\n          }, \n          {\n            "value": "151.35"\n          }\n        ]\n      }, \n      {\n        "group": "GrandTotal", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": "247.66"\n            }, \n            {\n              "value": "-96.31"\n            }, \n            {\n              "value": "151.35"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Customer", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Income"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Expenses"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Net Income"\n      }\n    ]\n  }\n}',
            },
            Department: {
                "Create0-request-xml":
                    '<Department xmlns="http://schema.intuit.com/finance/v3">\r\n   <Name>Sales Department</Name>\r\n</Department>',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-08-13T12:03:21.548-07:00">\r\n    <QueryResponse startPosition="1" maxResults="2">\r\n        <Department domain="QBO" sparse="false">\r\n            <Id>1</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2013-08-13T11:49:31-07:00</CreateTime>\r\n                <LastUpdatedTime>2013-08-13T11:49:31-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>Sales Department</Name>\r\n            <SubDepartment>false</SubDepartment>\r\n            <FullyQualifiedName>Sales Department</FullyQualifiedName>\r\n            <Active>false</Active>\r\n        </Department>\r\n        <Department domain="QBO" sparse="false">\r\n            <Id>2</Id>\r\n            <SyncToken>2</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2013-08-13T11:52:48-07:00</CreateTime>\r\n                <LastUpdatedTime>2013-08-13T11:58:58-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>Support Department</Name>\r\n            <SubDepartment>false</SubDepartment>\r\n            <FullyQualifiedName>Support Department</FullyQualifiedName>\r\n            <Active>false</Active>\r\n        </Department>\r\n    </QueryResponse>\r\n</IntuitResponse>',
                "Create0-response-xml":
                    '<<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-23T12:53:47.547-07:00">\r\n    <Department domain="QBO" sparse="false">\r\n        <Id>2</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-23T12:53:47-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-23T12:53:47-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>Sales Department</Name>\r\n        <SubDepartment>false</SubDepartment>\r\n        <FullyQualifiedName>Sales Department</FullyQualifiedName>\r\n        <Active>true</Active>\r\n    </Department>\r\n    </IntuitResponse>\r\n',
                "Query0-request": '"select * from Department"',
                "Update0-response":
                    '{\n  "Department": {\n    "FullyQualifiedName": "Support Department", \n    "domain": "QBO", \n    "Name": "Support Department", \n    "SyncToken": "2", \n    "SubDepartment": false, \n    "sparse": false, \n    "Active": true, \n    "Id": "2", \n    "MetaData": {\n      "CreateTime": "2013-08-13T11:52:48-07:00", \n      "LastUpdatedTime": "2013-08-13T11:58:58-07:00"\n    }\n  }, \n  "time": "2013-08-13T11:58:58.925-07:00"\n}',
                "Update0-request-xml":
                    '<Department xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n        <Id>2</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2013-08-13T11:52:48-07:00</CreateTime>\r\n            <LastUpdatedTime>2013-08-13T11:52:48-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>Accounting Department</Name>\r\n        <SubDepartment>false</SubDepartment>\r\n        <FullyQualifiedName>Marketing Department</FullyQualifiedName>\r\n        <Active>true</Active>\r\n    </Department>',
                "Read0-response":
                    '{\n  "Department": {\n    "FullyQualifiedName": "Marketing Department", \n    "domain": "QBO", \n    "Name": "Marketing Department", \n    "SyncToken": "0", \n    "SubDepartment": false, \n    "sparse": false, \n    "Active": true, \n    "Id": "2", \n    "MetaData": {\n      "CreateTime": "2013-08-13T11:52:48-07:00", \n      "LastUpdatedTime": "2013-08-13T11:52:48-07:00"\n    }\n  }, \n  "time": "2013-08-13T11:54:48.026-07:00"\n}',
                "Create0-response":
                    '{\n  "Department": {\n    "FullyQualifiedName": "Marketing Department", \n    "domain": "QBO", \n    "Name": "Marketing Department", \n    "SyncToken": "0", \n    "SubDepartment": false, \n    "sparse": false, \n    "Active": true, \n    "Id": "3", \n    "MetaData": {\n      "CreateTime": "2015-07-23T12:54:44-07:00", \n      "LastUpdatedTime": "2015-07-23T12:54:44-07:00"\n    }\n  }, \n  "time": "2015-07-23T12:54:44.248-07:00"\n}',
                "Update0-request":
                    '{\n  "FullyQualifiedName": "Marketing Department", \n  "domain": "QBO", \n  "Name": "Support Department", \n  "SyncToken": "1", \n  "SubDepartment": false, \n  "sparse": false, \n  "Active": true, \n  "Id": "2", \n  "MetaData": {\n    "CreateTime": "2013-08-13T11:52:48-07:00", \n    "LastUpdatedTime": "2013-08-13T11:52:48-07:00"\n  }\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-08-13T11:54:13.371-07:00">\r\n    <Department domain="QBO" sparse="false">\r\n        <Id>2</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2013-08-13T11:52:48-07:00</CreateTime>\r\n            <LastUpdatedTime>2013-08-13T11:52:48-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>Marketing Department</Name>\r\n        <SubDepartment>false</SubDepartment>\r\n        <FullyQualifiedName>Marketing Department</FullyQualifiedName>\r\n        <Active>true</Active>\r\n    </Department>\r\n</IntuitResponse>',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-08-13T11:56:27.351-07:00">\r\n    <Department domain="QBO" sparse="false">\r\n        <Id>2</Id>\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2013-08-13T11:52:48-07:00</CreateTime>\r\n            <LastUpdatedTime>2013-08-13T11:56:27-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>Accounting Department</Name>\r\n        <SubDepartment>false</SubDepartment>\r\n        <FullyQualifiedName>Accounting Department</FullyQualifiedName>\r\n        <Active>true</Active>\r\n    </Department>\r\n</IntuitResponse>',
                "Create0-request": '{\n  "Name": "Marketing Department"\n}',
                "Query0-request-xml": "select * from Department",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "Department": [\n      {\n        "FullyQualifiedName": "Sales Department", \n        "domain": "QBO", \n        "Name": "Sales Department", \n        "SyncToken": "0", \n        "SubDepartment": false, \n        "sparse": false, \n        "Active": false, \n        "Id": "1", \n        "MetaData": {\n          "CreateTime": "2013-08-13T11:49:31-07:00", \n          "LastUpdatedTime": "2013-08-13T11:49:31-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "Support Department", \n        "domain": "QBO", \n        "Name": "Support Department", \n        "SyncToken": "2", \n        "SubDepartment": false, \n        "sparse": false, \n        "Active": false, \n        "Id": "2", \n        "MetaData": {\n          "CreateTime": "2013-08-13T11:52:48-07:00", \n          "LastUpdatedTime": "2013-08-13T11:58:58-07:00"\n        }\n      }\n    ], \n    "startPosition": 1, \n    "maxResults": 2\n  }, \n  "time": "2013-08-13T12:04:05.965-07:00"\n}',
            },
            Customerbalance: {
                "Query0-request": '"BaseURL/v3/company/1386066315/reports/CustomerBalance?customer=1"',
                "Query0-response":
                    '{\n  "Header": {\n    "Customer": "1", \n    "ReportName": "CustomerBalance", \n    "Option": [\n      {\n        "Name": "report_date", \n        "Value": "2016-03-10"\n      }, \n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "all", \n    "Currency": "USD", \n    "Time": "2016-03-10T08:51:44-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "id": "1", \n            "value": "Amy\'s Bird Sanctuary"\n          }, \n          {\n            "value": "1593.50"\n          }\n        ]\n      }, \n      {\n        "group": "GrandTotal", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": "1593.50"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Customer", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total"\n      }\n    ]\n  }\n}',
            },
            Salesbycustomer: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/CustomerSales?customer=1&start_date=2015-08-01&end_date=2015-09-30"',
                "Query0-response":
                    '{\n  "Header": {\n    "Customer": "1", \n    "ReportName": "CustomerSales", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2015-08-01", \n    "Currency": "USD", \n    "EndPeriod": "2015-09-30", \n    "Time": "2016-03-10T14:59:12-08:00", \n    "SummarizeColumnsBy": "Total"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "id": "1", \n            "value": "Amy\'s Bird Sanctuary"\n          }, \n          {\n            "value": "1200.00"\n          }\n        ]\n      }, \n      {\n        "group": "GrandTotal", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": "1200.00"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Customer", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total"\n      }\n    ]\n  }\n}',
            },
            Balancesheet: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/BalanceSheet?date_macro=Last Fiscal Year-to-date"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "BalanceSheet", \n    "Option": [\n      {\n        "Name": "AccountingStandard", \n        "Value": "GAAP"\n      }, \n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "this calendar year-to-date", \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2016-01-01", \n    "Currency": "USD", \n    "EndPeriod": "2016-10-31", \n    "Time": "2016-10-31T09:42:21-07:00", \n    "SummarizeColumnsBy": "Total"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "ASSETS"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "value": "Current Assets"\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "Header": {\n                      "ColData": [\n                        {\n                          "value": "Bank Accounts"\n                        }, \n                        {\n                          "value": ""\n                        }\n                      ]\n                    }, \n                    "Rows": {\n                      "Row": [\n                        {\n                          "ColData": [\n                            {\n                              "id": "35", \n                              "value": "Checking"\n                            }, \n                            {\n                              "value": "1350.55"\n                            }\n                          ], \n                          "type": "Data"\n                        }, \n                        {\n                          "ColData": [\n                            {\n                              "id": "36", \n                              "value": "Savings"\n                            }, \n                            {\n                              "value": "800.00"\n                            }\n                          ], \n                          "type": "Data"\n                        }\n                      ]\n                    }, \n                    "type": "Section", \n                    "group": "BankAccounts", \n                    "Summary": {\n                      "ColData": [\n                        {\n                          "value": "Total Bank Accounts"\n                        }, \n                        {\n                          "value": "2150.55"\n                        }\n                      ]\n                    }\n                  }, \n                  {\n                    "Header": {\n                      "ColData": [\n                        {\n                          "value": "Accounts Receivable"\n                        }, \n                        {\n                          "value": ""\n                        }\n                      ]\n                    }, \n                    "Rows": {\n                      "Row": [\n                        {\n                          "ColData": [\n                            {\n                              "id": "84", \n                              "value": "Accounts Receivable (A/R)"\n                            }, \n                            {\n                              "value": "6383.12"\n                            }\n                          ], \n                          "type": "Data"\n                        }\n                      ]\n                    }, \n                    "type": "Section", \n                    "group": "AR", \n                    "Summary": {\n                      "ColData": [\n                        {\n                          "value": "Total Accounts Receivable"\n                        }, \n                        {\n                          "value": "6383.12"\n                        }\n                      ]\n                    }\n                  }, \n                  {\n                    "Header": {\n                      "ColData": [\n                        {\n                          "value": "Other current assets"\n                        }, \n                        {\n                          "value": ""\n                        }\n                      ]\n                    }, \n                    "Rows": {\n                      "Row": [\n                        {\n                          "ColData": [\n                            {\n                              "id": "81", \n                              "value": "Inventory Asset"\n                            }, \n                            {\n                              "value": "596.25"\n                            }\n                          ], \n                          "type": "Data"\n                        }, \n                        {\n                          "ColData": [\n                            {\n                              "id": "4", \n                              "value": "Undeposited Funds"\n                            }, \n                            {\n                              "value": "2117.52"\n                            }\n                          ], \n                          "type": "Data"\n                        }\n                      ]\n                    }, \n                    "type": "Section", \n                    "group": "OtherCurrentAssets", \n                    "Summary": {\n                      "ColData": [\n                        {\n                          "value": "Total Other current assets"\n                        }, \n                        {\n                          "value": "2713.77"\n                        }\n                      ]\n                    }\n                  }\n                ]\n              }, \n              "type": "Section", \n              "group": "CurrentAssets", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total Current Assets"\n                  }, \n                  {\n                    "value": "11247.44"\n                  }\n                ]\n              }\n            }, \n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "value": "Fixed Assets"\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "Header": {\n                      "ColData": [\n                        {\n                          "id": "37", \n                          "value": "Truck"\n                        }, \n                        {\n                          "value": ""\n                        }\n                      ]\n                    }, \n                    "Rows": {\n                      "Row": [\n                        {\n                          "ColData": [\n                            {\n                              "id": "38", \n                              "value": "Original Cost"\n                            }, \n                            {\n                              "value": "13495.00"\n                            }\n                          ], \n                          "type": "Data"\n                        }\n                      ]\n                    }, \n                    "type": "Section", \n                    "Summary": {\n                      "ColData": [\n                        {\n                          "value": "Total Truck"\n                        }, \n                        {\n                          "value": "13495.00"\n                        }\n                      ]\n                    }\n                  }\n                ]\n              }, \n              "type": "Section", \n              "group": "FixedAssets", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total Fixed Assets"\n                  }, \n                  {\n                    "value": "13495.00"\n                  }\n                ]\n              }\n            }\n          ]\n        }, \n        "type": "Section", \n        "group": "TotalAssets", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL ASSETS"\n            }, \n            {\n              "value": "24742.44"\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "LIABILITIES AND EQUITY"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "value": "Liabilities"\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "Header": {\n                      "ColData": [\n                        {\n                          "value": "Current Liabilities"\n                        }, \n                        {\n                          "value": ""\n                        }\n                      ]\n                    }, \n                    "Rows": {\n                      "Row": [\n                        {\n                          "Header": {\n                            "ColData": [\n                              {\n                                "value": "Accounts Payable"\n                              }, \n                              {\n                                "value": ""\n                              }\n                            ]\n                          }, \n                          "Rows": {\n                            "Row": [\n                              {\n                                "ColData": [\n                                  {\n                                    "id": "33", \n                                    "value": "Accounts Payable (A/P)"\n                                  }, \n                                  {\n                                    "value": "1984.17"\n                                  }\n                                ], \n                                "type": "Data"\n                              }\n                            ]\n                          }, \n                          "type": "Section", \n                          "group": "AP", \n                          "Summary": {\n                            "ColData": [\n                              {\n                                "value": "Total Accounts Payable"\n                              }, \n                              {\n                                "value": "1984.17"\n                              }\n                            ]\n                          }\n                        }, \n                        {\n                          "Header": {\n                            "ColData": [\n                              {\n                                "value": "Credit Cards"\n                              }, \n                              {\n                                "value": ""\n                              }\n                            ]\n                          }, \n                          "Rows": {\n                            "Row": [\n                              {\n                                "ColData": [\n                                  {\n                                    "id": "41", \n                                    "value": "Mastercard"\n                                  }, \n                                  {\n                                    "value": "157.72"\n                                  }\n                                ], \n                                "type": "Data"\n                              }\n                            ]\n                          }, \n                          "type": "Section", \n                          "group": "CreditCards", \n                          "Summary": {\n                            "ColData": [\n                              {\n                                "value": "Total Credit Cards"\n                              }, \n                              {\n                                "value": "157.72"\n                              }\n                            ]\n                          }\n                        }, \n                        {\n                          "Header": {\n                            "ColData": [\n                              {\n                                "value": "Other Current Liabilities"\n                              }, \n                              {\n                                "value": ""\n                              }\n                            ]\n                          }, \n                          "Rows": {\n                            "Row": [\n                              {\n                                "ColData": [\n                                  {\n                                    "id": "89", \n                                    "value": "Arizona Dept. of Revenue Payable"\n                                  }, \n                                  {\n                                    "value": "4.55"\n                                  }\n                                ], \n                                "type": "Data"\n                              }, \n                              {\n                                "ColData": [\n                                  {\n                                    "id": "90", \n                                    "value": "Board of Equalization Payable"\n                                  }, \n                                  {\n                                    "value": "401.98"\n                                  }\n                                ], \n                                "type": "Data"\n                              }, \n                              {\n                                "ColData": [\n                                  {\n                                    "id": "43", \n                                    "value": "Loan Payable"\n                                  }, \n                                  {\n                                    "value": "4000.00"\n                                  }\n                                ], \n                                "type": "Data"\n                              }\n                            ]\n                          }, \n                          "type": "Section", \n                          "group": "OtherCurrentLiabilities", \n                          "Summary": {\n                            "ColData": [\n                              {\n                                "value": "Total Other Current Liabilities"\n                              }, \n                              {\n                                "value": "4406.53"\n                              }\n                            ]\n                          }\n                        }\n                      ]\n                    }, \n                    "type": "Section", \n                    "group": "CurrentLiabilities", \n                    "Summary": {\n                      "ColData": [\n                        {\n                          "value": "Total Current Liabilities"\n                        }, \n                        {\n                          "value": "6548.42"\n                        }\n                      ]\n                    }\n                  }, \n                  {\n                    "Header": {\n                      "ColData": [\n                        {\n                          "value": "Long-Term Liabilities"\n                        }, \n                        {\n                          "value": ""\n                        }\n                      ]\n                    }, \n                    "Rows": {\n                      "Row": [\n                        {\n                          "ColData": [\n                            {\n                              "id": "44", \n                              "value": "Notes Payable"\n                            }, \n                            {\n                              "value": "25000.00"\n                            }\n                          ], \n                          "type": "Data"\n                        }\n                      ]\n                    }, \n                    "type": "Section", \n                    "group": "LongTermLiabilities", \n                    "Summary": {\n                      "ColData": [\n                        {\n                          "value": "Total Long-Term Liabilities"\n                        }, \n                        {\n                          "value": "25000.00"\n                        }\n                      ]\n                    }\n                  }\n                ]\n              }, \n              "type": "Section", \n              "group": "Liabilities", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total Liabilities"\n                  }, \n                  {\n                    "value": "31548.42"\n                  }\n                ]\n              }\n            }, \n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "value": "Equity"\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "ColData": [\n                      {\n                        "id": "34", \n                        "value": "Opening Balance Equity"\n                      }, \n                      {\n                        "value": "-9337.50"\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "2", \n                        "value": "Retained Earnings"\n                      }, \n                      {\n                        "value": "91.25"\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "value": "Net Income"\n                      }, \n                      {\n                        "value": "2440.27"\n                      }\n                    ], \n                    "type": "Data", \n                    "group": "NetIncome"\n                  }\n                ]\n              }, \n              "type": "Section", \n              "group": "Equity", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total Equity"\n                  }, \n                  {\n                    "value": "-6805.98"\n                  }\n                ]\n              }\n            }\n          ]\n        }, \n        "type": "Section", \n        "group": "TotalLiabilitiesAndEquity", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL LIABILITIES AND EQUITY"\n            }, \n            {\n              "value": "24742.44"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Account", \n        "ColTitle": "", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "account"\n          }\n        ]\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "total"\n          }\n        ]\n      }\n    ]\n  }\n}',
            },
            Reimbursecharge: {
                "Query0-request": '"Select * from ReimburseCharge Where HasBeenInvoiced = false"',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-11-13T08:14:09.550-07:00">\r\n    <ReimburseCarge domain="QBO" sparse="false">\r\n        <CustomerRef>\r\n            <value>1</value>\r\n            <name>Cust1</name>\r\n        </CustomerRef>\r\n        <HasBeenInvoiced>true</HasBeenInvoiced>\r\n        <Amount>100</Amount>\r\n        <domain>QBO</domain>\r\n        <sparse>false</sparse>\r\n        <Id>491</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2020-06-23T23:26:13-07:00</CreateTime>\r\n            <LastUpdatedTime>2020-06-23T23:28:54-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2020-06-23</TxnDate>\r\n        <CurrencyRef>\r\n            <value>USD</value>\r\n            <name>United States Dollar</name>\r\n        </CurrencyRef>\r\n        <LinkedTxn>\r\n            <TxnId>495</TxnId>\r\n            <TxnType>Invoice</TxnType>\r\n        </LinkedTxn>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Amount>10</Amount>\r\n            <LinkedTxn>\r\n                <TxnId>495</TxnId>\r\n                <TxnType>Invoice</TxnType>\r\n            </LinkedTxn>\r\n            <DetailType>ReimburseLineDetail</DetailType>\r\n            <ReimburseLineDetail>\r\n                <ItemRef>\r\n                    <value>3</value>\r\n                    <name>Sales</name>\r\n                </ItemRef>\r\n                <UnitPrice>10</UnitPrice>\r\n                <MarkupInfo>\r\n                    <Percent>900</Percent>\r\n                </MarkupInfo>\r\n                <Qty>1</Qty>\r\n                <ItemAccountRef>\r\n                    <value>37</value>\r\n                    <name>Billable Expense Income</name>\r\n                </ItemAccountRef>\r\n                <TaxCodeRef>\r\n                    <value>NON</value>\r\n                </TaxCodeRef>\r\n            </ReimburseLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Id>2</Id>\r\n            <LineNum>2</LineNum>\r\n            <Description>900% markup</Description>\r\n            <Amount>90</Amount>\r\n            <LinkedTxn>\r\n                <TxnId>495</TxnId>\r\n                <TxnType>Invoice</TxnType>\r\n            </LinkedTxn>\r\n            <DetailType>ReimburseLineDetail</DetailType>\r\n            <ReimburseLineDetail>\r\n                <MarkupInfo>\r\n                    <Percent>900</Percent>\r\n                </MarkupInfo>\r\n                <ItemAccountRef>\r\n                    <value>49</value>\r\n                    <name>Markup</name>\r\n                </ItemAccountRef>\r\n                <TaxCodeRef>\r\n                    <value>NON</value>\r\n                </TaxCodeRef>\r\n            </ReimburseLineDetail>\r\n        </Line>\r\n    </ReimburseCarge>\r\n</IntuitResponse>\r\n',
                "Read0-response":
                    '{\n  "ReimburseCharge": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "HasBeenInvoiced": true, \n    "TxnDate": "2020-06-23", \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "LinkedTxn": [\n      {\n        "TxnId": "495", \n        "TxnType": "Invoice"\n      }\n    ], \n    "Amount": 100.0, \n    "sparse": false, \n    "Line": [\n      {\n        "LinkedTxn": [\n          {\n            "TxnId": "495", \n            "TxnType": "Invoice"\n          }\n        ], \n        "DetailType": "ReimburseLineDetail", \n        "ReimburseLineDetail": {\n          "ItemRef": {\n            "name": "Sales", \n            "value": "3"\n          }, \n          "Qty": 1, \n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "MarkupInfo": {\n            "Percent": 900\n          }, \n          "ItemAccountRef": {\n            "name": "Billable Expense Income", \n            "value": "37"\n          }, \n          "UnitPrice": 10\n        }, \n        "LineNum": 1, \n        "Amount": 10.0, \n        "Id": "1"\n      }, \n      {\n        "LinkedTxn": [\n          {\n            "TxnId": "495", \n            "TxnType": "Invoice"\n          }\n        ], \n        "Description": "900% markup", \n        "DetailType": "ReimburseLineDetail", \n        "ReimburseLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "MarkupInfo": {\n            "Percent": 900\n          }, \n          "ItemAccountRef": {\n            "name": "Markup", \n            "value": "49"\n          }\n        }, \n        "LineNum": 2, \n        "Amount": 90.0, \n        "Id": "2"\n      }\n    ], \n    "CustomerRef": {\n      "name": "Cust1", \n      "value": "1"\n    }, \n    "Id": "491", \n    "MetaData": {\n      "CreateTime": "2020-06-23T23:26:13-07:00", \n      "LastUpdatedTime": "2020-06-23T23:28:54-07:00"\n    }\n  }, \n  "time": "2020-11-07T13:29:41.836-07:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "ReimburseCarge": [\n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "HasBeenInvoiced": true, \n        "TxnDate": "2020-06-23", \n        "CurrencyRef": {\n          "name": "United States Dollar", \n          "value": "USD"\n        }, \n        "LinkedTxn": [\n          {\n            "TxnId": "495", \n            "TxnType": "Invoice"\n          }\n        ], \n        "Amount": 100.0, \n        "sparse": false, \n        "Line": [\n          {\n            "LinkedTxn": [\n              {\n                "TxnId": "495", \n                "TxnType": "Invoice"\n              }\n            ], \n            "DetailType": "ReimburseLineDetail", \n            "ReimburseLineDetail": {\n              "ItemRef": {\n                "name": "Sales", \n                "value": "3"\n              }, \n              "Qty": 1, \n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "MarkupInfo": {\n                "Percent": 900\n              }, \n              "ItemAccountRef": {\n                "name": "Billable Expense Income", \n                "value": "37"\n              }, \n              "UnitPrice": 10\n            }, \n            "LineNum": 1, \n            "Amount": 10.0, \n            "Id": "1"\n          }, \n          {\n            "LinkedTxn": [\n              {\n                "TxnId": "495", \n                "TxnType": "Invoice"\n              }\n            ], \n            "Description": "900% markup", \n            "DetailType": "ReimburseLineDetail", \n            "ReimburseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "MarkupInfo": {\n                "Percent": 900\n              }, \n              "ItemAccountRef": {\n                "name": "Markup", \n                "value": "49"\n              }\n            }, \n            "LineNum": 2, \n            "Amount": 90.0, \n            "Id": "2"\n          }\n        ], \n        "CustomerRef": {\n          "name": "Cust1", \n          "value": "1"\n        }, \n        "Id": "491", \n        "MetaData": {\n          "CreateTime": "2020-06-23T23:26:13-07:00", \n          "LastUpdatedTime": "2020-06-23T23:28:54-07:00"\n        }\n      }\n    ], \n    "startPosition": 1, \n    "maxResults": 1, \n    "totalCount": 1\n  }, \n  "time": "2020-11-07T13:32:06.76-07:00"\n}',
                "Query0-request-xml": "Select * from ReimburseCharge Where HasBeenInvoiced = false",
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-11-13T08:14:09.550-07:00">\r\n    <QueryResponse startPosition="1" maxResults="1" totalCount="1">\r\n        <ReimburseCarge domain="QBO" sparse="false">\r\n            <CustomerRef>\r\n                <value>1</value>\r\n                <name>Cust1</name>\r\n            </CustomerRef>\r\n            <HasBeenInvoiced>true</HasBeenInvoiced>\r\n            <Amount>100</Amount>\r\n            <domain>QBO</domain>\r\n            <sparse>false</sparse>\r\n            <Id>491</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2020-06-23T23:26:13-07:00</CreateTime>\r\n                <LastUpdatedTime>2020-06-23T23:28:54-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2020-06-23</TxnDate>\r\n            <CurrencyRef>\r\n                <value>USD</value>\r\n                <name>United States Dollar</name>\r\n            </CurrencyRef>\r\n            <LinkedTxn>\r\n                <TxnId>495</TxnId>\r\n                <TxnType>Invoice</TxnType>\r\n            </LinkedTxn>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <LineNum>1</LineNum>\r\n                <Amount>10</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>495</TxnId>\r\n                    <TxnType>Invoice</TxnType>\r\n                </LinkedTxn>\r\n                <DetailType>ReimburseLineDetail</DetailType>\r\n                <ReimburseLineDetail>\r\n                    <ItemRef>\r\n                        <value>3</value>\r\n                        <name>Sales</name>\r\n                    </ItemRef>\r\n                    <UnitPrice>10</UnitPrice>\r\n                    <MarkupInfo>\r\n                        <Percent>900</Percent>\r\n                    </MarkupInfo>\r\n                    <Qty>1</Qty>\r\n                    <ItemAccountRef>\r\n                        <value>37</value>\r\n                        <name>Billable Expense Income</name>\r\n                    </ItemAccountRef>\r\n                    <TaxCodeRef>\r\n                        <value>NON</value>\r\n                    </TaxCodeRef>\r\n                </ReimburseLineDetail>\r\n            </Line>\r\n            <Line>\r\n                <Id>2</Id>\r\n                <LineNum>2</LineNum>\r\n                <Description>900% markup</Description>\r\n                <Amount>90</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>495</TxnId>\r\n                    <TxnType>Invoice</TxnType>\r\n                </LinkedTxn>\r\n                <DetailType>ReimburseLineDetail</DetailType>\r\n                <ReimburseLineDetail>\r\n                    <MarkupInfo>\r\n                        <Percent>900</Percent>\r\n                    </MarkupInfo>\r\n                    <ItemAccountRef>\r\n                        <value>49</value>\r\n                        <name>Markup</name>\r\n                    </ItemAccountRef>\r\n                    <TaxCodeRef>\r\n                        <value>NON</value>\r\n                    </TaxCodeRef>\r\n                </ReimburseLineDetail>\r\n            </Line>\r\n        </ReimburseCarge>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
            },
            Vendor: {
                "Create0-request-xml":
                    '<Vendor xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n  <Title>Mr.</Title>\r\n  <GivenName>John</GivenName>\r\n  <MiddleName>S.</MiddleName>\r\n  <FamilyName>Bradley</FamilyName>\r\n  <Suffix>Jr.</Suffix>\r\n  <CompanyName>John\'s Cakes</CompanyName>\r\n  <DisplayName>John\'s Cakes and Pies</DisplayName>\r\n  <PrintOnCheckName>John\'s Cakes</PrintOnCheckName>\r\n  <PrimaryPhone>\r\n    <FreeFormNumber>(650) 555-2000</FreeFormNumber>\r\n  </PrimaryPhone>\r\n  <Mobile>\r\n    <FreeFormNumber>(650) 555-2001</FreeFormNumber>\r\n  </Mobile>\r\n  <PrimaryEmailAddr>\r\n    <Address>john.bradley@intuit.com</Address>\r\n  </PrimaryEmailAddr>\r\n</Vendor>',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T13:28:28.395-07:00">\r\n    <QueryResponse startPosition="1" maxResults="10">\r\n        <Vendor domain="QBO" sparse="false">\r\n            <Id>56</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-10-03T14:28:52-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-14T12:37:57-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DisplayName>Bob\'s Burger Joint</DisplayName>\r\n            <PrintOnCheckName>Bob\'s Burger Joint</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <Balance>390.00</Balance>\r\n            <Vendor1099>false</Vendor1099>\r\n        </Vendor>\r\n        <Vendor domain="QBO" sparse="false">\r\n            <Id>32</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-12T10:13:24-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-19T12:55:23-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <CompanyName>Cal Telephone</CompanyName>\r\n            <DisplayName>Cal Telephone</DisplayName>\r\n            <PrintOnCheckName>Cal Telephone</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <PrimaryPhone>\r\n                <FreeFormNumber>(650) 555-1616</FreeFormNumber>\r\n            </PrimaryPhone>\r\n            <BillAddr>\r\n                <Id>33</Id>\r\n                <Line1>10 Main St.</Line1>\r\n                <City>Palo Alto</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94303</PostalCode>\r\n                <Lat>37.445013</Lat>\r\n                <Long>-122.1391443</Long>\r\n            </BillAddr>\r\n            <TermRef>1</TermRef>\r\n            <Balance>0</Balance>\r\n            <Vendor1099>false</Vendor1099>\r\n        </Vendor>\r\n        <Vendor domain="QBO" sparse="false">\r\n            <Id>40</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-12T10:24:28-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-18T13:43:08-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <GivenName>Melanie</GivenName>\r\n            <FamilyName>Hall</FamilyName>\r\n            <CompanyName>Hall Properties</CompanyName>\r\n            <DisplayName>Hall Properties</DisplayName>\r\n            <PrintOnCheckName>Hall Properties</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <PrimaryPhone>\r\n                <FreeFormNumber>(973) 555-3827</FreeFormNumber>\r\n            </PrimaryPhone>\r\n            <Mobile>\r\n                <FreeFormNumber>(973) 888-6222</FreeFormNumber>\r\n            </Mobile>\r\n            <WebAddr>\r\n                <URI>http://www.hallproperties.intuit.org</URI>\r\n            </WebAddr>\r\n            <BillAddr>\r\n                <Id>36</Id>\r\n                <Line1>P.O.Box 357</Line1>\r\n                <City>South Orange</City>\r\n                <CountrySubDivisionCode>NJ</CountrySubDivisionCode>\r\n                <PostalCode>07079</PostalCode>\r\n                <Lat>40.7489277</Lat>\r\n                <Long>-74.2609903</Long>\r\n            </BillAddr>\r\n            <TaxIdentifier>22-2222222</TaxIdentifier>\r\n            <Balance>0</Balance>\r\n            <AcctNum>55642</AcctNum>\r\n            <Vendor1099>false</Vendor1099>\r\n        </Vendor>\r\n        <Vendor domain="QBO" sparse="false">\r\n            <Id>41</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-12T10:26:56-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-18T13:01:57-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <GivenName>Geoff</GivenName>\r\n            <FamilyName>Hicks</FamilyName>\r\n            <CompanyName>Hicks Hardware</CompanyName>\r\n            <DisplayName>Hicks Hardware</DisplayName>\r\n            <PrintOnCheckName>Hicks Hardware</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <PrimaryPhone>\r\n                <FreeFormNumber>(650) 554-1973</FreeFormNumber>\r\n            </PrimaryPhone>\r\n            <Mobile>\r\n                <FreeFormNumber>(650) 445-6666</FreeFormNumber>\r\n            </Mobile>\r\n            <WebAddr>\r\n                <URI>http://Hickshardware.co</URI>\r\n            </WebAddr>\r\n            <BillAddr>\r\n                <Id>37</Id>\r\n                <Line1>42 Main St.</Line1>\r\n                <City>Middlefield</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94303</PostalCode>\r\n                <Lat>37.445013</Lat>\r\n                <Long>-122.1391443</Long>\r\n            </BillAddr>\r\n            <Balance>0</Balance>\r\n            <AcctNum>556223</AcctNum>\r\n            <Vendor1099>false</Vendor1099>\r\n        </Vendor>\r\n        <Vendor domain="QBO" sparse="false">\r\n            <Id>46</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-12T10:32:55-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-01-16T16:00:29-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <GivenName>Julie</GivenName>\r\n            <FamilyName>Norton</FamilyName>\r\n            <CompanyName>Norton Lumber and Building Materials</CompanyName>\r\n            <DisplayName>Norton Lumber and Building Materials</DisplayName>\r\n            <PrintOnCheckName>Norton Lumber and Building Materials</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <PrimaryPhone>\r\n                <FreeFormNumber>(650) 363-6578</FreeFormNumber>\r\n            </PrimaryPhone>\r\n            <PrimaryEmailAddr>\r\n                <Address>Materials@intuit.com</Address>\r\n            </PrimaryEmailAddr>\r\n            <BillAddr>\r\n                <Id>40</Id>\r\n                <Line1>4528 Country Road</Line1>\r\n                <City>Middlefield</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94303</PostalCode>\r\n                <Lat>37.3752919</Lat>\r\n                <Long>-122.1692159</Long>\r\n            </BillAddr>\r\n            <Balance>0</Balance>\r\n            <AcctNum>32980256</AcctNum>\r\n            <Vendor1099>false</Vendor1099>\r\n        </Vendor>\r\n        <Vendor domain="QBO" sparse="false">\r\n            <Id>48</Id>\r\n            <SyncToken>1</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-12T10:36:57-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-01-16T15:36:20-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <CompanyName>PG&amp;E</CompanyName>\r\n            <DisplayName>PG&amp;E</DisplayName>\r\n            <PrintOnCheckName>PG&amp;E</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <PrimaryPhone>\r\n                <FreeFormNumber>(888) 555-9465</FreeFormNumber>\r\n            </PrimaryPhone>\r\n            <PrimaryEmailAddr>\r\n                <Address>utilities@noemail.com</Address>\r\n            </PrimaryEmailAddr>\r\n            <BillAddr>\r\n                <Id>42</Id>\r\n                <Line1>4 Main St.</Line1>\r\n                <City>Palo Alto</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94303</PostalCode>\r\n                <Lat>37.445013</Lat>\r\n                <Long>-122.1391443</Long>\r\n            </BillAddr>\r\n            <Balance>0</Balance>\r\n            <AcctNum>00649587213</AcctNum>\r\n            <Vendor1099>false</Vendor1099>\r\n        </Vendor>\r\n        <Vendor domain="QBO" sparse="false">\r\n            <Id>63</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-04-13T13:42:23-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-04-13T13:42:23-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DisplayName>QuickBooks Payments</DisplayName>\r\n            <PrintOnCheckName>QuickBooks Payments</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <Balance>0</Balance>\r\n            <Vendor1099>false</Vendor1099>\r\n        </Vendor>\r\n        <Vendor domain="QBO" sparse="false">\r\n            <Id>49</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-12T10:38:12-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-06-30T15:09:07-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <GivenName>Jenny</GivenName>\r\n            <FamilyName>Robertson</FamilyName>\r\n            <CompanyName>Robertson &amp; Associates</CompanyName>\r\n            <DisplayName>Robertson &amp; Associates</DisplayName>\r\n            <PrintOnCheckName>Robertson &amp; Associates</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <PrimaryPhone>\r\n                <FreeFormNumber>(650) 557-1111</FreeFormNumber>\r\n            </PrimaryPhone>\r\n            <BillAddr>\r\n                <Id>43</Id>\r\n                <Line1>P.O. Box 147</Line1>\r\n                <City>Bayshore</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94326</PostalCode>\r\n                <Lat>45.2720537</Lat>\r\n                <Long>-79.7935909</Long>\r\n            </BillAddr>\r\n            <Balance>95.00</Balance>\r\n            <AcctNum>000005641</AcctNum>\r\n            <Vendor1099>false</Vendor1099>\r\n        </Vendor>\r\n        <Vendor domain="QBO" sparse="false">\r\n            <Id>57</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-10-03T14:29:35-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-10-03T14:29:35-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DisplayName>Squeaky Kleen Car Wash</DisplayName>\r\n            <PrintOnCheckName>Squeaky Kleen Car Wash</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <Balance>0</Balance>\r\n            <Vendor1099>false</Vendor1099>\r\n        </Vendor>\r\n        <Vendor domain="QBO" sparse="false">\r\n            <Id>51</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-12T10:42:31-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-18T13:06:58-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <GivenName>Tim</GivenName>\r\n            <FamilyName>Philip</FamilyName>\r\n            <CompanyName>Tim Philip Masonry</CompanyName>\r\n            <DisplayName>Tim Philip Masonry</DisplayName>\r\n            <PrintOnCheckName>Tim Philip Masonry</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <PrimaryPhone>\r\n                <FreeFormNumber>(800) 556-1254</FreeFormNumber>\r\n            </PrimaryPhone>\r\n            <Mobile>\r\n                <FreeFormNumber>(650) 555-1549</FreeFormNumber>\r\n            </Mobile>\r\n            <PrimaryEmailAddr>\r\n                <Address>tim.philip@timphilipmasonry.com</Address>\r\n            </PrimaryEmailAddr>\r\n            <WebAddr>\r\n                <URI>http://www.bricksbytim4less.co</URI>\r\n            </WebAddr>\r\n            <BillAddr>\r\n                <Id>45</Id>\r\n                <Line1>3948 Elm St.</Line1>\r\n                <City>Middlefield</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94482</PostalCode>\r\n                <Lat>37.4604972</Lat>\r\n                <Long>-122.1547528</Long>\r\n            </BillAddr>\r\n            <TaxIdentifier>55-5555555</TaxIdentifier>\r\n            <Balance>0</Balance>\r\n            <AcctNum>0078965</AcctNum>\r\n            <Vendor1099>false</Vendor1099>\r\n        </Vendor>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T13:22:59.616-07:00">\r\n    <Vendor domain="QBO" sparse="false">\r\n        <Id>139</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-28T13:22:58-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-28T13:22:58-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Title>Mr.</Title>\r\n        <GivenName>John</GivenName>\r\n        <MiddleName>S.</MiddleName>\r\n        <FamilyName>Bradley</FamilyName>\r\n        <Suffix>Jr.</Suffix>\r\n        <CompanyName>John\'s Cakes</CompanyName>\r\n        <DisplayName>John\'s Cakes and Pies</DisplayName>\r\n        <PrintOnCheckName>John\'s Cakes</PrintOnCheckName>\r\n        <Active>true</Active>\r\n        <PrimaryPhone>\r\n            <FreeFormNumber>(650) 555-2000</FreeFormNumber>\r\n        </PrimaryPhone>\r\n        <Mobile>\r\n            <FreeFormNumber>(650) 555-2001</FreeFormNumber>\r\n        </Mobile>\r\n        <PrimaryEmailAddr>\r\n            <Address>john.bradley@intuit.com</Address>\r\n        </PrimaryEmailAddr>\r\n        <Balance>0</Balance>\r\n        <Vendor1099>false</Vendor1099>\r\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n    </Vendor>\r\n</IntuitResponse>\r\n',
                "Query0-request":
                    "\"select * from vendor where MetaData.LastUpdatedTime > '2014-09-17T15:28:48-07:00'\"",
                "Update0-response":
                    '{\n  "Vendor": {\n    "PrimaryEmailAddr": {\n      "Address": "Books@Intuit.com"\n    }, \n    "Vendor1099": false, \n    "domain": "QBO", \n    "GivenName": "Bessie", \n    "DisplayName": "Books by Bessie", \n    "BillAddr": {\n      "City": "Palo Alto", \n      "Line1": "15 Main St.", \n      "PostalCode": "94303", \n      "Lat": "37.445013", \n      "Long": "-122.1391443", \n      "CountrySubDivisionCode": "CA", \n      "Id": "31"\n    }, \n    "SyncToken": "2", \n    "PrintOnCheckName": "Books by Bessie and Joan", \n    "FamilyName": "Williams", \n    "PrimaryPhone": {\n      "FreeFormNumber": "(650) 555-7745"\n    }, \n    "AcctNum": "13451234", \n    "CompanyName": "Books by Bessie", \n    "WebAddr": {\n      "URI": "http://www.booksbybessie.co"\n    }, \n    "sparse": false, \n    "Active": true, \n    "Balance": 0, \n    "Id": "30", \n    "MetaData": {\n      "CreateTime": "2014-09-12T10:07:56-07:00", \n      "LastUpdatedTime": "2015-07-28T13:37:05-07:00"\n    }\n  }, \n  "time": "2015-07-28T13:37:07.196-07:00"\n}',
                "Update0-request-xml":
                    '<Vendor xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n     <Id>30</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-12T10:07:56-07:00</CreateTime>\r\n            <LastUpdatedTime>2014-09-17T11:13:46-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <GivenName>Bessie</GivenName>\r\n        <FamilyName>Williams</FamilyName>\r\n        <CompanyName>Books by Bessie</CompanyName>\r\n        <DisplayName>Books by Bessie</DisplayName>\r\n        <PrintOnCheckName>Books by Bessie</PrintOnCheckName>\r\n        <Active>true</Active>\r\n        <PrimaryPhone>\r\n            <FreeFormNumber>(650) 555-7745</FreeFormNumber>\r\n        </PrimaryPhone>\r\n        <PrimaryEmailAddr>\r\n            <Address>Books@Intuit.com</Address>\r\n        </PrimaryEmailAddr>\r\n        <WebAddr>\r\n            <URI>http://www.booksbybessie.co</URI>\r\n        </WebAddr>\r\n        <BillAddr>\r\n            <Id>31</Id>\r\n            <Line1>15 Main St.</Line1>\r\n            <City>Palo Alto</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94303</PostalCode>\r\n            <Lat>37.445013</Lat>\r\n            <Long>-122.1391443</Long>\r\n        </BillAddr>\r\n        <Balance>0</Balance>\r\n        <AcctNum>13451234</AcctNum>\r\n        <Vendor1099>false</Vendor1099>\r\n</Vendor>',
                "Read0-response":
                    '{\n  "Vendor": {\n    "PrimaryEmailAddr": {\n      "Address": "Books@Intuit.com"\n    }, \n    "Vendor1099": false, \n    "domain": "QBO", \n    "GivenName": "Bessie", \n    "DisplayName": "Books by Bessie", \n    "BillAddr": {\n      "City": "Palo Alto", \n      "Line1": "15 Main St.", \n      "PostalCode": "94303", \n      "Lat": "37.445013", \n      "Long": "-122.1391443", \n      "CountrySubDivisionCode": "CA", \n      "Id": "31"\n    }, \n    "SyncToken": "0", \n    "PrintOnCheckName": "Books by Bessie", \n    "FamilyName": "Williams", \n    "PrimaryPhone": {\n      "FreeFormNumber": "(650) 555-7745"\n    }, \n    "AcctNum": "1345", \n    "CompanyName": "Books by Bessie", \n    "WebAddr": {\n      "URI": "http://www.booksbybessie.co"\n    }, \n    "sparse": false, \n    "Active": true, \n    "Balance": 0, \n    "Id": "30", \n    "MetaData": {\n      "CreateTime": "2014-09-12T10:07:56-07:00", \n      "LastUpdatedTime": "2014-09-17T11:13:46-07:00"\n    }\n  }, \n  "time": "2015-07-28T13:33:09.453-07:00"\n}',
                "Create0-response":
                    '{\n  "Vendor": {\n    "domain": "QBO", \n    "PrimaryEmailAddr": {\n      "Address": "dbradley@myemail.com"\n    }, \n    "DisplayName": "Dianne\'s Auto Shop", \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "GivenName": "Dianne", \n    "Title": "Ms.", \n    "PrimaryPhone": {\n      "FreeFormNumber": "(650) 555-2342"\n    }, \n    "Active": true, \n    "MetaData": {\n      "CreateTime": "2015-07-28T12:51:21-07:00", \n      "LastUpdatedTime": "2015-07-28T12:51:21-07:00"\n    }, \n    "Vendor1099": false, \n    "BillAddr": {\n      "City": "Millbrae", \n      "Country": "U.S.A", \n      "Line3": "29834 Mustang Ave.", \n      "Line2": "Dianne Bradley", \n      "Line1": "Dianne\'s Auto Shop", \n      "PostalCode": "94030", \n      "CountrySubDivisionCode": "CA", \n      "Id": "423"\n    }, \n    "Mobile": {\n      "FreeFormNumber": "(650) 555-2000"\n    }, \n    "WebAddr": {\n      "URI": "http://DiannesAutoShop.com"\n    }, \n    "Balance": 0, \n    "SyncToken": "0", \n    "Suffix": "Sr.", \n    "CompanyName": "Dianne\'s Auto Shop", \n    "FamilyName": "Bradley", \n    "TaxIdentifier": "99-5688293", \n    "AcctNum": "35372649", \n    "PrintOnCheckName": "Dianne\'s Auto Shop", \n    "sparse": false, \n    "Id": "137"\n  }, \n  "time": "2015-07-28T12:51:21.326-07:00"\n}',
                "Update0-request":
                    '{\n  "PrimaryEmailAddr": {\n    "Address": "Books@Intuit.com"\n  }, \n  "Vendor1099": false, \n  "domain": "QBO", \n  "GivenName": "Bessie", \n  "DisplayName": "Books by Bessie", \n  "BillAddr": {\n    "City": "Palo Alto", \n    "Line1": "15 Main St.", \n    "PostalCode": "94303", \n    "Lat": "37.445013", \n    "Long": "-122.1391443", \n    "CountrySubDivisionCode": "CA", \n    "Id": "31"\n  }, \n  "SyncToken": "1", \n  "PrintOnCheckName": "Books by Bessie and Joan", \n  "FamilyName": "Williams", \n  "PrimaryPhone": {\n    "FreeFormNumber": "(650) 555-7745"\n  }, \n  "AcctNum": "13451234", \n  "CompanyName": "Books by Bessie", \n  "WebAddr": {\n    "URI": "http://www.booksbybessie.co"\n  }, \n  "sparse": false, \n  "Active": true, \n  "Balance": 0, \n  "Id": "30", \n  "MetaData": {\n    "CreateTime": "2014-09-12T10:07:56-07:00", \n    "LastUpdatedTime": "2015-07-28T13:34:38-07:00"\n  }\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T13:33:32.082-07:00">\r\n    <Vendor domain="QBO" sparse="false">\r\n        <Id>30</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-12T10:07:56-07:00</CreateTime>\r\n            <LastUpdatedTime>2014-09-17T11:13:46-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <GivenName>Bessie</GivenName>\r\n        <FamilyName>Williams</FamilyName>\r\n        <CompanyName>Books by Bessie</CompanyName>\r\n        <DisplayName>Books by Bessie</DisplayName>\r\n        <PrintOnCheckName>Books by Bessie</PrintOnCheckName>\r\n        <Active>true</Active>\r\n        <PrimaryPhone>\r\n            <FreeFormNumber>(650) 555-7745</FreeFormNumber>\r\n        </PrimaryPhone>\r\n        <PrimaryEmailAddr>\r\n            <Address>Books@Intuit.com</Address>\r\n        </PrimaryEmailAddr>\r\n        <WebAddr>\r\n            <URI>http://www.booksbybessie.co</URI>\r\n        </WebAddr>\r\n        <BillAddr>\r\n            <Id>31</Id>\r\n            <Line1>15 Main St.</Line1>\r\n            <City>Palo Alto</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94303</PostalCode>\r\n            <Lat>37.445013</Lat>\r\n            <Long>-122.1391443</Long>\r\n        </BillAddr>\r\n        <Balance>0</Balance>\r\n        <AcctNum>1345</AcctNum>\r\n        <Vendor1099>false</Vendor1099>\r\n    </Vendor>\r\n</IntuitResponse>\r\n',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T13:34:39.534-07:00">\r\n  <Vendor domain="QBO" sparse="false">\r\n    <Id>30</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-12T10:07:56-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-28T13:34:38-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <GivenName>Bessie</GivenName>\r\n    <FamilyName>Williams</FamilyName>\r\n    <CompanyName>Books by Bessie</CompanyName>\r\n    <DisplayName>Books by Bessie</DisplayName>\r\n    <PrintOnCheckName>Books by Bessie</PrintOnCheckName>\r\n    <Active>true</Active>\r\n    <PrimaryPhone>\r\n      <FreeFormNumber>(650) 555-7745</FreeFormNumber>\r\n    </PrimaryPhone>\r\n    <PrimaryEmailAddr>\r\n      <Address>Books@Intuit.com</Address>\r\n    </PrimaryEmailAddr>\r\n    <WebAddr>\r\n      <URI>http://www.booksbybessie.co</URI>\r\n    </WebAddr>\r\n    <BillAddr>\r\n      <Id>31</Id>\r\n      <Line1>15 Main St.</Line1>\r\n      <City>Palo Alto</City>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>94303</PostalCode>\r\n      <Lat>37.445013</Lat>\r\n      <Long>-122.1391443</Long>\r\n    </BillAddr>\r\n    <Balance>0</Balance>\r\n    <AcctNum>13451234</AcctNum>\r\n    <Vendor1099>false</Vendor1099>\r\n  </Vendor>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "PrimaryEmailAddr": {\n    "Address": "dbradley@myemail.com"\n  }, \n  "WebAddr": {\n    "URI": "http://DiannesAutoShop.com"\n  }, \n  "PrimaryPhone": {\n    "FreeFormNumber": "(650) 555-2342"\n  }, \n  "DisplayName": "Dianne\'s Auto Shop", \n  "Suffix": "Sr.", \n  "Title": "Ms.", \n  "Mobile": {\n    "FreeFormNumber": "(650) 555-2000"\n  }, \n  "FamilyName": "Bradley", \n  "TaxIdentifier": "99-5688293", \n  "AcctNum": "35372649", \n  "CompanyName": "Dianne\'s Auto Shop", \n  "BillAddr": {\n    "City": "Millbrae", \n    "Country": "U.S.A", \n    "Line3": "29834 Mustang Ave.", \n    "Line2": "Dianne Bradley", \n    "Line1": "Dianne\'s Auto Shop", \n    "PostalCode": "94030", \n    "CountrySubDivisionCode": "CA"\n  }, \n  "GivenName": "Dianne", \n  "PrintOnCheckName": "Dianne\'s Auto Shop"\n}',
                "Query0-request-xml":
                    "select * from vendor where MetaData.LastUpdatedTime > '2014-09-17T15:28:48-07:00'",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "Vendor": [\n      {\n        "Vendor1099": false, \n        "domain": "QBO", \n        "DisplayName": "Bob\'s Burger Joint", \n        "SyncToken": "0", \n        "PrintOnCheckName": "Bob\'s Burger Joint", \n        "sparse": false, \n        "Active": true, \n        "Balance": 390.0, \n        "Id": "56", \n        "MetaData": {\n          "CreateTime": "2014-10-03T14:28:52-07:00", \n          "LastUpdatedTime": "2015-07-14T12:37:57-07:00"\n        }\n      }, \n      {\n        "Vendor1099": false, \n        "domain": "QBO", \n        "DisplayName": "Cal Telephone", \n        "BillAddr": {\n          "City": "Palo Alto", \n          "Line1": "10 Main St.", \n          "PostalCode": "94303", \n          "Lat": "37.445013", \n          "Long": "-122.1391443", \n          "CountrySubDivisionCode": "CA", \n          "Id": "33"\n        }, \n        "SyncToken": "0", \n        "CompanyName": "Cal Telephone", \n        "TermRef": {\n          "value": "1"\n        }, \n        "PrimaryPhone": {\n          "FreeFormNumber": "(650) 555-1616"\n        }, \n        "PrintOnCheckName": "Cal Telephone", \n        "sparse": false, \n        "Active": true, \n        "Balance": 0, \n        "Id": "32", \n        "MetaData": {\n          "CreateTime": "2014-09-12T10:13:24-07:00", \n          "LastUpdatedTime": "2014-09-19T12:55:23-07:00"\n        }\n      }, \n      {\n        "Vendor1099": false, \n        "domain": "QBO", \n        "GivenName": "Melanie", \n        "DisplayName": "Hall Properties", \n        "sparse": false, \n        "SyncToken": "0", \n        "Mobile": {\n          "FreeFormNumber": "(973) 888-6222"\n        }, \n        "PrintOnCheckName": "Hall Properties", \n        "PrimaryPhone": {\n          "FreeFormNumber": "(973) 555-3827"\n        }, \n        "FamilyName": "Hall", \n        "TaxIdentifier": "XXXXXXXX2222", \n        "AcctNum": "55642", \n        "CompanyName": "Hall Properties", \n        "WebAddr": {\n          "URI": "http://www.hallproperties.intuit.org"\n        }, \n        "BillAddr": {\n          "City": "South Orange", \n          "Line1": "P.O.Box 357", \n          "PostalCode": "07079", \n          "Lat": "40.7489277", \n          "Long": "-74.2609903", \n          "CountrySubDivisionCode": "NJ", \n          "Id": "36"\n        }, \n        "Active": true, \n        "Balance": 0, \n        "Id": "40", \n        "MetaData": {\n          "CreateTime": "2014-09-12T10:24:28-07:00", \n          "LastUpdatedTime": "2014-09-18T13:43:08-07:00"\n        }\n      }, \n      {\n        "Vendor1099": false, \n        "domain": "QBO", \n        "GivenName": "Geoff", \n        "DisplayName": "Hicks Hardware", \n        "BillAddr": {\n          "City": "Middlefield", \n          "Line1": "42 Main St.", \n          "PostalCode": "94303", \n          "Lat": "37.445013", \n          "Long": "-122.1391443", \n          "CountrySubDivisionCode": "CA", \n          "Id": "37"\n        }, \n        "SyncToken": "0", \n        "Mobile": {\n          "FreeFormNumber": "(650) 445-6666"\n        }, \n        "PrintOnCheckName": "Hicks Hardware", \n        "FamilyName": "Hicks", \n        "PrimaryPhone": {\n          "FreeFormNumber": "(650) 554-1973"\n        }, \n        "AcctNum": "556223", \n        "CompanyName": "Hicks Hardware", \n        "WebAddr": {\n          "URI": "http://Hickshardware.co"\n        }, \n        "sparse": false, \n        "Active": true, \n        "Balance": 0, \n        "Id": "41", \n        "MetaData": {\n          "CreateTime": "2014-09-12T10:26:56-07:00", \n          "LastUpdatedTime": "2014-09-18T13:01:57-07:00"\n        }\n      }, \n      {\n        "PrimaryEmailAddr": {\n          "Address": "Materials@intuit.com"\n        }, \n        "Vendor1099": false, \n        "domain": "QBO", \n        "GivenName": "Julie", \n        "DisplayName": "Norton Lumber and Building Materials", \n        "BillAddr": {\n          "City": "Middlefield", \n          "Line1": "4528 Country Road", \n          "PostalCode": "94303", \n          "Lat": "37.3752919", \n          "Long": "-122.1692159", \n          "CountrySubDivisionCode": "CA", \n          "Id": "40"\n        }, \n        "SyncToken": "0", \n        "PrintOnCheckName": "Norton Lumber and Building Materials", \n        "FamilyName": "Norton", \n        "PrimaryPhone": {\n          "FreeFormNumber": "(650) 363-6578"\n        }, \n        "AcctNum": "32980256", \n        "CompanyName": "Norton Lumber and Building Materials", \n        "sparse": false, \n        "Active": true, \n        "Balance": 0, \n        "Id": "46", \n        "MetaData": {\n          "CreateTime": "2014-09-12T10:32:55-07:00", \n          "LastUpdatedTime": "2015-01-16T16:00:29-08:00"\n        }\n      }, \n      {\n        "Vendor1099": false, \n        "domain": "QBO", \n        "PrimaryEmailAddr": {\n          "Address": "utilities@noemail.com"\n        }, \n        "DisplayName": "PG&E", \n        "BillAddr": {\n          "City": "Palo Alto", \n          "Line1": "4 Main St.", \n          "PostalCode": "94303", \n          "Lat": "37.445013", \n          "Long": "-122.1391443", \n          "CountrySubDivisionCode": "CA", \n          "Id": "42"\n        }, \n        "SyncToken": "1", \n        "CompanyName": "PG&E", \n        "PrimaryPhone": {\n          "FreeFormNumber": "(888) 555-9465"\n        }, \n        "AcctNum": "00649587213", \n        "PrintOnCheckName": "PG&E", \n        "sparse": false, \n        "Active": true, \n        "Balance": 0, \n        "Id": "48", \n        "MetaData": {\n          "CreateTime": "2014-09-12T10:36:57-07:00", \n          "LastUpdatedTime": "2015-01-16T15:36:20-08:00"\n        }\n      }, \n      {\n        "Vendor1099": false, \n        "domain": "QBO", \n        "DisplayName": "QuickBooks Payments", \n        "SyncToken": "0", \n        "PrintOnCheckName": "QuickBooks Payments", \n        "sparse": false, \n        "Active": true, \n        "Balance": 0, \n        "Id": "63", \n        "MetaData": {\n          "CreateTime": "2015-04-13T13:42:23-07:00", \n          "LastUpdatedTime": "2015-04-13T13:42:23-07:00"\n        }\n      }, \n      {\n        "Vendor1099": false, \n        "domain": "QBO", \n        "GivenName": "Jenny", \n        "DisplayName": "Robertson & Associates", \n        "BillAddr": {\n          "City": "Bayshore", \n          "Line1": "P.O. Box 147", \n          "PostalCode": "94326", \n          "Lat": "45.2720537", \n          "Long": "-79.7935909", \n          "CountrySubDivisionCode": "CA", \n          "Id": "43"\n        }, \n        "SyncToken": "0", \n        "PrintOnCheckName": "Robertson & Associates", \n        "FamilyName": "Robertson", \n        "PrimaryPhone": {\n          "FreeFormNumber": "(650) 557-1111"\n        }, \n        "AcctNum": "000005641", \n        "CompanyName": "Robertson & Associates", \n        "sparse": false, \n        "Active": true, \n        "Balance": 95.0, \n        "Id": "49", \n        "MetaData": {\n          "CreateTime": "2014-09-12T10:38:12-07:00", \n          "LastUpdatedTime": "2015-06-30T15:09:07-07:00"\n        }\n      }, \n      {\n        "Vendor1099": false, \n        "domain": "QBO", \n        "DisplayName": "Squeaky Kleen Car Wash", \n        "SyncToken": "0", \n        "PrintOnCheckName": "Squeaky Kleen Car Wash", \n        "sparse": false, \n        "Active": true, \n        "Balance": 0, \n        "Id": "57", \n        "MetaData": {\n          "CreateTime": "2014-10-03T14:29:35-07:00", \n          "LastUpdatedTime": "2014-10-03T14:29:35-07:00"\n        }\n      }, \n      {\n        "PrimaryEmailAddr": {\n          "Address": "tim.philip@timphilipmasonry.com"\n        }, \n        "Vendor1099": false, \n        "domain": "QBO", \n        "GivenName": "Tim", \n        "DisplayName": "Tim Philip Masonry", \n        "sparse": false, \n        "SyncToken": "0", \n        "Mobile": {\n          "FreeFormNumber": "(650) 555-1549"\n        }, \n        "PrintOnCheckName": "Tim Philip Masonry", \n        "PrimaryPhone": {\n          "FreeFormNumber": "(800) 556-1254"\n        }, \n        "FamilyName": "Philip", \n        "TaxIdentifier": "XXXXXXXX5555", \n        "AcctNum": "0078965", \n        "CompanyName": "Tim Philip Masonry", \n        "WebAddr": {\n          "URI": "http://www.bricksbytim4less.co"\n        }, \n        "BillAddr": {\n          "City": "Middlefield", \n          "Line1": "3948 Elm St.", \n          "PostalCode": "94482", \n          "Lat": "37.4604972", \n          "Long": "-122.1547528", \n          "CountrySubDivisionCode": "CA", \n          "Id": "45"\n        }, \n        "Active": true, \n        "Balance": 0, \n        "Id": "51", \n        "MetaData": {\n          "CreateTime": "2014-09-12T10:42:31-07:00", \n          "LastUpdatedTime": "2014-09-18T13:06:58-07:00"\n        }\n      }\n    ], \n    "maxResults": 10\n  }, \n  "time": "2015-07-28T13:29:10.643-07:00"\n}',
            },
            Billpayment: {
                "Delete0-request": '{\n  "SyncToken": "0", \n  "Id": "117"\n}',
                "Query0-request-xml":
                    "select * from billpayment Where Metadata.LastUpdatedTime>'2014-12-12T14:50:22-08:00' Order By Metadata.LastUpdatedTime",
                "Read0-response":
                    '{\n  "BillPayment": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "VendorRef": {\n      "name": "Bob\'s Burger Joint", \n      "value": "56"\n    }, \n    "TxnDate": "2015-07-14", \n    "TotalAmt": 200.0, \n    "PayType": "Check", \n    "PrivateNote": "Acct. 1JK90", \n    "sparse": false, \n    "Line": [\n      {\n        "Amount": 200.0, \n        "LinkedTxn": [\n          {\n            "TxnId": "234", \n            "TxnType": "Bill"\n          }\n        ]\n      }\n    ], \n    "Id": "236", \n    "CheckPayment": {\n      "PrintStatus": "NeedToPrint", \n      "BankAccountRef": {\n        "name": "Checking", \n        "value": "35"\n      }\n    }, \n    "MetaData": {\n      "CreateTime": "2015-07-14T12:34:04-07:00", \n      "LastUpdatedTime": "2015-07-14T12:34:04-07:00"\n    }\n  }, \n  "time": "2015-07-14T12:39:40.606-07:00"\n}',
                "Update0-response":
                    '{\n  "BillPayment": {\n    "SyncToken": "3", \n    "domain": "QBO", \n    "VendorRef": {\n      "name": "Bob\'s Burger Joint", \n      "value": "56"\n    }, \n    "TxnDate": "2015-07-14", \n    "TotalAmt": 200.0, \n    "PayType": "Check", \n    "PrivateNote": "A new private note", \n    "sparse": false, \n    "Line": [\n      {\n        "Amount": 200.0, \n        "LinkedTxn": [\n          {\n            "TxnId": "234", \n            "TxnType": "Bill"\n          }\n        ]\n      }\n    ], \n    "Id": "236", \n    "CheckPayment": {\n      "PrintStatus": "NeedToPrint", \n      "BankAccountRef": {\n        "name": "Checking", \n        "value": "35"\n      }\n    }, \n    "MetaData": {\n      "CreateTime": "2015-07-14T12:34:04-07:00", \n      "LastUpdatedTime": "2015-07-30T09:55:19-07:00"\n    }\n  }, \n  "time": "2015-07-30T09:55:20.597-07:00"\n}',
                "Create0-response":
                    '{\n  "BillPayment": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "VendorRef": {\n      "name": "Bob\'s Burger Joint", \n      "value": "56"\n    }, \n    "TxnDate": "2015-07-14", \n    "TotalAmt": 200.0, \n    "PayType": "Check", \n    "PrivateNote": "Acct. 1JK90", \n    "sparse": false, \n    "Line": [\n      {\n        "Amount": 200.0, \n        "LinkedTxn": [\n          {\n            "TxnId": "234", \n            "TxnType": "Bill"\n          }\n        ]\n      }\n    ], \n    "Id": "236", \n    "CheckPayment": {\n      "PrintStatus": "NeedToPrint", \n      "BankAccountRef": {\n        "name": "Checking", \n        "value": "35"\n      }\n    }, \n    "MetaData": {\n      "CreateTime": "2015-07-14T12:34:04-07:00", \n      "LastUpdatedTime": "2015-07-14T12:34:04-07:00"\n    }\n  }, \n  "time": "2015-07-14T12:34:03.964-07:00"\n}',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-14T12:37:57.599-07:00">\r\n  <BillPayment domain="QBO" sparse="false">\r\n    <Id>237</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-07-14T12:37:57-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-14T12:37:57-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-07-14</TxnDate>\r\n    <VendorRef name="Bob\'s Burger Joint">56</VendorRef>\r\n    <PayType>Check</PayType>\r\n    <CheckPayment>\r\n      <BankAccountRef name="Checking">35</BankAccountRef>\r\n      <PrintStatus>NotSet</PrintStatus>\r\n    </CheckPayment>\r\n    <TotalAmt>110.00</TotalAmt>\r\n  </BillPayment>\r\n</IntuitResponse>',
                "Update2-response-xml": "Sample response not available.",
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-05-26T13:31:36.761-07:00">\r\n    <BillPayment domain="QBO" status="Deleted">\r\n        <Id>118</Id>\r\n    </BillPayment>\r\n</IntuitResponse>\r\n',
                "Create0-request":
                    '{\n  "PrivateNote": "Acct. 1JK90", \n  "VendorRef": {\n    "name": "Bob\'s Burger Joint", \n    "value": "56"\n  }, \n  "TotalAmt": 200.0, \n  "PayType": "Check", \n  "Line": [\n    {\n      "Amount": 200.0, \n      "LinkedTxn": [\n        {\n          "TxnId": "234", \n          "TxnType": "Bill"\n        }\n      ]\n    }\n  ], \n  "CheckPayment": {\n    "BankAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }\n  }\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-14T12:49:11.070-07:00">\r\n    <QueryResponse startPosition="1" maxResults="8" totalCount="8">\r\n        <BillPayment domain="QBO" sparse="false">\r\n            <Id>165</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-01-16T15:36:20-08:00</CreateTime>\r\n                <LastUpdatedTime>2015-01-16T15:36:20-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DocNumber>1</DocNumber>\r\n            <TxnDate>2015-01-16</TxnDate>\r\n            <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n            <PrivateNote>00649587213</PrivateNote>\r\n            <Line>\r\n                <Amount>86.44</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>78</TxnId>\r\n                    <TxnType>Bill</TxnType>\r\n                </LinkedTxn>\r\n            </Line>\r\n            <VendorRef name="PG&amp;E">48</VendorRef>\r\n            <PayType>CreditCard</PayType>\r\n            <CreditCardPayment>\r\n                <CCAccountRef name="Mastercard">41</CCAccountRef>\r\n            </CreditCardPayment>\r\n            <TotalAmt>86.44</TotalAmt>\r\n        </BillPayment>\r\n        <BillPayment domain="QBO" sparse="false">\r\n            <Id>166</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-01-16T15:40:26-08:00</CreateTime>\r\n                <LastUpdatedTime>2015-01-16T15:40:26-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2015-01-16</TxnDate>\r\n            <Line>\r\n                <Amount>200.00</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>157</TxnId>\r\n                    <TxnType>Bill</TxnType>\r\n                </LinkedTxn>\r\n            </Line>\r\n            <VendorRef name="Bob\'s Burger Joint">56</VendorRef>\r\n            <PayType>CreditCard</PayType>\r\n            <CreditCardPayment>\r\n                <CCAccountRef name="Mastercard">41</CCAccountRef>\r\n            </CreditCardPayment>\r\n            <TotalAmt>200.00</TotalAmt>\r\n        </BillPayment>\r\n        <BillPayment domain="QBO" sparse="false">\r\n            <Id>169</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-01-16T16:00:29-08:00</CreateTime>\r\n                <LastUpdatedTime>2015-01-16T16:00:29-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2015-01-16</TxnDate>\r\n            <Line>\r\n                <Amount>205.00</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>126</TxnId>\r\n                    <TxnType>Bill</TxnType>\r\n                </LinkedTxn>\r\n            </Line>\r\n            <VendorRef name="Norton Lumber and Building Materials">46</VendorRef>\r\n            <PayType>CreditCard</PayType>\r\n            <CreditCardPayment>\r\n                <CCAccountRef name="Mastercard">41</CCAccountRef>\r\n            </CreditCardPayment>\r\n            <TotalAmt>205.00</TotalAmt>\r\n        </BillPayment>\r\n        <BillPayment domain="QBO" sparse="false">\r\n            <Id>231</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-06-30T15:05:30-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-06-30T15:05:30-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2015-06-30</TxnDate>\r\n            <PrivateNote>Acct. 1JK90</PrivateNote>\r\n            <Line>\r\n                <Amount>110.00</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>108</TxnId>\r\n                    <TxnType>Bill</TxnType>\r\n                </LinkedTxn>\r\n            </Line>\r\n            <VendorRef name="Robertson &amp; Associates">49</VendorRef>\r\n            <PayType>Check</PayType>\r\n            <CheckPayment>\r\n                <BankAccountRef name="Checking">35</BankAccountRef>\r\n                <PrintStatus>NeedToPrint</PrintStatus>\r\n            </CheckPayment>\r\n            <TotalAmt>110.00</TotalAmt>\r\n        </BillPayment>\r\n        <BillPayment domain="QBO" sparse="false">\r\n            <Id>232</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-06-30T15:09:06-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-06-30T15:09:06-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2015-06-30</TxnDate>\r\n            <PrivateNote>Acct. 1JK90</PrivateNote>\r\n            <Line>\r\n                <Amount>110.00</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>108</TxnId>\r\n                    <TxnType>Bill</TxnType>\r\n                </LinkedTxn>\r\n            </Line>\r\n            <VendorRef name="Robertson &amp; Associates">49</VendorRef>\r\n            <PayType>Check</PayType>\r\n            <CheckPayment>\r\n                <BankAccountRef name="Checking">35</BankAccountRef>\r\n                <PrintStatus>NeedToPrint</PrintStatus>\r\n            </CheckPayment>\r\n            <TotalAmt>110.00</TotalAmt>\r\n        </BillPayment>\r\n        <BillPayment domain="QBO" sparse="false">\r\n            <Id>22</Id>\r\n            <SyncToken>2</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-16T15:28:48-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-06-30T15:24:40-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <DocNumber>1</DocNumber>\r\n            <TxnDate>2014-09-16</TxnDate>\r\n            <PrivateNote>Add private note</PrivateNote>\r\n            <Line>\r\n                <Amount>2000.00</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>1</TxnId>\r\n                    <TxnType>Bill</TxnType>\r\n                </LinkedTxn>\r\n            </Line>\r\n            <VendorRef name="Brosnahan Insurance Agency">31</VendorRef>\r\n            <PayType>Check</PayType>\r\n            <CheckPayment>\r\n                <BankAccountRef name="Checking">35</BankAccountRef>\r\n                <PrintStatus>NotSet</PrintStatus>\r\n            </CheckPayment>\r\n            <TotalAmt>2000.00</TotalAmt>\r\n        </BillPayment>\r\n        <BillPayment domain="QBO" sparse="false">\r\n            <Id>236</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-07-14T12:34:04-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-14T12:34:04-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2015-07-14</TxnDate>\r\n            <PrivateNote>Acct. 1JK90</PrivateNote>\r\n            <Line>\r\n                <Amount>200.00</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>234</TxnId>\r\n                    <TxnType>Bill</TxnType>\r\n                </LinkedTxn>\r\n            </Line>\r\n            <VendorRef name="Bob\'s Burger Joint">56</VendorRef>\r\n            <PayType>Check</PayType>\r\n            <CheckPayment>\r\n                <BankAccountRef name="Checking">35</BankAccountRef>\r\n                <PrintStatus>NeedToPrint</PrintStatus>\r\n            </CheckPayment>\r\n            <TotalAmt>200.00</TotalAmt>\r\n        </BillPayment>\r\n        <BillPayment domain="QBO" sparse="false">\r\n            <Id>237</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-07-14T12:37:57-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-14T12:37:57-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2015-07-14</TxnDate>\r\n            <VendorRef name="Bob\'s Burger Joint">56</VendorRef>\r\n            <PayType>Check</PayType>\r\n            <CheckPayment>\r\n                <BankAccountRef name="Checking">35</BankAccountRef>\r\n                <PrintStatus>NotSet</PrintStatus>\r\n            </CheckPayment>\r\n            <TotalAmt>110.00</TotalAmt>\r\n        </BillPayment>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Query0-request":
                    "\"select * from billpayment Where Metadata.LastUpdatedTime>'2014-12-12T14:50:22-08:00' Order By Metadata.LastUpdatedTime\"",
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-14T12:50:08.532-07:00">\r\n    <BillPayment domain="QBO" sparse="false">\r\n        <Id>236</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-14T12:34:04-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-14T12:34:04-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2015-07-14</TxnDate>\r\n        <PrivateNote>Acct. 1JK90</PrivateNote>\r\n        <Line>\r\n            <Amount>200.00</Amount>\r\n            <LinkedTxn>\r\n                <TxnId>234</TxnId>\r\n                <TxnType>Bill</TxnType>\r\n            </LinkedTxn>\r\n        </Line>\r\n        <VendorRef name="Bob\'s Burger Joint">56</VendorRef>\r\n        <PayType>Check</PayType>\r\n        <CheckPayment>\r\n            <BankAccountRef name="Checking">35</BankAccountRef>\r\n            <PrintStatus>NeedToPrint</PrintStatus>\r\n        </CheckPayment>\r\n        <TotalAmt>200.00</TotalAmt>\r\n    </BillPayment>\r\n</IntuitResponse>\r\n',
                "Update0-request-xml":
                    '<BillPayment xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>236</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2015-07-14T12:34:04-07:00</CreateTime>\r\n        <LastUpdatedTime>2015-07-14T12:34:04-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-07-14</TxnDate>\r\n    <PrivateNote>An updated private note</PrivateNote>\r\n    <Line>\r\n        <Amount>200.00</Amount>\r\n        <LinkedTxn>\r\n            <TxnId>234</TxnId>\r\n            <TxnType>Bill</TxnType>\r\n        </LinkedTxn>\r\n    </Line>\r\n    <VendorRef name="Bob\'s Burger Joint">56</VendorRef>\r\n    <PayType>Check</PayType>\r\n    <CheckPayment>\r\n        <BankAccountRef name="Checking">35</BankAccountRef>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n    </CheckPayment>\r\n    <TotalAmt>200.00</TotalAmt>\r\n</BillPayment>\r\n',
                "Update2-request-xml": "Sample request not available.",
                "Delete0-response":
                    '{\n  "BillPayment": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "117"\n  }, \n  "time": "2015-05-26T13:17:25.316-07:00"\n}',
                "Delete0-request-xml":
                    '<BillPayment xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>118</Id>\r\n    <SyncToken>0</SyncToken>\r\n</BillPayment>\r\n',
                "Update0-request":
                    '{\n  "SyncToken": "2", \n  "domain": "QBO", \n  "VendorRef": {\n    "name": "Bob\'s Burger Joint", \n    "value": "56"\n  }, \n  "TxnDate": "2015-07-14", \n  "TotalAmt": 200.0, \n  "PayType": "Check", \n  "PrivateNote": "A new private note", \n  "sparse": false, \n  "Line": [\n    {\n      "Amount": 200.0, \n      "LinkedTxn": [\n        {\n          "TxnId": "234", \n          "TxnType": "Bill"\n        }\n      ]\n    }\n  ], \n  "Id": "236", \n  "CheckPayment": {\n    "PrintStatus": "NeedToPrint", \n    "BankAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }\n  }, \n  "MetaData": {\n    "CreateTime": "2015-07-14T12:34:04-07:00", \n    "LastUpdatedTime": "2015-07-14T13:17:22-07:00"\n  }\n}',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-14T13:13:32.285-07:00">\r\n    <BillPayment domain="QBO" sparse="false">\r\n        <Id>236</Id>\r\n        <SyncToken>2</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-14T12:34:04-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-14T13:17:22-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2015-07-14</TxnDate>\r\n        <PrivateNote>An updated private note</PrivateNote>\r\n        <Line>\r\n            <Amount>200.00</Amount>\r\n            <LinkedTxn>\r\n                <TxnId>234</TxnId>\r\n                <TxnType>Bill</TxnType>\r\n            </LinkedTxn>\r\n        </Line>\r\n        <VendorRef name="Bob\'s Burger Joint">56</VendorRef>\r\n        <PayType>Check</PayType>\r\n        <CheckPayment>\r\n            <BankAccountRef name="Checking">35</BankAccountRef>\r\n            <PrintStatus>NeedToPrint</PrintStatus>\r\n        </CheckPayment>\r\n        <TotalAmt>200.00</TotalAmt>\r\n    </BillPayment>\r\n</IntuitResponse>\r\n',
                "Update2-request": '{\n  "SyncToken": "0", \n  "Id": "104", \n  "sparse": true\n}',
                "Update2-response":
                    '{\n  "BillPayment": {\n    "DocNumber": "11", \n    "SyncToken": "1", \n    "domain": "QBO", \n    "VendorRef": {\n      "name": "Hall Properties", \n      "value": "40"\n    }, \n    "TxnDate": "2016-08-18", \n    "TotalAmt": 0, \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "PayType": "Check", \n    "PrivateNote": "Voided", \n    "sparse": false, \n    "Line": [], \n    "Id": "104", \n    "CheckPayment": {\n      "PrintStatus": "NotSet", \n      "BankAccountRef": {\n        "name": "Cash on hand", \n        "value": "9"\n      }\n    }, \n    "MetaData": {\n      "CreateTime": "2016-08-18T13:11:14-07:00", \n      "LastUpdatedTime": "2016-08-18T13:27:13-07:00"\n    }\n  }, \n  "time": "2016-08-18T13:27:13.323-07:00"\n}',
                "Create0-request-xml":
                    '<BillPayment xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Line>\r\n        <Amount>110.00</Amount>\r\n        <LinkedTxn>\r\n            <TxnId>234</TxnId>\r\n            <TxnType>Bill</TxnType>\r\n        </LinkedTxn>\r\n    </Line>\r\n    <VendorRef name="Bob\'s Burger Joint">56</VendorRef>\r\n    <PayType>Check</PayType>\r\n    <CheckPayment>\r\n        <BankAccountRef name="Checking">35</BankAccountRef>\r\n        <PrintStatus>NotSet</PrintStatus>\r\n    </CheckPayment>\r\n    <TotalAmt>110.00</TotalAmt>\r\n</BillPayment>',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "BillPayment": [\n      {\n        "DocNumber": "1", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "PG&E", \n          "value": "48"\n        }, \n        "TxnDate": "2015-01-16", \n        "TotalAmt": 86.44, \n        "CurrencyRef": {\n          "name": "United States Dollar", \n          "value": "USD"\n        }, \n        "PayType": "CreditCard", \n        "PrivateNote": "00649587213", \n        "sparse": false, \n        "CreditCardPayment": {\n          "CCAccountRef": {\n            "name": "Mastercard", \n            "value": "41"\n          }\n        }, \n        "Line": [\n          {\n            "Amount": 86.44, \n            "LinkedTxn": [\n              {\n                "TxnId": "78", \n                "TxnType": "Bill"\n              }\n            ]\n          }\n        ], \n        "Id": "165", \n        "MetaData": {\n          "CreateTime": "2015-01-16T15:36:20-08:00", \n          "LastUpdatedTime": "2015-01-16T15:36:20-08:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Bob\'s Burger Joint", \n          "value": "56"\n        }, \n        "TxnDate": "2015-01-16", \n        "TotalAmt": 200.0, \n        "PayType": "CreditCard", \n        "sparse": false, \n        "CreditCardPayment": {\n          "CCAccountRef": {\n            "name": "Mastercard", \n            "value": "41"\n          }\n        }, \n        "Line": [\n          {\n            "Amount": 200.0, \n            "LinkedTxn": [\n              {\n                "TxnId": "157", \n                "TxnType": "Bill"\n              }\n            ]\n          }\n        ], \n        "Id": "166", \n        "MetaData": {\n          "CreateTime": "2015-01-16T15:40:26-08:00", \n          "LastUpdatedTime": "2015-01-16T15:40:26-08:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Norton Lumber and Building Materials", \n          "value": "46"\n        }, \n        "TxnDate": "2015-01-16", \n        "TotalAmt": 205.0, \n        "PayType": "CreditCard", \n        "sparse": false, \n        "CreditCardPayment": {\n          "CCAccountRef": {\n            "name": "Mastercard", \n            "value": "41"\n          }\n        }, \n        "Line": [\n          {\n            "Amount": 205.0, \n            "LinkedTxn": [\n              {\n                "TxnId": "126", \n                "TxnType": "Bill"\n              }\n            ]\n          }\n        ], \n        "Id": "169", \n        "MetaData": {\n          "CreateTime": "2015-01-16T16:00:29-08:00", \n          "LastUpdatedTime": "2015-01-16T16:00:29-08:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Robertson & Associates", \n          "value": "49"\n        }, \n        "TxnDate": "2015-06-30", \n        "TotalAmt": 110.0, \n        "PayType": "Check", \n        "PrivateNote": "Acct. 1JK90", \n        "sparse": false, \n        "Line": [\n          {\n            "Amount": 110.0, \n            "LinkedTxn": [\n              {\n                "TxnId": "108", \n                "TxnType": "Bill"\n              }\n            ]\n          }\n        ], \n        "Id": "231", \n        "CheckPayment": {\n          "PrintStatus": "NeedToPrint", \n          "BankAccountRef": {\n            "name": "Checking", \n            "value": "35"\n          }\n        }, \n        "MetaData": {\n          "CreateTime": "2015-06-30T15:05:30-07:00", \n          "LastUpdatedTime": "2015-06-30T15:05:30-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Robertson & Associates", \n          "value": "49"\n        }, \n        "TxnDate": "2015-06-30", \n        "TotalAmt": 110.0, \n        "PayType": "Check", \n        "PrivateNote": "Acct. 1JK90", \n        "sparse": false, \n        "Line": [\n          {\n            "Amount": 110.0, \n            "LinkedTxn": [\n              {\n                "TxnId": "108", \n                "TxnType": "Bill"\n              }\n            ]\n          }\n        ], \n        "Id": "232", \n        "CheckPayment": {\n          "PrintStatus": "NeedToPrint", \n          "BankAccountRef": {\n            "name": "Checking", \n            "value": "35"\n          }\n        }, \n        "MetaData": {\n          "CreateTime": "2015-06-30T15:09:06-07:00", \n          "LastUpdatedTime": "2015-06-30T15:09:06-07:00"\n        }\n      }, \n      {\n        "DocNumber": "1", \n        "SyncToken": "2", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Brosnahan Insurance Agency", \n          "value": "31"\n        }, \n        "TxnDate": "2014-09-16", \n        "TotalAmt": 2000.0, \n        "PayType": "Check", \n        "PrivateNote": "Add private note", \n        "sparse": false, \n        "Line": [\n          {\n            "Amount": 2000.0, \n            "LinkedTxn": [\n              {\n                "TxnId": "1", \n                "TxnType": "Bill"\n              }\n            ]\n          }\n        ], \n        "Id": "22", \n        "CheckPayment": {\n          "PrintStatus": "NotSet", \n          "BankAccountRef": {\n            "name": "Checking", \n            "value": "35"\n          }\n        }, \n        "MetaData": {\n          "CreateTime": "2014-09-16T15:28:48-07:00", \n          "LastUpdatedTime": "2015-06-30T15:24:40-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Bob\'s Burger Joint", \n          "value": "56"\n        }, \n        "TxnDate": "2015-07-14", \n        "TotalAmt": 200.0, \n        "PayType": "Check", \n        "PrivateNote": "Acct. 1JK90", \n        "sparse": false, \n        "Line": [\n          {\n            "Amount": 200.0, \n            "LinkedTxn": [\n              {\n                "TxnId": "234", \n                "TxnType": "Bill"\n              }\n            ]\n          }\n        ], \n        "Id": "236", \n        "CheckPayment": {\n          "PrintStatus": "NeedToPrint", \n          "BankAccountRef": {\n            "name": "Checking", \n            "value": "35"\n          }\n        }, \n        "MetaData": {\n          "CreateTime": "2015-07-14T12:34:04-07:00", \n          "LastUpdatedTime": "2015-07-14T12:34:04-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Bob\'s Burger Joint", \n          "value": "56"\n        }, \n        "TxnDate": "2015-07-14", \n        "TotalAmt": 110.0, \n        "PayType": "Check", \n        "sparse": false, \n        "Line": [], \n        "Id": "237", \n        "CheckPayment": {\n          "PrintStatus": "NotSet", \n          "BankAccountRef": {\n            "name": "Checking", \n            "value": "35"\n          }\n        }, \n        "MetaData": {\n          "CreateTime": "2015-07-14T12:37:57-07:00", \n          "LastUpdatedTime": "2015-07-14T12:37:57-07:00"\n        }\n      }\n    ], \n    "startPosition": 1, \n    "maxResults": 8, \n    "totalCount": 8\n  }, \n  "time": "2015-07-14T12:48:36.854-07:00"\n}',
            },
            Journalcode: {
                "Create0-request-xml":
                    '       <JournalCode domain="QBO" sparse="false">\r\n            <Name>CA</Name>\r\n            <Type>Cash</Type>\r\n        </JournalCode>',
                "Query0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-12-16T09:17:50.082-08:00">\r\n    <QueryResponse startPosition="1" maxResults="6" totalCount="6">\r\n        <JournalCode domain="QBO" sparse="false">\r\n            <Id>3</Id>\r\n            <SyncToken>5</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-10-30T11:06:20-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-10-30T13:55:24-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>ABCDEFGHIJKLMNO</Name>\r\n            <Type>Report A Nouveaux</Type>\r\n            <Description>Report A Nouveaux</Description>\r\n            <Active>true</Active>\r\n        </JournalCode>\r\n        <JournalCode domain="QBO" sparse="false">\r\n            <Id>5</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-10-30T11:06:20-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-10-30T11:06:20-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>CA</Name>\r\n            <Type>Cash</Type>\r\n            <Description>Cash</Description>\r\n            <Active>true</Active>\r\n        </JournalCode>\r\n        <JournalCode domain="QBO" sparse="false">\r\n            <Id>1</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-10-30T11:06:19-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-10-30T11:06:19-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>HA</Name>\r\n            <Type>Expenses</Type>\r\n            <Description>Expenses</Description>\r\n            <Active>true</Active>\r\n        </JournalCode>\r\n        <JournalCode domain="QBO" sparse="false">\r\n            <Id>4</Id>\r\n            <SyncToken>1</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-10-30T11:06:20-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-10-30T14:26:40-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>NO</Name>\r\n            <Type>Report A Nouveaux</Type>\r\n            <Description>Report A Nouveaux</Description>\r\n            <Active>true</Active>\r\n        </JournalCode>\r\n        <JournalCode domain="QBO" sparse="false">\r\n            <Id>6</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-10-30T11:06:20-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-10-30T11:06:20-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>OD</Name>\r\n            <Type>Others</Type>\r\n            <Description>Others</Description>\r\n            <Active>true</Active>\r\n        </JournalCode>\r\n        <JournalCode domain="QBO" sparse="false">\r\n            <Id>2</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-10-30T11:06:19-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-10-30T11:06:19-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>VT</Name>\r\n            <Type>Sales</Type>\r\n            <Description>Sales</Description>\r\n            <Active>true</Active>\r\n        </JournalCode>\r\n    </QueryResponse>\r\n</IntuitResponse>',
                "Create0-response-xml":
                    ' <IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-12-16T11:19:56.688-08:00">\r\n    <JournalCode domain="QBO" sparse="false">\r\n        <Id>5</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-10-30T11:06:20-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-10-30T11:06:20-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>CA</Name>\r\n        <Type>Cash</Type>\r\n        <Description>Cash</Description>\r\n        <Active>true</Active>\r\n    </JournalCode>\r\n</IntuitResponse>',
                "Query0-request": '"select * from journalcode"',
                "Update0-response":
                    '{\n  "JournalCode": {\n    "SyncToken": "1", \n    "domain": "QBO", \n    "Name": "VT", \n    "sparse": false, \n    "time": "2015-12-16T11:06:19-07:00", \n    "Active": true, \n    "MetaData": {\n      "CreateTime": "2015-12-16T11:06:19-07:00", \n      "LastUpdatedTime": "2015-12-16T11:06:19-07:00"\n    }, \n    "Type": "Sales", \n    "Id": "2", \n    "Description": "An updated description"\n  }\n}',
                "Update0-request-xml":
                    '   <JournalCode xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n        <Id>5</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-10-30T11:06:20-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-10-30T11:06:20-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>CA</Name>\r\n        <Type>Cash</Type>\r\n        <Description>An updated description.</Description>\r\n        <Active>true</Active>\r\n    </JournalCode>',
                "Read0-response":
                    '{\n  "JournalCode": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "Name": "VT", \n    "sparse": false, \n    "time": "2015-12-16T11:01:37.346-07:00", \n    "Active": true, \n    "MetaData": {\n      "CreateTime": "2015-10-30T11:06:19-07:00", \n      "LastUpdatedTime": "2015-10-30T11:06:19-07:00"\n    }, \n    "Type": "Sales", \n    "Id": "2", \n    "Description": "Sales"\n  }\n}',
                "Create0-response":
                    '{\n  "JournalCode": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "Name": "VT", \n    "sparse": false, \n    "time": "2015-12-16T11:01:37.346-07:00", \n    "Active": true, \n    "MetaData": {\n      "CreateTime": "2015-10-30T11:06:19-07:00", \n      "LastUpdatedTime": "2015-10-30T11:06:19-07:00"\n    }, \n    "Type": "Sales", \n    "Id": "2", \n    "Description": "Sales"\n  }\n}',
                "Update0-request":
                    '{\n  "SyncToken": "0", \n  "domain": "QBO", \n  "Name": "VT", \n  "sparse": false, \n  "Active": true, \n  "MetaData": {\n    "CreateTime": "2015-10-30T11:06:19-07:00", \n    "LastUpdatedTime": "2015-10-30T11:06:19-07:00"\n  }, \n  "Type": "Sales", \n  "Id": "2", \n  "Description": "An updated description"\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T14:55:06.451-07:00">\r\n    <JournalCode domain="QBO" sparse="false">\r\n        <Id>3</Id>\r\n        <SyncToken>5</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-10-30T11:06:20-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-10-30T13:55:24-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>ABCDEFGHIJKLMNO</Name>\r\n        <Type>Report A Nouveaux</Type>\r\n        <Description>Report A Nouveaux</Description>\r\n        <Active>true</Active>\r\n    </JournalCode>\r\n    <JournalCode domain="QBO" sparse="false">\r\n        <Id>5</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-10-30T11:06:20-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-10-30T11:06:20-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>CA</Name>\r\n        <Type>Cash</Type>\r\n        <Description>Cash</Description>\r\n        <Active>true</Active>\r\n    </JournalCode>\r\n</IntuitResponse>\r\n',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-12-16T14:55:06.451-07:00">\r\n    <JournalCode domain="QBO" sparse="false">\r\n        <Id>5</Id>\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-10-30T11:06:20-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-10-30T11:06:20-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>CA</Name>\r\n        <Type>Cash</Type>\r\n        <Description>An updated description</Description>\r\n        <Active>true</Active>\r\n    </JournalCode>\r\n</IntuitResponse>\r\n',
                "Create0-request": '{\n  "Type": "Sales", \n  "Name": "VT"\n}',
                "Query0-request-xml": "select * from journalcode",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "JournalCode": [\n      {\n        "SyncToken": "5", \n        "domain": "QBO", \n        "Name": "ABCDEFGHIJKLMNO", \n        "sparse": false, \n        "Active": true, \n        "MetaData": {\n          "CreateTime": "2015-10-30T11:06:20-07:00", \n          "LastUpdatedTime": "2015-10-30T13:55:24-07:00"\n        }, \n        "Type": "Report A Nouveaux", \n        "Id": "3", \n        "Description": "Report A Nouveaux"\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "CA", \n        "sparse": false, \n        "Active": true, \n        "MetaData": {\n          "CreateTime": "2015-10-30T11:06:20-07:00", \n          "LastUpdatedTime": "2015-10-30T11:06:20-07:00"\n        }, \n        "Type": "Cash", \n        "Id": "5", \n        "Description": "Cash"\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "HA", \n        "sparse": false, \n        "Active": true, \n        "MetaData": {\n          "CreateTime": "2015-10-30T11:06:19-07:00", \n          "LastUpdatedTime": "2015-10-30T11:06:19-07:00"\n        }, \n        "Type": "Expenses", \n        "Id": "1", \n        "Description": "Expenses"\n      }, \n      {\n        "SyncToken": "1", \n        "domain": "QBO", \n        "Name": "NO", \n        "sparse": false, \n        "Active": true, \n        "MetaData": {\n          "CreateTime": "2015-10-30T11:06:20-07:00", \n          "LastUpdatedTime": "2015-10-30T14:26:40-07:00"\n        }, \n        "Type": "Report A Nouveaux", \n        "Id": "4", \n        "Description": "Report A Nouveaux"\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "OD", \n        "sparse": false, \n        "Active": true, \n        "MetaData": {\n          "CreateTime": "2015-10-30T11:06:20-07:00", \n          "LastUpdatedTime": "2015-10-30T11:06:20-07:00"\n        }, \n        "Type": "Others", \n        "Id": "6", \n        "Description": "Others"\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "VT", \n        "sparse": false, \n        "Active": true, \n        "MetaData": {\n          "CreateTime": "2015-10-30T11:06:19-07:00", \n          "LastUpdatedTime": "2015-10-30T11:06:19-07:00"\n        }, \n        "Type": "Sales", \n        "Id": "2", \n        "Description": "Sales"\n      }\n    ], \n    "maxResults": 6, \n    "totalCount": 6\n  }, \n  "time": "2015-12-16T09:16:15.597-08:00"\n}',
            },
            Vendorbalancedetail: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/VendorBalanceDetail?vendor=31&columns=tx_date,subt_neg_amount,subt_neg_open_bal&date_macro=Last Fiscal Year"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "VendorBalanceDetail", \n    "Vendor": "31", \n    "Option": [\n      {\n        "Name": "report_date", \n        "Value": "2015-12-31"\n      }, \n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "last calendar year", \n    "StartPeriod": "2015-01-01", \n    "Currency": "USD", \n    "EndPeriod": "2015-12-31", \n    "Time": "2016-03-14T11:18:40-07:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "31", \n              "value": "Brosnahan Insurance Agency"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "2015-07-02"\n                }, \n                {\n                  "value": "241.23"\n                }, \n                {\n                  "value": "241.23"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for Brosnahan Insurance Agency"\n            }, \n            {\n              "value": "241.23"\n            }, \n            {\n              "value": "241.23"\n            }\n          ]\n        }\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": "241.23"\n            }, \n            {\n              "value": "241.23"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "tx_date", \n        "ColTitle": "Date"\n      }, \n      {\n        "ColType": "subt_neg_amount", \n        "ColTitle": "Amount"\n      }, \n      {\n        "ColType": "subt_neg_open_bal", \n        "ColTitle": "Open Balance"\n      }\n    ]\n  }\n}',
            },
            Taxagency: {
                "Create0-request-xml": "XML requests not supported.",
                "Query0-request": '"select * from TaxAgency"',
                "Read0-response":
                    '{\n  "time": "2015-07-27T14:30:33.478-07:00", \n  "TaxAgency": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "DisplayName": "Arizona Dept. of Revenue", \n    "TaxTrackedOnSales": true, \n    "TaxTrackedOnPurchases": false, \n    "sparse": false, \n    "Id": "1", \n    "MetaData": {\n      "CreateTime": "2014-09-18T12:17:04-07:00", \n      "LastUpdatedTime": "2014-09-18T12:17:04-07:00"\n    }\n  }\n}',
                "Create0-response":
                    '{\n  "time": "2015-07-27T14:32:27.116-07:00", \n  "TaxAgency": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "DisplayName": "CityTaxAgency", \n    "TaxTrackedOnSales": true, \n    "TaxTrackedOnPurchases": false, \n    "sparse": false, \n    "Id": "3", \n    "MetaData": {\n      "CreateTime": "2015-07-27T14:32:27-07:00", \n      "LastUpdatedTime": "2015-07-27T14:32:27-07:00"\n    }\n  }\n}',
                "Create0-request": '{\n  "DisplayName": "CityTaxAgency"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 2, \n    "maxResults": 2, \n    "TaxAgency": [\n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DisplayName": "Arizona Dept. of Revenue", \n        "TaxTrackedOnSales": true, \n        "TaxTrackedOnPurchases": false, \n        "sparse": false, \n        "Id": "1", \n        "MetaData": {\n          "CreateTime": "2014-09-18T12:17:04-07:00", \n          "LastUpdatedTime": "2014-09-18T12:17:04-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DisplayName": "Board of Equalization", \n        "TaxTrackedOnSales": true, \n        "TaxTrackedOnPurchases": false, \n        "sparse": false, \n        "Id": "2", \n        "MetaData": {\n          "CreateTime": "2014-09-18T12:17:04-07:00", \n          "LastUpdatedTime": "2014-09-18T12:17:04-07:00"\n        }\n      }\n    ]\n  }, \n  "time": "2015-07-27T14:26:19.454-07:00"\n}',
            },
            Transactionlistwithsplits: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/TransactionListWithSplits?start_date=2020-12-01&end_date=2021-01-28&group_by=Account"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "TransactionListWithSplits", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "StartPeriod": "2020-12-01", \n    "Currency": "USD", \n    "EndPeriod": "2021-01-28", \n    "Time": "2021-02-03T22:46:48-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "33", \n              "value": "Accounts Payable (A/P)"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "2020-12-11"\n                }, \n                {\n                  "id": "257", \n                  "value": "Bill"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "56", \n                  "value": "Bob\'s Burger Joint"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "33", \n                  "value": "Accounts Payable (A/P)"\n                }, \n                {\n                  "value": "200.00"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2020-12-11"\n                }, \n                {\n                  "id": "258", \n                  "value": "Bill"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "56", \n                  "value": "Bob\'s Burger Joint"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "33", \n                  "value": "Accounts Payable (A/P)"\n                }, \n                {\n                  "value": "200.00"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section"\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "7", \n              "value": "Advertising"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "0-00-00"\n                }, \n                {\n                  "id": "257", \n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "", \n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "7", \n                  "value": "Advertising"\n                }, \n                {\n                  "value": "200.00"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "0-00-00"\n                }, \n                {\n                  "id": "258", \n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "", \n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "7", \n                  "value": "Advertising"\n                }, \n                {\n                  "value": "200.00"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section"\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Date", \n        "ColTitle": "Date", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "tx_date"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Transaction Type", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "txn_type"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Num", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "doc_num"\n          }\n        ]\n      }, \n      {\n        "ColType": "Boolean", \n        "ColTitle": "Posting", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "is_no_post"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Name", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "name"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Memo/Description", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "memo"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Account", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "account_name"\n          }\n        ]\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Amount", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "nat_amount"\n          }\n        ]\n      }\n    ]\n  }\n}',
            },
            Generalledger: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/GeneralLedger?start_date=2015-01-01&end_date=2015-06-30&columns=account_name,subt_nat_amount&source_account_type=Bank\\r\\n"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "GeneralLedger", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2015-01-01", \n    "Currency": "USD", \n    "EndPeriod": "2015-06-30", \n    "Time": "2016-03-11T09:11:52-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "82", \n              "value": "Design income"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "id": "82", \n                  "value": "Design income"\n                }, \n                {\n                  "value": "225.0"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "id": "82", \n                  "value": "Design income"\n                }, \n                {\n                  "value": "750.0"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for Design income"\n            }, \n            {\n              "value": "975.0"\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "86", \n              "value": "Discounts given"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "id": "86", \n                  "value": "Discounts given"\n                }, \n                {\n                  "value": "-30.5"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for Discounts given"\n            }, \n            {\n              "value": "-30.5"\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "48", \n              "value": "Job Materials"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "value": "Fountains and Garden Lighting"\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "ColData": [\n                      {\n                        "id": "48", \n                        "value": "Landscaping Services:Job Materials:Fountains and Garden Lighting"\n                      }, \n                      {\n                        "value": "275.0"\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "48", \n                        "value": "Landscaping Services:Job Materials:Fountains and Garden Lighting"\n                      }, \n                      {\n                        "value": "275.0"\n                      }\n                    ], \n                    "type": "Data"\n                  }\n                ]\n              }, \n              "type": "Section", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total for Fountains and Garden Lighting"\n                  }, \n                  {\n                    "value": "1295.0"\n                  }\n                ]\n              }\n            }, \n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "id": "49", \n                    "value": "Plants and Soil"\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "ColData": [\n                      {\n                        "id": "49", \n                        "value": "Landscaping Services:Job Materials:Plants and Soil"\n                      }, \n                      {\n                        "value": "131.25"\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "49", \n                        "value": "Landscaping Services:Job Materials:Plants and Soil"\n                      }, \n                      {\n                        "value": "150.0"\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "49", \n                        "value": "Landscaping Services:Job Materials:Plants and Soil"\n                      }, \n                      {\n                        "value": "-24.36"\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "49", \n                        "value": "Landscaping Services:Job Materials:Plants and Soil"\n                      }, \n                      {\n                        "value": "1750.0"\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "49", \n                        "value": "Landscaping Services:Job Materials:Plants and Soil"\n                      }, \n                      {\n                        "value": "-54.92"\n                      }\n                    ], \n                    "type": "Data"\n                  }\n                ]\n              }, \n              "type": "Section", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total for Plants and Soil"\n                  }, \n                  {\n                    "value": "1951.97"\n                  }\n                ]\n              }\n            }, \n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "id": "50", \n                    "value": "Sprinklers and Drip Systems"\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "ColData": [\n                      {\n                        "id": "50", \n                        "value": "Landscaping Services:Job Materials:Sprinklers and Drip Systems"\n                      }, \n                      {\n                        "value": "60.0"\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "50", \n                        "value": "Landscaping Services:Job Materials:Sprinklers and Drip Systems"\n                      }, \n                      {\n                        "value": "48.0"\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "50", \n                        "value": "Landscaping Services:Job Materials:Sprinklers and Drip Systems"\n                      }, \n                      {\n                        "value": "30.0"\n                      }\n                    ], \n                    "type": "Data"\n                  }\n                ]\n              }, \n              "type": "Section", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total for Sprinklers and Drip Systems"\n                  }, \n                  {\n                    "value": "138.0"\n                  }\n                ]\n              }\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for Job Materials"\n            }, \n            {\n              "value": "3384.97"\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "53", \n              "value": "Labor"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "value": "Maintenance and Repair"\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "ColData": [\n                      {\n                        "id": "53", \n                        "value": "Landscaping Services:Labor:Maintenance and Repair"\n                      }, \n                      {\n                        "value": "50.0"\n                      }\n                    ], \n                    "type": "Data"\n                  }\n                ]\n              }, \n              "type": "Section", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total for Maintenance and Repair"\n                  }, \n                  {\n                    "value": "50.0"\n                  }\n                ]\n              }\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for Labor"\n            }, \n            {\n              "value": "50.0"\n            }\n          ]\n        }\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "accountsTotal for Landscaping Services with sub-accounts."\n            }, \n            {\n              "value": "4474.97"\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "54", \n              "value": "Pest Control Services"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "id": "54", \n                  "value": "Pest Control Services"\n                }, \n                {\n                  "value": "35.0"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "id": "54", \n                  "value": "Pest Control Services"\n                }, \n                {\n                  "value": "35.0"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "id": "54", \n                  "value": "Pest Control Services"\n                }, \n                {\n                  "value": "35.0"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "id": "54", \n                  "value": "Pest Control Services"\n                }, \n                {\n                  "value": "35.0"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "id": "54", \n                  "value": "Pest Control Services"\n                }, \n                {\n                  "value": "-100.0"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for Pest Control Services"\n            }, \n            {\n              "value": "40.0"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "account_name", \n        "ColTitle": "Account"\n      }, \n      {\n        "ColType": "subt_nat_amount", \n        "ColTitle": "Amount"\n      }\n    ]\n  }\n}',
            },
            Purchaseorder: {
                "Delete0-request": '{\n  "SyncToken": "0", \n  "Id": "125"\n}',
                "Delete0-response":
                    '{\n  "PurchaseOrder": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "125"\n  }, \n  "time": "2015-05-26T14:08:39.858-07:00"\n}',
                "Create0-request-xml":
                    '<PurchaseOrder xmlns="http://schema.intuit.com/finance/v3">\r\n    <Line>\r\n        <Id>1</Id>\r\n        <Amount>25.00</Amount>\r\n        <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n        <ItemBasedExpenseLineDetail>\r\n            <ItemRef name="Garden Supplies">38</ItemRef>\r\n            <UnitPrice>25</UnitPrice>\r\n            <Qty>1</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n            <CustomerRef name="Cool Cars">3</CustomerRef>\r\n            <BillableStatus>NotBillable</BillableStatus>\r\n        </ItemBasedExpenseLineDetail>\r\n    </Line>\r\n    <VendorRef name="Hicks Hardware">41</VendorRef>\r\n    <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n    <TotalAmt>25.00</TotalAmt>\r\n</PurchaseOrder>\r\n',
                "Send0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T16:10:33.693-07:00">\r\n    <PurchaseOrder domain="QBO" sparse="false">\r\n        <Id>257</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-28T16:01:47-07:00</CreateTime>\r\n            <LastUpdatedTime>2019-09-19T10:43:46-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <CustomField>\r\n            <DefinitionId>2</DefinitionId>\r\n            <Name>Sales Rep</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1005</DocNumber>\r\n        <TxnDate>2015-07-28</TxnDate>\r\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Amount>25.00</Amount>\r\n            <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n            <ItemBasedExpenseLineDetail>\r\n                <ItemRef name="Garden Supplies">38</ItemRef>\r\n                <UnitPrice>25</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n                <CustomerRef name="Cool Cars">3</CustomerRef>\r\n                <BillableStatus>NotBillable</BillableStatus>\r\n            </ItemBasedExpenseLineDetail>\r\n        </Line>\r\n        <VendorRef name="Hicks Hardware">41</VendorRef>\r\n        <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n        <TotalAmt>25.00</TotalAmt>\r\n        <VendorAddr>\r\n            <Id>120</Id>\r\n            <Line1>Geoff Hicks</Line1>\r\n            <Line2>Hicks Hardware</Line2>\r\n            <Line3>42 Main St.</Line3>\r\n            <Line4>Middlefield, CA 94303</Line4>\r\n        </VendorAddr>\r\n        <ShipAddr>\r\n            <Id>121</Id>\r\n            <Line1>Grace Pariente</Line1>\r\n            <Line2>Cool Cars</Line2>\r\n            <Line3>65 Ocean Dr.</Line3>\r\n            <Line4>Half Moon Bay, CA 94213</Line4>\r\n        </ShipAddr>\r\n        <POStatus>Open</POStatus>\r\n        <POEmail>\r\n            <Address>send_email@intuit.com</Address>\r\n        </POEmail>\r\n    </PurchaseOrder>\r\n</IntuitResponse>\r\n',
                "Delete0-request-xml":
                    '<PurchaseOrder xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>114</Id>\r\n    <SyncToken>0</SyncToken>\r\n</PurchaseOrder>\r\n',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T16:03:19.756-07:00">\r\n    <PurchaseOrder domain="QBO" sparse="false">\r\n        <Id>258</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-28T16:03:18-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-28T16:03:18-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <CustomField>\r\n            <DefinitionId>2</DefinitionId>\r\n            <Name>Sales Rep</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1006</DocNumber>\r\n        <TxnDate>2015-07-28</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Amount>25.00</Amount>\r\n            <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n            <ItemBasedExpenseLineDetail>\r\n                <ItemRef name="Garden Supplies">38</ItemRef>\r\n                <UnitPrice>25</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n                <CustomerRef name="Cool Cars">3</CustomerRef>\r\n                <BillableStatus>NotBillable</BillableStatus>\r\n            </ItemBasedExpenseLineDetail>\r\n        </Line>\r\n        <VendorRef name="Hicks Hardware">41</VendorRef>\r\n        <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n        <TotalAmt>25.00</TotalAmt>\r\n    </PurchaseOrder>\r\n</IntuitResponse>\r\n',
                "Query0-request": "\"select * from PurchaseOrder where Id = '259'\"",
                "Update0-response":
                    '{\n  "PurchaseOrder": {\n    "DocNumber": "1005", \n    "SyncToken": "1", \n    "domain": "QBO", \n    "APAccountRef": {\n      "name": "Accounts Payable (A/P)", \n      "value": "33"\n    }, \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "TxnDate": "2015-07-28", \n    "TotalAmt": 25.0, \n    "ShipAddr": {\n      "Line4": "Half Moon Bay, CA  94213", \n      "Line3": "65 Ocean Dr.", \n      "Id": "121", \n      "Line1": "Grace Pariente", \n      "Line2": "Cool Cars"\n    }, \n    "PrivateNote": "This is a private note added during update.", \n    "VendorAddr": {\n      "Line4": "Middlefield, CA  94303", \n      "Line3": "42 Main St.", \n      "Id": "120", \n      "Line1": "Geoff Hicks", \n      "Line2": "Hicks Hardware"\n    }, \n    "POStatus": "Open", \n    "sparse": false, \n    "VendorRef": {\n      "name": "Hicks Hardware", \n      "value": "41"\n    }, \n    "Line": [\n      {\n        "DetailType": "ItemBasedExpenseLineDetail", \n        "Amount": 25.0, \n        "Id": "1", \n        "ItemBasedExpenseLineDetail": {\n          "ItemRef": {\n            "name": "Garden Supplies", \n            "value": "38"\n          }, \n          "CustomerRef": {\n            "name": "Cool Cars", \n            "value": "3"\n          }, \n          "Qty": 1, \n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "BillableStatus": "NotBillable", \n          "UnitPrice": 25\n        }\n      }\n    ], \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }, \n      {\n        "DefinitionId": "2", \n        "Type": "StringType", \n        "Name": "Sales Rep"\n      }\n    ], \n    "Id": "257", \n    "MetaData": {\n      "CreateTime": "2015-07-28T16:01:47-07:00", \n      "LastUpdatedTime": "2015-07-28T16:17:41-07:00"\n    }\n  }, \n  "time": "2015-07-28T16:17:42.952-07:00"\n}',
                "Update0-request-xml":
                    '<PurchaseOrder xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>257</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2015-07-28T16:01:47-07:00</CreateTime>\r\n        <LastUpdatedTime>2015-07-28T16:01:47-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomField>\r\n        <DefinitionId>1</DefinitionId>\r\n        <Name>Crew #</Name>\r\n        <Type>StringType</Type>\r\n    </CustomField>\r\n    <CustomField>\r\n        <DefinitionId>2</DefinitionId>\r\n        <Name>Sales Rep</Name>\r\n        <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>1005</DocNumber>\r\n    <TxnDate>2015-07-28</TxnDate>\r\n    <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n    <Line>\r\n        <Id>1</Id>\r\n        <Amount>25.00</Amount>\r\n        <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n        <ItemBasedExpenseLineDetail>\r\n            <ItemRef name="Garden Supplies">38</ItemRef>\r\n            <UnitPrice>25</UnitPrice>\r\n            <Qty>1</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n            <CustomerRef name="Cool Cars">3</CustomerRef>\r\n            <BillableStatus>NotBillable</BillableStatus>\r\n        </ItemBasedExpenseLineDetail>\r\n    </Line>\r\n    <VendorRef name="Hicks Hardware">41</VendorRef>\r\n    <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n    <TotalAmt>25.00</TotalAmt>\r\n    <VendorAddr>\r\n        <Id>120</Id>\r\n        <Line1>Geoff Hicks</Line1>\r\n        <Line2>Hicks Hardware</Line2>\r\n        <Line3>42 Main St.</Line3>\r\n        <Line4>Middlefield, CA 94303</Line4>\r\n    </VendorAddr>\r\n    <ShipAddr>\r\n        <Id>121</Id>\r\n        <Line1>Grace Pariente</Line1>\r\n        <Line2>Cool Cars</Line2>\r\n        <Line3>65 Ocean Dr.</Line3>\r\n        <Line4>Half Moon Bay, CA 94213</Line4>\r\n    </ShipAddr>\r\n    <POStatus>Open</POStatus>\r\n    <PrivateNote>This is another private note.</PrivateNote>\r\n</PurchaseOrder>\r\n',
                "Read0-response":
                    '{\n  "PurchaseOrder": {\n    "DocNumber": "1005", \n    "SyncToken": "0", \n    "POEmail": {\n      "Address": "send_email@intuit.com"\n    }, \n    "APAccountRef": {\n      "name": "Accounts Payable (A/P)", \n      "value": "33"\n    }, \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "TxnDate": "2015-07-28", \n    "TotalAmt": 25.0, \n    "ShipAddr": {\n      "Line4": "Half Moon Bay, CA  94213", \n      "Line3": "65 Ocean Dr.", \n      "Id": "121", \n      "Line1": "Grace Pariente", \n      "Line2": "Cool Cars"\n    }, \n    "domain": "QBO", \n    "Id": "257", \n    "POStatus": "Open", \n    "sparse": false, \n    "EmailStatus": "NotSet", \n    "VendorRef": {\n      "name": "Hicks Hardware", \n      "value": "41"\n    }, \n    "Line": [\n      {\n        "DetailType": "ItemBasedExpenseLineDetail", \n        "Amount": 25.0, \n        "Id": "1", \n        "ItemBasedExpenseLineDetail": {\n          "ItemRef": {\n            "name": "Garden Supplies", \n            "value": "38"\n          }, \n          "CustomerRef": {\n            "name": "Cool Cars", \n            "value": "3"\n          }, \n          "Qty": 1, \n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "BillableStatus": "NotBillable", \n          "UnitPrice": 25\n        }\n      }\n    ], \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }, \n      {\n        "DefinitionId": "2", \n        "Type": "StringType", \n        "Name": "Sales Rep"\n      }\n    ], \n    "VendorAddr": {\n      "Line4": "Middlefield, CA  94303", \n      "Line3": "42 Main St.", \n      "Id": "120", \n      "Line1": "Geoff Hicks", \n      "Line2": "Hicks Hardware"\n    }, \n    "MetaData": {\n      "CreateTime": "2015-07-28T16:01:47-07:00", \n      "LastUpdatedTime": "2015-07-28T16:01:47-07:00"\n    }\n  }, \n  "time": "2015-07-28T16:04:49.874-07:00"\n}',
                "Create0-response":
                    '{\n  "PurchaseOrder": {\n    "DocNumber": "1007", \n    "SyncToken": "0", \n    "domain": "QBO", \n    "VendorRef": {\n      "name": "Hicks Hardware", \n      "value": "41"\n    }, \n    "TxnDate": "2015-07-28", \n    "TotalAmt": 25.0, \n    "APAccountRef": {\n      "name": "Accounts Payable (A/P)", \n      "value": "33"\n    }, \n    "EmailStatus": "NotSet", \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "ItemBasedExpenseLineDetail", \n        "Amount": 25.0, \n        "Id": "1", \n        "ItemBasedExpenseLineDetail": {\n          "ItemRef": {\n            "name": "Garden Supplies", \n            "value": "38"\n          }, \n          "CustomerRef": {\n            "name": "Cool Cars", \n            "value": "3"\n          }, \n          "Qty": 1, \n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "BillableStatus": "NotBillable", \n          "UnitPrice": 25\n        }\n      }\n    ], \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }, \n      {\n        "DefinitionId": "2", \n        "Type": "StringType", \n        "Name": "Sales Rep"\n      }\n    ], \n    "Id": "259", \n    "MetaData": {\n      "CreateTime": "2015-07-28T16:06:03-07:00", \n      "LastUpdatedTime": "2015-07-28T16:06:03-07:00"\n    }\n  }, \n  "time": "2015-07-28T16:06:04.864-07:00"\n}',
                "Update0-request":
                    '{\n  "DocNumber": "1005", \n  "SyncToken": "0", \n  "POEmail": {\n    "Address": "send_email@intuit.com"\n  }, \n  "APAccountRef": {\n    "name": "Accounts Payable (A/P)", \n    "value": "33"\n  }, \n  "CurrencyRef": {\n    "name": "United States Dollar", \n    "value": "USD"\n  }, \n  "sparse": false, \n  "TxnDate": "2015-07-28", \n  "TotalAmt": 25.0, \n  "ShipAddr": {\n    "Line4": "Half Moon Bay, CA  94213", \n    "Line3": "65 Ocean Dr.", \n    "Id": "121", \n    "Line1": "Grace Pariente", \n    "Line2": "Cool Cars"\n  }, \n  "PrivateNote": "This is a private note added during update.", \n  "Id": "257", \n  "POStatus": "Open", \n  "domain": "QBO", \n  "VendorRef": {\n    "name": "Hicks Hardware", \n    "value": "41"\n  }, \n  "Line": [\n    {\n      "DetailType": "ItemBasedExpenseLineDetail", \n      "Amount": 25.0, \n      "Id": "1", \n      "ItemBasedExpenseLineDetail": {\n        "ItemRef": {\n          "name": "Garden Supplies", \n          "value": "38"\n        }, \n        "CustomerRef": {\n          "name": "Cool Cars", \n          "value": "3"\n        }, \n        "Qty": 1, \n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "BillableStatus": "NotBillable", \n        "UnitPrice": 25\n      }\n    }\n  ], \n  "CustomField": [\n    {\n      "DefinitionId": "1", \n      "Type": "StringType", \n      "Name": "Crew #"\n    }, \n    {\n      "DefinitionId": "2", \n      "Type": "StringType", \n      "Name": "Sales Rep"\n    }\n  ], \n  "VendorAddr": {\n    "Line4": "Middlefield, CA  94303", \n    "Line3": "42 Main St.", \n    "Id": "120", \n    "Line1": "Geoff Hicks", \n    "Line2": "Hicks Hardware"\n  }, \n  "MetaData": {\n    "CreateTime": "2015-07-28T16:01:47-07:00", \n    "LastUpdatedTime": "2015-07-28T16:01:47-07:00"\n  }\n}',
                "Send0-response":
                    '{\n  "PurchaseOrder": {\n    "DocNumber": "1005", \n    "SyncToken": "0", \n    "POEmail": {\n      "Address": "send_email@intuit.com"\n    }, \n    "APAccountRef": {\n      "name": "Accounts Payable (A/P)", \n      "value": "33"\n    }, \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "TxnDate": "2015-07-28", \n    "TotalAmt": 25.0, \n    "ShipAddr": {\n      "Line4": "Half Moon Bay, CA  94213", \n      "Line3": "65 Ocean Dr.", \n      "Id": "121", \n      "Line1": "Grace Pariente", \n      "Line2": "Cool Cars"\n    }, \n    "domain": "QBO", \n    "Id": "257", \n    "POStatus": "Open", \n    "sparse": false, \n    "EmailStatus": "EmailSent", \n    "VendorRef": {\n      "name": "Hicks Hardware", \n      "value": "41"\n    }, \n    "Line": [\n      {\n        "DetailType": "ItemBasedExpenseLineDetail", \n        "Amount": 25.0, \n        "Id": "1", \n        "ItemBasedExpenseLineDetail": {\n          "ItemRef": {\n            "name": "Garden Supplies", \n            "value": "38"\n          }, \n          "CustomerRef": {\n            "name": "Cool Cars", \n            "value": "3"\n          }, \n          "Qty": 1, \n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "BillableStatus": "NotBillable", \n          "UnitPrice": 25\n        }\n      }\n    ], \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }, \n      {\n        "DefinitionId": "2", \n        "Type": "StringType", \n        "Name": "Sales Rep"\n      }\n    ], \n    "VendorAddr": {\n      "Line4": "Middlefield, CA  94303", \n      "Line3": "42 Main St.", \n      "Id": "120", \n      "Line1": "Geoff Hicks", \n      "Line2": "Hicks Hardware"\n    }, \n    "MetaData": {\n      "CreateTime": "2015-07-28T16:01:47-07:00", \n      "LastUpdatedTime": "2019-09-19T10:43:46-07:00"\n    }\n  }, \n  "time": "2019-09-19T10:43:46-07:00"\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T16:10:33.693-07:00">\r\n    <PurchaseOrder domain="QBO" sparse="false">\r\n        <Id>257</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-28T16:01:47-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-28T16:01:47-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <CustomField>\r\n            <DefinitionId>2</DefinitionId>\r\n            <Name>Sales Rep</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1005</DocNumber>\r\n        <TxnDate>2015-07-28</TxnDate>\r\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Amount>25.00</Amount>\r\n            <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n            <ItemBasedExpenseLineDetail>\r\n                <ItemRef name="Garden Supplies">38</ItemRef>\r\n                <UnitPrice>25</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n                <CustomerRef name="Cool Cars">3</CustomerRef>\r\n                <BillableStatus>NotBillable</BillableStatus>\r\n            </ItemBasedExpenseLineDetail>\r\n        </Line>\r\n        <VendorRef name="Hicks Hardware">41</VendorRef>\r\n        <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n        <TotalAmt>25.00</TotalAmt>\r\n        <VendorAddr>\r\n            <Id>120</Id>\r\n            <Line1>Geoff Hicks</Line1>\r\n            <Line2>Hicks Hardware</Line2>\r\n            <Line3>42 Main St.</Line3>\r\n            <Line4>Middlefield, CA 94303</Line4>\r\n        </VendorAddr>\r\n        <ShipAddr>\r\n            <Id>121</Id>\r\n            <Line1>Grace Pariente</Line1>\r\n            <Line2>Cool Cars</Line2>\r\n            <Line3>65 Ocean Dr.</Line3>\r\n            <Line4>Half Moon Bay, CA 94213</Line4>\r\n        </ShipAddr>\r\n        <POStatus>Open</POStatus>\r\n    </PurchaseOrder>\r\n</IntuitResponse>\r\n',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T16:19:46.916-07:00">\r\n    <PurchaseOrder domain="QBO" sparse="false">\r\n        <Id>257</Id>\r\n        <SyncToken>2</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-28T16:01:47-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-28T16:19:45-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <CustomField>\r\n            <DefinitionId>2</DefinitionId>\r\n            <Name>Sales Rep</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1005</DocNumber>\r\n        <TxnDate>2015-07-28</TxnDate>\r\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n        <PrivateNote>This is another private note.</PrivateNote>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Amount>25.00</Amount>\r\n            <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n            <ItemBasedExpenseLineDetail>\r\n                <ItemRef name="Garden Supplies">38</ItemRef>\r\n                <UnitPrice>25</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n                <CustomerRef name="Cool Cars">3</CustomerRef>\r\n                <BillableStatus>NotBillable</BillableStatus>\r\n            </ItemBasedExpenseLineDetail>\r\n        </Line>\r\n        <VendorRef name="Hicks Hardware">41</VendorRef>\r\n        <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n        <TotalAmt>25.00</TotalAmt>\r\n        <VendorAddr>\r\n            <Id>120</Id>\r\n            <Line1>Geoff Hicks</Line1>\r\n            <Line2>Hicks Hardware</Line2>\r\n            <Line3>42 Main St.</Line3>\r\n            <Line4>Middlefield, CA 94303</Line4>\r\n        </VendorAddr>\r\n        <ShipAddr>\r\n            <Id>121</Id>\r\n            <Line1>Grace Pariente</Line1>\r\n            <Line2>Cool Cars</Line2>\r\n            <Line3>65 Ocean Dr.</Line3>\r\n            <Line4>Half Moon Bay, CA 94213</Line4>\r\n        </ShipAddr>\r\n        <POStatus>Open</POStatus>\r\n    </PurchaseOrder>\r\n</IntuitResponse>\r\n',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-05-26T14:10:17.544-07:00">\r\n    <PurchaseOrder domain="QBO" status="Deleted">\r\n        <Id>114</Id>\r\n    </PurchaseOrder>\r\n</IntuitResponse>\r\n',
                "Create0-request":
                    '{\n  "TotalAmt": 25.0, \n  "Line": [\n    {\n      "DetailType": "ItemBasedExpenseLineDetail", \n      "Amount": 25.0, \n      "Id": "1", \n      "ItemBasedExpenseLineDetail": {\n        "ItemRef": {\n          "name": "Garden Supplies", \n          "value": "38"\n        }, \n        "CustomerRef": {\n          "name": "Cool Cars", \n          "value": "3"\n        }, \n        "Qty": 1, \n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "BillableStatus": "NotBillable", \n        "UnitPrice": 25\n      }\n    }\n  ], \n  "APAccountRef": {\n    "name": "Accounts Payable (A/P)", \n    "value": "33"\n  }, \n  "VendorRef": {\n    "name": "Hicks Hardware", \n    "value": "41"\n  }, \n  "ShipTo": {\n    "name": "Jeff\'s Jalopies", \n    "value": "12"\n  }\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T16:08:50.873-07:00">\r\n    <QueryResponse startPosition="1" maxResults="1" totalCount="1">\r\n        <PurchaseOrder domain="QBO" sparse="false">\r\n            <Id>259</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-07-28T16:06:03-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-28T16:06:03-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <CustomField>\r\n                <DefinitionId>1</DefinitionId>\r\n                <Name>Crew #</Name>\r\n                <Type>StringType</Type>\r\n            </CustomField>\r\n            <CustomField>\r\n                <DefinitionId>2</DefinitionId>\r\n                <Name>Sales Rep</Name>\r\n                <Type>StringType</Type>\r\n            </CustomField>\r\n            <DocNumber>1007</DocNumber>\r\n            <TxnDate>2015-07-28</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Amount>25.00</Amount>\r\n                <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n                <ItemBasedExpenseLineDetail>\r\n                    <ItemRef name="Garden Supplies">38</ItemRef>\r\n                    <UnitPrice>25</UnitPrice>\r\n                    <Qty>1</Qty>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                    <CustomerRef name="Cool Cars">3</CustomerRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                </ItemBasedExpenseLineDetail>\r\n            </Line>\r\n            <VendorRef name="Hicks Hardware">41</VendorRef>\r\n            <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n            <TotalAmt>25.00</TotalAmt>\r\n        </PurchaseOrder>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Query0-request-xml": "select * from PurchaseOrder where Id = '259'",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 1, \n    "PurchaseOrder": [\n      {\n        "DocNumber": "1007", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Hicks Hardware", \n          "value": "41"\n        }, \n        "TxnDate": "2015-07-28", \n        "TotalAmt": 25.0, \n        "APAccountRef": {\n          "name": "Accounts Payable (A/P)", \n          "value": "33"\n        }, \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "ItemBasedExpenseLineDetail", \n            "Amount": 25.0, \n            "Id": "1", \n            "ItemBasedExpenseLineDetail": {\n              "ItemRef": {\n                "name": "Garden Supplies", \n                "value": "38"\n              }, \n              "CustomerRef": {\n                "name": "Cool Cars", \n                "value": "3"\n              }, \n              "Qty": 1, \n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "BillableStatus": "NotBillable", \n              "UnitPrice": 25\n            }\n          }\n        ], \n        "CustomField": [\n          {\n            "DefinitionId": "1", \n            "Type": "StringType", \n            "Name": "Crew #"\n          }, \n          {\n            "DefinitionId": "2", \n            "Type": "StringType", \n            "Name": "Sales Rep"\n          }\n        ], \n        "Id": "259", \n        "MetaData": {\n          "CreateTime": "2015-07-28T16:06:03-07:00", \n          "LastUpdatedTime": "2015-07-28T16:06:03-07:00"\n        }\n      }\n    ], \n    "maxResults": 1\n  }, \n  "time": "2015-07-28T16:09:26.277-07:00"\n}',
            },
            Accountlistdetail: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/AccountList?columns=account_name,account_type&account_type=Income\\n"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "AccountList", \n    "Currency": "USD", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "Time": "2016-03-08T11:56:36-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "value": "Billable Expense Income"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Design income"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Discounts given"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Fees Billed"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Landscaping Services"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Landscaping Services:Job Materials"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Landscaping Services:Job Materials:Decks and Patios"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Landscaping Services:Job Materials:Fountains and Garden Lighting"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Landscaping Services:Job Materials:Plants and Soil"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Landscaping Services:Job Materials:Sprinklers and Drip Systems"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Landscaping Services:Labor"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Landscaping Services:Labor:Installation"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Landscaping Services:Labor:Maintenance and Repair"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Other Income"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Pest Control Services"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Refunds-Allowances"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Sales of Product Income"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Services"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Shipping Income"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Unapplied Cash Payment Income"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Uncategorized Income"\n          }, \n          {\n            "value": "Income"\n          }\n        ], \n        "type": "Data"\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "account_name", \n        "ColTitle": "Account"\n      }, \n      {\n        "ColType": "account_type", \n        "ColTitle": "Type"\n      }\n    ]\n  }\n}',
            },
            Transfer: {
                "Delete0-request":
                    '{\n  "SyncToken": "2", \n  "domain": "QBO", \n  "TxnDate": "2015-02-06", \n  "ToAccountRef": {\n    "name": "Savings", \n    "value": "36"\n  }, \n  "Amount": 6600.0, \n  "sparse": false, \n  "Id": "170", \n  "FromAccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }\n}',
                "Query0-request-xml": "select * from Transfer where id = '171'",
                "Read0-response":
                    '{\n  "Transfer": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "TxnDate": "2015-02-06", \n    "ToAccountRef": {\n      "name": "Savings", \n      "value": "36"\n    }, \n    "Amount": 120.0, \n    "sparse": false, \n    "Id": "170", \n    "FromAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "MetaData": {\n      "CreateTime": "2015-02-06T11:06:12-08:00", \n      "LastUpdatedTime": "2015-02-06T11:06:12-08:00"\n    }\n  }, \n  "time": "2015-02-06T11:06:12.017-08:00"\n}',
                "Update1-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>\r\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-02-06T13:38:32.271-08:00">\r\n    <Transfer domain="QBO" sparse="false">\r\n        <Id>169</Id>\r\n        <SyncToken>2</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-02-06T11:04:28-08:00</CreateTime>\r\n            <LastUpdatedTime>2015-02-06T13:38:32-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2015-02-06</TxnDate>\r\n        <FromAccountRef name="Checking">35</FromAccountRef>\r\n        <ToAccountRef name="Savings">36</ToAccountRef>\r\n        <Amount>880.00</Amount>\r\n    </Transfer>\r\n</IntuitResponse>',
                "Update1-request-xml":
                    '<Transfer xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>169</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <FromAccountRef name="Checking">35</FromAccountRef>\r\n    <ToAccountRef name="Savings">36</ToAccountRef>\r\n    <Amount>880.00</Amount>\r\n</Transfer>',
                "Update0-response":
                    '{\n  "Transfer": {\n    "SyncToken": "1", \n    "domain": "QBO", \n    "TxnDate": "2015-02-06", \n    "ToAccountRef": {\n      "name": "Savings", \n      "value": "36"\n    }, \n    "Amount": 550.0, \n    "sparse": false, \n    "Id": "170", \n    "FromAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "MetaData": {\n      "CreateTime": "2015-02-06T11:06:12-08:00", \n      "LastUpdatedTime": "2015-02-06T11:11:36-08:00"\n    }\n  }, \n  "time": "2015-02-06T11:11:36.026-08:00"\n}',
                "Create0-response":
                    '{\n  "Transfer": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "TxnDate": "2015-02-06", \n    "ToAccountRef": {\n      "name": "Savings", \n      "value": "36"\n    }, \n    "Amount": 120.0, \n    "sparse": false, \n    "Id": "170", \n    "FromAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "MetaData": {\n      "CreateTime": "2015-02-06T11:06:12-08:00", \n      "LastUpdatedTime": "2015-02-06T11:06:12-08:00"\n    }\n  }, \n  "time": "2015-02-06T11:06:12.017-08:00"\n}',
                "Update1-request":
                    '{\n  "SyncToken": "1", \n  "domain": "QBO", \n  "ToAccountRef": {\n    "name": "Savings", \n    "value": "36"\n  }, \n  "Amount": 660.0, \n  "sparse": true, \n  "Id": "170", \n  "FromAccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }\n}',
                "Create0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>\r\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-02-06T13:30:39.230-08:00">\r\n    <Transfer domain="QBO" sparse="false">\r\n        <Id>171</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-02-06T13:30:39-08:00</CreateTime>\r\n            <LastUpdatedTime>2015-02-06T13:30:39-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2015-02-06</TxnDate>\r\n        <FromAccountRef name="Checking">35</FromAccountRef>\r\n        <ToAccountRef name="Savings">36</ToAccountRef>\r\n        <Amount>320.00</Amount>\r\n    </Transfer>\r\n</IntuitResponse>\r\n',
                "Delete0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>\r\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-02-06T13:41:29.233-08:00">\r\n    <Transfer domain="QBO" status="Deleted">\r\n        <Id>169</Id>\r\n    </Transfer>\r\n</IntuitResponse>\r\n',
                "Create0-request":
                    '{\n  "Amount": "120.00", \n  "ToAccountRef": {\n    "name": "Savings", \n    "value": "36"\n  }, \n  "FromAccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }\n}',
                "Query0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>\r\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-02-06T13:31:47.938-08:00">\r\n    <QueryResponse startPosition="1" maxResults="1" totalCount="1">\r\n        <Transfer domain="QBO" sparse="false">\r\n            <Id>171</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-02-06T13:30:39-08:00</CreateTime>\r\n                <LastUpdatedTime>2015-02-06T13:30:39-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2015-02-06</TxnDate>\r\n            <FromAccountRef name="Checking">35</FromAccountRef>\r\n            <ToAccountRef name="Savings">36</ToAccountRef>\r\n            <Amount>320.00</Amount>\r\n        </Transfer>\r\n    </QueryResponse>\r\n</IntuitResponse>',
                "Query0-request": '"select * from Transfer"',
                "Read0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>\r\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-02-06T13:25:03.406-08:00">\r\n    <Transfer domain="QBO" sparse="false">\r\n        <Id>169</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-02-06T11:04:28-08:00</CreateTime>\r\n            <LastUpdatedTime>2015-02-06T11:04:28-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2015-02-06</TxnDate>\r\n        <FromAccountRef name="Checking">35</FromAccountRef>\r\n        <ToAccountRef name="Savings">36</ToAccountRef>\r\n        <Amount>120.00</Amount>\r\n    </Transfer>\r\n</IntuitResponse>\r\n',
                "Update0-request-xml":
                    '<Transfer xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>169</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <TxnDate>2015-02-06</TxnDate>\r\n    <FromAccountRef name="Checking">35</FromAccountRef>\r\n    <ToAccountRef name="Savings">36</ToAccountRef>\r\n    <Amount>770.00</Amount>\r\n</Transfer>',
                "Delete0-response":
                    '{\n  "Transfer": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "170"\n  }, \n  "time": "2015-02-06T11:22:26.347-08:00"\n}',
                "Delete0-request-xml":
                    '<Transfer xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>169</Id>\r\n    <SyncToken>2</SyncToken>\r\n    <TxnDate>2015-02-06</TxnDate>\r\n    <FromAccountRef name="Checking">35</FromAccountRef>\r\n    <ToAccountRef name="Savings">36</ToAccountRef>\r\n    <Amount>880.00</Amount>\r\n</Transfer>',
                "Update0-request":
                    '{\n  "SyncToken": "0", \n  "domain": "QBO", \n  "TxnDate": "2015-02-06", \n  "ToAccountRef": {\n    "name": "Savings", \n    "value": "36"\n  }, \n  "Amount": 550.0, \n  "sparse": false, \n  "Id": "170", \n  "FromAccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }, \n  "MetaData": {\n    "CreateTime": "2015-02-06T11:06:12-08:00", \n    "LastUpdatedTime": "2015-02-06T11:06:12-08:00"\n  }\n}',
                "Update0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>\r\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-02-06T13:37:04.807-08:00">\r\n    <Transfer domain="QBO" sparse="false">\r\n        <Id>169</Id>\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-02-06T11:04:28-08:00</CreateTime>\r\n            <LastUpdatedTime>2015-02-06T13:37:04-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2015-02-06</TxnDate>\r\n        <FromAccountRef name="Checking">35</FromAccountRef>\r\n        <ToAccountRef name="Savings">36</ToAccountRef>\r\n        <Amount>770.00</Amount>\r\n    </Transfer>\r\n</IntuitResponse>\r\n',
                "Create0-request-xml":
                    '<Transfer xmlns="http://schema.intuit.com/finance/v3" sparse="false" domain="QBO">\r\n    <FromAccountRef name="Checking">35</FromAccountRef>\r\n    <ToAccountRef name="Savings">36</ToAccountRef>\r\n    <Amount>320.00</Amount>\r\n</Transfer>\r\n\r\n',
                "Update1-response":
                    '{\n  "Transfer": {\n    "SyncToken": "2", \n    "domain": "QBO", \n    "TxnDate": "2015-02-06", \n    "ToAccountRef": {\n      "name": "Savings", \n      "value": "36"\n    }, \n    "Amount": 660.0, \n    "sparse": false, \n    "Id": "170", \n    "FromAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "MetaData": {\n      "CreateTime": "2015-02-06T11:06:12-08:00", \n      "LastUpdatedTime": "2015-02-06T11:16:06-08:00"\n    }\n  }, \n  "time": "2015-02-06T11:16:06.672-08:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "Transfer": [\n      {\n        "SyncToken": "2", \n        "domain": "QBO", \n        "TxnDate": "2015-02-06", \n        "ToAccountRef": {\n          "name": "Savings", \n          "value": "36"\n        }, \n        "Amount": 660.0, \n        "sparse": false, \n        "Id": "170", \n        "FromAccountRef": {\n          "name": "Checking", \n          "value": "35"\n        }, \n        "MetaData": {\n          "CreateTime": "2015-02-06T11:06:12-08:00", \n          "LastUpdatedTime": "2015-02-06T11:16:06-08:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "TxnDate": "2015-02-06", \n        "ToAccountRef": {\n          "name": "Savings", \n          "value": "36"\n        }, \n        "Amount": 120.0, \n        "sparse": false, \n        "Id": "169", \n        "FromAccountRef": {\n          "name": "Checking", \n          "value": "35"\n        }, \n        "MetaData": {\n          "CreateTime": "2015-02-06T11:04:28-08:00", \n          "LastUpdatedTime": "2015-02-06T11:04:28-08:00"\n        }\n      }\n    ], \n    "maxResults": 2, \n    "totalCount": 2\n  }, \n  "time": "2015-02-06T11:17:10.153-08:00"\n}',
            },
            Term: {
                "Create0-request-xml":
                    '<Term xmlns="http://schema.intuit.com/finance/v3">\r\n            <Name>Net 45</Name>\r\n            <DueDays>45</DueDays>\r\n</Term>',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T08:31:48.263-07:00">\r\n    <QueryResponse startPosition="1" maxResults="6">\r\n        <Term domain="QBO" sparse="false">\r\n            <Id>1</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-11T14:41:49-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-11T14:41:49-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>Due on receipt</Name>\r\n            <Active>true</Active>\r\n            <Type>STANDARD</Type>\r\n            <DiscountPercent>0</DiscountPercent>\r\n            <DueDays>0</DueDays>\r\n            <DiscountDays>0</DiscountDays>\r\n        </Term>\r\n        <Term domain="QBO" sparse="false">\r\n            <Id>5</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-16T15:24:26-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-16T15:24:26-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>Net 10</Name>\r\n            <Active>true</Active>\r\n            <Type>STANDARD</Type>\r\n            <DiscountPercent>0</DiscountPercent>\r\n            <DueDays>10</DueDays>\r\n        </Term>\r\n        <Term domain="QBO" sparse="false">\r\n            <Id>2</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-11T14:41:49-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-11T14:41:49-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>Net 15</Name>\r\n            <Active>true</Active>\r\n            <Type>STANDARD</Type>\r\n            <DiscountPercent>0</DiscountPercent>\r\n            <DueDays>15</DueDays>\r\n            <DiscountDays>0</DiscountDays>\r\n        </Term>\r\n        <Term domain="QBO" sparse="false">\r\n            <Id>3</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-11T14:41:49-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-11T14:41:49-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>Net 30</Name>\r\n            <Active>true</Active>\r\n            <Type>STANDARD</Type>\r\n            <DiscountPercent>0</DiscountPercent>\r\n            <DueDays>30</DueDays>\r\n            <DiscountDays>0</DiscountDays>\r\n        </Term>\r\n        <Term domain="QBO" sparse="false">\r\n            <Id>4</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-11T14:41:49-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-11T14:41:49-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>Net 60</Name>\r\n            <Active>true</Active>\r\n            <Type>STANDARD</Type>\r\n            <DiscountPercent>0</DiscountPercent>\r\n            <DueDays>60</DueDays>\r\n            <DiscountDays>0</DiscountDays>\r\n        </Term>\r\n        <Term domain="QBO" sparse="false">\r\n            <Id>6</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-01-29T08:27:32-08:00</CreateTime>\r\n                <LastUpdatedTime>2015-01-29T08:27:32-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>TermForV3Testing-1373590184130</Name>\r\n            <Active>true</Active>\r\n            <Type>DATE_DRIVEN</Type>\r\n            <DiscountPercent>0</DiscountPercent>\r\n            <DayOfMonthDue>1</DayOfMonthDue>\r\n        </Term>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T08:48:33.773-07:00">\r\n    <Term domain="QBO" sparse="false">\r\n        <Id>7</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-28T08:48:32-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-28T08:48:32-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>Net 45</Name>\r\n        <Active>true</Active>\r\n        <Type>STANDARD</Type>\r\n        <DiscountPercent>0</DiscountPercent>\r\n        <DueDays>45</DueDays>\r\n    </Term>\r\n</IntuitResponse>\r\n',
                "Query0-request": '"select * from Term"',
                "Update0-response":
                    '{\n  "Term": {\n    "SyncToken": "1", \n    "domain": "QBO", \n    "Name": "Net 30", \n    "DiscountPercent": 0, \n    "DiscountDays": 10, \n    "Type": "STANDARD", \n    "sparse": false, \n    "Active": true, \n    "DueDays": 30, \n    "Id": "3", \n    "MetaData": {\n      "CreateTime": "2014-09-11T14:41:49-07:00", \n      "LastUpdatedTime": "2015-07-28T08:55:59-07:00"\n    }\n  }, \n  "time": "2015-07-28T08:55:59.916-07:00"\n}',
                "Update0-request-xml":
                    '<Term xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n    <Id>4</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-11T14:41:49-07:00</CreateTime>\r\n      <LastUpdatedTime>2014-09-11T14:41:49-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Net 60</Name>\r\n    <Active>true</Active>\r\n    <Type>STANDARD</Type>\r\n    <DiscountPercent>0</DiscountPercent>\r\n    <DueDays>60</DueDays>\r\n    <DiscountDays>10</DiscountDays>\r\n</Term>',
                "Read0-response":
                    '{\n  "Term": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "Name": "Net 60", \n    "DiscountPercent": 0, \n    "DiscountDays": 0, \n    "Type": "STANDARD", \n    "sparse": false, \n    "Active": true, \n    "DueDays": 60, \n    "Id": "4", \n    "MetaData": {\n      "CreateTime": "2014-09-11T14:41:49-07:00", \n      "LastUpdatedTime": "2014-09-11T14:41:49-07:00"\n    }\n  }, \n  "time": "2015-07-28T08:52:57.63-07:00"\n}',
                "Create0-response":
                    '{\n  "Term": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "Name": "Term120", \n    "DiscountPercent": 0, \n    "Type": "STANDARD", \n    "sparse": false, \n    "Active": true, \n    "DueDays": 120, \n    "Id": "8", \n    "MetaData": {\n      "CreateTime": "2015-07-28T08:50:59-07:00", \n      "LastUpdatedTime": "2015-07-28T08:50:59-07:00"\n    }\n  }, \n  "time": "2015-07-28T08:51:00.627-07:00"\n}',
                "Update0-request":
                    '{\n  "SyncToken": "0", \n  "domain": "QBO", \n  "Name": "Net 30", \n  "DiscountPercent": 0, \n  "DiscountDays": 10, \n  "Type": "STANDARD", \n  "sparse": false, \n  "Active": true, \n  "DueDays": 30, \n  "Id": "3", \n  "MetaData": {\n    "CreateTime": "2014-09-11T14:41:49-07:00", \n    "LastUpdatedTime": "2014-09-11T14:41:49-07:00"\n  }\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T08:53:15.475-07:00">\r\n  <Term domain="QBO" sparse="false">\r\n    <Id>4</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-11T14:41:49-07:00</CreateTime>\r\n      <LastUpdatedTime>2014-09-11T14:41:49-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Net 60</Name>\r\n    <Active>true</Active>\r\n    <Type>STANDARD</Type>\r\n    <DiscountPercent>0</DiscountPercent>\r\n    <DueDays>60</DueDays>\r\n    <DiscountDays>0</DiscountDays>\r\n  </Term>\r\n</IntuitResponse>',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T08:54:40.563-07:00">\r\n  <Term domain="QBO" sparse="false">\r\n    <Id>4</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-11T14:41:49-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-28T08:54:40-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Net 60</Name>\r\n    <Active>true</Active>\r\n    <Type>STANDARD</Type>\r\n    <DiscountPercent>0</DiscountPercent>\r\n    <DueDays>60</DueDays>\r\n    <DiscountDays>10</DiscountDays>\r\n  </Term>\r\n</IntuitResponse>',
                "Create0-request": '{\n  "DueDays": "120", \n  "Name": "Term120"\n}',
                "Query0-request-xml": "select * from Term",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "Term": [\n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "Due on receipt", \n        "DiscountPercent": 0, \n        "DiscountDays": 0, \n        "Type": "STANDARD", \n        "sparse": false, \n        "Active": true, \n        "DueDays": 0, \n        "Id": "1", \n        "MetaData": {\n          "CreateTime": "2014-09-11T14:41:49-07:00", \n          "LastUpdatedTime": "2014-09-11T14:41:49-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "Net 10", \n        "DiscountPercent": 0, \n        "Type": "STANDARD", \n        "sparse": false, \n        "Active": true, \n        "DueDays": 10, \n        "Id": "5", \n        "MetaData": {\n          "CreateTime": "2014-09-16T15:24:26-07:00", \n          "LastUpdatedTime": "2014-09-16T15:24:26-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "Net 15", \n        "DiscountPercent": 0, \n        "DiscountDays": 0, \n        "Type": "STANDARD", \n        "sparse": false, \n        "Active": true, \n        "DueDays": 15, \n        "Id": "2", \n        "MetaData": {\n          "CreateTime": "2014-09-11T14:41:49-07:00", \n          "LastUpdatedTime": "2014-09-11T14:41:49-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "Net 30", \n        "DiscountPercent": 0, \n        "DiscountDays": 0, \n        "Type": "STANDARD", \n        "sparse": false, \n        "Active": true, \n        "DueDays": 30, \n        "Id": "3", \n        "MetaData": {\n          "CreateTime": "2014-09-11T14:41:49-07:00", \n          "LastUpdatedTime": "2014-09-11T14:41:49-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "Net 60", \n        "DiscountPercent": 0, \n        "DiscountDays": 0, \n        "Type": "STANDARD", \n        "sparse": false, \n        "Active": true, \n        "DueDays": 60, \n        "Id": "4", \n        "MetaData": {\n          "CreateTime": "2014-09-11T14:41:49-07:00", \n          "LastUpdatedTime": "2014-09-11T14:41:49-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DayOfMonthDue": 1, \n        "Name": "TermForV3Testing-1373590184130", \n        "DiscountPercent": 0, \n        "sparse": false, \n        "Active": true, \n        "Type": "DATE_DRIVEN", \n        "Id": "6", \n        "MetaData": {\n          "CreateTime": "2015-01-29T08:27:32-08:00", \n          "LastUpdatedTime": "2015-01-29T08:27:32-08:00"\n        }\n      }\n    ], \n    "maxResults": 6\n  }, \n  "time": "2015-07-28T08:26:23.942-07:00"\n}',
            },
            Profitandloss: {
                "Query0-request":
                    '"BaseURL/v3/company/companyId/reports/ProfitAndLoss?start_date=2015-06-01&end_date=2015-06-30&customer=1"',
                "Query0-response":
                    '{\n  "Header": {\n    "Customer": "1", \n    "ReportName": "ProfitAndLoss", \n    "Option": [\n      {\n        "Name": "AccountingStandard", \n        "Value": "GAAP"\n      }, \n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2015-06-01", \n    "Currency": "USD", \n    "EndPeriod": "2015-06-30", \n    "Time": "2016-03-03T13:00:18-08:00", \n    "SummarizeColumnsBy": "Total"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "Income"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "id": "45", \n                    "value": "Landscaping Services"\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "Header": {\n                      "ColData": [\n                        {\n                          "id": "46", \n                          "value": "Job Materials"\n                        }, \n                        {\n                          "value": ""\n                        }\n                      ]\n                    }, \n                    "Rows": {\n                      "Row": [\n                        {\n                          "ColData": [\n                            {\n                              "id": "48", \n                              "value": "Fountains and Garden Lighting"\n                            }, \n                            {\n                              "value": "275.00"\n                            }\n                          ], \n                          "type": "Data"\n                        }, \n                        {\n                          "ColData": [\n                            {\n                              "id": "49", \n                              "value": "Plants and Soil"\n                            }, \n                            {\n                              "value": "150.00"\n                            }\n                          ], \n                          "type": "Data"\n                        }\n                      ]\n                    }, \n                    "type": "Section", \n                    "Summary": {\n                      "ColData": [\n                        {\n                          "value": "Total Job Materials"\n                        }, \n                        {\n                          "value": "425.00"\n                        }\n                      ]\n                    }\n                  }\n                ]\n              }, \n              "type": "Section", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total Landscaping Services"\n                  }, \n                  {\n                    "value": "425.00"\n                  }\n                ]\n              }\n            }, \n            {\n              "ColData": [\n                {\n                  "id": "54", \n                  "value": "Pest Control Services"\n                }, \n                {\n                  "value": "-100.00"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "group": "Income", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total Income"\n            }, \n            {\n              "value": "325.00"\n            }\n          ]\n        }\n      }, \n      {\n        "group": "GrossProfit", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Gross Profit"\n            }, \n            {\n              "value": "325.00"\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "Expenses"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "type": "Section", \n        "group": "Expenses", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total Expenses"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }\n      }, \n      {\n        "group": "NetOperatingIncome", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Net Operating Income"\n            }, \n            {\n              "value": "325.00"\n            }\n          ]\n        }\n      }, \n      {\n        "group": "NetIncome", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Net Income"\n            }, \n            {\n              "value": "325.00"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Account", \n        "ColTitle": "", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "account"\n          }\n        ]\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "total"\n          }\n        ]\n      }\n    ]\n  }\n}',
            },
            Customerbalancedetail: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/CustomerBalancedDetail?customer=1&start_duedate=2015-08-01&end_duedate=2015-09-30&columns=subt_amount,tx_date"',
                "Query0-response":
                    '{\n  "Header": {\n    "Customer": "1", \n    "ReportName": "CustomerBalanceDetail", \n    "Option": [\n      {\n        "Name": "report_date", \n        "Value": "2016-03-10"\n      }, \n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "all", \n    "Currency": "USD", \n    "Time": "2016-03-10T13:43:05-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "1", \n              "value": "Amy\'s Bird Sanctuary"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "2015-08-04"\n                }, \n                {\n                  "value": "100.0"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2015-08-04"\n                }, \n                {\n                  "value": "109.1"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2015-08-04"\n                }, \n                {\n                  "value": "109.1"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2015-08-04"\n                }, \n                {\n                  "value": "109.2"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2015-08-04"\n                }, \n                {\n                  "value": "109.2"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2015-08-04"\n                }, \n                {\n                  "value": "109.1"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2015-08-04"\n                }, \n                {\n                  "value": "100.0"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2015-08-04"\n                }, \n                {\n                  "value": "109.1"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for Amy\'s Bird Sanctuary"\n            }, \n            {\n              "value": "854.8"\n            }\n          ]\n        }\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": "854.8"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "tx_date", \n        "ColTitle": "Date"\n      }, \n      {\n        "ColType": "subt_amount", \n        "ColTitle": "Amount"\n      }\n    ]\n  }\n}',
            },
            Paymentmethod: {
                "Create0-request-xml":
                    '<PaymentMethod xmlns="http://schema.intuit.com/finance/v3">\r\n   <Name>Cashier\'s Check</Name>\r\n</PaymentMethod>',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T15:26:12.990-07:00">\r\n  <QueryResponse startPosition="1" maxResults="7">\r\n    <PaymentMethod domain="QBO" sparse="false">\r\n      <Id>6</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-11T14:42:05-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-11T14:42:05-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>American Express</Name>\r\n      <Active>true</Active>\r\n      <Type>CREDIT_CARD</Type>\r\n    </PaymentMethod>\r\n    <PaymentMethod domain="QBO" sparse="false">\r\n      <Id>1</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-11T14:42:05-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-11T14:42:05-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>Cash</Name>\r\n      <Active>true</Active>\r\n      <Type>NON_CREDIT_CARD</Type>\r\n    </PaymentMethod>\r\n    <PaymentMethod domain="QBO" sparse="false">\r\n      <Id>2</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-11T14:42:05-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-11T14:42:05-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>Check</Name>\r\n      <Active>true</Active>\r\n      <Type>NON_CREDIT_CARD</Type>\r\n    </PaymentMethod>\r\n    <PaymentMethod domain="QBO" sparse="false">\r\n      <Id>7</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-11T14:42:05-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-11T14:42:05-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>Diners Club</Name>\r\n      <Active>true</Active>\r\n      <Type>CREDIT_CARD</Type>\r\n    </PaymentMethod>\r\n    <PaymentMethod domain="QBO" sparse="false">\r\n      <Id>5</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-11T14:42:05-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-11T14:42:05-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>Discover</Name>\r\n      <Active>true</Active>\r\n      <Type>CREDIT_CARD</Type>\r\n    </PaymentMethod>\r\n    <PaymentMethod domain="QBO" sparse="false">\r\n      <Id>4</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-11T14:42:05-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-11T14:42:05-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>MasterCard</Name>\r\n      <Active>true</Active>\r\n      <Type>CREDIT_CARD</Type>\r\n    </PaymentMethod>\r\n    <PaymentMethod domain="QBO" sparse="false">\r\n      <Id>3</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-11T14:42:05-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-11T14:42:05-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>Visa</Name>\r\n      <Active>true</Active>\r\n      <Type>CREDIT_CARD</Type>\r\n    </PaymentMethod>\r\n  </QueryResponse>\r\n</IntuitResponse>',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T15:38:39.094-07:00">\r\n  <PaymentMethod domain="QBO" sparse="false">\r\n    <Id>11</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-07-24T15:38:39-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-24T15:38:39-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Cashier\'s Check</Name>\r\n    <Active>true</Active>\r\n    <Type>NON_CREDIT_CARD</Type>\r\n  </PaymentMethod>\r\n</IntuitResponse>',
                "Query0-request": '"select * from PaymentMethod"',
                "Update0-response":
                    '{\n  "PaymentMethod": {\n    "SyncToken": "2", \n    "domain": "QBO", \n    "Name": "Platinum Diners Club", \n    "sparse": false, \n    "Active": true, \n    "Type": "CREDIT_CARD", \n    "Id": "7", \n    "MetaData": {\n      "CreateTime": "2014-09-11T14:42:05-07:00", \n      "LastUpdatedTime": "2015-07-24T15:33:48-07:00"\n    }\n  }, \n  "time": "2015-07-24T15:33:55.695-07:00"\n}',
                "Update0-request-xml":
                    '<PaymentMethod xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n   <Id>7</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-11T14:42:05-07:00</CreateTime>\r\n      <LastUpdatedTime>2014-09-11T14:42:05-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Business Diners Club</Name>\r\n    <Active>true</Active>\r\n    <Type>CREDIT_CARD</Type>\r\n</PaymentMethod>',
                "Read0-response":
                    '{\n  "PaymentMethod": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "Name": "Diners Club", \n    "sparse": false, \n    "Active": true, \n    "Type": "CREDIT_CARD", \n    "Id": "7", \n    "MetaData": {\n      "CreateTime": "2014-09-11T14:42:05-07:00", \n      "LastUpdatedTime": "2014-09-11T14:42:05-07:00"\n    }\n  }, \n  "time": "2015-07-24T15:29:33.401-07:00"\n}',
                "Create0-response":
                    '{\n  "PaymentMethod": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "Name": "Business Check", \n    "sparse": false, \n    "Active": true, \n    "Type": "NON_CREDIT_CARD", \n    "Id": "10", \n    "MetaData": {\n      "CreateTime": "2015-07-24T15:37:44-07:00", \n      "LastUpdatedTime": "2015-07-24T15:37:44-07:00"\n    }\n  }, \n  "time": "2015-07-24T15:37:44.79-07:00"\n}',
                "Update0-request":
                    '{\n  "SyncToken": "2", \n  "domain": "QBO", \n  "Name": "Platinum Diners Club", \n  "sparse": false, \n  "Active": true, \n  "Type": "CREDIT_CARD", \n  "Id": "7", \n  "MetaData": {\n    "CreateTime": "2014-09-11T14:42:05-07:00", \n    "LastUpdatedTime": "2014-09-11T14:42:05-07:00"\n  }\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T15:29:08.469-07:00">\r\n  <PaymentMethod domain="QBO" sparse="false">\r\n    <Id>7</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-11T14:42:05-07:00</CreateTime>\r\n      <LastUpdatedTime>2014-09-11T14:42:05-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Diners Club</Name>\r\n    <Active>true</Active>\r\n    <Type>CREDIT_CARD</Type>\r\n  </PaymentMethod>\r\n</IntuitResponse>',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T15:32:02.195-07:00">\r\n  <PaymentMethod domain="QBO" sparse="false">\r\n    <Id>7</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-11T14:42:05-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-24T15:32:02-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Business Diners Club</Name>\r\n    <Active>true</Active>\r\n    <Type>CREDIT_CARD</Type>\r\n  </PaymentMethod>\r\n</IntuitResponse>',
                "Create0-request": '{\n  "Name": "Business Check"\n}',
                "Query0-request-xml": "select * from PaymentMethod",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "PaymentMethod": [\n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "American Express", \n        "sparse": false, \n        "Active": true, \n        "Type": "CREDIT_CARD", \n        "Id": "6", \n        "MetaData": {\n          "CreateTime": "2014-09-11T14:42:05-07:00", \n          "LastUpdatedTime": "2014-09-11T14:42:05-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "Cash", \n        "sparse": false, \n        "Active": true, \n        "Type": "NON_CREDIT_CARD", \n        "Id": "1", \n        "MetaData": {\n          "CreateTime": "2014-09-11T14:42:05-07:00", \n          "LastUpdatedTime": "2014-09-11T14:42:05-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "Check", \n        "sparse": false, \n        "Active": true, \n        "Type": "NON_CREDIT_CARD", \n        "Id": "2", \n        "MetaData": {\n          "CreateTime": "2014-09-11T14:42:05-07:00", \n          "LastUpdatedTime": "2014-09-11T14:42:05-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "Diners Club", \n        "sparse": false, \n        "Active": true, \n        "Type": "CREDIT_CARD", \n        "Id": "7", \n        "MetaData": {\n          "CreateTime": "2014-09-11T14:42:05-07:00", \n          "LastUpdatedTime": "2014-09-11T14:42:05-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "Discover", \n        "sparse": false, \n        "Active": true, \n        "Type": "CREDIT_CARD", \n        "Id": "5", \n        "MetaData": {\n          "CreateTime": "2014-09-11T14:42:05-07:00", \n          "LastUpdatedTime": "2014-09-11T14:42:05-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "MasterCard", \n        "sparse": false, \n        "Active": true, \n        "Type": "CREDIT_CARD", \n        "Id": "4", \n        "MetaData": {\n          "CreateTime": "2014-09-11T14:42:05-07:00", \n          "LastUpdatedTime": "2014-09-11T14:42:05-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "Visa", \n        "sparse": false, \n        "Active": true, \n        "Type": "CREDIT_CARD", \n        "Id": "3", \n        "MetaData": {\n          "CreateTime": "2014-09-11T14:42:05-07:00", \n          "LastUpdatedTime": "2014-09-11T14:42:05-07:00"\n        }\n      }\n    ], \n    "maxResults": 7\n  }, \n  "time": "2015-07-24T15:26:51.916-07:00"\n}',
            },
            Class: {
                "Create0-request-xml":
                    '<Class xmlns="http://schema.intuit.com/finance/v3">\r\n   <Name>Spain</Name>\r\n</Class>',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-22T14:26:30.863-07:00">\r\n  <QueryResponse startPosition="1" maxResults="1" totalCount="1">\r\n    <Class domain="QBO" sparse="false">\r\n      <Id>5000000000000007280</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2015-07-22T13:57:27-07:00</CreateTime>\r\n        <LastUpdatedTime>2015-07-22T13:57:27-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>France</Name>\r\n      <SubClass>false</SubClass>\r\n      <FullyQualifiedName>France</FullyQualifiedName>\r\n      <Active>true</Active>\r\n    </Class>\r\n  </QueryResponse>\r\n</IntuitResponse>',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-22T13:58:40.998-07:00">\r\n    <Class domain="QBO" sparse="false">\r\n        <Id>5000000000000007281</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-22T13:58:41-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-22T13:58:41-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>Spain</Name>\r\n        <SubClass>false</SubClass>\r\n        <FullyQualifiedName>Spain</FullyQualifiedName>\r\n        <Active>true</Active>\r\n    </Class>\r\n</IntuitResponse>\r\n',
                "Query0-request": '"select  * from Class"',
                "Update0-response":
                    '{\n  "Class": {\n    "FullyQualifiedName": "France", \n    "domain": "QBO", \n    "Name": "France", \n    "SyncToken": "2", \n    "SubClass": false, \n    "sparse": false, \n    "Active": true, \n    "Id": "5000000000000007280", \n    "MetaData": {\n      "CreateTime": "2015-07-22T13:57:27-07:00", \n      "LastUpdatedTime": "2015-07-22T15:13:03-07:00"\n    }\n  }, \n  "time": "2015-07-22T15:13:03.963-07:00"\n}',
                "Update0-request-xml":
                    '<Class xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>5000000000000007280</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2015-07-22T13:57:27-07:00</CreateTime>\r\n        <LastUpdatedTime>2015-07-22T13:57:27-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>South France</Name>\r\n    <SubClass>false</SubClass>\r\n    <FullyQualifiedName>France</FullyQualifiedName>\r\n    <Active>true</Active>\r\n</Class>\r\n',
                "Read0-response":
                    '{\n  "FullyQualifiedName": "France", \n  "domain": "QBO", \n  "Name": "France", \n  "SyncToken": "0", \n  "SubClass": false, \n  "sparse": false, \n  "Active": true, \n  "Id": "5000000000000007280", \n  "MetaData": {\n    "CreateTime": "2015-07-22T13:57:27-07:00", \n    "LastUpdatedTime": "2015-07-22T13:57:27-07:00"\n  }\n}',
                "Create0-response":
                    '{\n  "Class": {\n    "FullyQualifiedName": "France", \n    "domain": "QBO", \n    "Name": "France", \n    "SyncToken": "0", \n    "SubClass": false, \n    "sparse": false, \n    "Active": true, \n    "Id": "5000000000000007280", \n    "MetaData": {\n      "CreateTime": "2015-07-22T13:57:27-07:00", \n      "LastUpdatedTime": "2015-07-22T13:57:27-07:00"\n    }\n  }, \n  "time": "2015-07-22T13:57:27.84-07:00"\n}',
                "Update0-request":
                    '{\n  "FullyQualifiedName": "France", \n  "domain": "QBO", \n  "Name": "France", \n  "SyncToken": "1", \n  "SubClass": false, \n  "sparse": false, \n  "Active": true, \n  "Id": "5000000000000007280", \n  "MetaData": {\n    "CreateTime": "2015-07-22T13:57:27-07:00", \n    "LastUpdatedTime": "2015-07-22T13:57:27-07:00"\n  }\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-22T15:07:06.896-07:00">\r\n    <Class domain="QBO" sparse="false">\r\n        <Id>5000000000000007280</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-22T13:57:27-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-22T13:57:27-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>France</Name>\r\n        <SubClass>false</SubClass>\r\n        <FullyQualifiedName>France</FullyQualifiedName>\r\n        <Active>true</Active>\r\n    </Class>\r\n</IntuitResponse>\r\n',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-22T15:10:22.576-07:00">\r\n    <Class domain="QBO" sparse="false">\r\n        <Id>5000000000000007280</Id>\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-22T13:57:27-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-22T15:10:22-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Name>South France</Name>\r\n        <SubClass>false</SubClass>\r\n        <FullyQualifiedName>South France</FullyQualifiedName>\r\n        <Active>true</Active>\r\n    </Class>\r\n</IntuitResponse>\r\n',
                "Create0-request": '{\n  "Name": "France"\n}',
                "Query0-request-xml": "select  * from Class where name like 'France'",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 5, \n    "Class": [\n      {\n        "FullyQualifiedName": "Europe", \n        "domain": "QBO", \n        "Name": "Europe", \n        "SyncToken": "0", \n        "SubClass": false, \n        "sparse": false, \n        "Active": true, \n        "Id": "5000000000000007195", \n        "MetaData": {\n          "CreateTime": "2015-07-14T14:25:49-07:00", \n          "LastUpdatedTime": "2015-07-14T14:25:49-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "InternalCafe", \n        "domain": "QBO", \n        "Name": "InternalCafe", \n        "SyncToken": "2", \n        "SubClass": false, \n        "sparse": false, \n        "Active": true, \n        "Id": "5000000000000005251", \n        "MetaData": {\n          "CreateTime": "2015-06-30T15:38:56-07:00", \n          "LastUpdatedTime": "2015-06-30T15:51:07-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "InternalCafe:InternalParts", \n        "domain": "QBO", \n        "Name": "InternalParts", \n        "SyncToken": "0", \n        "sparse": false, \n        "SubClass": true, \n        "ParentRef": {\n          "value": "5000000000000005251"\n        }, \n        "Active": true, \n        "Id": "5000000000000005252", \n        "MetaData": {\n          "CreateTime": "2015-06-30T15:41:51-07:00", \n          "LastUpdatedTime": "2015-06-30T15:51:07-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "North America", \n        "domain": "QBO", \n        "Name": "North America", \n        "SyncToken": "0", \n        "SubClass": false, \n        "sparse": false, \n        "Active": true, \n        "Id": "5000000000000007194", \n        "MetaData": {\n          "CreateTime": "2015-07-14T14:24:49-07:00", \n          "LastUpdatedTime": "2015-07-14T14:24:49-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "Sales Dept", \n        "domain": "QBO", \n        "Name": "Sales Dept", \n        "SyncToken": "0", \n        "SubClass": false, \n        "sparse": false, \n        "Active": true, \n        "Id": "5000000000000005250", \n        "MetaData": {\n          "CreateTime": "2015-06-30T15:37:54-07:00", \n          "LastUpdatedTime": "2015-06-30T15:37:54-07:00"\n        }\n      }\n    ], \n    "maxResults": 5\n  }, \n  "time": "2015-07-22T13:55:26.286-07:00"\n}',
            },
            Transactionlist: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/TransactionList?start_date=2016-06-01&end_date=2016-07-31&group_by=Customer\\n"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "TransactionList", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "StartPeriod": "2016-06-01", \n    "Currency": "USD", \n    "EndPeriod": "2016-07-31", \n    "Time": "2017-01-10T10:53:41-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "1", \n              "value": "Amy\'s Bird Sanctuary"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "2016-06-14"\n                }, \n                {\n                  "id": "151", \n                  "value": "Invoice"\n                }, \n                {\n                  "value": "1040"\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "1", \n                  "value": "Amy\'s Bird Sanctuary"\n                }, \n                {\n                  "id": "1", \n                  "value": "West Coast"\n                }, \n                {\n                  "value": "This is a private note."\n                }, \n                {\n                  "id": "84", \n                  "value": "Accounts Receivable (A/R)"\n                }, \n                {\n                  "id": "", \n                  "value": "-Split-"\n                }, \n                {\n                  "value": "47.60"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2016-06-14"\n                }, \n                {\n                  "id": "153", \n                  "value": "Payment"\n                }, \n                {\n                  "value": "3456"\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "1", \n                  "value": "Amy\'s Bird Sanctuary"\n                }, \n                {\n                  "id": "1", \n                  "value": "West Coast"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "35", \n                  "value": "Checking"\n                }, \n                {\n                  "id": "84", \n                  "value": "Accounts Receivable (A/R)"\n                }, \n                {\n                  "value": "45.00"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2016-06-14"\n                }, \n                {\n                  "id": "154", \n                  "value": "Invoice"\n                }, \n                {\n                  "value": "1041"\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "1", \n                  "value": "Amy\'s Bird Sanctuary"\n                }, \n                {\n                  "id": "", \n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "84", \n                  "value": "Accounts Receivable (A/R)"\n                }, \n                {\n                  "id": "82", \n                  "value": "Design income"\n                }, \n                {\n                  "value": "375.00"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2016-06-20"\n                }, \n                {\n                  "id": "155", \n                  "value": "Credit Memo"\n                }, \n                {\n                  "value": "1042"\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "1", \n                  "value": "Amy\'s Bird Sanctuary"\n                }, \n                {\n                  "id": "1", \n                  "value": "West Coast"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "84", \n                  "value": "Accounts Receivable (A/R)"\n                }, \n                {\n                  "id": "79", \n                  "value": "Sales of Product Income"\n                }, \n                {\n                  "value": "-16.20"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2016-06-20"\n                }, \n                {\n                  "id": "156", \n                  "value": "Payment"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "1", \n                  "value": "Amy\'s Bird Sanctuary"\n                }, \n                {\n                  "id": "", \n                  "value": ""\n                }, \n                {\n                  "value": "Created by QB Online to link credits to charges."\n                }, \n                {\n                  "id": "", \n                  "value": ""\n                }, \n                {\n                  "id": "84", \n                  "value": "Accounts Receivable (A/R)"\n                }, \n                {\n                  "value": ""\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2016-06-21"\n                }, \n                {\n                  "id": "160", \n                  "value": "Invoice"\n                }, \n                {\n                  "value": "1045"\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "1", \n                  "value": "Amy\'s Bird Sanctuary"\n                }, \n                {\n                  "id": "", \n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "84", \n                  "value": "Accounts Receivable (A/R)"\n                }, \n                {\n                  "id": "", \n                  "value": "-Split-"\n                }, \n                {\n                  "value": ".00"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2016-07-28"\n                }, \n                {\n                  "id": "161", \n                  "value": "Sales Receipt"\n                }, \n                {\n                  "value": "1046"\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "1", \n                  "value": "Amy\'s Bird Sanctuary"\n                }, \n                {\n                  "id": "", \n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "35", \n                  "value": "Checking"\n                }, \n                {\n                  "id": "48", \n                  "value": "Landscaping Services:Job Materials:Fountains and Garden Lighting"\n                }, \n                {\n                  "value": "54.55"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for Amy\'s Bird Sanctuary"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "505.95"\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "2", \n              "value": "Bill\'s Windsurf Shop"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "2016-06-20"\n                }, \n                {\n                  "id": "157", \n                  "value": "Credit Memo"\n                }, \n                {\n                  "value": "1043"\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "2", \n                  "value": "Bill\'s Windsurf Shop"\n                }, \n                {\n                  "id": "1", \n                  "value": "West Coast"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "84", \n                  "value": "Accounts Receivable (A/R)"\n                }, \n                {\n                  "id": "79", \n                  "value": "Sales of Product Income"\n                }, \n                {\n                  "value": "-16.20"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "value": "2016-06-20"\n                }, \n                {\n                  "id": "158", \n                  "value": "Payment"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "2", \n                  "value": "Bill\'s Windsurf Shop"\n                }, \n                {\n                  "id": "", \n                  "value": ""\n                }, \n                {\n                  "value": "Created by QB Online to link credits to charges."\n                }, \n                {\n                  "id": "", \n                  "value": ""\n                }, \n                {\n                  "id": "84", \n                  "value": "Accounts Receivable (A/R)"\n                }, \n                {\n                  "value": ""\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for Bill\'s Windsurf Shop"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "-16.20"\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "3", \n              "value": "Cool Cars"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "2016-06-21"\n                }, \n                {\n                  "id": "159", \n                  "value": "Invoice"\n                }, \n                {\n                  "value": "1044"\n                }, \n                {\n                  "value": "Yes"\n                }, \n                {\n                  "id": "3", \n                  "value": "Cool Cars"\n                }, \n                {\n                  "id": "1", \n                  "value": "West Coast"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "id": "84", \n                  "value": "Accounts Receivable (A/R)"\n                }, \n                {\n                  "id": "", \n                  "value": "-Split-"\n                }, \n                {\n                  "value": ".00"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for Cool Cars"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ".00"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "tx_date", \n        "ColTitle": "Date"\n      }, \n      {\n        "ColType": "txn_type", \n        "ColTitle": "Transaction Type"\n      }, \n      {\n        "ColType": "doc_num", \n        "ColTitle": "Num"\n      }, \n      {\n        "ColType": "is_no_post", \n        "ColTitle": "Posting"\n      }, \n      {\n        "ColType": "name", \n        "ColTitle": "Name"\n      }, \n      {\n        "ColType": "dept_name", \n        "ColTitle": "Department"\n      }, \n      {\n        "ColType": "memo", \n        "ColTitle": "Memo/Description"\n      }, \n      {\n        "ColType": "account_name", \n        "ColTitle": "Account"\n      }, \n      {\n        "ColType": "other_account", \n        "ColTitle": "Split"\n      }, \n      {\n        "ColType": "subt_nat_home_amount", \n        "ColTitle": "Amount"\n      }\n    ]\n  }\n}',
            },
            Customer: {
                "Query0-request-xml": "select * from Customer Where Metadata.LastUpdatedTime > '2015-03-01'",
                "Read0-response":
                    '{\n  "Customer": {\n    "PrimaryEmailAddr": {\n      "Address": "Surf@Intuit.com"\n    }, \n    "SyncToken": "0", \n    "domain": "QBO", \n    "GivenName": "Bill", \n    "DisplayName": "Bill\'s Windsurf Shop", \n    "BillWithParent": false, \n    "FullyQualifiedName": "Bill\'s Windsurf Shop", \n    "CompanyName": "Bill\'s Windsurf Shop", \n    "FamilyName": "Lucchini", \n    "sparse": false, \n    "PrimaryPhone": {\n      "FreeFormNumber": "(415) 444-6538"\n    }, \n    "Active": true, \n    "Job": false, \n    "BalanceWithJobs": 85.0, \n    "BillAddr": {\n      "City": "Half Moon Bay", \n      "Line1": "12 Ocean Dr.", \n      "PostalCode": "94213", \n      "Lat": "37.4307072", \n      "Long": "-122.4295234", \n      "CountrySubDivisionCode": "CA", \n      "Id": "3"\n    }, \n    "PreferredDeliveryMethod": "Print", \n    "Taxable": false, \n    "PrintOnCheckName": "Bill\'s Windsurf Shop", \n    "Balance": 85.0, \n    "Id": "2", \n    "MetaData": {\n      "CreateTime": "2014-09-11T16:49:28-07:00", \n      "LastUpdatedTime": "2014-09-18T12:56:01-07:00"\n    }\n  }, \n  "time": "2015-07-23T11:04:15.496-07:00"\n}',
                "Update1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-23T11:09:54.602-07:00">\r\n    <Customer domain="QBO" sparse="false">\r\n        <Id>2</Id>\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-11T16:49:28-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-23T11:09:54-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <GivenName>Bill</GivenName>\r\n        <MiddleName>Max</MiddleName>\r\n        <FamilyName>Lucchini</FamilyName>\r\n        <FullyQualifiedName>Bill\'s Windsurf Shop</FullyQualifiedName>\r\n        <CompanyName>Bill\'s Windsurf Shop</CompanyName>\r\n        <DisplayName>Bill\'s Windsurf Shop</DisplayName>\r\n        <PrintOnCheckName>Bill\'s Windsurf Shop</PrintOnCheckName>\r\n        <Active>true</Active>\r\n        <PrimaryPhone>\r\n            <FreeFormNumber>(415) 444-6538</FreeFormNumber>\r\n        </PrimaryPhone>\r\n        <PrimaryEmailAddr>\r\n            <Address>Surf@Intuit.com</Address>\r\n        </PrimaryEmailAddr>\r\n        <Taxable>false</Taxable>\r\n        <BillAddr>\r\n            <Id>3</Id>\r\n            <Line1>12 Ocean Dr.</Line1>\r\n            <City>Half Moon Bay</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94213</PostalCode>\r\n            <Lat>37.4307072</Lat>\r\n            <Long>-122.4295234</Long>\r\n        </BillAddr>\r\n        <Job>false</Job>\r\n        <BillWithParent>false</BillWithParent>\r\n        <Balance>85.00</Balance>\r\n        <BalanceWithJobs>85.00</BalanceWithJobs>\r\n        <PreferredDeliveryMethod>Print</PreferredDeliveryMethod>\r\n    </Customer>\r\n</IntuitResponse>\r\n',
                "Update1-request-xml":
                    '<Customer xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>2</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MiddleName>Max</MiddleName>\r\n</Customer>\r\n',
                "Update0-response":
                    '{\n  "Customer": {\n    "domain": "QBO", \n    "PrimaryEmailAddr": {\n      "Address": "Surf@Intuit.com"\n    }, \n    "DisplayName": "Bill\'s Windsurf Shop", \n    "PreferredDeliveryMethod": "Print", \n    "GivenName": "Bill", \n    "FullyQualifiedName": "Bill\'s Windsurf Shop", \n    "BillWithParent": false, \n    "Job": false, \n    "BalanceWithJobs": 85.0, \n    "PrimaryPhone": {\n      "FreeFormNumber": "(415) 444-6538"\n    }, \n    "Active": true, \n    "MetaData": {\n      "CreateTime": "2014-09-11T16:49:28-07:00", \n      "LastUpdatedTime": "2015-07-23T11:18:37-07:00"\n    }, \n    "BillAddr": {\n      "City": "Half Moon Bay", \n      "Line1": "12 Ocean Dr.", \n      "PostalCode": "94213", \n      "Lat": "37.4307072", \n      "Long": "-122.4295234", \n      "CountrySubDivisionCode": "CA", \n      "Id": "3"\n    }, \n    "MiddleName": "Mac", \n    "Taxable": false, \n    "Balance": 85.0, \n    "SyncToken": "4", \n    "CompanyName": "Bill\'s Windsurf Shop", \n    "FamilyName": "Lucchini", \n    "PrintOnCheckName": "Bill\'s Wind Surf Shop", \n    "sparse": false, \n    "Id": "2"\n  }, \n  "time": "2015-07-23T11:18:37.323-07:00"\n}',
                "Create1-request": '""',
                "Update1-request":
                    '{\n  "MiddleName": "Mark", \n  "SyncToken": "0", \n  "Id": "2", \n  "sparse": true\n}',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-02-13T10:11:33.296-08:00">\r\n  <Customer domain="QBO" sparse="false">\r\n    <Id>62</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-02-13T10:13:29-08:00</CreateTime>\r\n      <LastUpdatedTime>2015-02-13T10:13:29-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Title>Mr</Title>\r\n    <GivenName>James</GivenName>\r\n    <MiddleName>B</MiddleName>\r\n    <FamilyName>King</FamilyName>\r\n    <Suffix>Jr</Suffix>\r\n    <FullyQualifiedName>King Crafts</FullyQualifiedName>\r\n    <CompanyName>King Crafts</CompanyName>\r\n    <DisplayName>King Crafts</DisplayName>\r\n    <PrintOnCheckName>King Crafts</PrintOnCheckName>\r\n    <Active>true</Active>\r\n    <PrimaryPhone>\r\n      <FreeFormNumber>(555) 555-5555</FreeFormNumber>\r\n    </PrimaryPhone>\r\n    <Mobile>\r\n      <FreeFormNumber>555-5555-6666</FreeFormNumber>\r\n    </Mobile>\r\n    <Fax>\r\n      <FreeFormNumber>(555) 555-7777</FreeFormNumber>\r\n    </Fax>\r\n    <PrimaryEmailAddr>\r\n      <Address>jdrew@myemail.com</Address>\r\n    </PrimaryEmailAddr>\r\n    <WebAddr>\r\n      <URI>http://www.drewfurniture.com</URI>\r\n    </WebAddr>\r\n    <DefaultTaxCodeRef>2</DefaultTaxCodeRef>\r\n    <Taxable>true</Taxable>\r\n    <BillAddr>\r\n      <Id>104</Id>\r\n      <Line1>123 Main Street</Line1>\r\n      <City>Mountain View</City>\r\n      <Country>USA</Country>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>94042</PostalCode>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n      <Id>105</Id>\r\n      <Line1>123 Main Street</Line1>\r\n      <City>Mountain View</City>\r\n      <Country>USA</Country>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>94042</PostalCode>\r\n    </ShipAddr>\r\n    <Notes>Here are other details.</Notes>\r\n    <Job>false</Job>\r\n    <BillWithParent>false</BillWithParent>\r\n    <Balance>0</Balance>\r\n    <BalanceWithJobs>0</BalanceWithJobs>\r\n    <PreferredDeliveryMethod>Print</PreferredDeliveryMethod>\r\n  </Customer>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "FullyQualifiedName": "King Groceries", \n  "PrimaryEmailAddr": {\n    "Address": "jdrew@myemail.com"\n  }, \n  "DisplayName": "King\'s Groceries", \n  "Suffix": "Jr", \n  "Title": "Mr", \n  "MiddleName": "B", \n  "Notes": "Here are other details.", \n  "FamilyName": "King", \n  "PrimaryPhone": {\n    "FreeFormNumber": "(555) 555-5555"\n  }, \n  "CompanyName": "King Groceries", \n  "BillAddr": {\n    "CountrySubDivisionCode": "CA", \n    "City": "Mountain View", \n    "PostalCode": "94042", \n    "Line1": "123 Main Street", \n    "Country": "USA"\n  }, \n  "GivenName": "James"\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-23T11:00:41.365-07:00">\r\n    <QueryResponse startPosition="1" maxResults="6">\r\n        <Customer domain="QBO" sparse="false">\r\n            <Id>1</Id>\r\n            <SyncToken>5</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-11T16:48:43-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-01T10:14:15-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <GivenName>Amy</GivenName>\r\n            <MiddleName>Michelle</MiddleName>\r\n            <FamilyName>Lauterbach</FamilyName>\r\n            <FullyQualifiedName>Amy\'s Bird Sanctuary</FullyQualifiedName>\r\n            <CompanyName>Amy\'s Bird Sanctuary</CompanyName>\r\n            <DisplayName>Amy\'s Bird Sanctuary</DisplayName>\r\n            <PrintOnCheckName>Amy\'s Bird Sanctuary</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <PrimaryPhone>\r\n                <FreeFormNumber>(650) 555-3311</FreeFormNumber>\r\n            </PrimaryPhone>\r\n            <PrimaryEmailAddr>\r\n                <Address>Birds@Intuit.com</Address>\r\n            </PrimaryEmailAddr>\r\n            <DefaultTaxCodeRef>2</DefaultTaxCodeRef>\r\n            <Taxable>true</Taxable>\r\n            <BillAddr>\r\n                <Id>2</Id>\r\n                <Line1>4581 Finch St.</Line1>\r\n                <City>Bayshore</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94326</PostalCode>\r\n                <Lat>INVALID</Lat>\r\n                <Long>INVALID</Long>\r\n            </BillAddr>\r\n            <ShipAddr>\r\n                <Id>109</Id>\r\n                <Line1>4581 Finch St.</Line1>\r\n                <City>Bayshore</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94326</PostalCode>\r\n                <Lat>INVALID</Lat>\r\n                <Long>INVALID</Long>\r\n            </ShipAddr>\r\n            <Notes>Note added via Update operation.</Notes>\r\n            <Job>false</Job>\r\n            <BillWithParent>false</BillWithParent>\r\n            <Balance>274.00</Balance>\r\n            <BalanceWithJobs>274.00</BalanceWithJobs>\r\n            <PreferredDeliveryMethod>Print</PreferredDeliveryMethod>\r\n        </Customer>\r\n. . .\r\n        <Customer domain="QBO" sparse="false">\r\n            <Id>29</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-11T17:29:04-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-06-24T15:54:02-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <GivenName>Nicola</GivenName>\r\n            <FamilyName>Weiskopf</FamilyName>\r\n            <FullyQualifiedName>Weiskopf Consulting</FullyQualifiedName>\r\n            <CompanyName>Weiskopf Consulting</CompanyName>\r\n            <DisplayName>Weiskopf Consulting</DisplayName>\r\n            <PrintOnCheckName>Weiskopf Consulting</PrintOnCheckName>\r\n            <Active>true</Active>\r\n            <PrimaryPhone>\r\n                <FreeFormNumber>(650) 555-1423</FreeFormNumber>\r\n            </PrimaryPhone>\r\n            <PrimaryEmailAddr>\r\n                <Address>Consulting@intuit.com</Address>\r\n            </PrimaryEmailAddr>\r\n            <Taxable>false</Taxable>\r\n            <BillAddr>\r\n                <Id>30</Id>\r\n                <Line1>45612 Main St.</Line1>\r\n                <City>Bayshore</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94326</PostalCode>\r\n                <Lat>45.256574</Lat>\r\n                <Long>-66.0943698</Long>\r\n            </BillAddr>\r\n            <ShipAddr>\r\n                <Id>30</Id>\r\n                <Line1>45612 Main St.</Line1>\r\n                <City>Bayshore</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94326</PostalCode>\r\n                <Lat>45.256574</Lat>\r\n                <Long>-66.0943698</Long>\r\n            </ShipAddr>\r\n            <Job>false</Job>\r\n            <BillWithParent>false</BillWithParent>\r\n            <Balance>390.00</Balance>\r\n            <BalanceWithJobs>390.00</BalanceWithJobs>\r\n            <PreferredDeliveryMethod>Print</PreferredDeliveryMethod>\r\n        </Customer>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Query0-request": "\"select * from Customer Where Metadata.LastUpdatedTime > '2015-03-01'\"",
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-23T11:03:44.699-07:00">\r\n    <Customer domain="QBO" sparse="false">\r\n        <Id>2</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-11T16:49:28-07:00</CreateTime>\r\n            <LastUpdatedTime>2014-09-18T12:56:01-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <GivenName>Bill</GivenName>\r\n        <FamilyName>Lucchini</FamilyName>\r\n        <FullyQualifiedName>Bill\'s Windsurf Shop</FullyQualifiedName>\r\n        <CompanyName>Bill\'s Windsurf Shop</CompanyName>\r\n        <DisplayName>Bill\'s Windsurf Shop</DisplayName>\r\n        <PrintOnCheckName>Bill\'s Windsurf Shop</PrintOnCheckName>\r\n        <Active>true</Active>\r\n        <PrimaryPhone>\r\n            <FreeFormNumber>(415) 444-6538</FreeFormNumber>\r\n        </PrimaryPhone>\r\n        <PrimaryEmailAddr>\r\n            <Address>Surf@Intuit.com</Address>\r\n        </PrimaryEmailAddr>\r\n        <Taxable>false</Taxable>\r\n        <BillAddr>\r\n            <Id>3</Id>\r\n            <Line1>12 Ocean Dr.</Line1>\r\n            <City>Half Moon Bay</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94213</PostalCode>\r\n            <Lat>37.4307072</Lat>\r\n            <Long>-122.4295234</Long>\r\n        </BillAddr>\r\n        <Job>false</Job>\r\n        <BillWithParent>false</BillWithParent>\r\n        <Balance>85.00</Balance>\r\n        <BalanceWithJobs>85.00</BalanceWithJobs>\r\n        <PreferredDeliveryMethod>Print</PreferredDeliveryMethod>\r\n    </Customer>\r\n</IntuitResponse>\r\n',
                "Update0-request-xml":
                    '<Customer xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n        <Id>2</Id>\r\n        <SyncToken>2</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-11T16:49:28-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-23T11:09:54-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <GivenName>Bill</GivenName>\r\n        <MiddleName>Max</MiddleName>\r\n        <FamilyName>Lucchini</FamilyName>\r\n        <FullyQualifiedName>Bill\'s Windsurf Shop</FullyQualifiedName>\r\n        <CompanyName>Bill\'s Windsurf Shop</CompanyName>\r\n        <DisplayName>Bill\'s Windsurf Shop</DisplayName>\r\n        <PrintOnCheckName>Bill\'s Wind and Surf Shop</PrintOnCheckName>\r\n        <Active>true</Active>\r\n        <PrimaryPhone>\r\n            <FreeFormNumber>(415) 444-6538</FreeFormNumber>\r\n        </PrimaryPhone>\r\n        <PrimaryEmailAddr>\r\n            <Address>Surf@Intuit.com</Address>\r\n        </PrimaryEmailAddr>\r\n        <Taxable>false</Taxable>\r\n        <BillAddr>\r\n            <Id>3</Id>\r\n            <Line1>12 Ocean Dr.</Line1>\r\n            <City>Half Moon Bay</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94213</PostalCode>\r\n            <Lat>37.4307072</Lat>\r\n            <Long>-122.4295234</Long>\r\n        </BillAddr>\r\n        <Job>false</Job>\r\n        <BillWithParent>false</BillWithParent>\r\n        <Balance>85.00</Balance>\r\n        <BalanceWithJobs>85.00</BalanceWithJobs>\r\n        <PreferredDeliveryMethod>Print</PreferredDeliveryMethod>\r\n</Customer>',
                "Create1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-02-21T15:08:49.346-08:00">\r\n  <Customer domain="QBO" sparse="false">\r\n    <Id>117</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-02-21T15:08:49-08:00</CreateTime>\r\n      <LastUpdatedTime>2014-02-21T15:08:50-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Title>Mr</Title>\r\n    <GivenName>James</GivenName>\r\n    <MiddleName>B</MiddleName>\r\n    <FamilyName>Drew</FamilyName>\r\n    <Suffix>Jr</Suffix>\r\n    <FullyQualifiedName>Drew and Sons Furniture</FullyQualifiedName>\r\n    <CompanyName>Drew Furniture</CompanyName>\r\n    <DisplayName>Drew and Sons Furniture</DisplayName>\r\n    <PrintOnCheckName>Drew Furniture</PrintOnCheckName>\r\n    <Active>true</Active>\r\n    <PrimaryPhone>\r\n      <FreeFormNumber>(555) 555-5555</FreeFormNumber>\r\n    </PrimaryPhone>\r\n    <AlternatePhone>\r\n      <FreeFormNumber>(555) 555-8888</FreeFormNumber>\r\n    </AlternatePhone>\r\n    <Mobile>\r\n      <FreeFormNumber>555-5555-6666</FreeFormNumber>\r\n    </Mobile>\r\n    <Fax>\r\n      <FreeFormNumber>(555) 555-7777</FreeFormNumber>\r\n    </Fax>\r\n    <PrimaryEmailAddr>\r\n      <Address>jdrew@myemail.com</Address>\r\n    </PrimaryEmailAddr>\r\n    <WebAddr>\r\n      <URI>http://www.drewfurniture.com</URI>\r\n    </WebAddr>\r\n    <DefaultTaxCodeRef>2</DefaultTaxCodeRef>\r\n    <Taxable>true</Taxable>\r\n    <BillAddr>\r\n      <Id>393</Id>\r\n      <City>Mountain View</City>\r\n      <Country>USA</Country>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>94042</PostalCode>\r\n      <Lat>37.3931794</Lat>\r\n      <Long>-122.0778761</Long>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n      <Id>394</Id>\r\n      <City>Mountain View</City>\r\n      <Country>USA</Country>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>94042</PostalCode>\r\n      <Lat>37.3931794</Lat>\r\n      <Long>-122.0778761</Long>\r\n    </ShipAddr>\r\n    <Notes>Here are other details.</Notes>\r\n    <Job>false</Job>\r\n    <BillWithParent>false</BillWithParent>\r\n    <SalesTermRef>7</SalesTermRef>\r\n    <PaymentMethodRef>9</PaymentMethodRef>\r\n    <Balance>20.00</Balance>\r\n    <BalanceWithJobs>20.00</BalanceWithJobs>\r\n    <PreferredDeliveryMethod>Print</PreferredDeliveryMethod>\r\n    <ResaleNum>12341234</ResaleNum>\r\n  </Customer>\r\n</IntuitResponse>',
                "Create1-response":
                    '{\n  "domain": "QBO", \n  "FamilyName": "King", \n  "DisplayName": "King Furniture", \n  "Title": "Mr", \n  "PreferredDeliveryMethod": "Print", \n  "DefaultTaxCodeRef": {\n    "value": "2"\n  }, \n  "PrimaryEmailAddr": {\n    "Address": "jdrew@myemail.com"\n  }, \n  "ResaleNum": "12341234", \n  "GivenName": "James", \n  "SalesTermRef": {\n    "value": "7"\n  }, \n  "FullyQualifiedName": "King Furniture", \n  "Fax": {\n    "FreeFormNumber": "(555) 555-7777"\n  }, \n  "BillWithParent": false, \n  "Mobile": {\n    "FreeFormNumber": "555-5555-6666"\n  }, \n  "Job": false, \n  "BalanceWithJobs": -251.25, \n  "PrimaryPhone": {\n    "FreeFormNumber": "(555) 555-5555"\n  }, \n  "Taxable": true, \n  "AlternatePhone": {\n    "FreeFormNumber": "(555) 555-8888"\n  }, \n  "BillAddr": {\n    "City": "Mountain View", \n    "Country": "USA", \n    "Long": "-122.0778761", \n    "PostalCode": "94042", \n    "Lat": "37.3931794", \n    "CountrySubDivisionCode": "CA", \n    "Id": "378"\n  }, \n  "MiddleName": "B", \n  "Notes": "Here are other details.", \n  "WebAddr": {\n    "URI": "http://www.drewfurniture.com"\n  }, \n  "Active": true, \n  "Balance": -251.25, \n  "PaymentMethodRef": {\n    "value": "9"\n  }, \n  "Suffix": "Jr", \n  "CompanyName": "King Furniture", \n  "ShipAddr": {\n    "City": "Mountain View", \n    "Country": "USA", \n    "Long": "-122.0778761", \n    "PostalCode": "94042", \n    "Lat": "37.3931794", \n    "CountrySubDivisionCode": "CA", \n    "Id": "378"\n  }, \n  "PrintOnCheckName": "King Furniture", \n  "sparse": false\n}',
                "Create0-response":
                    '{\n  "Customer": {\n    "domain": "QBO", \n    "PrimaryEmailAddr": {\n      "Address": "jdrew@myemail.com"\n    }, \n    "DisplayName": "King\'s Groceries", \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "DefaultTaxCodeRef": {\n      "value": "2"\n    }, \n    "PreferredDeliveryMethod": "Print", \n    "GivenName": "James", \n    "FullyQualifiedName": "King\'s Groceries", \n    "BillWithParent": false, \n    "Title": "Mr", \n    "Job": false, \n    "BalanceWithJobs": 0, \n    "PrimaryPhone": {\n      "FreeFormNumber": "(555) 555-5555"\n    }, \n    "Taxable": true, \n    "MetaData": {\n      "CreateTime": "2015-07-23T10:58:12-07:00", \n      "LastUpdatedTime": "2015-07-23T10:58:12-07:00"\n    }, \n    "BillAddr": {\n      "City": "Mountain View", \n      "Country": "USA", \n      "Line1": "123 Main Street", \n      "PostalCode": "94042", \n      "CountrySubDivisionCode": "CA", \n      "Id": "112"\n    }, \n    "MiddleName": "B", \n    "Notes": "Here are other details.", \n    "Active": true, \n    "Balance": 0, \n    "SyncToken": "0", \n    "Suffix": "Jr", \n    "CompanyName": "King Groceries", \n    "FamilyName": "King", \n    "PrintOnCheckName": "King Groceries", \n    "sparse": false, \n    "Id": "67"\n  }, \n  "time": "2015-07-23T10:58:12.099-07:00"\n}',
                "Update0-request":
                    '{\n  "domain": "QBO", \n  "PrimaryEmailAddr": {\n    "Address": "Surf@Intuit.com"\n  }, \n  "DisplayName": "Bill\'s Windsurf Shop", \n  "PreferredDeliveryMethod": "Print", \n  "GivenName": "Bill", \n  "FullyQualifiedName": "Bill\'s Windsurf Shop", \n  "BillWithParent": false, \n  "Job": false, \n  "BalanceWithJobs": 85.0, \n  "PrimaryPhone": {\n    "FreeFormNumber": "(415) 444-6538"\n  }, \n  "Active": true, \n  "MetaData": {\n    "CreateTime": "2014-09-11T16:49:28-07:00", \n    "LastUpdatedTime": "2015-07-23T11:07:55-07:00"\n  }, \n  "BillAddr": {\n    "City": "Half Moon Bay", \n    "Line1": "12 Ocean Dr.", \n    "PostalCode": "94213", \n    "Lat": "37.4307072", \n    "Long": "-122.4295234", \n    "CountrySubDivisionCode": "CA", \n    "Id": "3"\n  }, \n  "MiddleName": "Mac", \n  "Taxable": false, \n  "Balance": 85.0, \n  "SyncToken": "3", \n  "CompanyName": "Bill\'s Windsurf Shop", \n  "FamilyName": "Lucchini", \n  "PrintOnCheckName": "Bill\'s Wind Surf Shop", \n  "sparse": false, \n  "Id": "2"\n}',
                "Create1-request-xml":
                    '<Customer xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n  <Title>Mr</Title>\r\n  <GivenName>James</GivenName>\r\n  <MiddleName>B</MiddleName>\r\n  <FamilyName>Drew</FamilyName>\r\n  <Suffix>Jr</Suffix>\r\n  <FullyQualifiedName>Drew Furniture</FullyQualifiedName>\r\n  <CompanyName>Drew Furniture</CompanyName>\r\n  <DisplayName>Drew and Sons Furniture</DisplayName>\r\n  <PrintOnCheckName>Drew Furniture</PrintOnCheckName>\r\n  <Active>true</Active>\r\n  <PrimaryPhone>\r\n    <FreeFormNumber>(555) 555-5555</FreeFormNumber>\r\n  </PrimaryPhone>\r\n  <AlternatePhone>\r\n    <FreeFormNumber>(555) 555-8888</FreeFormNumber>\r\n  </AlternatePhone>\r\n  <Mobile>\r\n    <FreeFormNumber>555-5555-6666</FreeFormNumber>\r\n  </Mobile>\r\n  <Fax>\r\n    <FreeFormNumber>(555) 555-7777</FreeFormNumber>\r\n  </Fax>\r\n  <PrimaryEmailAddr>\r\n    <Address>jdrew@myemail.com</Address>\r\n  </PrimaryEmailAddr>\r\n  <WebAddr>\r\n    <URI>http://www.drewfurniture.com</URI>\r\n  </WebAddr>\r\n  <DefaultTaxCodeRef>2</DefaultTaxCodeRef>\r\n  <Taxable>true</Taxable>\r\n  <BillAddr>\r\n    <Id>378</Id>\r\n    <City>Mountain View</City>\r\n    <Country>USA</Country>\r\n    <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n    <PostalCode>94042</PostalCode>\r\n    <Lat>37.3931794</Lat>\r\n    <Long>-122.0778761</Long>\r\n  </BillAddr>\r\n  <ShipAddr>\r\n    <Id>378</Id>\r\n    <City>Mountain View</City>\r\n    <Country>USA</Country>\r\n    <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n    <PostalCode>94042</PostalCode>\r\n    <Lat>37.3931794</Lat>\r\n    <Long>-122.0778761</Long>\r\n  </ShipAddr>\r\n  <Notes>Here are other details.</Notes>\r\n  <Job>false</Job>\r\n  <BillWithParent>false</BillWithParent>\r\n  <SalesTermRef>7</SalesTermRef>\r\n  <PaymentMethodRef>9</PaymentMethodRef>\r\n  <Balance>20.00</Balance>\r\n  <BalanceWithJobs>20.00</BalanceWithJobs>\r\n  <PreferredDeliveryMethod>Print</PreferredDeliveryMethod>\r\n  <ResaleNum>12341234</ResaleNum>\r\n</Customer>',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-23T11:16:50.611-07:00">\r\n  <Customer domain="QBO" sparse="false">\r\n    <Id>2</Id>\r\n    <SyncToken>3</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-11T16:49:28-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-23T11:16:50-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <GivenName>Bill</GivenName>\r\n    <MiddleName>Max</MiddleName>\r\n    <FamilyName>Lucchini</FamilyName>\r\n    <FullyQualifiedName>Bill\'s Windsurf Shop</FullyQualifiedName>\r\n    <CompanyName>Bill\'s Windsurf Shop</CompanyName>\r\n    <DisplayName>Bill\'s Windsurf Shop</DisplayName>\r\n    <PrintOnCheckName>Bill\'s Wind and Surf Shop</PrintOnCheckName>\r\n    <Active>true</Active>\r\n    <PrimaryPhone>\r\n      <FreeFormNumber>(415) 444-6538</FreeFormNumber>\r\n    </PrimaryPhone>\r\n    <PrimaryEmailAddr>\r\n      <Address>Surf@Intuit.com</Address>\r\n    </PrimaryEmailAddr>\r\n    <Taxable>false</Taxable>\r\n    <BillAddr>\r\n      <Id>3</Id>\r\n      <Line1>12 Ocean Dr.</Line1>\r\n      <City>Half Moon Bay</City>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>94213</PostalCode>\r\n      <Lat>37.4307072</Lat>\r\n      <Long>-122.4295234</Long>\r\n    </BillAddr>\r\n    <Job>false</Job>\r\n    <BillWithParent>false</BillWithParent>\r\n    <Balance>85.00</Balance>\r\n    <BalanceWithJobs>85.00</BalanceWithJobs>\r\n    <PreferredDeliveryMethod>Print</PreferredDeliveryMethod>\r\n  </Customer>\r\n</IntuitResponse>',
                "Create0-request-xml":
                    '<Customer xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Title>Mr</Title>\r\n    <GivenName>James</GivenName>\r\n    <MiddleName>B</MiddleName>\r\n    <FamilyName>King</FamilyName>\r\n    <Suffix>Jr</Suffix>\r\n    <FullyQualifiedName>King Crafts</FullyQualifiedName>\r\n    <CompanyName>King Crafts</CompanyName>\r\n    <DisplayName>King Crafts</DisplayName>\r\n    <PrimaryPhone>\r\n        <FreeFormNumber>(555) 555-5555</FreeFormNumber>\r\n    </PrimaryPhone>\r\n    <BillAddr>\r\n        <Id>102</Id>\r\n        <Line1>123 Main Street</Line1>\r\n        <City>Mountain View</City>\r\n        <Country>USA</Country>\r\n        <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n        <PostalCode>94042</PostalCode>\r\n    </BillAddr>\r\n</Customer>\r\n',
                "Update1-response":
                    '{\n  "Customer": {\n    "domain": "QBO", \n    "PrimaryEmailAddr": {\n      "Address": "Surf@Intuit.com"\n    }, \n    "DisplayName": "Bill\'s Windsurf Shop", \n    "PreferredDeliveryMethod": "Print", \n    "GivenName": "Bill", \n    "FullyQualifiedName": "Bill\'s Windsurf Shop", \n    "BillWithParent": false, \n    "Job": false, \n    "BalanceWithJobs": 85.0, \n    "PrimaryPhone": {\n      "FreeFormNumber": "(415) 444-6538"\n    }, \n    "Active": true, \n    "MetaData": {\n      "CreateTime": "2014-09-11T16:49:28-07:00", \n      "LastUpdatedTime": "2015-07-23T11:07:55-07:00"\n    }, \n    "BillAddr": {\n      "City": "Half Moon Bay", \n      "Line1": "12 Ocean Dr.", \n      "PostalCode": "94213", \n      "Lat": "37.4307072", \n      "Long": "-122.4295234", \n      "CountrySubDivisionCode": "CA", \n      "Id": "3"\n    }, \n    "MiddleName": "Mark", \n    "Taxable": false, \n    "Balance": 85.0, \n    "SyncToken": "1", \n    "CompanyName": "Bill\'s Windsurf Shop", \n    "FamilyName": "Lucchini", \n    "PrintOnCheckName": "Bill\'s Windsurf Shop", \n    "sparse": false, \n    "Id": "2"\n  }, \n  "time": "2015-07-23T11:07:55.772-07:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "Customer": [\n      {\n        "domain": "QBO", \n        "FamilyName": "Lauterbach", \n        "DisplayName": "Amy\'s Bird Sanctuary", \n        "DefaultTaxCodeRef": {\n          "value": "2"\n        }, \n        "PrimaryEmailAddr": {\n          "Address": "Birds@Intuit.com"\n        }, \n        "PreferredDeliveryMethod": "Print", \n        "GivenName": "Amy", \n        "FullyQualifiedName": "Amy\'s Bird Sanctuary", \n        "BillWithParent": false, \n        "Job": false, \n        "BalanceWithJobs": 274.0, \n        "PrimaryPhone": {\n          "FreeFormNumber": "(650) 555-3311"\n        }, \n        "Active": true, \n        "MetaData": {\n          "CreateTime": "2014-09-11T16:48:43-07:00", \n          "LastUpdatedTime": "2015-07-01T10:14:15-07:00"\n        }, \n        "BillAddr": {\n          "City": "Bayshore", \n          "Line1": "4581 Finch St.", \n          "PostalCode": "94326", \n          "Lat": "INVALID", \n          "Long": "INVALID", \n          "CountrySubDivisionCode": "CA", \n          "Id": "2"\n        }, \n        "MiddleName": "Michelle", \n        "Notes": "Note added via Update operation.", \n        "Taxable": true, \n        "Balance": 274.0, \n        "SyncToken": "5", \n        "CompanyName": "Amy\'s Bird Sanctuary", \n        "ShipAddr": {\n          "City": "Bayshore", \n          "Line1": "4581 Finch St.", \n          "PostalCode": "94326", \n          "Lat": "INVALID", \n          "Long": "INVALID", \n          "CountrySubDivisionCode": "CA", \n          "Id": "109"\n        }, \n        "PrintOnCheckName": "Amy\'s Bird Sanctuary", \n        "sparse": false, \n        "Id": "1"\n      }, \n      {\n        "domain": "QBO", \n        "PrimaryEmailAddr": {\n          "Address": "Consulting@intuit.com"\n        }, \n        "DisplayName": "Weiskopf Consulting", \n        "FamilyName": "Weiskopf", \n        "PreferredDeliveryMethod": "Print", \n        "GivenName": "Nicola", \n        "FullyQualifiedName": "Weiskopf Consulting", \n        "BillWithParent": false, \n        "Job": false, \n        "BalanceWithJobs": 390.0, \n        "PrimaryPhone": {\n          "FreeFormNumber": "(650) 555-1423"\n        }, \n        "Active": true, \n        "MetaData": {\n          "CreateTime": "2014-09-11T17:29:04-07:00", \n          "LastUpdatedTime": "2015-06-24T15:54:02-07:00"\n        }, \n        "BillAddr": {\n          "City": "Bayshore", \n          "Line1": "45612 Main St.", \n          "PostalCode": "94326", \n          "Lat": "45.256574", \n          "Long": "-66.0943698", \n          "CountrySubDivisionCode": "CA", \n          "Id": "30"\n        }, \n        "Taxable": false, \n        "Balance": 390.0, \n        "SyncToken": "0", \n        "CompanyName": "Weiskopf Consulting", \n        "ShipAddr": {\n          "City": "Bayshore", \n          "Line1": "45612 Main St.", \n          "PostalCode": "94326", \n          "Lat": "45.256574", \n          "Long": "-66.0943698", \n          "CountrySubDivisionCode": "CA", \n          "Id": "30"\n        }, \n        "PrintOnCheckName": "Weiskopf Consulting", \n        "sparse": false, \n        "Id": "29"\n      }\n    ], \n    "startPosition": 1, \n    "maxResults": 6\n  }, \n  "time": "2015-07-23T11:02:25.149-07:00"\n}',
            },
            Apagingsummary: {
                "Query0-request": '"BaseURL/v3/company/1386066315/reports/AgedPayables?date_macro=Today"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "AgedPayables", \n    "Option": [\n      {\n        "Name": "report_date", \n        "Value": "2016-03-08"\n      }, \n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "today", \n    "StartPeriod": "2016-03-08", \n    "Currency": "USD", \n    "EndPeriod": "2016-03-08", \n    "Time": "2016-03-08T16:11:49-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "id": "56", \n            "value": "Bob\'s Burger Joint"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "-46.00"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "-46.00"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "31", \n            "value": "Brosnahan Insurance Agency"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "241.23"\n          }, \n          {\n            "value": "241.23"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "36", \n            "value": "Diego\'s Road Warrior Bodyshop"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "755.00"\n          }, \n          {\n            "value": "755.00"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "46", \n            "value": "Norton Lumber and Building Materials"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "205.00"\n          }, \n          {\n            "value": "205.00"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "48", \n            "value": "PG&E"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "86.44"\n          }, \n          {\n            "value": "86.44"\n          }\n        ]\n      }, \n      {\n        "group": "GrandTotal", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": "0.00"\n            }, \n            {\n              "value": "0.00"\n            }, \n            {\n              "value": "-46.00"\n            }, \n            {\n              "value": "0.00"\n            }, \n            {\n              "value": "1287.67"\n            }, \n            {\n              "value": "1241.67"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Vendor", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Current"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "1 - 30"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "31 - 60"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "61 - 90"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "91 and over"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total"\n      }\n    ]\n  }\n}',
            },
            Account: {
                "Create0-request-xml":
                    '<Account xmlns="http://schema.intuit.com/finance/v3">\r\n  <Name>MyClients</Name>\r\n  <!--change name if the request fails with 400 due to Duplicate name-->\r\n  <AccountType>Accounts Receivable</AccountType>\r\n</Account> ',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-13T12:35:07.060-07:00">\r\n    <QueryResponse startPosition="1" maxResults="3">\r\n        <Account domain="QBO" sparse="false">\r\n            <Id>92</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-06-23T09:38:18-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-06-23T09:38:18-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>Canadian Accounts Receivable</Name>\r\n            <SubAccount>false</SubAccount>\r\n            <FullyQualifiedName>Canadian Accounts Receivable</FullyQualifiedName>\r\n            <Active>true</Active>\r\n            <Classification>Asset</Classification>\r\n            <AccountType>Accounts Receivable</AccountType>\r\n            <AccountSubType>AccountsReceivable</AccountSubType>\r\n            <CurrentBalance>0</CurrentBalance>\r\n            <CurrentBalanceWithSubAccounts>0</CurrentBalanceWithSubAccounts>\r\n            <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n        </Account>\r\n        <Account domain="QBO" sparse="false">\r\n            <Id>93</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-07-13T12:34:47-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-13T12:34:47-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>MyClients</Name>\r\n            <SubAccount>false</SubAccount>\r\n            <FullyQualifiedName>MyClients</FullyQualifiedName>\r\n            <Active>true</Active>\r\n            <Classification>Asset</Classification>\r\n            <AccountType>Accounts Receivable</AccountType>\r\n            <AccountSubType>AccountsReceivable</AccountSubType>\r\n            <CurrentBalance>0</CurrentBalance>\r\n            <CurrentBalanceWithSubAccounts>0</CurrentBalanceWithSubAccounts>\r\n            <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n        </Account>\r\n        <Account domain="QBO" sparse="false">\r\n            <Id>91</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-01-13T10:29:27-08:00</CreateTime>\r\n                <LastUpdatedTime>2015-01-13T10:29:27-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>MyJobs</Name>\r\n            <SubAccount>false</SubAccount>\r\n            <FullyQualifiedName>MyJobs</FullyQualifiedName>\r\n            <Active>true</Active>\r\n            <Classification>Asset</Classification>\r\n            <AccountType>Accounts Receivable</AccountType>\r\n            <AccountSubType>AccountsReceivable</AccountSubType>\r\n            <CurrentBalance>0</CurrentBalance>\r\n            <CurrentBalanceWithSubAccounts>0</CurrentBalanceWithSubAccounts>\r\n            <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n        </Account>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-13T12:30:07.458-07:00">\r\n  <Account domain="QBO" sparse="false">\r\n    <Id>93</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-07-13T12:34:47-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-13T12:34:47-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>MyClients</Name>\r\n    <SubAccount>false</SubAccount>\r\n    <FullyQualifiedName>MyClients</FullyQualifiedName>\r\n    <Active>true</Active>\r\n    <Classification>Asset</Classification>\r\n    <AccountType>Accounts Receivable</AccountType>\r\n    <AccountSubType>AccountsReceivable</AccountSubType>\r\n    <CurrentBalance>0</CurrentBalance>\r\n    <CurrentBalanceWithSubAccounts>0</CurrentBalanceWithSubAccounts>\r\n    <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n  </Account>\r\n</IntuitResponse>',
                "Query0-request": "\"select * from Account where Metadata.CreateTime > '2014-12-31'\"",
                "Update0-response":
                    '{\n  "Account": {\n    "FullyQualifiedName": "Accounts Payable (A/P)", \n    "domain": "QBO", \n    "SubAccount": false, \n    "Description": "Description added during update.", \n    "Classification": "Liability", \n    "AccountSubType": "AccountsPayable", \n    "CurrentBalanceWithSubAccounts": -1091.23, \n    "sparse": false, \n    "MetaData": {\n      "CreateTime": "2014-09-12T10:12:02-07:00", \n      "LastUpdatedTime": "2015-07-13T15:35:13-07:00"\n    }, \n    "AccountType": "Accounts Payable", \n    "CurrentBalance": -1091.23, \n    "Active": true, \n    "SyncToken": "1", \n    "Id": "33", \n    "Name": "Accounts Payable (A/P)"\n  }, \n  "time": "2015-07-13T15:31:25.618-07:00"\n}',
                "Update0-request-xml":
                    '<Account xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>33</Id>\r\n    <SyncToken>2</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-12T10:12:02-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-13T15:35:13-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Accounts Payable (A/P)</Name>\r\n    <SubAccount>false</SubAccount>\r\n    <Description>Another description update.</Description>\r\n    <FullyQualifiedName>Accounts Payable (A/P)</FullyQualifiedName>\r\n    <Active>true</Active>\r\n    <Classification>Liability</Classification>\r\n    <AccountType>Accounts Payable</AccountType>\r\n    <AccountSubType>AccountsPayable</AccountSubType>\r\n    <CurrentBalance>-1091.23</CurrentBalance>\r\n    <CurrentBalanceWithSubAccounts>-1091.23</CurrentBalanceWithSubAccounts>\r\n</Account>\r\n',
                "Read0-response":
                    '{\n  "Account": {\n    "FullyQualifiedName": "Accounts Payable (A/P)", \n    "domain": "QBO", \n    "Name": "Accounts Payable (A/P)", \n    "Classification": "Liability", \n    "AccountSubType": "AccountsPayable", \n    "CurrentBalanceWithSubAccounts": -1091.23, \n    "sparse": false, \n    "MetaData": {\n      "CreateTime": "2014-09-12T10:12:02-07:00", \n      "LastUpdatedTime": "2015-06-30T15:09:07-07:00"\n    }, \n    "AccountType": "Accounts Payable", \n    "CurrentBalance": -1091.23, \n    "Active": true, \n    "SyncToken": "0", \n    "Id": "33", \n    "SubAccount": false\n  }, \n  "time": "2015-07-13T12:50:36.72-07:00"\n}',
                "Create0-response":
                    '{\n  "Account": {\n    "FullyQualifiedName": "MyJobs", \n    "domain": "QBO", \n    "Name": "MyJobs", \n    "Classification": "Asset", \n    "AccountSubType": "AccountsReceivable", \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "CurrentBalanceWithSubAccounts": 0, \n    "sparse": false, \n    "MetaData": {\n      "CreateTime": "2014-12-31T09:29:05-08:00", \n      "LastUpdatedTime": "2014-12-31T09:29:05-08:00"\n    }, \n    "AccountType": "Accounts Receivable", \n    "CurrentBalance": 0, \n    "Active": true, \n    "SyncToken": "0", \n    "Id": "94", \n    "SubAccount": false\n  }, \n  "time": "2014-12-31T09:29:05.717-08:00"\n}',
                "Update0-request":
                    '{\n  "FullyQualifiedName": "Accounts Payable (A/P)", \n  "domain": "QBO", \n  "SubAccount": false, \n  "Description": "Description added during update.", \n  "Classification": "Liability", \n  "AccountSubType": "AccountsPayable", \n  "CurrentBalanceWithSubAccounts": -1091.23, \n  "sparse": false, \n  "MetaData": {\n    "CreateTime": "2014-09-12T10:12:02-07:00", \n    "LastUpdatedTime": "2015-06-30T15:09:07-07:00"\n  }, \n  "AccountType": "Accounts Payable", \n  "CurrentBalance": -1091.23, \n  "Active": true, \n  "SyncToken": "0", \n  "Id": "33", \n  "Name": "Accounts Payable (A/P)"\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-13T12:51:18.467-07:00">\r\n  <Account domain="QBO" sparse="false">\r\n    <Id>33</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-12T10:12:02-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-06-30T15:09:07-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Accounts Payable (A/P)</Name>\r\n    <SubAccount>false</SubAccount>\r\n    <FullyQualifiedName>Accounts Payable (A/P)</FullyQualifiedName>\r\n    <Active>true</Active>\r\n    <Classification>Liability</Classification>\r\n    <AccountType>Accounts Payable</AccountType>\r\n    <AccountSubType>AccountsPayable</AccountSubType>\r\n    <CurrentBalance>-1091.23</CurrentBalance>\r\n    <CurrentBalanceWithSubAccounts>-1091.23</CurrentBalanceWithSubAccounts>\r\n  </Account>\r\n</IntuitResponse>\r\n',
                "Update0-response-xml":
                    '\ufeff<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-13T15:46:56.803-07:00">\r\n  <Account domain="QBO" sparse="false">\r\n    <Id>33</Id>\r\n    <SyncToken>3</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-12T10:12:02-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-13T15:50:44-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Accounts Payable (A/P)</Name>\r\n    <SubAccount>false</SubAccount>\r\n    <Description>Another description update.</Description>\r\n    <FullyQualifiedName>Accounts Payable (A/P)</FullyQualifiedName>\r\n    <Active>true</Active>\r\n    <Classification>Liability</Classification>\r\n    <AccountType>Accounts Payable</AccountType>\r\n    <AccountSubType>AccountsPayable</AccountSubType>\r\n    <CurrentBalance>-1091.23</CurrentBalance>\r\n    <CurrentBalanceWithSubAccounts>-1091.23</CurrentBalanceWithSubAccounts>\r\n  </Account>\r\n</IntuitResponse>',
                "Create0-request": '{\n  "Name": "MyJobs_test", \n  "AccountType": "Accounts Receivable"\n}',
                "Query0-request-xml": "select * from Account where Metadata.CreateTime > '2014-12-31'",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "Account": [\n      {\n        "FullyQualifiedName": "Canadian Accounts Receivable", \n        "domain": "QBO", \n        "Name": "Canadian Accounts Receivable", \n        "Classification": "Asset", \n        "AccountSubType": "AccountsReceivable", \n        "CurrencyRef": {\n          "name": "United States Dollar", \n          "value": "USD"\n        }, \n        "CurrentBalanceWithSubAccounts": 0, \n        "sparse": false, \n        "MetaData": {\n          "CreateTime": "2015-06-23T09:38:18-07:00", \n          "LastUpdatedTime": "2015-06-23T09:38:18-07:00"\n        }, \n        "AccountType": "Accounts Receivable", \n        "CurrentBalance": 0, \n        "Active": true, \n        "SyncToken": "0", \n        "Id": "92", \n        "SubAccount": false\n      }, \n      {\n        "FullyQualifiedName": "MyClients", \n        "domain": "QBO", \n        "Name": "MyClients", \n        "Classification": "Asset", \n        "AccountSubType": "AccountsReceivable", \n        "CurrencyRef": {\n          "name": "United States Dollar", \n          "value": "USD"\n        }, \n        "CurrentBalanceWithSubAccounts": 0, \n        "sparse": false, \n        "MetaData": {\n          "CreateTime": "2015-07-13T12:34:47-07:00", \n          "LastUpdatedTime": "2015-07-13T12:34:47-07:00"\n        }, \n        "AccountType": "Accounts Receivable", \n        "CurrentBalance": 0, \n        "Active": true, \n        "SyncToken": "0", \n        "Id": "93", \n        "SubAccount": false\n      }, \n      {\n        "FullyQualifiedName": "MyJobs", \n        "domain": "QBO", \n        "Name": "MyJobs", \n        "Classification": "Asset", \n        "AccountSubType": "AccountsReceivable", \n        "CurrencyRef": {\n          "name": "United States Dollar", \n          "value": "USD"\n        }, \n        "CurrentBalanceWithSubAccounts": 0, \n        "sparse": false, \n        "MetaData": {\n          "CreateTime": "2015-01-13T10:29:27-08:00", \n          "LastUpdatedTime": "2015-01-13T10:29:27-08:00"\n        }, \n        "AccountType": "Accounts Receivable", \n        "CurrentBalance": 0, \n        "Active": true, \n        "SyncToken": "0", \n        "Id": "91", \n        "SubAccount": false\n      }\n    ], \n    "maxResults": 3\n  }, \n  "time": "2015-07-13T12:35:57.651-07:00"\n}',
            },
            Taxcode: {
                "Query0-request": '"select * From TaxCode"',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-27T12:36:59.832-07:00">\r\n  <TaxCode domain="QBO" sparse="false">\r\n    <Id>2</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-18T12:17:04-07:00</CreateTime>\r\n      <LastUpdatedTime>2014-09-18T12:17:04-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>California</Name>\r\n    <Description>California</Description>\r\n    <Active>true</Active>\r\n    <Taxable>true</Taxable>\r\n    <TaxGroup>true</TaxGroup>\r\n    <SalesTaxRateList>\r\n      <TaxRateDetail>\r\n        <TaxRateRef name="California">3</TaxRateRef>\r\n        <TaxTypeApplicable>TaxOnAmount</TaxTypeApplicable>\r\n        <TaxOrder>0</TaxOrder>\r\n      </TaxRateDetail>\r\n    </SalesTaxRateList>\r\n    <PurchaseTaxRateList />\r\n  </TaxCode>\r\n</IntuitResponse>',
                "Read0-response":
                    '{\n  "TaxCode": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "TaxGroup": true, \n    "Name": "California", \n    "Taxable": true, \n    "PurchaseTaxRateList": {\n      "TaxRateDetail": []\n    }, \n    "sparse": false, \n    "Active": true, \n    "Description": "California", \n    "MetaData": {\n      "CreateTime": "2014-09-18T12:17:04-07:00", \n      "LastUpdatedTime": "2014-09-18T12:17:04-07:00"\n    }, \n    "Id": "2", \n    "SalesTaxRateList": {\n      "TaxRateDetail": [\n        {\n          "TaxTypeApplicable": "TaxOnAmount", \n          "TaxRateRef": {\n            "name": "California", \n            "value": "3"\n          }, \n          "TaxOrder": 0\n        }\n      ]\n    }\n  }, \n  "time": "2015-07-27T12:37:22.733-07:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 5, \n    "TaxCode": [\n      {\n        "TaxGroup": false, \n        "Name": "TAX", \n        "Taxable": true, \n        "Description": "TAX", \n        "Id": "TAX", \n        "MetaData": {\n          "CreateTime": "2014-10-15T11:28:33-07:00", \n          "LastUpdatedTime": "2014-10-15T11:28:33-07:00"\n        }\n      }, \n      {\n        "TaxGroup": false, \n        "Name": "NON", \n        "Taxable": false, \n        "Description": "NON", \n        "Id": "NON", \n        "MetaData": {\n          "CreateTime": "2014-10-15T11:28:33-07:00", \n          "LastUpdatedTime": "2014-10-15T11:28:33-07:00"\n        }\n      }, \n      {\n        "TaxGroup": true, \n        "Name": "CustomSalesTax", \n        "Taxable": true, \n        "Description": "CustomSalesTax", \n        "Id": "CustomSalesTax", \n        "MetaData": {\n          "CreateTime": "2014-10-15T11:28:33-07:00", \n          "LastUpdatedTime": "2014-10-15T11:28:33-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "TaxGroup": true, \n        "Name": "California", \n        "Taxable": true, \n        "PurchaseTaxRateList": {\n          "TaxRateDetail": []\n        }, \n        "sparse": false, \n        "Active": true, \n        "Description": "California", \n        "MetaData": {\n          "CreateTime": "2014-09-18T12:17:04-07:00", \n          "LastUpdatedTime": "2014-09-18T12:17:04-07:00"\n        }, \n        "Id": "2", \n        "SalesTaxRateList": {\n          "TaxRateDetail": [\n            {\n              "TaxTypeApplicable": "TaxOnAmount", \n              "TaxRateRef": {\n                "name": "California", \n                "value": "3"\n              }, \n              "TaxOrder": 0\n            }\n          ]\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "TaxGroup": true, \n        "Name": "Tucson", \n        "Taxable": true, \n        "PurchaseTaxRateList": {\n          "TaxRateDetail": []\n        }, \n        "sparse": false, \n        "Active": true, \n        "Description": "Tucson", \n        "MetaData": {\n          "CreateTime": "2014-09-18T12:17:04-07:00", \n          "LastUpdatedTime": "2014-09-18T12:17:04-07:00"\n        }, \n        "Id": "3", \n        "SalesTaxRateList": {\n          "TaxRateDetail": [\n            {\n              "TaxTypeApplicable": "TaxOnAmount", \n              "TaxRateRef": {\n                "name": "AZ State tax", \n                "value": "1"\n              }, \n              "TaxOrder": 0\n            }, \n            {\n              "TaxTypeApplicable": "TaxOnAmount", \n              "TaxRateRef": {\n                "name": "Tucson City", \n                "value": "2"\n              }, \n              "TaxOrder": 0\n            }\n          ]\n        }\n      }\n    ], \n    "maxResults": 5\n  }, \n  "time": "2015-07-27T11:44:00.125-07:00"\n}',
                "Query0-request-xml": "select * from TaxCode",
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-27T11:43:27.268-07:00">\r\n    <QueryResponse startPosition="1" maxResults="5" totalCount="5">\r\n        <TaxCode>\r\n            <Id>TAX</Id>\r\n            <MetaData>\r\n                <CreateTime>2014-10-15T11:28:33-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-10-15T11:28:33-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>TAX</Name>\r\n            <Description>TAX</Description>\r\n            <Taxable>true</Taxable>\r\n            <TaxGroup>false</TaxGroup>\r\n        </TaxCode>\r\n        <TaxCode>\r\n            <Id>NON</Id>\r\n            <MetaData>\r\n                <CreateTime>2014-10-15T11:28:33-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-10-15T11:28:33-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>NON</Name>\r\n            <Description>NON</Description>\r\n            <Taxable>false</Taxable>\r\n            <TaxGroup>false</TaxGroup>\r\n        </TaxCode>\r\n        <TaxCode>\r\n            <Id>CustomSalesTax</Id>\r\n            <MetaData>\r\n                <CreateTime>2014-10-15T11:28:33-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-10-15T11:28:33-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>CustomSalesTax</Name>\r\n            <Description>CustomSalesTax</Description>\r\n            <Taxable>true</Taxable>\r\n            <TaxGroup>true</TaxGroup>\r\n        </TaxCode>\r\n        <TaxCode domain="QBO" sparse="false">\r\n            <Id>2</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-18T12:17:04-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-18T12:17:04-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>California</Name>\r\n            <Description>California</Description>\r\n            <Active>true</Active>\r\n            <Taxable>true</Taxable>\r\n            <TaxGroup>true</TaxGroup>\r\n            <SalesTaxRateList>\r\n                <TaxRateDetail>\r\n                    <TaxRateRef name="California">3</TaxRateRef>\r\n                    <TaxTypeApplicable>TaxOnAmount</TaxTypeApplicable>\r\n                    <TaxOrder>0</TaxOrder>\r\n                </TaxRateDetail>\r\n            </SalesTaxRateList>\r\n            <PurchaseTaxRateList />\r\n        </TaxCode>\r\n        <TaxCode domain="QBO" sparse="false">\r\n            <Id>3</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-18T12:17:04-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-18T12:17:04-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>Tucson</Name>\r\n            <Description>Tucson</Description>\r\n            <Active>true</Active>\r\n            <Taxable>true</Taxable>\r\n            <TaxGroup>true</TaxGroup>\r\n            <SalesTaxRateList>\r\n                <TaxRateDetail>\r\n                    <TaxRateRef name="AZ State tax">1</TaxRateRef>\r\n                    <TaxTypeApplicable>TaxOnAmount</TaxTypeApplicable>\r\n                    <TaxOrder>0</TaxOrder>\r\n                </TaxRateDetail>\r\n                <TaxRateDetail>\r\n                    <TaxRateRef name="Tucson City">2</TaxRateRef>\r\n                    <TaxTypeApplicable>TaxOnAmount</TaxTypeApplicable>\r\n                    <TaxOrder>0</TaxOrder>\r\n                </TaxRateDetail>\r\n            </SalesTaxRateList>\r\n            <PurchaseTaxRateList />\r\n        </TaxCode>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
            },
            Cashflow: {
                "Query0-request": '"BaseURL/v3/company/1386066315/reports/CashFlow"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "CashFlow", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "last calendar year-to-date", \n    "StartPeriod": "2015-01-01", \n    "Currency": "USD", \n    "EndPeriod": "2015-03-09", \n    "Time": "2016-03-09T11:40:50-08:00", \n    "SummarizeColumnsBy": "Total"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "OPERATING ACTIVITIES"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "Net Income"\n                }, \n                {\n                  "value": "-300.00"\n                }\n              ], \n              "type": "Data", \n              "group": "NetIncome"\n            }, \n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "value": "Adjustments to reconcile Net Income to Net Cash provided by operations:"\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "ColData": [\n                      {\n                        "id": "33", \n                        "value": "Accounts Payable (A/P)"\n                      }, \n                      {\n                        "value": "300.00"\n                      }\n                    ], \n                    "type": "Data"\n                  }\n                ]\n              }, \n              "type": "Section", \n              "group": "OperatingAdjustments"\n            }\n          ]\n        }, \n        "type": "Section", \n        "group": "OperatingActivities", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total Adjustments to reconcile Net Income to Net Cash provided by operations:"\n            }, \n            {\n              "value": "300.00"\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "FINANCING ACTIVITIES"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "id": "34", \n                  "value": "Opening Balance Equity"\n                }, \n                {\n                  "value": "5000.00"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "group": "FinancingActivities", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Net cash provided by financing activities"\n            }, \n            {\n              "value": "5000.00"\n            }\n          ]\n        }\n      }, \n      {\n        "group": "CashIncrease", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Net cash increase for period"\n            }, \n            {\n              "value": "5000.00"\n            }\n          ]\n        }\n      }, \n      {\n        "group": "EndingCash", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Cash at end of period"\n            }, \n            {\n              "value": "5000.00"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Account", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total"\n      }\n    ]\n  }\n}',
            },
            Changedatacapture: {
                "Query0-request": '"entities=Customer,Estimate&changedSince=2015-11-28\\n"',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-12-23T13:27:01.723-08:00">\r\n  <CDCResponse>\r\n    <QueryResponse startPosition="1" maxResults="3">\r\n      <Customer domain="QBO" sparse="false">\r\n        <Id>63</Id>\r\n         ...\r\n      </Customer>\r\n      <Customer domain="QBO" sparse="false">\r\n        <Id>64</Id>\r\n         ...\r\n      </Customer>\r\n      <Customer domain="QBO" sparse="false">\r\n        ...\r\n      </Customer>\r\n    </QueryResponse>\r\n    <QueryResponse startPosition="1" maxResults="5" totalCount="5">\r\n      <Estimate domain="QBO" sparse="false">\r\n        <Id>990</Id>\r\n          ...\r\n      </Estimate>\r\n      <Estimate domain="QBO" sparse="false">\r\n        <Id>995</Id>\r\n         ...\r\n      </Estimate>\r\n      <Estimate domain="QBO" sparse="false">\r\n        <Id>989</Id>\r\n          ...\r\n      </Estimate>\r\n      <Estimate domain="QBO" status="Deleted">\r\n        <Id>979</Id>\r\n        <MetaData>\r\n          <LastUpdatedTime>2015-12-23T12:55:50-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n      </Estimate>\r\n    </QueryResponse>\r\n  </CDCResponse>\r\n</IntuitResponse>',
                "Query0-request-xml":
                    "https://quickbooks.api.intuit.com/v3/company/12341234/cdc?entities=Customer,Estimate&changedSince=2015-11-28",
                "Query0-response":
                    '{\n  "CDCResponse": [\n    {\n      "QueryResponse": [\n        {\n          "Customer": [\n            {\n              "Id": "63"\n            }, \n            {\n              "Id": "99"\n            }\n          ], \n          "startPosition": 1, \n          "maxResults": 3\n        }, \n        {\n          "startPosition": 1, \n          "totalCount": 5, \n          "Estimate": [\n            {\n              "Id": "34"\n            }, \n            {\n              "Id": "123"\n            }, \n            {\n              "status": "Deleted", \n              "domain": "QBO", \n              "Id": "979", \n              "MetaData": {\n                "LastUpdatedTime": "2015-12-23T12:55:50-08:00"\n              }\n            }\n          ], \n          "maxResults": 5\n        }\n      ]\n    }\n  ], \n  "time": "2015-12-23T12:56:06.196-08:00"\n}',
            },
            Taxpayment: {
                "Query0-request": '"select * From TaxPayment"',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-02-03T11:05:54.491-08:00">\r\n    <TaxPayment domain="QBO" sparse="false">\r\n        <Id>8</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2019-08-30T06:00:26-07:00</CreateTime>\r\n            <LastUpdatedTime>2019-08-30T06:00:26-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <PaymentDate>2019-08-30</PaymentDate>\r\n        <PaymentAccountRef name="Cash and cash equivalents-BAS Payment">57</PaymentAccountRef>\r\n        <PaymentAmount>10.00</PaymentAmount>\r\n        <Refund>false</Refund>\r\n    </TaxPayment>\r\n</IntuitResponse>',
                "Read0-response":
                    '{\n  "TaxPayment": {\n    "Refund": "false", \n    "SyncToken": "0", \n    "domain": "QBO", \n    "PaymentAccountRef": {\n      "name": "Cash and cash equivalents-BAS Payment", \n      "value": "57"\n    }, \n    "PaymentAmount": "10.00", \n    "PaymentDate": "2019-08-30", \n    "sparse": "false", \n    "Id": "8", \n    "MetaData": {\n      "CreateTime": "2019-08-30T06:00:26-07:00", \n      "LastUpdatedTime": "2019-08-30T06:00:26-07:00"\n    }\n  }, \n  "time": "2020-02-03T11:05:54.491-08:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "TaxPayment": [\n      {\n        "Refund": "false", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "PaymentAccountRef": {\n          "name": "Cash and cash equivalents-BAS Payment", \n          "value": "57"\n        }, \n        "PaymentAmount": "10.00", \n        "PaymentDate": "2019-08-30", \n        "sparse": "false", \n        "Id": "8", \n        "MetaData": {\n          "CreateTime": "2019-08-30T06:00:26-07:00", \n          "LastUpdatedTime": "2019-08-30T06:00:26-07:00"\n        }\n      }, \n      {\n        "Refund": "false", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "PaymentAccountRef": {\n          "name": "Cash and cash equivalents-BAS Payment", \n          "value": "57"\n        }, \n        "Description": "testing VAT Payment", \n        "PaymentAmount": "10.00", \n        "PaymentDate": "2019-08-30", \n        "sparse": "false", \n        "Id": "9", \n        "MetaData": {\n          "CreateTime": "2019-08-30T06:02:40-07:00", \n          "LastUpdatedTime": "2019-08-30T06:02:40-07:00"\n        }\n      }, \n      {\n        "Refund": "false", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "PaymentAccountRef": {\n          "name": "Cash and cash equivalents-BAS Payment", \n          "value": "57"\n        }, \n        "Description": "test the id", \n        "PaymentAmount": "10.00", \n        "PaymentDate": "2019-09-01", \n        "sparse": "false", \n        "Id": "10", \n        "MetaData": {\n          "CreateTime": "2019-09-01T01:48:39-07:00", \n          "LastUpdatedTime": "2019-09-01T01:48:39-07:00"\n        }\n      }, \n      {\n        "Refund": "false", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "PaymentAccountRef": {\n          "name": "Cash and cash equivalents-BAS Payment", \n          "value": "57"\n        }, \n        "Description": "qwerty", \n        "PaymentAmount": "15.00", \n        "PaymentDate": "2019-09-01", \n        "sparse": "false", \n        "Id": "11", \n        "MetaData": {\n          "CreateTime": "2019-09-01T01:50:30-07:00", \n          "LastUpdatedTime": "2019-09-01T01:50:30-07:00"\n        }\n      }\n    ], \n    "maxResults": 5, \n    "totalCount": 5\n  }, \n  "time": "2020-02-03T15:59:25.586-08:00"\n}',
                "Query0-request-xml": "select * from TaxPayment",
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-02-03T15:59:25.586-08:00">\r\n    <QueryResponse startPosition="1" maxResults="4">\r\n        <TaxPayment domain="QBO" sparse="false">\r\n            <Id>8</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2019-08-30T06:00:26-07:00</CreateTime>\r\n                <LastUpdatedTime>2019-08-30T06:00:26-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <PaymentDate>2019-08-30</PaymentDate>\r\n            <PaymentAccountRef name="Cash and cash equivalents-BAS Payment">57</PaymentAccountRef>\r\n            <PaymentAmount>10.00</PaymentAmount>\r\n            <Refund>false</Refund>\r\n        </TaxPayment>\r\n        <TaxPayment domain="QBO" sparse="false">\r\n            <Id>9</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2019-08-30T06:02:40-07:00</CreateTime>\r\n                <LastUpdatedTime>2019-08-30T06:02:40-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <PaymentDate>2019-08-30</PaymentDate>\r\n            <PaymentAccountRef name="Cash and cash equivalents-BAS Payment">57</PaymentAccountRef>\r\n            <PaymentAmount>10.00</PaymentAmount>\r\n            <Description>testing VAT Payment</Description>\r\n            <Refund>false</Refund>\r\n        </TaxPayment>\r\n        <TaxPayment domain="QBO" sparse="false">\r\n            <Id>10</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2019-09-01T01:48:39-07:00</CreateTime>\r\n                <LastUpdatedTime>2019-09-01T01:48:39-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <PaymentDate>2019-09-01</PaymentDate>\r\n            <PaymentAccountRef name="Cash and cash equivalents-BAS Payment">57</PaymentAccountRef>\r\n            <PaymentAmount>10.00</PaymentAmount>\r\n            <Description>test the id</Description>\r\n            <Refund>false</Refund>\r\n        </TaxPayment>\r\n        <TaxPayment domain="QBO" sparse="false">\r\n            <Id>11</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2019-09-01T01:50:30-07:00</CreateTime>\r\n                <LastUpdatedTime>2019-09-01T01:50:30-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <PaymentDate>2019-09-01</PaymentDate>\r\n            <PaymentAccountRef name="Cash and cash equivalents-BAS Payment">57</PaymentAccountRef>\r\n            <PaymentAmount>15.00</PaymentAmount>\r\n            <Description>qwerty</Description>\r\n            <Refund>false</Refund>\r\n        </TaxPayment>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
            },
            Vendorexpenses: {
                "Query0-request": '"BaseURL/v3/company/1386066315/reports/VendorExpenses"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "VendorExpenses", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "this calendar year-to-date", \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2016-01-01", \n    "Currency": "USD", \n    "EndPeriod": "2016-03-14", \n    "Time": "2016-03-14T13:22:38-07:00", \n    "SummarizeColumnsBy": "Total"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "id": "56", \n            "value": "Bob\'s Burger Joint"\n          }, \n          {\n            "value": "-61.91"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "33", \n            "value": "Chin\'s Gas and Oil"\n          }, \n          {\n            "value": "52.56"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "38", \n            "value": "Ellis Equipment Rental"\n          }, \n          {\n            "value": "112.00"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "58", \n            "value": "QuickBooks Payments"\n          }, \n          {\n            "value": "0.44"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "50", \n            "value": "Tania\'s Nursery"\n          }, \n          {\n            "value": "89.00"\n          }\n        ]\n      }, \n      {\n        "group": "GrandTotal", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": "192.09"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Vendor", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total"\n      }\n    ]\n  }\n}',
            },
            Bill: {
                "Delete0-request": '{\n  "SyncToken": "0", \n  "Id": "108"\n}',
                "Delete0-response":
                    '{\n  "Bill": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "108"\n  }, \n  "time": "2015-05-26T13:14:34.775-07:00"\n}',
                "Create0-request-xml":
                    '<Bill xmlns="http://schema.intuit.com/finance/v3">\r\n    <Line>\r\n        <Id>1</Id>\r\n        <Amount>500.00</Amount>\r\n        <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n        <AccountBasedExpenseLineDetail>\r\n            <AccountRef>7</AccountRef>\r\n        </AccountBasedExpenseLineDetail>\r\n    </Line>\r\n    <VendorRef>56</VendorRef>\r\n</Bill>\r\n',
                "Delete0-request-xml":
                    '<Bill xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>126</Id>\r\n    <SyncToken>0</SyncToken>\r\n</Bill>\r\n',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-31T09:15:04.907-08:00">\r\n    <Bill domain="QBO" sparse="false">\r\n        <Id>148</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-12-31T09:15:05-08:00</CreateTime>\r\n            <LastUpdatedTime>2014-12-31T09:15:05-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2014-12-31</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Amount>500.00</Amount>\r\n            <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n            <AccountBasedExpenseLineDetail>\r\n                <AccountRef name="Advertising">7</AccountRef>\r\n                <BillableStatus>NotBillable</BillableStatus>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </AccountBasedExpenseLineDetail>\r\n        </Line>\r\n        <VendorRef name="Bob\'s Burger Joint">56</VendorRef>\r\n        <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n        <TotalAmt>500.00</TotalAmt>\r\n        <DueDate>2014-12-31</DueDate>\r\n        <Balance>500.00</Balance>\r\n    </Bill>\r\n</IntuitResponse>\r\n',
                "Query0-request": '"select * from bill maxresults 2"',
                "Update0-response":
                    '{\n  "Bill": {\n    "DocNumber": "56789", \n    "SyncToken": "2", \n    "domain": "QBO", \n    "APAccountRef": {\n      "name": "Accounts Payable", \n      "value": "49"\n    }, \n    "VendorRef": {\n      "name": "Bayshore CalOil Service", \n      "value": "81"\n    }, \n    "TxnDate": "2014-04-04", \n    "TotalAmt": 200.0, \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "PrivateNote": "This is a updated memo.", \n    "SalesTermRef": {\n      "value": "12"\n    }, \n    "DepartmentRef": {\n      "name": "Garden Services", \n      "value": "1"\n    }, \n    "DueDate": "2013-06-09", \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "AccountBasedExpenseLineDetail", \n        "Amount": 200.0, \n        "Id": "1", \n        "AccountBasedExpenseLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "AccountRef": {\n            "name": "Automobile", \n            "value": "75"\n          }, \n          "BillableStatus": "Billable", \n          "CustomerRef": {\n            "name": "Blackwell, Edward", \n            "value": "20"\n          }, \n          "MarkupInfo": {\n            "Percent": 10\n          }\n        }, \n        "Description": "Gasoline"\n      }\n    ], \n    "Balance": 200.0, \n    "Id": "890", \n    "MetaData": {\n      "CreateTime": "2014-04-04T12:38:01-07:00", \n      "LastUpdatedTime": "2014-04-04T12:58:16-07:00"\n    }\n  }, \n  "time": "2014-04-04T12:58:16.491-07:00"\n}',
                "Update0-request-xml":
                    '<Bill xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>150</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <TxnDate>2014-10-07</TxnDate>\r\n    <Line>\r\n        <Id>1</Id>\r\n        <Description>Fountain Pump</Description>\r\n        <Amount>100.00</Amount>\r\n        <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n        <ItemBasedExpenseLineDetail>\r\n            <ItemRef>11</ItemRef>\r\n            <UnitPrice>10</UnitPrice>\r\n            <Qty>8</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n            <BillableStatus>NotBillable</BillableStatus>\r\n        </ItemBasedExpenseLineDetail>\r\n    </Line>\r\n    <Line>\r\n        <Id>2</Id>\r\n        <Description>Rock Fountain</Description>\r\n        <Amount>125.00</Amount>\r\n        <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n        <ItemBasedExpenseLineDetail>\r\n            <ItemRef>5</ItemRef>\r\n            <UnitPrice>125</UnitPrice>\r\n            <Qty>1</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n            <BillableStatus>NotBillable</BillableStatus>\r\n        </ItemBasedExpenseLineDetail>\r\n    </Line>\r\n    <VendorRef>46</VendorRef>\r\n    <TotalAmt>225.00</TotalAmt>\r\n    <DueDate>2014-10-07</DueDate>\r\n</Bill>',
                "Read0-response":
                    '{\n  "Bill": {\n    "SyncToken": "2", \n    "domain": "QBO", \n    "APAccountRef": {\n      "name": "Accounts Payable (A/P)", \n      "value": "33"\n    }, \n    "VendorRef": {\n      "name": "Norton Lumber and Building Materials", \n      "value": "46"\n    }, \n    "TxnDate": "2014-11-06", \n    "TotalAmt": 103.55, \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "LinkedTxn": [\n      {\n        "TxnId": "118", \n        "TxnType": "BillPaymentCheck"\n      }\n    ], \n    "SalesTermRef": {\n      "value": "3"\n    }, \n    "DueDate": "2014-12-06", \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "AccountBasedExpenseLineDetail", \n        "Amount": 103.55, \n        "Id": "1", \n        "AccountBasedExpenseLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "AccountRef": {\n            "name": "Job Expenses:Job Materials:Decks and Patios", \n            "value": "64"\n          }, \n          "BillableStatus": "Billable", \n          "CustomerRef": {\n            "name": "Travis Waldron", \n            "value": "26"\n          }\n        }, \n        "Description": "Lumber"\n      }\n    ], \n    "Balance": 0, \n    "Id": "25", \n    "MetaData": {\n      "CreateTime": "2014-11-06T15:37:25-08:00", \n      "LastUpdatedTime": "2015-02-09T10:11:11-08:00"\n    }\n  }, \n  "time": "2015-02-09T10:17:20.251-08:00"\n}',
                "Create0-response":
                    '{\n  "Bill": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "VendorRef": {\n      "name": "Bob\'s Burger Joint", \n      "value": "56"\n    }, \n    "TxnDate": "2014-12-31", \n    "TotalAmt": 200.0, \n    "APAccountRef": {\n      "name": "Accounts Payable (A/P)", \n      "value": "33"\n    }, \n    "Id": "151", \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "AccountBasedExpenseLineDetail", \n        "Amount": 200.0, \n        "Id": "1", \n        "AccountBasedExpenseLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "AccountRef": {\n            "name": "Advertising", \n            "value": "7"\n          }, \n          "BillableStatus": "NotBillable"\n        }\n      }\n    ], \n    "Balance": 200.0, \n    "DueDate": "2014-12-31", \n    "MetaData": {\n      "CreateTime": "2014-12-31T09:59:18-08:00", \n      "LastUpdatedTime": "2014-12-31T09:59:18-08:00"\n    }\n  }, \n  "time": "2014-12-31T09:59:17.449-08:00"\n}',
                "Update0-request":
                    '{\n  "DocNumber": "56789", \n  "SyncToken": "1", \n  "domain": "QBO", \n  "APAccountRef": {\n    "name": "Accounts Payable", \n    "value": "49"\n  }, \n  "VendorRef": {\n    "name": "Bayshore CalOil Service", \n    "value": "81"\n  }, \n  "TxnDate": "2014-04-04", \n  "TotalAmt": 200.0, \n  "CurrencyRef": {\n    "name": "United States Dollar", \n    "value": "USD"\n  }, \n  "PrivateNote": "This is a updated memo.", \n  "SalesTermRef": {\n    "value": "12"\n  }, \n  "DepartmentRef": {\n    "name": "Garden Services", \n    "value": "1"\n  }, \n  "DueDate": "2013-06-09", \n  "sparse": false, \n  "Line": [\n    {\n      "DetailType": "AccountBasedExpenseLineDetail", \n      "Amount": 200.0, \n      "Id": "1", \n      "AccountBasedExpenseLineDetail": {\n        "TaxCodeRef": {\n          "value": "TAX"\n        }, \n        "AccountRef": {\n          "name": "Automobile", \n          "value": "75"\n        }, \n        "BillableStatus": "Billable", \n        "CustomerRef": {\n          "name": "Blackwell, Edward", \n          "value": "20"\n        }, \n        "MarkupInfo": {\n          "Percent": 10\n        }\n      }, \n      "Description": "Gasoline"\n    }\n  ], \n  "Balance": 200.0, \n  "Id": "890", \n  "MetaData": {\n    "CreateTime": "2014-04-04T12:38:01-07:00", \n    "LastUpdatedTime": "2014-04-04T12:48:56-07:00"\n  }\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-02-09T10:11:31.515-08:00">\r\n    <Bill domain="QBO" sparse="false">\r\n        <Id>25</Id>\r\n        <SyncToken>2</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-11-06T15:37:25-08:00</CreateTime>\r\n            <LastUpdatedTime>2015-02-09T10:11:11-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2014-11-06</TxnDate>\r\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n        <LinkedTxn>\r\n            <TxnId>118</TxnId>\r\n            <TxnType>BillPaymentCheck</TxnType>\r\n        </LinkedTxn>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Description>Lumber</Description>\r\n            <Amount>103.55</Amount>\r\n            <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n            <AccountBasedExpenseLineDetail>\r\n                <CustomerRef name="Travis Waldron">26</CustomerRef>\r\n                <AccountRef name="Job Expenses:Job Materials:Decks and Patios">64</AccountRef>\r\n                <BillableStatus>Billable</BillableStatus>\r\n                <TaxCodeRef>TAX</TaxCodeRef>\r\n            </AccountBasedExpenseLineDetail>\r\n        </Line>\r\n        <VendorRef name="Norton Lumber and Building Materials">46</VendorRef>\r\n        <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n        <TotalAmt>103.55</TotalAmt>\r\n        <SalesTermRef>3</SalesTermRef>\r\n        <DueDate>2014-12-06</DueDate>\r\n        <Balance>0</Balance>\r\n    </Bill>\r\n</IntuitResponse>\r\n',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-10-15T14:24:54.164-07:00">\r\n    <Bill domain="QBO" sparse="false">\r\n        <Id>150</Id>\r\n        <SyncToken>2</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-10-15T13:55:31-07:00</CreateTime>\r\n            <LastUpdatedTime>2014-10-15T14:24:54-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2014-10-07</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Description>Fountain Pump</Description>\r\n            <Amount>100.00</Amount>\r\n            <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n            <ItemBasedExpenseLineDetail>\r\n                <ItemRef name="Pump">11</ItemRef>\r\n                <UnitPrice>10</UnitPrice>\r\n                <Qty>8</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n                <BillableStatus>NotBillable</BillableStatus>\r\n            </ItemBasedExpenseLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Id>2</Id>\r\n            <Description>Rock Fountain</Description>\r\n            <Amount>125.00</Amount>\r\n            <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n            <ItemBasedExpenseLineDetail>\r\n                <ItemRef name="Rock Fountain">5</ItemRef>\r\n                <UnitPrice>125</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n                <BillableStatus>NotBillable</BillableStatus>\r\n            </ItemBasedExpenseLineDetail>\r\n        </Line>\r\n        <VendorRef name="Norton Lumber and Building Materials">46</VendorRef>\r\n        <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n        <TotalAmt>225.00</TotalAmt>\r\n        <DueDate>2014-10-07</DueDate>\r\n        <Balance>225.00</Balance>\r\n    </Bill>\r\n</IntuitResponse>',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-05-26T13:12:16.102-07:00">\r\n    <Bill domain="QBO" status="Deleted">\r\n        <Id>126</Id>\r\n    </Bill>\r\n</IntuitResponse>\r\n',
                "Create0-request":
                    '{\n  "Line": [\n    {\n      "DetailType": "AccountBasedExpenseLineDetail", \n      "Amount": 200.0, \n      "Id": "1", \n      "AccountBasedExpenseLineDetail": {\n        "AccountRef": {\n          "value": "7"\n        }\n      }\n    }\n  ], \n  "VendorRef": {\n    "value": "56"\n  }\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-10-15T14:39:08.540-07:00">\r\n    <QueryResponse startPosition="1" maxResults="2" totalCount="2">\r\n        <Bill domain="QBO" sparse="false">\r\n            <Id>150</Id>\r\n            <SyncToken>2</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-10-15T13:55:31-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-10-15T14:24:54-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-10-07</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Description>Fountain Pump</Description>\r\n                <Amount>100.00</Amount>\r\n                <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n                <ItemBasedExpenseLineDetail>\r\n                    <ItemRef name="Pump">11</ItemRef>\r\n                    <UnitPrice>10</UnitPrice>\r\n                    <Qty>8</Qty>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                </ItemBasedExpenseLineDetail>\r\n            </Line>\r\n            <Line>\r\n                <Id>2</Id>\r\n                <Description>Rock Fountain</Description>\r\n                <Amount>125.00</Amount>\r\n                <DetailType>ItemBasedExpenseLineDetail</DetailType>\r\n                <ItemBasedExpenseLineDetail>\r\n                    <ItemRef name="Rock Fountain">5</ItemRef>\r\n                    <UnitPrice>125</UnitPrice>\r\n                    <Qty>1</Qty>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                </ItemBasedExpenseLineDetail>\r\n            </Line>\r\n            <VendorRef name="Norton Lumber and Building Materials">46</VendorRef>\r\n            <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n            <TotalAmt>225.00</TotalAmt>\r\n            <DueDate>2014-10-07</DueDate>\r\n            <Balance>225.00</Balance>\r\n        </Bill>\r\n        <Bill domain="QBO" sparse="false">\r\n            <Id>149</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-10-15T13:48:00-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-10-15T13:48:00-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-10-15</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Amount>200.00</Amount>\r\n                <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                <AccountBasedExpenseLineDetail>\r\n                    <AccountRef name="Advertising">7</AccountRef>\r\n                    <BillableStatus>NotBillable</BillableStatus>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </AccountBasedExpenseLineDetail>\r\n            </Line>\r\n            <VendorRef name="Bob\'s Burger Joint">56</VendorRef>\r\n            <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n            <TotalAmt>200.00</TotalAmt>\r\n            <DueDate>2014-10-15</DueDate>\r\n            <Balance>200.00</Balance>\r\n        </Bill>\r\n    </QueryResponse>\r\n</IntuitResponse>',
                "Query0-request-xml": "select * from bill maxresults 2",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 2, \n    "Bill": [\n      {\n        "SyncToken": "2", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Norton Lumber and Building Materials", \n          "value": "46"\n        }, \n        "TxnDate": "2014-10-07", \n        "TotalAmt": 225.0, \n        "APAccountRef": {\n          "name": "Accounts Payable (A/P)", \n          "value": "33"\n        }, \n        "Id": "150", \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "ItemBasedExpenseLineDetail", \n            "Amount": 100.0, \n            "Id": "1", \n            "ItemBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 8, \n              "BillableStatus": "NotBillable", \n              "UnitPrice": 10, \n              "ItemRef": {\n                "name": "Pump", \n                "value": "11"\n              }\n            }, \n            "Description": "Fountain Pump"\n          }, \n          {\n            "DetailType": "ItemBasedExpenseLineDetail", \n            "Amount": 125.0, \n            "Id": "2", \n            "ItemBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 1, \n              "BillableStatus": "NotBillable", \n              "UnitPrice": 125, \n              "ItemRef": {\n                "name": "Rock Fountain", \n                "value": "5"\n              }\n            }, \n            "Description": "Rock Fountain"\n          }\n        ], \n        "Balance": 225.0, \n        "DueDate": "2014-10-07", \n        "MetaData": {\n          "CreateTime": "2014-10-15T13:55:31-07:00", \n          "LastUpdatedTime": "2014-10-15T14:24:54-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Bob\'s Burger Joint", \n          "value": "56"\n        }, \n        "TxnDate": "2014-10-15", \n        "TotalAmt": 200.0, \n        "APAccountRef": {\n          "name": "Accounts Payable (A/P)", \n          "value": "33"\n        }, \n        "Id": "149", \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "AccountBasedExpenseLineDetail", \n            "Amount": 200.0, \n            "Id": "1", \n            "AccountBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "AccountRef": {\n                "name": "Advertising", \n                "value": "7"\n              }, \n              "BillableStatus": "NotBillable"\n            }\n          }\n        ], \n        "Balance": 200.0, \n        "DueDate": "2014-10-15", \n        "MetaData": {\n          "CreateTime": "2014-10-15T13:48:00-07:00", \n          "LastUpdatedTime": "2014-10-15T13:48:00-07:00"\n        }\n      }\n    ], \n    "maxResults": 2\n  }, \n  "time": "2014-10-15T14:41:39.98-07:00"\n}',
            },
            Batch: {
                "BatchRequest0-request":
                    '{\n  "BatchItemRequest": [\n    {\n      "bId": "bid1", \n      "Vendor": {\n        "DisplayName": "Smith Family Store"\n      }, \n      "operation": "create"\n    }, \n    {\n      "bId": "bid2", \n      "operation": "delete", \n      "Invoice": {\n        "SyncToken": "0", \n        "Id": "129"\n      }\n    }, \n    {\n      "SalesReceipt": {\n        "PrivateNote": "A private note.", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "Id": "11", \n        "sparse": true\n      }, \n      "bId": "bid3", \n      "operation": "update"\n    }, \n    {\n      "Query": "select * from SalesReceipt where TotalAmt > \'300.00\'", \n      "bId": "bid4"\n    }\n  ]\n}',
                "BatchRequest0-response":
                    '{\n  "BatchItemResponse": [\n    {\n      "Fault": {\n        "type": "ValidationFault", \n        "Error": [\n          {\n            "Message": "Duplicate Name Exists Error", \n            "code": "6240", \n            "Detail": "The name supplied already exists. : Another customer, vendor or employee is already using this \\nname. Please use a different name.", \n            "element": ""\n          }\n        ]\n      }, \n      "bId": "bid1"\n    }, \n    {\n      "Fault": {\n        "type": "ValidationFault", \n        "Error": [\n          {\n            "Message": "Object Not Found", \n            "code": "610", \n            "Detail": "Object Not Found : Something you\'re trying to use has been made inactive. Check the fields with accounts, customers, items, vendors or employees.", \n            "element": ""\n          }\n        ]\n      }, \n      "bId": "bid2"\n    }, \n    {\n      "Fault": {\n        "type": "ValidationFault", \n        "Error": [\n          {\n            "Message": "Stale Object Error", \n            "code": "5010", \n            "Detail": "Stale Object Error : You and root were working on this at the same time. root finished before you did, so your work was not saved.", \n            "element": ""\n          }\n        ]\n      }, \n      "bId": "bid3"\n    }, \n    {\n      "bId": "bid4", \n      "QueryResponse": {\n        "SalesReceipt": [\n          {\n            "TxnDate": "2015-08-25", \n            "domain": "QBO", \n            "CurrencyRef": {\n              "name": "United States Dollar", \n              "value": "USD"\n            }, \n            "PrintStatus": "NotSet", \n            "PaymentRefNum": "10264", \n            "TotalAmt": 337.5, \n            "Line": [\n              {\n                "Description": "Custom Design", \n                "DetailType": "SalesItemLineDetail", \n                "SalesItemLineDetail": {\n                  "TaxCodeRef": {\n                    "value": "NON"\n                  }, \n                  "Qty": 4.5, \n                  "UnitPrice": 75, \n                  "ItemRef": {\n                    "name": "Design", \n                    "value": "4"\n                  }\n                }, \n                "LineNum": 1, \n                "Amount": 337.5, \n                "Id": "1"\n              }, \n              {\n                "DetailType": "SubTotalLineDetail", \n                "Amount": 337.5, \n                "SubTotalLineDetail": {}\n              }\n            ], \n            "ApplyTaxAfterDiscount": false, \n            "DocNumber": "1003", \n            "PrivateNote": "A private note.", \n            "sparse": false, \n            "DepositToAccountRef": {\n              "name": "Checking", \n              "value": "35"\n            }, \n            "CustomerMemo": {\n              "value": "Thank you for your business and have a great day!"\n            }, \n            "Balance": 0, \n            "CustomerRef": {\n              "name": "Dylan Sollfrank", \n              "value": "6"\n            }, \n            "TxnTaxDetail": {\n              "TotalTax": 0\n            }, \n            "SyncToken": "1", \n            "PaymentMethodRef": {\n              "name": "Check", \n              "value": "2"\n            }, \n            "EmailStatus": "NotSet", \n            "BillAddr": {\n              "Lat": "INVALID", \n              "Long": "INVALID", \n              "Id": "49", \n              "Line1": "Dylan Sollfrank"\n            }, \n            "MetaData": {\n              "CreateTime": "2015-08-27T14:59:48-07:00", \n              "LastUpdatedTime": "2016-04-15T09:01:10-07:00"\n            }, \n            "CustomField": [\n              {\n                "DefinitionId": "1", \n                "Type": "StringType", \n                "Name": "Crew #"\n              }\n            ], \n            "Id": "11"\n          }\n        ], \n        "startPosition": 1, \n        "maxResults": 1\n      }\n    }\n  ], \n  "time": "2016-04-15T09:01:18.141-07:00"\n}',
                "BatchRequest0-response-xml":
                    '<<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2016-04-18T13:09:30.392-07:00">\r\n  <BatchItemResponse bId="bid1">\r\n    <Vendor domain="QBO" sparse="false">\r\n      <Id>58</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2016-04-18T13:09:30-07:00</CreateTime>\r\n        <LastUpdatedTime>2016-04-18T13:09:30-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <DisplayName>Smith Family Grocery</DisplayName>\r\n      <PrintOnCheckName>Smith Family Grocery</PrintOnCheckName>\r\n      <Active>true</Active>\r\n      <Balance>0</Balance>\r\n      <Vendor1099>false</Vendor1099>\r\n      <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n    </Vendor>\r\n  </BatchItemResponse>\r\n  <BatchItemResponse bId="bid2">\r\n    <Invoice domain="QBO" status="Deleted">\r\n      <Id>119</Id>\r\n    </Invoice>\r\n  </BatchItemResponse>\r\n  <BatchItemResponse bId="bid3">\r\n    <SalesReceipt domain="QBO" sparse="false">\r\n      <Id>38</Id>\r\n      <SyncToken>1</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2016-03-21T11:15:46-07:00</CreateTime>\r\n        <LastUpdatedTime>2016-04-18T13:09:30-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <CustomField>\r\n        <DefinitionId>1</DefinitionId>\r\n        <Name>Crew #</Name>\r\n        <Type>StringType</Type>\r\n      </CustomField>\r\n      <DocNumber>1011</DocNumber>\r\n      <TxnDate>2016-03-21</TxnDate>\r\n      <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n      <PrivateNote>This is another private note.</PrivateNote>\r\n      <Line>\r\n        <Id>1</Id>\r\n        <LineNum>1</LineNum>\r\n        <Description>Pest Control Services</Description>\r\n        <Amount>87.50</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n          <ItemRef name="Pest Control">10</ItemRef>\r\n          <UnitPrice>35</UnitPrice>\r\n          <Qty>2.5</Qty>\r\n          <TaxCodeRef>NON</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n      </Line>\r\n      <Line>\r\n        <Amount>87.50</Amount>\r\n        <DetailType>SubTotalLineDetail</DetailType>\r\n        <SubTotalLineDetail />\r\n      </Line>\r\n      <Line>\r\n        <Amount>8.75</Amount>\r\n        <DetailType>DiscountLineDetail</DetailType>\r\n        <DiscountLineDetail>\r\n          <PercentBased>true</PercentBased>\r\n          <DiscountPercent>10</DiscountPercent>\r\n          <DiscountAccountRef name="Discounts given">86</DiscountAccountRef>\r\n        </DiscountLineDetail>\r\n      </Line>\r\n      <TxnTaxDetail>\r\n        <TotalTax>0</TotalTax>\r\n      </TxnTaxDetail>\r\n      <CustomerRef name="Pye\'s Cakes">15</CustomerRef>\r\n      <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n      <BillAddr>\r\n        <Id>57</Id>\r\n        <Line1>Karen Pye</Line1>\r\n        <Line2>Pye\'s Cakes</Line2>\r\n        <Line3>350 Mountain View Dr.</Line3>\r\n        <Line4>South Orange, NJ  07079</Line4>\r\n        <Lat>40.7489277</Lat>\r\n        <Long>-74.2609903</Long>\r\n      </BillAddr>\r\n      <ShipAddr>\r\n        <Id>15</Id>\r\n        <Line1>350 Mountain View Dr.</Line1>\r\n        <City>South Orange</City>\r\n        <CountrySubDivisionCode>NJ</CountrySubDivisionCode>\r\n        <PostalCode>07079</PostalCode>\r\n        <Lat>40.7633073</Lat>\r\n        <Long>-74.2426072</Long>\r\n      </ShipAddr>\r\n      <TotalAmt>78.75</TotalAmt>\r\n      <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n      <PrintStatus>NotSet</PrintStatus>\r\n      <EmailStatus>NotSet</EmailStatus>\r\n      <BillEmail>\r\n        <Address>karen@pye.com</Address>\r\n      </BillEmail>\r\n      <Balance>0</Balance>\r\n      <PaymentMethodRef name="Cash">1</PaymentMethodRef>\r\n      <DepositToAccountRef name="Undeposited Funds">4</DepositToAccountRef>\r\n    </SalesReceipt>\r\n  </BatchItemResponse>\r\n  <BatchItemResponse bId="bid4">\r\n    <QueryResponse startPosition="1" maxResults="2">\r\n      <SalesReceipt domain="QBO" sparse="false">\r\n        <Id>17</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n          <CreateTime>2016-03-20T15:12:39-07:00</CreateTime>\r\n          <LastUpdatedTime>2016-03-20T15:12:39-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n          <DefinitionId>1</DefinitionId>\r\n          <Name>Crew #</Name>\r\n          <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1008</DocNumber>\r\n        <TxnDate>2016-02-27</TxnDate>\r\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n        <Line>\r\n          <Id>1</Id>\r\n          <LineNum>1</LineNum>\r\n          <Description>Custom Design</Description>\r\n          <Amount>225.00</Amount>\r\n          <DetailType>SalesItemLineDetail</DetailType>\r\n          <SalesItemLineDetail>\r\n            <ItemRef name="Design">4</ItemRef>\r\n            <UnitPrice>75</UnitPrice>\r\n            <Qty>3</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n          </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n          <Amount>225.00</Amount>\r\n          <DetailType>SubTotalLineDetail</DetailType>\r\n          <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n          <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Kate Whelan">14</CustomerRef>\r\n        <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n        <BillAddr>\r\n          <Id>54</Id>\r\n          <Line1>Kate Whelan</Line1>\r\n          <Line2>45 First St.</Line2>\r\n          <Line3>Menlo Park, CA  94304 USA</Line3>\r\n          <Lat>37.3813444</Lat>\r\n          <Long>-122.1802812</Long>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n          <Id>14</Id>\r\n          <Line1>45 First St.</Line1>\r\n          <City>Menlo Park</City>\r\n          <Country>USA</Country>\r\n          <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n          <PostalCode>94304</PostalCode>\r\n          <Lat>37.4585825</Lat>\r\n          <Long>-122.1352789</Long>\r\n        </ShipAddr>\r\n        <TotalAmt>225.00</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <BillEmail>\r\n          <Address>Kate@Whelan.com</Address>\r\n        </BillEmail>\r\n        <Balance>0</Balance>\r\n        <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n      </SalesReceipt>\r\n      <SalesReceipt domain="QBO" sparse="false">\r\n        <Id>11</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n          <CreateTime>2016-03-20T14:59:48-07:00</CreateTime>\r\n          <LastUpdatedTime>2016-03-20T14:59:48-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n          <DefinitionId>1</DefinitionId>\r\n          <Name>Crew #</Name>\r\n          <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1003</DocNumber>\r\n        <TxnDate>2016-03-18</TxnDate>\r\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n        <Line>\r\n          <Id>1</Id>\r\n          <LineNum>1</LineNum>\r\n          <Description>Custom Design</Description>\r\n          <Amount>337.50</Amount>\r\n          <DetailType>SalesItemLineDetail</DetailType>\r\n          <SalesItemLineDetail>\r\n            <ItemRef name="Design">4</ItemRef>\r\n            <UnitPrice>75</UnitPrice>\r\n            <Qty>4.5</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n          </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n          <Amount>337.50</Amount>\r\n          <DetailType>SubTotalLineDetail</DetailType>\r\n          <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n          <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Dylan Sollfrank">6</CustomerRef>\r\n        <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n        <BillAddr>\r\n          <Id>49</Id>\r\n          <Line1>Dylan Sollfrank</Line1>\r\n          <Lat>INVALID</Lat>\r\n          <Long>INVALID</Long>\r\n        </BillAddr>\r\n        <TotalAmt>337.50</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NotSet</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <Balance>0</Balance>\r\n        <PaymentMethodRef name="Check">2</PaymentMethodRef>\r\n        <PaymentRefNum>10264</PaymentRefNum>\r\n        <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n      </SalesReceipt>\r\n    </QueryResponse>\r\n  </BatchItemResponse>\r\n</IntuitResponse>\r\n',
                "BatchRequest0-request-xml":
                    '<IntuitBatchRequest xmlns="http://schema.intuit.com/finance/v3">\r\n    <BatchItemRequest bId="bid1" operation="create">\r\n        <Vendor>\r\n            <DisplayName>Smith Family Grocery</DisplayName>\r\n        </Vendor>\r\n    </BatchItemRequest>\r\n    <BatchItemRequest bId="bid2" operation="delete">\r\n        <Invoice>\r\n            <Id>119</Id>\r\n            <SyncToken>0</SyncToken>\r\n        </Invoice>\r\n    </BatchItemRequest>\r\n    <BatchItemRequest bId="bid3" operation="update">\r\n        <SalesReceipt xmlns="http://schema.intuit.com/finance/v3" sparse="true">\r\n            <Id>38</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <PrivateNote>This is another private note.</PrivateNote>\r\n        </SalesReceipt>\r\n    </BatchItemRequest>\r\n        <BatchItemRequest bId="bid4">\r\n        <Query>select * from SalesReceipt where TotalAmt > \'200.00\'</Query>\r\n   </BatchItemRequest>\r\n</IntuitBatchRequest>\r\n',
            },
            Budget: {
                "Delete0-request": '{\n  "Budget": {\n    "SyncToken": "4", \n    "Id": "1"\n  }\n}',
                "Delete0-response": '{\n  "time": "2021-08-05T15:17:32.161-07:00"\n}',
                "Create0-request-xml": "",
                "Delete0-request-xml": "",
                "Create0-response-xml": "",
                "Query0-request": '"Select * from Budget"',
                "Update0-response": '""',
                "Update0-request-xml": "",
                "Read0-response":
                    '{\n  "Budget": {\n    "StartDate": "2014-01-01", \n    "BudgetEntryType": "Quarterly", \n    "EndDate": "2014-12-31", \n    "Name": "MyBudget", \n    "SyncToken": "9", \n    "BudgetType": "ProfitAndLoss", \n    "domain": "QBO", \n    "sparse": false, \n    "Active": true, \n    "BudgetDetail": [\n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-01-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-02-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-03-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-04-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-05-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-06-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-07-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-08-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-09-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-10-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-11-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "BudgetDate": "2014-12-01"\n      }\n    ], \n    "Id": "2", \n    "MetaData": {\n      "CreateTime": "2014-01-09T14:16:19-08:00", \n      "LastUpdatedTime": "2014-01-09T14:19:04-08:00"\n    }\n  }, \n  "time": "2014-06-19T13:54:58.396-07:00"\n}',
                "Create0-response":
                    '{\n  "Budget": {\n    "StartDate": "2014-01-01", \n    "BudgetEntryType": "Quarterly", \n    "EndDate": "2014-12-31", \n    "Name": "MyBudget", \n    "SyncToken": "0", \n    "BudgetType": "ProfitAndLoss", \n    "domain": "QBO", \n    "sparse": false, \n    "Active": true, \n    "BudgetDetail": [\n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-01-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-02-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-03-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-04-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-05-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-06-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-07-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-08-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-09-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-10-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-11-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": {\n          "name": "Fees Billed", \n          "value": "5"\n        }, \n        "CustomerRef": {\n          "name": "Seabiscuit", \n          "value": "2"\n        }, \n        "BudgetDate": "2014-12-01"\n      }\n    ], \n    "Id": "2", \n    "MetaData": {\n      "CreateTime": "2014-01-09T14:16:19-08:00", \n      "LastUpdatedTime": "2014-01-09T14:19:04-08:00"\n    }\n  }, \n  "time": "2014-06-19T13:54:58.396-07:00"\n}',
                "Update0-request":
                    '{\n  "SyncToken": "3", \n  "BudgetEntryType": "Monthly", \n  "EndDate": "2015-12-31", \n  "Name": "New", \n  "StartDate": "2015-01-01", \n  "BudgetType": "ProfitAndLoss", \n  "Active": "true", \n  "BudgetDetail": [\n    {\n      "Amount": "7.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-01-01"\n    }, \n    {\n      "Amount": "22.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-02-01"\n    }, \n    {\n      "Amount": "1100.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-03-01"\n    }, \n    {\n      "Amount": "100.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-04-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-05-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-06-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-07-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-08-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-09-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-10-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-11-01"\n    }, \n    {\n      "Amount": "1500.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Fees Billed", \n        "value": "5"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-12-01"\n    }, \n    {\n      "Amount": "30.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-01-01"\n    }, \n    {\n      "Amount": "22.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-02-01"\n    }, \n    {\n      "Amount": "1100.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-03-01"\n    }, \n    {\n      "Amount": "100.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-04-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-05-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-06-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-07-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-08-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-09-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-10-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-11-01"\n    }, \n    {\n      "Amount": "800.00", \n      "AccountRef": {\n        "type": "String", \n        "name": "Refunds-Allowances", \n        "value": "6"\n      }, \n      "CustomerRef": {\n        "type": "String", \n        "name": "Fazil", \n        "value": "3"\n      }, \n      "BudgetDate": "2015-12-01"\n    }\n  ], \n  "Id": "21"\n}',
                "Read0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2021-08-04T23:26:15.827-07:00">\n        <Budget domain="QBO" sparse="false">\n            <Id>1</Id>\n            <SyncToken>2</SyncToken>\n            <MetaData>\n                <CreateTime>2021-08-04T15:31:01-07:00</CreateTime>\n                <LastUpdatedTime>2021-08-04T15:31:06-07:00</LastUpdatedTime>\n            </MetaData>\n            <Name>b1</Name>\n            <StartDate>2021-01-01</StartDate>\n            <EndDate>2021-12-31</EndDate>\n            <BudgetType>ProfitAndLoss</BudgetType>\n            <BudgetEntryType>Monthly</BudgetEntryType>\n            <Active>true</Active>\n            <BudgetDetail>\n                <BudgetDate>2021-01-01</BudgetDate>\n                <Amount>0</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n            <BudgetDetail>\n                <BudgetDate>2021-02-01</BudgetDate>\n                <Amount>0</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n            <BudgetDetail>\n                <BudgetDate>2021-03-01</BudgetDate>\n                <Amount>0</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n            <BudgetDetail>\n                <BudgetDate>2021-04-01</BudgetDate>\n                <Amount>0</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n            <BudgetDetail>\n                <BudgetDate>2021-05-01</BudgetDate>\n                <Amount>0</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n            <BudgetDetail>\n                <BudgetDate>2021-06-01</BudgetDate>\n                <Amount>0</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n            <BudgetDetail>\n                <BudgetDate>2021-07-01</BudgetDate>\n                <Amount>0</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n            <BudgetDetail>\n                <BudgetDate>2021-08-01</BudgetDate>\n                <Amount>88.00</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n            <BudgetDetail>\n                <BudgetDate>2021-09-01</BudgetDate>\n                <Amount>0</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n            <BudgetDetail>\n                <BudgetDate>2021-10-01</BudgetDate>\n                <Amount>0</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n            <BudgetDetail>\n                <BudgetDate>2021-11-01</BudgetDate>\n                <Amount>0</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n            <BudgetDetail>\n                <BudgetDate>2021-12-01</BudgetDate>\n                <Amount>0</Amount>\n                <AccountRef name="Landscaping Services">45</AccountRef>\n            </BudgetDetail>\n        </Budget>\n</IntuitResponse>',
                "Update0-response-xml": '"Sample XML response not available."',
                "Delete0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2021-08-05T15:19:39.782-07:00"/>',
                "Create0-request":
                    '{\n  "Budget": {\n    "StartDate": "2014-01-01", \n    "BudgetEntryType": "Quarterly", \n    "EndDate": "2014-12-31", \n    "Name": "MyBudget", \n    "BudgetType": "ProfitAndLoss", \n    "BudgetDetail": [\n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-01-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-02-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-03-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-04-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-05-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-06-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-07-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-08-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-09-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-10-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-11-01"\n      }, \n      {\n        "Amount": 12.0, \n        "AccountRef": "5", \n        "CustomerRef": "2", \n        "BudgetDate": "2014-12-01"\n      }\n    ]\n  }\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-14T14:17:29.138-07:00">\r\n  <QueryResponse startPosition="1" maxResults="1" totalCount="1">\r\n    <Budget domain="QBO" sparse="false">\r\n      <Id>1</Id>\r\n      <SyncToken>1</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2015-07-14T13:59:45-07:00</CreateTime>\r\n        <LastUpdatedTime>2015-07-14T13:59:59-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>Sandbox Budget</Name>\r\n      <StartDate>2014-01-01</StartDate>\r\n      <EndDate>2014-12-31</EndDate>\r\n      <BudgetType>ProfitAndLoss</BudgetType>\r\n      <BudgetEntryType>Monthly</BudgetEntryType>\r\n      <Active>true</Active>\r\n      <BudgetDetail>\r\n        <BudgetDate>2014-01-01</BudgetDate>\r\n        <Amount>0</Amount>\r\n        <AccountRef name="Services">1</AccountRef>\r\n      </BudgetDetail>\r\n      <BudgetDetail>\r\n        <BudgetDate>2014-02-01</BudgetDate>\r\n        <Amount>0</Amount>\r\n        <AccountRef name="Services">1</AccountRef>\r\n      </BudgetDetail>\r\n...\r\n      <BudgetDetail>\r\n        <BudgetDate>2014-10-01</BudgetDate>\r\n        <Amount>0</Amount>\r\n        <AccountRef name="Unapplied Cash Payment Income">87</AccountRef>\r\n      </BudgetDetail>\r\n      <BudgetDetail>\r\n        <BudgetDate>2014-11-01</BudgetDate>\r\n        <Amount>0</Amount>\r\n        <AccountRef name="Unapplied Cash Payment Income">87</AccountRef>\r\n      </BudgetDetail>\r\n      <BudgetDetail>\r\n        <BudgetDate>2014-12-01</BudgetDate>\r\n        <Amount>71.00</Amount>\r\n        <AccountRef name="Unapplied Cash Payment Income">87</AccountRef>\r\n      </BudgetDetail>\r\n    </Budget>\r\n  </QueryResponse>\r\n</IntuitResponse>',
                "Query0-request-xml": "select * from Budget",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 1, \n    "Budget": [\n      {\n        "StartDate": "2014-01-01", \n        "BudgetEntryType": "Monthly", \n        "EndDate": "2014-12-31", \n        "Name": "Sandbox Budget", \n        "SyncToken": "1", \n        "BudgetType": "ProfitAndLoss", \n        "domain": "QBO", \n        "sparse": false, \n        "Active": true, \n        "BudgetDetail": [\n          {\n            "Amount": 0, \n            "AccountRef": {\n              "name": "Services", \n              "value": "1"\n            }, \n            "BudgetDate": "2014-01-01"\n          }, \n          {\n            "Amount": 0, \n            "AccountRef": {\n              "name": "Services", \n              "value": "1"\n            }, \n            "BudgetDate": "2014-02-01"\n          }, \n          {\n            "Amount": 71.0, \n            "AccountRef": {\n              "name": "Unapplied Cash Payment Income", \n              "value": "87"\n            }, \n            "BudgetDate": "2014-12-01"\n          }\n        ], \n        "Id": "1", \n        "MetaData": {\n          "CreateTime": "2015-07-14T13:59:45-07:00", \n          "LastUpdatedTime": "2015-07-14T13:59:59-07:00"\n        }\n      }\n    ], \n    "maxResults": 1\n  }, \n  "time": "2015-07-14T14:14:07.394-07:00"\n}',
            },
            Generalledgerfr: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/GeneralLedgerFR?start_date=2021-01-01&end_date=2015-10-18&source_account_type=Bank\\r\\n"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "GeneralLedgerFR", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "StartPeriod": "2021-10-19", \n    "Currency": "EUR", \n    "EndPeriod": "2021-10-19", \n    "Time": "2021-10-19T09:31:18-07:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "82", \n              "value": "44566100 TVA d\\u00e9ductible"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "2021-10-19"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for 44566100 TVA d\\u00e9ductible"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "200.00"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "200.00"\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "65", \n              "value": "51210100 Comptes en monnaie nationale"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "2021-10-19"\n                }, \n                {\n                  "value": "BQ"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for 51210100 Comptes en monnaie nationale"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "id": "19", \n              "value": "60710000 Achats de Marchandises (ou groupe) A"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "2021-10-19"\n                }, \n                {\n                  "value": "BQ"\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }, \n                {\n                  "value": ""\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total for 60710000 Achats de Marchandises (ou groupe) A"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "tx_date", \n        "ColTitle": "Date"\n      }, \n      {\n        "ColType": "journal_code_name", \n        "ColTitle": "Journal Code"\n      }, \n      {\n        "ColType": "doc_num", \n        "ColTitle": "No."\n      }, \n      {\n        "ColType": "memo", \n        "ColTitle": "Memo/Description"\n      }, \n      {\n        "ColType": "lettrage", \n        "ColTitle": "Lettrage"\n      }, \n      {\n        "ColType": "debt_amt", \n        "ColTitle": "Debit"\n      }, \n      {\n        "ColType": "credit_amt", \n        "ColTitle": "Credit"\n      }, \n      {\n        "ColType": "subt_rbal_amount", \n        "ColTitle": "Balance"\n      }\n    ]\n  }\n}',
            },
            Item: {
                "Delete0-request": '{\n  "SyncToken": "3", \n  "Id": "33"\n}',
                "Query0-request-xml": "select * from Item maxresults 2",
                "Read0-response":
                    '{\n  "Item": {\n    "FullyQualifiedName": "Office Supplies", \n    "domain": "QBO", \n    "Id": "37", \n    "Name": "Office Supplies", \n    "TrackQtyOnHand": true, \n    "Type": "Inventory", \n    "PurchaseCost": 35, \n    "QtyOnHand": 10, \n    "IncomeAccountRef": {\n      "name": "Sales of Product Income", \n      "value": "79"\n    }, \n    "AssetAccountRef": {\n      "name": "Inventory Asset", \n      "value": "81"\n    }, \n    "Taxable": true, \n    "MetaData": {\n      "CreateTime": "2015-04-22T11:03:23-07:00", \n      "LastUpdatedTime": "2015-04-22T11:03:24-07:00"\n    }, \n    "sparse": false, \n    "Active": true, \n    "SyncToken": "0", \n    "InvStartDate": "2013-02-19", \n    "UnitPrice": 25, \n    "ExpenseAccountRef": {\n      "name": "Cost of Goods Sold", \n      "value": "80"\n    }, \n    "PurchaseDesc": "This is the purchasing description.", \n    "Description": "This is the sales description."\n  }, \n  "time": "2015-04-22T11:01:37.346-07:00"\n}',
                "Create2-request":
                    '{\n  "SubItem": true, \n  "Type": "Category", \n  "Name": "Cedar", \n  "ParentRef": {\n    "name": "Trees", \n    "value": "29"\n  }\n}',
                "Create2-response":
                    '{\n  "Item": {\n    "FullyQualifiedName": "Trees:Cedar", \n    "domain": "QBO", \n    "Name": "Cedar", \n    "Level": 1, \n    "sparse": false, \n    "SubItem": true, \n    "ParentRef": {\n      "name": "Trees", \n      "value": "29"\n    }, \n    "Active": true, \n    "SyncToken": "0", \n    "Type": "Category", \n    "Id": "30", \n    "MetaData": {\n      "CreateTime": "2015-10-06T10:50:42-07:00", \n      "LastUpdatedTime": "2015-10-06T10:50:42-07:00"\n    }\n  }, \n  "time": "2015-10-06T10:50:42.707-07:00"\n}',
                "Read1-response":
                    '{\n  "Item": {\n    "FullyQualifiedName": "Trees", \n    "domain": "QBO", \n    "Name": "Trees", \n    "SyncToken": "0", \n    "sparse": false, \n    "Active": true, \n    "Type": "Category", \n    "Id": "29", \n    "MetaData": {\n      "CreateTime": "2015-10-06T08:50:34-07:00", \n      "LastUpdatedTime": "2015-10-06T08:50:34-07:00"\n    }\n  }, \n  "time": "2015-10-06T08:50:34.863-07:00"\n}',
                "Update0-response":
                    '{\n  "Item": {\n    "FullyQualifiedName": "Rock Fountain", \n    "domain": "QBO", \n    "Id": "5", \n    "Name": "Rock Fountain", \n    "TrackQtyOnHand": true, \n    "Type": "Inventory", \n    "PurchaseCost": 125, \n    "QtyOnHand": 2, \n    "IncomeAccountRef": {\n      "name": "Sales of Product Income", \n      "value": "79"\n    }, \n    "AssetAccountRef": {\n      "name": "Inventory Asset", \n      "value": "81"\n    }, \n    "Taxable": true, \n    "MetaData": {\n      "CreateTime": "2014-09-16T10:42:19-07:00", \n      "LastUpdatedTime": "2015-04-22T11:10:18-07:00"\n    }, \n    "sparse": false, \n    "Active": true, \n    "SyncToken": "3", \n    "InvStartDate": "2014-09-19", \n    "UnitPrice": 275, \n    "ExpenseAccountRef": {\n      "name": "Cost of Goods Sold", \n      "value": "80"\n    }, \n    "PurchaseDesc": "Rock Fountain", \n    "Description": "New, updated description for Rock Fountain"\n  }, \n  "time": "2015-04-22T11:08:31.596-07:00"\n}',
                "Create0-response":
                    '{\n  "Item": {\n    "FullyQualifiedName": "Garden Supplies", \n    "domain": "QBO", \n    "Id": "19", \n    "Name": "Garden Supplies", \n    "TrackQtyOnHand": true, \n    "UnitPrice": 0, \n    "PurchaseCost": 0, \n    "QtyOnHand": 10, \n    "IncomeAccountRef": {\n      "name": "Sales of Product Income", \n      "value": "79"\n    }, \n    "AssetAccountRef": {\n      "name": "Inventory Asset", \n      "value": "81"\n    }, \n    "Taxable": false, \n    "sparse": false, \n    "Active": true, \n    "SyncToken": "0", \n    "InvStartDate": "2015-01-01", \n    "Type": "Inventory", \n    "ExpenseAccountRef": {\n      "name": "Cost of Goods Sold", \n      "value": "80"\n    }, \n    "MetaData": {\n      "CreateTime": "2015-12-09T11:12:39-08:00", \n      "LastUpdatedTime": "2015-12-09T11:12:41-08:00"\n    }\n  }, \n  "time": "2015-12-09T11:12:39.748-08:00"\n}',
                "Create1-request": '{\n  "Type": "Category", \n  "Name": "Trees"\n}',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-12-09T11:19:56.688-08:00">\r\n  <Item domain="QBO" sparse="false">\r\n    <Id>19</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-12-09T11:19:56-08:00</CreateTime>\r\n      <LastUpdatedTime>2015-12-09T11:19:57-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Kitchen Supplies</Name>\r\n    <Active>true</Active>\r\n    <FullyQualifiedName>Kitchen Supplies</FullyQualifiedName>\r\n    <Taxable>false</Taxable>\r\n    <UnitPrice>0</UnitPrice>\r\n    <Type>Inventory</Type>\r\n    <IncomeAccountRef name="Sales of Product Income">79</IncomeAccountRef>\r\n    <PurchaseDesc>This is the purchasing description.</PurchaseDesc>\r\n    <PurchaseCost>35</PurchaseCost>\r\n    <ExpenseAccountRef name="Cost of Goods Sold">80</ExpenseAccountRef>\r\n    <AssetAccountRef name="Inventory Asset">81</AssetAccountRef>\r\n    <TrackQtyOnHand>true</TrackQtyOnHand>\r\n    <QtyOnHand>10</QtyOnHand>\r\n    <InvStartDate>2015-01-01</InvStartDate>\r\n  </Item>\r\n</IntuitResponse>',
                "Read1-response-xml": "To be supplied.",
                "Update2-response-xml": "To be supplied.",
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-09-18T08:30:33.626-07:00">\r\n  <Item domain="QBO" status="Deleted">\r\n    <Id>41</Id>\r\n  </Item>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "TrackQtyOnHand": true, \n  "Name": "Garden Supplies", \n  "QtyOnHand": 10, \n  "IncomeAccountRef": {\n    "name": "Sales of Product Income", \n    "value": "79"\n  }, \n  "AssetAccountRef": {\n    "name": "Inventory Asset", \n    "value": "81"\n  }, \n  "InvStartDate": "2015-01-01", \n  "Type": "Inventory", \n  "ExpenseAccountRef": {\n    "name": "Cost of Goods Sold", \n    "value": "80"\n  }\n}',
                "Query3-request": "\"select * from Item where Type='Group'\"",
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T14:52:37.614-07:00">\r\n    <QueryResponse startPosition="1" maxResults="2">\r\n        <Item domain="QBO" sparse="false">\r\n            <Id>3</Id>\r\n            <SyncToken>1</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-16T10:36:03-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-19T12:47:47-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>Concrete</Name>\r\n            <Description>Concrete for fountain installation</Description>\r\n            <Active>true</Active>\r\n            <FullyQualifiedName>Concrete</FullyQualifiedName>\r\n            <Taxable>true</Taxable>\r\n            <UnitPrice>0</UnitPrice>\r\n            <Type>Service</Type>\r\n            <IncomeAccountRef name="Landscaping Services:Job Materials:Fountains and Garden Lighting">48</IncomeAccountRef>\r\n            <PurchaseCost>0</PurchaseCost>\r\n            <TrackQtyOnHand>false</TrackQtyOnHand>\r\n        </Item>\r\n        <Item domain="QBO" sparse="false">\r\n            <Id>4</Id>\r\n            <SyncToken>1</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-16T10:41:38-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-04-17T14:31:10-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Name>Design</Name>\r\n            <Description>Custom Design</Description>\r\n            <Active>true</Active>\r\n            <FullyQualifiedName>Design</FullyQualifiedName>\r\n            <Taxable>false</Taxable>\r\n            <UnitPrice>75</UnitPrice>\r\n            <Type>Service</Type>\r\n            <IncomeAccountRef name="Design income">82</IncomeAccountRef>\r\n            <PurchaseCost>0</PurchaseCost>\r\n            <TrackQtyOnHand>false</TrackQtyOnHand>\r\n        </Item>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Query3-response-xml": "To be supplied.",
                "Query1-request-xml": "To be supplied.",
                "Query1-response-xml": "To be supplied.",
                "Query0-request": '"select * from Item maxresults 2"',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T14:55:06.451-07:00">\r\n  <Item domain="QBO" sparse="false">\r\n    <Id>37</Id>\r\n    <SyncToken>2</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-04-22T11:03:23-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-24T14:55:06-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Office Supplies</Name>\r\n    <Description>This is a second, updated sales description.</Description>\r\n    <Active>true</Active>\r\n    <FullyQualifiedName>Office Supplies</FullyQualifiedName>\r\n    <Taxable>true</Taxable>\r\n    <UnitPrice>25</UnitPrice>\r\n    <Type>Inventory</Type>\r\n    <IncomeAccountRef name="Sales of Product Income">79</IncomeAccountRef>\r\n    <PurchaseDesc>This is the purchasing description.</PurchaseDesc>\r\n    <PurchaseCost>35</PurchaseCost>\r\n    <ExpenseAccountRef name="Cost of Goods Sold">80</ExpenseAccountRef>\r\n    <AssetAccountRef name="Inventory Asset">81</AssetAccountRef>\r\n    <TrackQtyOnHand>true</TrackQtyOnHand>\r\n    <QtyOnHand>10</QtyOnHand>\r\n    <InvStartDate>2013-02-19</InvStartDate>\r\n  </Item>\r\n</IntuitResponse>\r\n',
                "Query1-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "Item": [\n      {\n        "FullyQualifiedName": "Flowers", \n        "domain": "QBO", \n        "Name": "Flowers", \n        "SyncToken": "1", \n        "sparse": false, \n        "Active": true, \n        "Type": "Category", \n        "Id": "20", \n        "MetaData": {\n          "CreateTime": "2015-09-16T13:03:07-07:00", \n          "LastUpdatedTime": "2015-09-16T13:40:51-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "Flowers:Daises", \n        "domain": "QBO", \n        "Name": "Daises", \n        "Level": 1, \n        "sparse": false, \n        "SubItem": true, \n        "ParentRef": {\n          "name": "Flowers", \n          "value": "20"\n        }, \n        "Active": true, \n        "SyncToken": "0", \n        "Type": "Category", \n        "Id": "22", \n        "MetaData": {\n          "CreateTime": "2015-09-16T13:16:41-07:00", \n          "LastUpdatedTime": "2015-09-16T13:31:46-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "Flowers:Roses", \n        "domain": "QBO", \n        "Name": "Roses", \n        "Level": 1, \n        "sparse": false, \n        "SubItem": true, \n        "ParentRef": {\n          "name": "Flowers", \n          "value": "20"\n        }, \n        "Active": true, \n        "SyncToken": "0", \n        "Type": "Category", \n        "Id": "21", \n        "MetaData": {\n          "CreateTime": "2015-09-16T13:14:11-07:00", \n          "LastUpdatedTime": "2015-09-16T13:14:11-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "Garden Supplies", \n        "domain": "QBO", \n        "Name": "Garden Supplies", \n        "SyncToken": "0", \n        "sparse": false, \n        "Active": true, \n        "Type": "Category", \n        "Id": "19", \n        "MetaData": {\n          "CreateTime": "2015-09-16T13:02:07-07:00", \n          "LastUpdatedTime": "2015-09-16T13:02:07-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "Organic Fir", \n        "domain": "QBO", \n        "Name": "Organic Fir", \n        "SyncToken": "2", \n        "sparse": false, \n        "Active": true, \n        "Type": "Category", \n        "Id": "34", \n        "MetaData": {\n          "CreateTime": "2015-10-07T12:43:54-07:00", \n          "LastUpdatedTime": "2015-10-07T12:48:23-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "Organic Trees", \n        "domain": "QBO", \n        "Name": "Organic Trees", \n        "SyncToken": "2", \n        "sparse": false, \n        "Active": true, \n        "Type": "Category", \n        "Id": "29", \n        "MetaData": {\n          "CreateTime": "2015-10-06T08:50:34-07:00", \n          "LastUpdatedTime": "2015-10-07T12:48:23-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "Organic Trees:Cedar", \n        "domain": "QBO", \n        "Name": "Cedar", \n        "Level": 1, \n        "sparse": false, \n        "SubItem": true, \n        "ParentRef": {\n          "name": "Organic Trees", \n          "value": "29"\n        }, \n        "Active": true, \n        "SyncToken": "0", \n        "Type": "Category", \n        "Id": "30", \n        "MetaData": {\n          "CreateTime": "2015-10-06T10:50:42-07:00", \n          "LastUpdatedTime": "2015-10-07T12:38:03-07:00"\n        }\n      }, \n      {\n        "FullyQualifiedName": "Organic Trees:Fig", \n        "domain": "QBO", \n        "Name": "Fig", \n        "Level": 1, \n        "sparse": false, \n        "SubItem": true, \n        "ParentRef": {\n          "name": "Organic Trees", \n          "value": "29"\n        }, \n        "Active": true, \n        "SyncToken": "0", \n        "Type": "Category", \n        "Id": "31", \n        "MetaData": {\n          "CreateTime": "2015-10-06T11:07:23-07:00", \n          "LastUpdatedTime": "2015-10-07T12:38:03-07:00"\n        }\n      }\n    ], \n    "maxResults": 8\n  }, \n  "time": "2015-10-08T13:59:00.697-07:00"\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T14:53:46.341-07:00">\r\n  <Item domain="QBO" sparse="false">\r\n    <Id>37</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-04-22T11:03:23-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-04-22T11:05:08-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Office Supplies</Name>\r\n    <Description>This is a new, updated sales description.</Description>\r\n    <Active>true</Active>\r\n    <FullyQualifiedName>Office Supplies</FullyQualifiedName>\r\n    <Taxable>true</Taxable>\r\n    <UnitPrice>25</UnitPrice>\r\n    <Type>Inventory</Type>\r\n    <IncomeAccountRef name="Sales of Product Income">79</IncomeAccountRef>\r\n    <PurchaseDesc>This is the purchasing description.</PurchaseDesc>\r\n    <PurchaseCost>35</PurchaseCost>\r\n    <ExpenseAccountRef name="Cost of Goods Sold">80</ExpenseAccountRef>\r\n    <AssetAccountRef name="Inventory Asset">81</AssetAccountRef>\r\n    <TrackQtyOnHand>true</TrackQtyOnHand>\r\n    <QtyOnHand>10</QtyOnHand>\r\n    <InvStartDate>2013-02-19</InvStartDate>\r\n  </Item>\r\n</IntuitResponse>',
                "Create2-request-xml": "To be supplied.",
                "Update0-request-xml":
                    '<Item xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n    <Id>37</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-04-22T11:03:23-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-04-22T11:05:08-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Name>Office Supplies</Name>\r\n    <Description>This is a second, updated sales description.</Description>\r\n    <Active>true</Active>\r\n    <FullyQualifiedName>Office Supplies</FullyQualifiedName>\r\n    <Taxable>true</Taxable>\r\n    <UnitPrice>25</UnitPrice>\r\n    <Type>Inventory</Type>\r\n    <IncomeAccountRef name="Sales of Product Income">79</IncomeAccountRef>\r\n    <PurchaseDesc>This is the purchasing description.</PurchaseDesc>\r\n    <PurchaseCost>35</PurchaseCost>\r\n    <ExpenseAccountRef name="Cost of Goods Sold">80</ExpenseAccountRef>\r\n    <AssetAccountRef name="Inventory Asset">81</AssetAccountRef>\r\n    <TrackQtyOnHand>true</TrackQtyOnHand>\r\n    <QtyOnHand>10</QtyOnHand>\r\n    <InvStartDate>2013-02-19</InvStartDate>\r\n</Item>\r\n',
                "Read3-response-xml": "To be supplied.",
                "Update2-request-xml": "To be supplied.",
                "Create1-response-xml": "To be supplied.",
                "Delete0-response":
                    '{\n  "Item": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "33"\n  }, \n  "time": "2015-09-18T00:18:15.322-07:00"\n}',
                "Query3-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "Item": [\n      {\n        "Sku": "234", \n        "FullyQualifiedName": "Deluxe Fountain", \n        "domain": "QBO", \n        "Name": "Deluxe Fountain", \n        "TrackQtyOnHand": false, \n        "Type": "Group", \n        "PurchaseCost": 0, \n        "Taxable": false, \n        "ItemGroupDetail": {\n          "ItemGroupLine": [\n            {\n              "Qty": 1, \n              "ItemRef": {\n                "type": "Inventory", \n                "name": "Pump", \n                "value": "11"\n              }\n            }, \n            {\n              "Qty": 1, \n              "ItemRef": {\n                "type": "Inventory", \n                "name": "Rock Fountain", \n                "value": "5"\n              }\n            }, \n            {\n              "Qty": 2, \n              "ItemRef": {\n                "type": "Service", \n                "name": "Lighting", \n                "value": "8"\n              }\n            }, \n            {\n              "Qty": 4, \n              "ItemRef": {\n                "type": "Service", \n                "name": "Installation", \n                "value": "7"\n              }\n            }\n          ]\n        }, \n        "sparse": false, \n        "Active": true, \n        "PrintGroupedItems": true, \n        "SyncToken": "1", \n        "UnitPrice": 0, \n        "Id": "49", \n        "MetaData": {\n          "CreateTime": "2016-06-23T10:51:32-07:00", \n          "LastUpdatedTime": "2016-06-23T10:52:20-07:00"\n        }\n      }\n    ], \n    "maxResults": 1\n  }, \n  "time": "2016-06-08T13:59:00.697-07:00"\n}',
                "Create1-response":
                    '{\n  "Item": {\n    "FullyQualifiedName": "Trees", \n    "domain": "QBO", \n    "Name": "Trees", \n    "SyncToken": "0", \n    "sparse": false, \n    "Active": true, \n    "Type": "Category", \n    "Id": "29", \n    "MetaData": {\n      "CreateTime": "2015-10-06T08:50:34-07:00", \n      "LastUpdatedTime": "2015-10-06T08:50:34-07:00"\n    }\n  }, \n  "time": "2015-10-06T08:50:34.863-07:00"\n}',
                "Create2-response-xml": "To be supplied.",
                "Query3-request-xml": "To be supplied.",
                "Delete0-request-xml":
                    '<Item xmlns=\'http://schema.intuit.com/finance/v3\' domain="QBO" sparse="false">\r\n    <Id>863</Id>\r\n    <SyncToken>0</SyncToken>\r\n</Item>',
                "Update0-request":
                    '{\n  "FullyQualifiedName": "Rock Fountain", \n  "domain": "QBO", \n  "Id": "5", \n  "Name": "Rock Fountain", \n  "TrackQtyOnHand": true, \n  "Type": "Inventory", \n  "PurchaseCost": 125, \n  "QtyOnHand": 2, \n  "IncomeAccountRef": {\n    "name": "Sales of Product Income", \n    "value": "79"\n  }, \n  "AssetAccountRef": {\n    "name": "Inventory Asset", \n    "value": "81"\n  }, \n  "Taxable": true, \n  "MetaData": {\n    "CreateTime": "2014-09-16T10:42:19-07:00", \n    "LastUpdatedTime": "2014-09-19T13:16:17-07:00"\n  }, \n  "sparse": false, \n  "Active": true, \n  "SyncToken": "2", \n  "InvStartDate": "2014-09-19", \n  "UnitPrice": 275, \n  "ExpenseAccountRef": {\n    "name": "Cost of Goods Sold", \n    "value": "80"\n  }, \n  "PurchaseDesc": "Rock Fountain", \n  "Description": "New, updated description for Rock Fountain"\n}',
                "Read3-response":
                    '{\n  "Item": {\n    "Sku": "234", \n    "FullyQualifiedName": "Deluxe Fountain", \n    "domain": "QBO", \n    "Name": "Deluxe Fountain", \n    "TrackQtyOnHand": false, \n    "Type": "Group", \n    "PurchaseCost": 0, \n    "Taxable": false, \n    "ItemGroupDetail": {\n      "ItemGroupLine": [\n        {\n          "Qty": 1, \n          "ItemRef": {\n            "type": "Inventory", \n            "name": "Pump", \n            "value": "11"\n          }\n        }, \n        {\n          "Qty": 1, \n          "ItemRef": {\n            "type": "Inventory", \n            "name": "Rock Fountain", \n            "value": "5"\n          }\n        }, \n        {\n          "Qty": 2, \n          "ItemRef": {\n            "type": "Service", \n            "name": "Lighting", \n            "value": "8"\n          }\n        }, \n        {\n          "Qty": 4, \n          "ItemRef": {\n            "type": "Service", \n            "name": "Installation", \n            "value": "7"\n          }\n        }\n      ]\n    }, \n    "sparse": false, \n    "Active": true, \n    "PrintGroupedItems": true, \n    "SyncToken": "1", \n    "UnitPrice": 0, \n    "Id": "49", \n    "MetaData": {\n      "CreateTime": "2016-06-23T10:51:32-07:00", \n      "LastUpdatedTime": "2016-06-23T10:52:20-07:00"\n    }\n  }, \n  "time": "2016-06-23T15:14:21.695-07:00"\n}',
                "Create1-request-xml": "To be supplied.",
                "Query1-request": "\"select * from Item where Type='Category'\"",
                "Update2-request":
                    '{\n  "SyncToken": "1", \n  "domain": "QBO", \n  "Name": "Trees", \n  "sparse": false, \n  "Type": "Category", \n  "Id": "29"\n}',
                "Update2-response":
                    '{\n  "Item": {\n    "FullyQualifiedName": "Organic Trees", \n    "domain": "QBO", \n    "Name": "Organic Trees", \n    "SyncToken": "2", \n    "sparse": false, \n    "Active": true, \n    "Type": "Category", \n    "Id": "29", \n    "MetaData": {\n      "CreateTime": "2015-10-06T08:50:34-07:00", \n      "LastUpdatedTime": "2015-10-07T12:38:03-07:00"\n    }\n  }, \n  "time": "2015-10-07T12:40:29.199-07:00"\n}',
                "Create0-request-xml":
                    '<Item xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n    <Name>Kitchen Supplies</Name>\r\n    <IncomeAccountRef name="Sales of Product Income">79</IncomeAccountRef>\r\n    <PurchaseDesc>This is the purchasing description.</PurchaseDesc>\r\n    <PurchaseCost>35</PurchaseCost>\r\n    <ExpenseAccountRef name="Cost of Goods Sold">80</ExpenseAccountRef>\r\n    <AssetAccountRef name="Inventory Asset-1">81</AssetAccountRef>\r\n    <Type>Inventory</Type>\r\n    <TrackQtyOnHand>true</TrackQtyOnHand>,\r\n    <QtyOnHand>10</QtyOnHand>,\r\n    <InvStartDate>2015-01-01</InvStartDate>\r\n</Item>\r\n',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "Item": [\n      {\n        "FullyQualifiedName": "Concrete", \n        "domain": "QBO", \n        "Name": "Concrete", \n        "TrackQtyOnHand": false, \n        "Type": "Service", \n        "PurchaseCost": 0, \n        "IncomeAccountRef": {\n          "name": "Landscaping Services:Job Materials:Fountains and Garden Lighting", \n          "value": "48"\n        }, \n        "Taxable": true, \n        "MetaData": {\n          "CreateTime": "2014-09-16T10:36:03-07:00", \n          "LastUpdatedTime": "2014-09-19T12:47:47-07:00"\n        }, \n        "sparse": false, \n        "Active": true, \n        "SyncToken": "1", \n        "UnitPrice": 0, \n        "Id": "3", \n        "Description": "Concrete for fountain installation"\n      }, \n      {\n        "FullyQualifiedName": "Design", \n        "domain": "QBO", \n        "Name": "Design", \n        "TrackQtyOnHand": false, \n        "Type": "Service", \n        "PurchaseCost": 0, \n        "IncomeAccountRef": {\n          "name": "Design income", \n          "value": "82"\n        }, \n        "Taxable": false, \n        "MetaData": {\n          "CreateTime": "2014-09-16T10:41:38-07:00", \n          "LastUpdatedTime": "2015-04-17T14:31:10-07:00"\n        }, \n        "sparse": false, \n        "Active": true, \n        "SyncToken": "1", \n        "UnitPrice": 75, \n        "Id": "4", \n        "Description": "Custom Design"\n      }\n    ], \n    "maxResults": 2\n  }, \n  "time": "2015-04-22T11:04:34.194-07:00"\n}',
            },
            Refundreceipt: {
                "Delete0-request": '{\n  "SyncToken": "0", \n  "Id": "66"\n}',
                "Send0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-29T08:16:17.428-07:00">\r\n    <RefundReceipt domain="QBO" sparse="false">\r\n        <Id>66</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-17T15:35:07-07:00</CreateTime>\r\n            <LastUpdatedTime>2019-09-19T10:43:46-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1020</DocNumber>\r\n        <TxnDate>2014-09-17</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Refund - Pest control was ineffective</Description>\r\n            <Amount>87.50</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pest Control">10</ItemRef>\r\n                <UnitPrice>35</UnitPrice>\r\n                <Qty>2.5</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>87.50</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Pye\'s Cakes">15</CustomerRef>\r\n        <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>73</Id>\r\n            <Line1>Karen Pye</Line1>\r\n            <Line2>Pye\'s Cakes</Line2>\r\n            <Line3>350 Mountain View Dr.</Line3>\r\n            <Line4>South Orange, NJ 07079</Line4>\r\n            <Lat>40.7489277</Lat>\r\n            <Long>-74.2609903</Long>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>15</Id>\r\n            <Line1>350 Mountain View Dr.</Line1>\r\n            <City>South Orange</City>\r\n            <CountrySubDivisionCode>NJ</CountrySubDivisionCode>\r\n            <PostalCode>07079</PostalCode>\r\n            <Lat>40.7633073</Lat>\r\n            <Long>-74.2426072</Long>\r\n        </ShipAddr>\r\n        <TotalAmt>87.50</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NotSet</PrintStatus>\r\n        <BillEmail>\r\n            <Address>pyescakes@intuit.com</Address>\r\n        </BillEmail>\r\n        <DeliveryInfo>\r\n            <DeliveryType>Email</DeliveryType>\r\n            <DeliveryTime>2019-09-19T10:57:11-07:00</DeliveryTime>\r\n        </DeliveryInfo>\r\n        <Balance>0</Balance>\r\n        <PaymentMethodRef name="Check">2</PaymentMethodRef>\r\n        <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n    </RefundReceipt>\r\n</IntuitResponse>\r\n',
                "Query0-request-xml": "select * from RefundReceipt where id = '66'",
                "Read0-response":
                    '{\n  "RefundReceipt": {\n    "DocNumber": "1020", \n    "SyncToken": "0", \n    "domain": "QBO", \n    "Balance": 0, \n    "PaymentMethodRef": {\n      "name": "Check", \n      "value": "2"\n    }, \n    "BillAddr": {\n      "Line4": "South Orange, NJ  07079", \n      "Line3": "350 Mountain View Dr.", \n      "Line2": "Pye\'s Cakes", \n      "Line1": "Karen Pye", \n      "Long": "-74.2609903", \n      "Lat": "40.7489277", \n      "Id": "73"\n    }, \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "TxnDate": "2014-09-17", \n    "TotalAmt": 87.5, \n    "CustomerRef": {\n      "name": "Pye\'s Cakes", \n      "value": "15"\n    }, \n    "CustomerMemo": {\n      "value": "Thank you for your business and have a great day!"\n    }, \n    "ShipAddr": {\n      "City": "South Orange", \n      "Line1": "350 Mountain View Dr.", \n      "PostalCode": "07079", \n      "Lat": "40.7633073", \n      "Long": "-74.2426072", \n      "CountrySubDivisionCode": "NJ", \n      "Id": "15"\n    }, \n    "PrintStatus": "NotSet", \n    "BillEmail": {\n      "Address": "pyescakes@intuit.com"\n    }, \n    "sparse": false, \n    "Line": [\n      {\n        "Description": "Refund - Pest control was ineffective", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 2.5, \n          "UnitPrice": 35, \n          "ItemRef": {\n            "name": "Pest Control", \n            "value": "10"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 87.5, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 87.5, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "66", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-17T15:35:07-07:00", \n      "LastUpdatedTime": "2014-09-17T15:35:07-07:00"\n    }\n  }, \n  "time": "2015-07-29T08:15:49.421-07:00"\n}',
                "Update1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-29T09:00:29.770-07:00">\r\n    <RefundReceipt domain="QBO" sparse="false">\r\n        <Id>66</Id>\r\n        <SyncToken>4</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-17T15:35:07-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-29T09:00:28-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1020</DocNumber>\r\n        <TxnDate>2014-09-17</TxnDate>\r\n        <PrivateNote>This is a revised memo to demonstrate Sparse update.</PrivateNote>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Refund - Pest control was ineffective</Description>\r\n            <Amount>87.50</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pest Control">10</ItemRef>\r\n                <UnitPrice>35</UnitPrice>\r\n                <Qty>2.5</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>87.50</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Pye\'s Cakes">15</CustomerRef>\r\n        <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>73</Id>\r\n            <Line1>Karen Pye</Line1>\r\n            <Line2>Pye\'s Cakes</Line2>\r\n            <Line3>350 Mountain View Dr.</Line3>\r\n            <Line4>South Orange, NJ 07079</Line4>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>15</Id>\r\n            <Line1>350 Mountain View Dr.</Line1>\r\n            <City>South Orange</City>\r\n            <CountrySubDivisionCode>NJ</CountrySubDivisionCode>\r\n            <PostalCode>07079</PostalCode>\r\n            <Lat>40.7633073</Lat>\r\n            <Long>-74.2426072</Long>\r\n        </ShipAddr>\r\n        <TotalAmt>87.50</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NotSet</PrintStatus>\r\n        <BillEmail>\r\n            <Address>pyescakes@intuit.com</Address>\r\n        </BillEmail>\r\n        <Balance>0</Balance>\r\n        <PaymentMethodRef name="Check">2</PaymentMethodRef>\r\n        <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n    </RefundReceipt>\r\n</IntuitResponse>\r\n',
                "Update1-request-xml":
                    '<RefundReceipt xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>66</Id>\r\n    <SyncToken>3</SyncToken>\r\n    <PrivateNote>This is a revised memo to demonstrate Sparse update.</PrivateNote>\r\n</RefundReceipt>\r\n',
                "Update0-response":
                    '{\n  "RefundReceipt": {\n    "DocNumber": "1020", \n    "SyncToken": "1", \n    "domain": "QBO", \n    "Balance": 0, \n    "PaymentMethodRef": {\n      "name": "Check", \n      "value": "2"\n    }, \n    "BillAddr": {\n      "Line4": "South Orange, NJ  07079", \n      "Line3": "350 Mountain View Dr.", \n      "Id": "73", \n      "Line1": "Karen Pye", \n      "Line2": "Pye\'s Cakes"\n    }, \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "TxnDate": "2014-09-17", \n    "TotalAmt": 87.5, \n    "CustomerRef": {\n      "name": "Pye\'s Cakes", \n      "value": "15"\n    }, \n    "CustomerMemo": {\n      "value": "Updated customer memo"\n    }, \n    "ShipAddr": {\n      "City": "South Orange", \n      "Line1": "350 Mountain View Dr.", \n      "PostalCode": "07079", \n      "Lat": "40.7633073", \n      "Long": "-74.2426072", \n      "CountrySubDivisionCode": "NJ", \n      "Id": "15"\n    }, \n    "PrintStatus": "NotSet", \n    "BillEmail": {\n      "Address": "pyescakes@intuit.com"\n    }, \n    "sparse": false, \n    "Line": [\n      {\n        "Description": "Refund - Pest control was ineffective", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 2.5, \n          "UnitPrice": 35, \n          "ItemRef": {\n            "name": "Pest Control", \n            "value": "10"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 87.5, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 87.5, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "66", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-17T15:35:07-07:00", \n      "LastUpdatedTime": "2015-07-29T08:18:49-07:00"\n    }\n  }, \n  "time": "2015-07-29T08:18:48.873-07:00"\n}',
                "Create0-response":
                    '{\n  "RefundReceipt": {\n    "DocNumber": "1072", \n    "SyncToken": "0", \n    "domain": "QBO", \n    "Balance": 0, \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "TxnDate": "2015-07-29", \n    "TotalAmt": 420.0, \n    "PrintStatus": "NeedToPrint", \n    "PaymentRefNum": "To Print", \n    "sparse": false, \n    "Line": [\n      {\n        "LineNum": 1, \n        "Amount": 420.0, \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "ItemRef": {\n            "name": "Garden Supplies", \n            "value": "38"\n          }\n        }, \n        "Id": "1", \n        "DetailType": "SalesItemLineDetail"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 420.0, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "261", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2015-07-29T08:07:43-07:00", \n      "LastUpdatedTime": "2015-07-29T08:07:43-07:00"\n    }\n  }, \n  "time": "2015-07-29T08:07:43.749-07:00"\n}',
                "Update1-request":
                    '{\n  "SyncToken": "2", \n  "PrivateNote": "This is a new private note added via sparse update.", \n  "Id": "66", \n  "sparse": true\n}',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-29T08:08:37.330-07:00">\r\n    <RefundReceipt domain="QBO" sparse="false">\r\n        <Id>262</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-29T08:08:37-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-29T08:08:37-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1073</DocNumber>\r\n        <TxnDate>2015-07-29</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Installation labor</Description>\r\n            <Amount>420.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Garden Supplies">38</ItemRef>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>420.00</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <TotalAmt>420.00</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <Balance>0</Balance>\r\n        <PaymentRefNum>To Print</PaymentRefNum>\r\n        <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n    </RefundReceipt>\r\n</IntuitResponse>\r\n',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-05-27T10:42:58.468-07:00">\r\n    <TimeActivity domain="QBO" status="Deleted">\r\n        <Id>3</Id>\r\n    </TimeActivity>\r\n</IntuitResponse>\r\n',
                "Create0-request":
                    '{\n  "Line": [\n    {\n      "DetailType": "SalesItemLineDetail", \n      "Amount": 420.0, \n      "SalesItemLineDetail": {\n        "ItemRef": {\n          "value": "38"\n        }\n      }\n    }\n  ], \n  "DepositToAccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-29T08:14:09.550-07:00">\r\n    <QueryResponse startPosition="1" maxResults="1" totalCount="1">\r\n        <RefundReceipt domain="QBO" sparse="false">\r\n            <Id>66</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-17T15:35:07-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-17T15:35:07-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <CustomField>\r\n                <DefinitionId>1</DefinitionId>\r\n                <Name>Crew #</Name>\r\n                <Type>StringType</Type>\r\n            </CustomField>\r\n            <DocNumber>1020</DocNumber>\r\n            <TxnDate>2014-09-17</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <LineNum>1</LineNum>\r\n                <Description>Refund - Pest control was ineffective</Description>\r\n                <Amount>87.50</Amount>\r\n                <DetailType>SalesItemLineDetail</DetailType>\r\n                <SalesItemLineDetail>\r\n                    <ItemRef name="Pest Control">10</ItemRef>\r\n                    <UnitPrice>35</UnitPrice>\r\n                    <Qty>2.5</Qty>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </SalesItemLineDetail>\r\n            </Line>\r\n            <Line>\r\n                <Amount>87.50</Amount>\r\n                <DetailType>SubTotalLineDetail</DetailType>\r\n                <SubTotalLineDetail />\r\n            </Line>\r\n            <TxnTaxDetail>\r\n                <TotalTax>0</TotalTax>\r\n            </TxnTaxDetail>\r\n            <CustomerRef name="Pye\'s Cakes">15</CustomerRef>\r\n            <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n            <BillAddr>\r\n                <Id>73</Id>\r\n                <Line1>Karen Pye</Line1>\r\n                <Line2>Pye\'s Cakes</Line2>\r\n                <Line3>350 Mountain View Dr.</Line3>\r\n                <Line4>South Orange, NJ 07079</Line4>\r\n                <Lat>40.7489277</Lat>\r\n                <Long>-74.2609903</Long>\r\n            </BillAddr>\r\n            <TotalAmt>87.50</TotalAmt>\r\n            <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n            <PrintStatus>NotSet</PrintStatus>\r\n            <BillEmail>\r\n                <Address>pyescakes@intuit.com</Address>\r\n            </BillEmail>\r\n            <Balance>0</Balance>\r\n            <PaymentMethodRef name="Check">2</PaymentMethodRef>\r\n            <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n        </RefundReceipt>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Query0-request": "\"select * from RefundReceipt where Id='66'\"",
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-29T08:16:17.428-07:00">\r\n    <RefundReceipt domain="QBO" sparse="false">\r\n        <Id>66</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-17T15:35:07-07:00</CreateTime>\r\n            <LastUpdatedTime>2014-09-17T15:35:07-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1020</DocNumber>\r\n        <TxnDate>2014-09-17</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Refund - Pest control was ineffective</Description>\r\n            <Amount>87.50</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pest Control">10</ItemRef>\r\n                <UnitPrice>35</UnitPrice>\r\n                <Qty>2.5</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>87.50</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Pye\'s Cakes">15</CustomerRef>\r\n        <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>73</Id>\r\n            <Line1>Karen Pye</Line1>\r\n            <Line2>Pye\'s Cakes</Line2>\r\n            <Line3>350 Mountain View Dr.</Line3>\r\n            <Line4>South Orange, NJ 07079</Line4>\r\n            <Lat>40.7489277</Lat>\r\n            <Long>-74.2609903</Long>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>15</Id>\r\n            <Line1>350 Mountain View Dr.</Line1>\r\n            <City>South Orange</City>\r\n            <CountrySubDivisionCode>NJ</CountrySubDivisionCode>\r\n            <PostalCode>07079</PostalCode>\r\n            <Lat>40.7633073</Lat>\r\n            <Long>-74.2426072</Long>\r\n        </ShipAddr>\r\n        <TotalAmt>87.50</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NotSet</PrintStatus>\r\n        <BillEmail>\r\n            <Address>pyescakes@intuit.com</Address>\r\n        </BillEmail>\r\n        <Balance>0</Balance>\r\n        <PaymentMethodRef name="Check">2</PaymentMethodRef>\r\n        <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n    </RefundReceipt>\r\n</IntuitResponse>\r\n',
                "Update0-request-xml":
                    '<RefundReceipt xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>66</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2014-09-17T15:35:07-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-17T15:35:07-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomField>\r\n        <DefinitionId>1</DefinitionId>\r\n        <Name>Crew #</Name>\r\n        <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>1020</DocNumber>\r\n    <TxnDate>2014-09-17</TxnDate>\r\n    <Line>\r\n        <Id>1</Id>\r\n        <LineNum>1</LineNum>\r\n        <Description>Refund - Pest control was ineffective</Description>\r\n        <Amount>87.50</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n            <ItemRef name="Pest Control">10</ItemRef>\r\n            <UnitPrice>35</UnitPrice>\r\n            <Qty>2.5</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n        <Amount>87.50</Amount>\r\n        <DetailType>SubTotalLineDetail</DetailType>\r\n        <SubTotalLineDetail />\r\n    </Line>\r\n    <TxnTaxDetail>\r\n        <TotalTax>0</TotalTax>\r\n    </TxnTaxDetail>\r\n    <CustomerRef name="Pye\'s Cakes">15</CustomerRef>\r\n    <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n    <BillAddr>\r\n        <Id>73</Id>\r\n        <Line1>Karen Pye</Line1>\r\n        <Line2>Pye\'s Cakes</Line2>\r\n        <Line3>350 Mountain View Dr.</Line3>\r\n        <Line4>South Orange, NJ 07079</Line4>\r\n        <Lat>40.7489277</Lat>\r\n        <Long>-74.2609903</Long>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n        <Id>15</Id>\r\n        <Line1>350 Mountain View Dr.</Line1>\r\n        <City>South Orange</City>\r\n        <CountrySubDivisionCode>NJ</CountrySubDivisionCode>\r\n        <PostalCode>07079</PostalCode>\r\n        <Lat>40.7633073</Lat>\r\n        <Long>-74.2426072</Long>\r\n    </ShipAddr>\r\n    <TotalAmt>87.50</TotalAmt>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NotSet</PrintStatus>\r\n    <BillEmail>\r\n        <Address>pyescakes@intuit.com</Address>\r\n    </BillEmail>\r\n    <Balance>0</Balance>\r\n    <PaymentMethodRef name="Check">2</PaymentMethodRef>\r\n    <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n</RefundReceipt>\r\n',
                "Delete0-response":
                    '{\n  "RefundReceipt": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "66"\n  }, \n  "time": "2015-05-27T10:34:32.031-07:00"\n}',
                "Delete0-request-xml":
                    '<RefundReceipt xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>3</Id>\r\n    <SyncToken>0</SyncToken>\r\n</RefundReceipt>\r\n',
                "Update0-request":
                    '{\n  "DocNumber": "1020", \n  "SyncToken": "0", \n  "domain": "QBO", \n  "Balance": 0, \n  "PaymentMethodRef": {\n    "name": "Check", \n    "value": "2"\n  }, \n  "BillAddr": {\n    "Line4": "South Orange, NJ  07079", \n    "Line3": "350 Mountain View Dr.", \n    "Line2": "Pye\'s Cakes", \n    "Line1": "Karen Pye", \n    "Long": "-74.2609903", \n    "Lat": "40.7489277", \n    "Id": "73"\n  }, \n  "DepositToAccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }, \n  "TxnDate": "2014-09-17", \n  "TotalAmt": 87.5, \n  "CustomerRef": {\n    "name": "Pye\'s Cakes", \n    "value": "15"\n  }, \n  "CustomerMemo": {\n    "value": "Updated customer memo"\n  }, \n  "ShipAddr": {\n    "City": "South Orange", \n    "Line1": "350 Mountain View Dr.", \n    "PostalCode": "07079", \n    "Lat": "40.7633073", \n    "Long": "-74.2426072", \n    "CountrySubDivisionCode": "NJ", \n    "Id": "15"\n  }, \n  "PrintStatus": "NotSet", \n  "BillEmail": {\n    "Address": "pyescakes@intuit.com"\n  }, \n  "sparse": false, \n  "Line": [\n    {\n      "Description": "Refund - Pest control was ineffective", \n      "DetailType": "SalesItemLineDetail", \n      "SalesItemLineDetail": {\n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "Qty": 2.5, \n        "UnitPrice": 35, \n        "ItemRef": {\n          "name": "Pest Control", \n          "value": "10"\n        }\n      }, \n      "LineNum": 1, \n      "Amount": 87.5, \n      "Id": "1"\n    }, \n    {\n      "DetailType": "SubTotalLineDetail", \n      "Amount": 87.5, \n      "SubTotalLineDetail": {}\n    }\n  ], \n  "ApplyTaxAfterDiscount": false, \n  "CustomField": [\n    {\n      "DefinitionId": "1", \n      "Type": "StringType", \n      "Name": "Crew #"\n    }\n  ], \n  "Id": "66", \n  "TxnTaxDetail": {\n    "TotalTax": 0\n  }, \n  "MetaData": {\n    "CreateTime": "2014-09-17T15:35:07-07:00", \n    "LastUpdatedTime": "2014-09-17T15:35:07-07:00"\n  }\n}',
                "Send0-response":
                    '{\n  "RefundReceipt": {\n    "TxnDate": "2014-09-17", \n    "domain": "QBO", \n    "PrintStatus": "NotSet", \n    "DeliveryInfo": {\n      "DeliveryType": "Email", \n      "DeliveryTime": "2019-09-19T10:43:46-07:00"\n    }, \n    "TotalAmt": 87.5, \n    "Line": [\n      {\n        "Description": "Refund - Pest control was ineffective", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 2.5, \n          "UnitPrice": 35, \n          "ItemRef": {\n            "name": "Pest Control", \n            "value": "10"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 87.5, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 87.5, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "DocNumber": "1020", \n    "sparse": false, \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "CustomerMemo": {\n      "value": "Thank you for your business and have a great day!"\n    }, \n    "Balance": 0, \n    "CustomerRef": {\n      "name": "Pye\'s Cakes", \n      "value": "15"\n    }, \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "SyncToken": "0", \n    "PaymentMethodRef": {\n      "name": "Check", \n      "value": "2"\n    }, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "ShipAddr": {\n      "City": "South Orange", \n      "Line1": "350 Mountain View Dr.", \n      "PostalCode": "07079", \n      "Lat": "40.7633073", \n      "Long": "-74.2426072", \n      "CountrySubDivisionCode": "NJ", \n      "Id": "15"\n    }, \n    "BillAddr": {\n      "Line4": "South Orange, NJ  07079", \n      "Line3": "350 Mountain View Dr.", \n      "Line2": "Pye\'s Cakes", \n      "Line1": "Karen Pye", \n      "Long": "-74.2609903", \n      "Lat": "40.7489277", \n      "Id": "73"\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-17T15:35:07-07:00", \n      "LastUpdatedTime": "2019-09-19T10:43:46-07:00"\n    }, \n    "BillEmail": {\n      "Address": "pyescakes@intuit.com"\n    }, \n    "Id": "66"\n  }, \n  "time": "2019-09-19T10:43:46-07:00"\n}',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-29T08:56:51.812-07:00">\r\n    <RefundReceipt domain="QBO" sparse="false">\r\n        <Id>66</Id>\r\n        <SyncToken>2</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-17T15:35:07-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-29T08:56:52-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1020</DocNumber>\r\n        <TxnDate>2014-09-17</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Refund - Pest control was ineffective</Description>\r\n            <Amount>87.50</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pest Control">10</ItemRef>\r\n                <UnitPrice>35</UnitPrice>\r\n                <Qty>2.5</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>87.50</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Pye\'s Cakes">15</CustomerRef>\r\n        <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>73</Id>\r\n            <Line1>Karen Pye</Line1>\r\n            <Line2>Pye\'s Cakes</Line2>\r\n            <Line3>350 Mountain View Dr.</Line3>\r\n            <Line4>South Orange, NJ 07079</Line4>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>15</Id>\r\n            <Line1>350 Mountain View Dr.</Line1>\r\n            <City>South Orange</City>\r\n            <CountrySubDivisionCode>NJ</CountrySubDivisionCode>\r\n            <PostalCode>07079</PostalCode>\r\n            <Lat>40.7633073</Lat>\r\n            <Long>-74.2426072</Long>\r\n        </ShipAddr>\r\n        <TotalAmt>87.50</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NotSet</PrintStatus>\r\n        <BillEmail>\r\n            <Address>pyescakes@intuit.com</Address>\r\n        </BillEmail>\r\n        <Balance>0</Balance>\r\n        <PaymentMethodRef name="Check">2</PaymentMethodRef>\r\n        <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n    </RefundReceipt>\r\n</IntuitResponse>\r\n',
                "Create0-request-xml":
                    '<RefundReceipt xmlns="http://schema.intuit.com/finance/v3">\r\n  <Line>\r\n    <Description>Installation labor</Description>\r\n    <Amount>420.00</Amount>\r\n    <DetailType>SalesItemLineDetail</DetailType>\r\n    <SalesItemLineDetail>\r\n      <ItemRef>38</ItemRef>\r\n    </SalesItemLineDetail>\r\n  </Line>\r\n  <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n</RefundReceipt>',
                "Update1-response":
                    '{\n  "RefundReceipt": {\n    "TxnDate": "2014-09-17", \n    "domain": "QBO", \n    "PrintStatus": "NotSet", \n    "TotalAmt": 87.5, \n    "Line": [\n      {\n        "Description": "Refund - Pest control was ineffective", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 2.5, \n          "UnitPrice": 35, \n          "ItemRef": {\n            "name": "Pest Control", \n            "value": "10"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 87.5, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 87.5, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "DocNumber": "1020", \n    "PrivateNote": "This is a new private note added via sparse update.", \n    "sparse": false, \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "CustomerMemo": {\n      "value": "Thank you for your business and have a great day!"\n    }, \n    "Balance": 0, \n    "CustomerRef": {\n      "name": "Pye\'s Cakes", \n      "value": "15"\n    }, \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "SyncToken": "3", \n    "PaymentMethodRef": {\n      "name": "Check", \n      "value": "2"\n    }, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "ShipAddr": {\n      "City": "South Orange", \n      "Line1": "350 Mountain View Dr.", \n      "PostalCode": "07079", \n      "Lat": "40.7633073", \n      "Long": "-74.2426072", \n      "CountrySubDivisionCode": "NJ", \n      "Id": "15"\n    }, \n    "BillAddr": {\n      "Line4": "South Orange, NJ 07079", \n      "Line3": "350 Mountain View Dr.", \n      "Id": "73", \n      "Line1": "Karen Pye", \n      "Line2": "Pye\'s Cakes"\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-17T15:35:07-07:00", \n      "LastUpdatedTime": "2015-07-29T08:59:30-07:00"\n    }, \n    "BillEmail": {\n      "Address": "pyescakes@intuit.com"\n    }, \n    "Id": "66"\n  }, \n  "time": "2015-07-29T08:59:32.061-07:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 1, \n    "RefundReceipt": [\n      {\n        "DocNumber": "1020", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "Balance": 0, \n        "PaymentMethodRef": {\n          "name": "Check", \n          "value": "2"\n        }, \n        "BillAddr": {\n          "Line4": "South Orange, NJ  07079", \n          "Line3": "350 Mountain View Dr.", \n          "Line2": "Pye\'s Cakes", \n          "Line1": "Karen Pye", \n          "Long": "-74.2609903", \n          "Lat": "40.7489277", \n          "Id": "73"\n        }, \n        "DepositToAccountRef": {\n          "name": "Checking", \n          "value": "35"\n        }, \n        "TxnDate": "2014-09-17", \n        "TotalAmt": 87.5, \n        "CustomerRef": {\n          "name": "Pye\'s Cakes", \n          "value": "15"\n        }, \n        "CustomerMemo": {\n          "value": "Thank you for your business and have a great day!"\n        }, \n        "PrintStatus": "NotSet", \n        "BillEmail": {\n          "Address": "pyescakes@intuit.com"\n        }, \n        "sparse": false, \n        "Line": [\n          {\n            "Description": "Refund - Pest control was ineffective", \n            "DetailType": "SalesItemLineDetail", \n            "SalesItemLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 2.5, \n              "UnitPrice": 35, \n              "ItemRef": {\n                "name": "Pest Control", \n                "value": "10"\n              }\n            }, \n            "LineNum": 1, \n            "Amount": 87.5, \n            "Id": "1"\n          }, \n          {\n            "DetailType": "SubTotalLineDetail", \n            "Amount": 87.5, \n            "SubTotalLineDetail": {}\n          }\n        ], \n        "ApplyTaxAfterDiscount": false, \n        "CustomField": [\n          {\n            "DefinitionId": "1", \n            "Type": "StringType", \n            "Name": "Crew #"\n          }\n        ], \n        "Id": "66", \n        "TxnTaxDetail": {\n          "TotalTax": 0\n        }, \n        "MetaData": {\n          "CreateTime": "2014-09-17T15:35:07-07:00", \n          "LastUpdatedTime": "2014-09-17T15:35:07-07:00"\n        }\n      }\n    ], \n    "maxResults": 1\n  }, \n  "time": "2015-07-29T08:14:41.415-07:00"\n}',
            },
            Timeactivity: {
                "Delete0-request": '{\n  "SyncToken": "0", \n  "Id": "5"\n}',
                "Delete0-response":
                    '{\n  "TimeActivity": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "5"\n  }, \n  "time": "2015-05-27T10:37:58.279-07:00"\n}',
                "Create0-request-xml":
                    '<TimeActivity xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n   <NameOf>Employee</NameOf>\r\n   <EmployeeRef name="Emily Platt">55</EmployeeRef>\r\n   <StartTime>2015-07-06T08:00:00-08:00</StartTime>\r\n   <EndTime>2015-07-06T17:00:00-08:00</EndTime>\r\n</TimeActivity>',
                "Delete0-request-xml":
                    '<TimeActivity xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n   <Id>2</Id>\r\n   <SyncToken>0</SyncToken>\r\n</TimeActivity>',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T10:30:43.457-07:00">\r\n  <TimeActivity domain="QBO" sparse="false">\r\n    <Id>7</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-07-28T10:30:41-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-28T10:30:41-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-07-28</TxnDate>\r\n    <NameOf>Employee</NameOf>\r\n    <EmployeeRef name="Emily Platt">55</EmployeeRef>\r\n    <ItemRef name="Hours">2</ItemRef>\r\n    <BillableStatus>NotBillable</BillableStatus>\r\n    <Taxable>false</Taxable>\r\n    <HourlyRate>0</HourlyRate>\r\n    <StartTime>2015-07-28T09:00:00-07:00</StartTime>\r\n    <EndTime>2015-07-28T18:00:00-07:00</EndTime>\r\n  </TimeActivity>\r\n</IntuitResponse>',
                "Query0-request": "\"select * from TimeActivity where TxnDate > '2014-09-14'\"",
                "Update0-response":
                    '{\n  "TimeActivity": {\n    "TxnDate": "2014-09-16", \n    "domain": "QBO", \n    "NameOf": "Employee", \n    "Description": "Updated descirption", \n    "ItemRef": {\n      "name": "Design", \n      "value": "4"\n    }, \n    "Minutes": 0, \n    "Hours": 5, \n    "BillableStatus": "Billable", \n    "sparse": false, \n    "HourlyRate": 75, \n    "Taxable": false, \n    "EmployeeRef": {\n      "name": "John Johnson", \n      "value": "54"\n    }, \n    "SyncToken": "1", \n    "CustomerRef": {\n      "name": "Amy\'s Bird Sanctuary", \n      "value": "1"\n    }, \n    "Id": "3", \n    "MetaData": {\n      "CreateTime": "2014-09-17T11:53:15-07:00", \n      "LastUpdatedTime": "2015-07-28T11:59:41-07:00"\n    }\n  }, \n  "time": "2015-07-28T11:59:41.178-07:00"\n}',
                "Update0-request-xml":
                    '<TimeActivity xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n            <Id>3</Id>\r\n            <SyncToken>1</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-17T11:53:15-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-17T11:53:15-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-09-16</TxnDate>\r\n            <NameOf>Employee</NameOf>\r\n            <EmployeeRef name="John Johnson">54</EmployeeRef>\r\n            <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n            <ItemRef name="Design">4</ItemRef>\r\n            <BillableStatus>Billable</BillableStatus>\r\n            <Taxable>false</Taxable>\r\n            <HourlyRate>75</HourlyRate>\r\n            <Hours>5</Hours>\r\n            <Minutes>0</Minutes>\r\n            <Description>Another description</Description>\r\n</TimeActivity>',
                "Read0-response":
                    '{\n  "TimeActivity": {\n    "TxnDate": "2014-09-17", \n    "domain": "QBO", \n    "NameOf": "Employee", \n    "Description": "Garden Lighting", \n    "ItemRef": {\n      "name": "Lighting", \n      "value": "8"\n    }, \n    "Minutes": 0, \n    "Hours": 3, \n    "BillableStatus": "HasBeenBilled", \n    "sparse": false, \n    "HourlyRate": 15, \n    "Taxable": false, \n    "EmployeeRef": {\n      "name": "Emily Platt", \n      "value": "55"\n    }, \n    "SyncToken": "0", \n    "CustomerRef": {\n      "name": "Rondonuwu Fruit and Vegi", \n      "value": "21"\n    }, \n    "Id": "5", \n    "MetaData": {\n      "CreateTime": "2014-09-17T11:55:25-07:00", \n      "LastUpdatedTime": "2014-09-18T13:45:12-07:00"\n    }\n  }, \n  "time": "2015-07-28T10:35:07.663-07:00"\n}',
                "Create0-response":
                    '{\n  "TimeActivity": {\n    "TxnDate": "2015-07-28", \n    "domain": "QBO", \n    "NameOf": "Employee", \n    "sparse": false, \n    "ItemRef": {\n      "name": "Hours", \n      "value": "2"\n    }, \n    "BillableStatus": "NotBillable", \n    "StartTime": "2015-07-28T09:00:00-07:00", \n    "HourlyRate": 0, \n    "Taxable": false, \n    "EmployeeRef": {\n      "name": "Emily Platt", \n      "value": "55"\n    }, \n    "EndTime": "2015-07-28T18:00:00-07:00", \n    "Id": "6", \n    "SyncToken": "0", \n    "MetaData": {\n      "CreateTime": "2015-07-28T10:26:25-07:00", \n      "LastUpdatedTime": "2015-07-28T10:26:25-07:00"\n    }\n  }, \n  "time": "2015-07-28T10:26:26.952-07:00"\n}',
                "Update0-request":
                    '{\n  "TxnDate": "2014-09-16", \n  "domain": "QBO", \n  "NameOf": "Employee", \n  "Description": "Updated descirption", \n  "ItemRef": {\n    "name": "Design", \n    "value": "4"\n  }, \n  "Minutes": 0, \n  "Hours": 5, \n  "BillableStatus": "Billable", \n  "sparse": false, \n  "HourlyRate": 75, \n  "Taxable": false, \n  "EmployeeRef": {\n    "name": "John Johnson", \n    "value": "54"\n  }, \n  "SyncToken": "0", \n  "CustomerRef": {\n    "name": "Amy\'s Bird Sanctuary", \n    "value": "1"\n  }, \n  "Id": "3", \n  "MetaData": {\n    "CreateTime": "2014-09-17T11:53:15-07:00", \n    "LastUpdatedTime": "2014-09-17T11:53:15-07:00"\n  }\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T10:34:50.450-07:00">\r\n  <TimeActivity domain="QBO" sparse="false">\r\n    <Id>5</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-17T11:55:25-07:00</CreateTime>\r\n      <LastUpdatedTime>2014-09-18T13:45:12-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2014-09-17</TxnDate>\r\n    <NameOf>Employee</NameOf>\r\n    <EmployeeRef name="Emily Platt">55</EmployeeRef>\r\n    <CustomerRef name="Rondonuwu Fruit and Vegi">21</CustomerRef>\r\n    <ItemRef name="Lighting">8</ItemRef>\r\n    <BillableStatus>HasBeenBilled</BillableStatus>\r\n    <Taxable>false</Taxable>\r\n    <HourlyRate>15</HourlyRate>\r\n    <Hours>3</Hours>\r\n    <Minutes>0</Minutes>\r\n    <Description>Garden Lighting</Description>\r\n  </TimeActivity>\r\n</IntuitResponse>',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T12:06:20.947-07:00">\r\n  <TimeActivity domain="QBO" sparse="false">\r\n    <Id>3</Id>\r\n    <SyncToken>2</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-17T11:53:15-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-28T12:06:21-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2014-09-16</TxnDate>\r\n    <NameOf>Employee</NameOf>\r\n    <EmployeeRef name="John Johnson">54</EmployeeRef>\r\n    <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n    <ItemRef name="Design">4</ItemRef>\r\n    <BillableStatus>Billable</BillableStatus>\r\n    <Taxable>false</Taxable>\r\n    <HourlyRate>75</HourlyRate>\r\n    <Hours>5</Hours>\r\n    <Minutes>0</Minutes>\r\n    <Description>Another description</Description>\r\n  </TimeActivity>\r\n</IntuitResponse>',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T10:33:55.840-07:00">\r\n    <TimeActivity domain="QBO" status="Deleted">\r\n        <Id>7</Id>\r\n    </TimeActivity>\r\n</IntuitResponse>\r\n',
                "Create0-request":
                    '{\n  "TxnDate": "2021-02-02", \n  "EndTime": "17:00:00-08:00", \n  "EmployeeRef": {\n    "name": "Emily Platt", \n    "value": "55"\n  }, \n  "StartTime": "08:00:00-08:00", \n  "NameOf": "Employee"\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T10:00:55.580-07:00">\r\n    <QueryResponse startPosition="1" maxResults="4">\r\n        <TimeActivity domain="QBO" sparse="false">\r\n            <Id>5</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-17T11:55:25-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-18T13:45:12-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-09-17</TxnDate>\r\n            <NameOf>Employee</NameOf>\r\n            <EmployeeRef name="Emily Platt">55</EmployeeRef>\r\n            <CustomerRef name="Rondonuwu Fruit and Vegi">21</CustomerRef>\r\n            <ItemRef name="Lighting">8</ItemRef>\r\n            <BillableStatus>HasBeenBilled</BillableStatus>\r\n            <Taxable>false</Taxable>\r\n            <HourlyRate>15</HourlyRate>\r\n            <Hours>3</Hours>\r\n            <Minutes>0</Minutes>\r\n            <Description>Garden Lighting</Description>\r\n        </TimeActivity>\r\n        <TimeActivity domain="QBO" sparse="false">\r\n            <Id>4</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-17T11:54:02-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-18T13:45:12-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-09-17</TxnDate>\r\n            <NameOf>Employee</NameOf>\r\n            <EmployeeRef name="Emily Platt">55</EmployeeRef>\r\n            <CustomerRef name="Rondonuwu Fruit and Vegi">21</CustomerRef>\r\n            <ItemRef name="Trimming">18</ItemRef>\r\n            <BillableStatus>HasBeenBilled</BillableStatus>\r\n            <Taxable>false</Taxable>\r\n            <HourlyRate>15</HourlyRate>\r\n            <Hours>2</Hours>\r\n            <Minutes>0</Minutes>\r\n            <Description>Tree and Shrub Trimming</Description>\r\n        </TimeActivity>\r\n        <TimeActivity domain="QBO" sparse="false">\r\n            <Id>3</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-17T11:53:15-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-17T11:53:15-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-09-16</TxnDate>\r\n            <NameOf>Employee</NameOf>\r\n            <EmployeeRef name="John Johnson">54</EmployeeRef>\r\n            <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n            <ItemRef name="Design">4</ItemRef>\r\n            <BillableStatus>Billable</BillableStatus>\r\n            <Taxable>false</Taxable>\r\n            <HourlyRate>75</HourlyRate>\r\n            <Hours>5</Hours>\r\n            <Minutes>0</Minutes>\r\n            <Description>Custom Design</Description>\r\n        </TimeActivity>\r\n        <TimeActivity domain="QBO" sparse="false">\r\n            <Id>2</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-17T11:47:12-07:00</CreateTime>\r\n                <LastUpdatedTime>2014-09-17T11:47:12-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-09-17</TxnDate>\r\n            <NameOf>Employee</NameOf>\r\n            <EmployeeRef name="John Johnson">54</EmployeeRef>\r\n            <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n            <ItemRef name="Hours">2</ItemRef>\r\n            <BillableStatus>NotBillable</BillableStatus>\r\n            <Taxable>false</Taxable>\r\n            <HourlyRate>0</HourlyRate>\r\n            <Hours>4</Hours>\r\n            <Minutes>0</Minutes>\r\n            <Description>Gardening</Description>\r\n        </TimeActivity>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Query0-request-xml": "select * from TimeActivity where TxnDate > '2014-09-14'",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "TimeActivity": [\n      {\n        "TxnDate": "2014-09-17", \n        "domain": "QBO", \n        "NameOf": "Employee", \n        "Description": "Garden Lighting", \n        "ItemRef": {\n          "name": "Lighting", \n          "value": "8"\n        }, \n        "Minutes": 0, \n        "Hours": 3, \n        "BillableStatus": "HasBeenBilled", \n        "sparse": false, \n        "HourlyRate": 15, \n        "Taxable": false, \n        "EmployeeRef": {\n          "name": "Emily Platt", \n          "value": "55"\n        }, \n        "SyncToken": "0", \n        "CustomerRef": {\n          "name": "Rondonuwu Fruit and Vegi", \n          "value": "21"\n        }, \n        "Id": "5", \n        "MetaData": {\n          "CreateTime": "2014-09-17T11:55:25-07:00", \n          "LastUpdatedTime": "2014-09-18T13:45:12-07:00"\n        }\n      }, \n      {\n        "TxnDate": "2014-09-17", \n        "domain": "QBO", \n        "NameOf": "Employee", \n        "Description": "Tree and Shrub Trimming", \n        "ItemRef": {\n          "name": "Trimming", \n          "value": "18"\n        }, \n        "Minutes": 0, \n        "Hours": 2, \n        "BillableStatus": "HasBeenBilled", \n        "sparse": false, \n        "HourlyRate": 15, \n        "Taxable": false, \n        "EmployeeRef": {\n          "name": "Emily Platt", \n          "value": "55"\n        }, \n        "SyncToken": "0", \n        "CustomerRef": {\n          "name": "Rondonuwu Fruit and Vegi", \n          "value": "21"\n        }, \n        "Id": "4", \n        "MetaData": {\n          "CreateTime": "2014-09-17T11:54:02-07:00", \n          "LastUpdatedTime": "2014-09-18T13:45:12-07:00"\n        }\n      }, \n      {\n        "TxnDate": "2014-09-16", \n        "domain": "QBO", \n        "NameOf": "Employee", \n        "Description": "Custom Design", \n        "ItemRef": {\n          "name": "Design", \n          "value": "4"\n        }, \n        "Minutes": 0, \n        "Hours": 5, \n        "BillableStatus": "Billable", \n        "sparse": false, \n        "HourlyRate": 75, \n        "Taxable": false, \n        "EmployeeRef": {\n          "name": "John Johnson", \n          "value": "54"\n        }, \n        "SyncToken": "0", \n        "CustomerRef": {\n          "name": "Amy\'s Bird Sanctuary", \n          "value": "1"\n        }, \n        "Id": "3", \n        "MetaData": {\n          "CreateTime": "2014-09-17T11:53:15-07:00", \n          "LastUpdatedTime": "2014-09-17T11:53:15-07:00"\n        }\n      }, \n      {\n        "TxnDate": "2014-09-17", \n        "domain": "QBO", \n        "NameOf": "Employee", \n        "Description": "Gardening", \n        "ItemRef": {\n          "name": "Hours", \n          "value": "2"\n        }, \n        "Minutes": 0, \n        "Hours": 4, \n        "BillableStatus": "NotBillable", \n        "sparse": false, \n        "HourlyRate": 0, \n        "Taxable": false, \n        "EmployeeRef": {\n          "name": "John Johnson", \n          "value": "54"\n        }, \n        "SyncToken": "0", \n        "CustomerRef": {\n          "name": "Amy\'s Bird Sanctuary", \n          "value": "1"\n        }, \n        "Id": "2", \n        "MetaData": {\n          "CreateTime": "2014-09-17T11:47:12-07:00", \n          "LastUpdatedTime": "2014-09-17T11:47:12-07:00"\n        }\n      }\n    ], \n    "maxResults": 4\n  }, \n  "time": "2015-07-28T10:01:35.141-07:00"\n}',
            },
            Deposit: {
                "Delete0-request": '{\n  "SyncToken": "3", \n  "Id": "148"\n}',
                "Query0-request-xml": "select * from Deposit    ",
                "Read0-response":
                    '{\n  "Deposit": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "TxnDate": "2014-12-22", \n    "TotalAmt": 1675.52, \n    "sparse": false, \n    "Line": [\n      {\n        "Amount": 1675, \n        "LinkedTxn": [\n          {\n            "TxnLineId": "0", \n            "TxnId": "120", \n            "TxnType": "Payment"\n          }\n        ]\n      }\n    ], \n    "Id": "148", \n    "MetaData": {\n      "CreateTime": "2014-12-22T12:46:52-08:00", \n      "LastUpdatedTime": "2014-12-22T12:46:52-08:00"\n    }\n  }, \n  "time": "2014-12-22T13:39:35.449-08:00"\n}',
                "Update1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-22T13:01:13.349-08:00">\r\n    <Deposit domain="QBO" sparse="false">\r\n        <Id>147</Id>\r\n        <SyncToken>3</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-12-22T12:34:06-08:00</CreateTime>\r\n            <LastUpdatedTime>2014-12-22T13:01:13-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2014-12-19</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Amount>55.00</Amount>\r\n            <DetailType>DepositLineDetail</DetailType>\r\n            <DepositLineDetail>\r\n                <AccountRef name="Unapplied Cash Payment Income">87</AccountRef>\r\n            </DepositLineDetail>\r\n        </Line>\r\n        <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n        <TotalAmt>55.00</TotalAmt>\r\n    </Deposit>\r\n</IntuitResponse>',
                "Update1-request-xml":
                    '<Deposit xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>147</Id>\r\n    <SyncToken>2</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2014-12-22T12:34:06-08:00</CreateTime>\r\n        <LastUpdatedTime>2014-12-22T12:55:59-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2014-12-19</TxnDate>\r\n    <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n</Deposit>',
                "Update0-response":
                    '{\n  "Deposit": {\n    "SyncToken": "2", \n    "domain": "QBO", \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "TxnDate": "2014-12-07", \n    "TotalAmt": 1675.52, \n    "sparse": false, \n    "Line": [\n      {\n        "Amount": 1675, \n        "LinkedTxn": [\n          {\n            "TxnLineId": "0", \n            "TxnId": "120", \n            "TxnType": "Payment"\n          }\n        ]\n      }\n    ], \n    "Id": "148", \n    "MetaData": {\n      "CreateTime": "2014-12-22T12:46:52-08:00", \n      "LastUpdatedTime": "2014-12-22T14:04:10-08:00"\n    }\n  }, \n  "time": "2014-12-22T14:04:10.815-08:00"\n}',
                "Create0-response":
                    '{\n  "Deposit": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "TxnDate": "2014-12-22", \n    "TotalAmt": 20.0, \n    "sparse": false, \n    "Line": [\n      {\n        "LineNum": 1, \n        "Amount": 20.0, \n        "Id": "1", \n        "DepositLineDetail": {\n          "AccountRef": {\n            "name": "Unapplied Cash Payment Income", \n            "value": "87"\n          }\n        }, \n        "DetailType": "DepositLineDetail"\n      }\n    ], \n    "Id": "149", \n    "MetaData": {\n      "CreateTime": "2014-12-22T14:46:36-08:00", \n      "LastUpdatedTime": "2014-12-22T14:46:36-08:00"\n    }\n  }, \n  "time": "2014-12-22T14:46:36.084-08:00"\n}',
                "Create1-request":
                    '{\n  "Line": [\n    {\n      "LinkedTxn": [\n        {\n          "TxnLineId": "0", \n          "TxnId": "120", \n          "TxnType": "payment"\n        }\n      ]\n    }\n  ], \n  "DepositToAccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }\n}',
                "Update1-request":
                    '{\n  "SyncToken": "0", \n  "domain": "QBO", \n  "DepositToAccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }, \n  "TxnDate": "2014-12-02", \n  "sparse": true, \n  "Id": "146", \n  "MetaData": {\n    "CreateTime": "2014-12-22T12:46:52-08:00", \n    "LastUpdatedTime": "2014-12-22T12:46:52-08:00"\n  }\n}',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-22T12:34:06.405-08:00">\r\n  <Deposit domain="QBO" sparse="false">\r\n    <Id>147</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-12-22T12:34:06-08:00</CreateTime>\r\n      <LastUpdatedTime>2014-12-22T12:34:06-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2014-12-22</TxnDate>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <LineNum>1</LineNum>\r\n      <Amount>20.00</Amount>\r\n      <DetailType>DepositLineDetail</DetailType>\r\n      <DepositLineDetail>\r\n        <AccountRef name="Unapplied Cash Payment Income">87</AccountRef>\r\n      </DepositLineDetail>\r\n    </Line>\r\n    <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n    <TotalAmt>20.00</TotalAmt>\r\n  </Deposit>\r\n</IntuitResponse>',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-22T13:06:03.199-08:00">\r\n    <Deposit domain="QBO" status="Deleted">\r\n        <Id>147</Id>\r\n    </Deposit>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "Line": [\n    {\n      "DetailType": "DepositLineDetail", \n      "Amount": 20.0, \n      "DepositLineDetail": {\n        "AccountRef": {\n          "name": "Unapplied Cash Payment Income", \n          "value": "87"\n        }\n      }\n    }\n  ], \n  "DepositToAccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-22T13:02:40.942-08:00">\r\n    <QueryResponse startPosition="1" maxResults="9" totalCount="9">\r\n        <Deposit domain="QBO" sparse="false">\r\n            <Id>147</Id>\r\n            <SyncToken>3</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-12-22T12:34:06-08:00</CreateTime>\r\n                <LastUpdatedTime>2014-12-22T13:01:13-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-12-19</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <LineNum>1</LineNum>\r\n                <Amount>55.00</Amount>\r\n                <DetailType>DepositLineDetail</DetailType>\r\n                <DepositLineDetail>\r\n                    <AccountRef name="Unapplied Cash Payment Income">87</AccountRef>\r\n                </DepositLineDetail>\r\n            </Line>\r\n            <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n            <TotalAmt>55.00</TotalAmt>\r\n        </Deposit>\r\n        <Deposit domain="QBO" sparse="false">\r\n            <Id>148</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-12-22T12:46:52-08:00</CreateTime>\r\n                <LastUpdatedTime>2014-12-22T12:46:52-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-12-22</TxnDate>\r\n            <Line>\r\n                <Amount>1675</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>120</TxnId>\r\n                    <TxnType>Payment</TxnType>\r\n                    <TxnLineId>0</TxnLineId>\r\n                </LinkedTxn>\r\n            </Line>\r\n            <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n            <TotalAmt>1675.52</TotalAmt>\r\n        </Deposit>\r\n        <Deposit domain="QBO" sparse="false">\r\n            <Id>146</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-12-10T15:24:40-08:00</CreateTime>\r\n                <LastUpdatedTime>2014-12-10T15:24:40-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-12-10</TxnDate>\r\n            <Line>\r\n                <Amount>1675</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>120</TxnId>\r\n                    <TxnType>Payment</TxnType>\r\n                    <TxnLineId>0</TxnLineId>\r\n                </LinkedTxn>\r\n            </Line>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <LineNum>1</LineNum>\r\n                <Amount>20.00</Amount>\r\n                <DetailType>DepositLineDetail</DetailType>\r\n                <DepositLineDetail>\r\n                    <AccountRef name="Unapplied Cash Payment Income">87</AccountRef>\r\n                </DepositLineDetail>\r\n            </Line>\r\n            <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n            <TotalAmt>20.00</TotalAmt>\r\n        </Deposit>\r\n        ...\r\n        <Deposit domain="QBO" sparse="false">\r\n            <Id>5</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-11-05T12:09:00-08:00</CreateTime>\r\n                <LastUpdatedTime>2014-11-05T12:09:00-08:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-11-05</TxnDate>\r\n            <PrivateNote>Opening Balance</PrivateNote>\r\n            <Line>\r\n                <Amount>140</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>47</TxnId>\r\n                    <TxnType>SalesReceipt</TxnType>\r\n                    <TxnLineId>0</TxnLineId>\r\n                </LinkedTxn>\r\n            </Line>\r\n            <Line>\r\n                <Amount>78</Amount>\r\n                <LinkedTxn>\r\n                    <TxnId>38</TxnId>\r\n                    <TxnType>SalesReceipt</TxnType>\r\n                    <TxnLineId>0</TxnLineId>\r\n                </LinkedTxn>\r\n            </Line>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <LineNum>1</LineNum>\r\n                <Amount>600.00</Amount>\r\n                <DetailType>DepositLineDetail</DetailType>\r\n                <DepositLineDetail>\r\n                    <AccountRef name="Opening Balance Equity">34</AccountRef>\r\n                </DepositLineDetail>\r\n            </Line>\r\n            <DepositToAccountRef name="Savings">36</DepositToAccountRef>\r\n            <TotalAmt>600.00</TotalAmt>\r\n        </Deposit>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Query0-request": '"select * from Deposit  "',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-22T12:48:50.866-08:00">\r\n  <Deposit domain="QBO" sparse="false">\r\n    <Id>148</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-12-22T12:46:52-08:00</CreateTime>\r\n      <LastUpdatedTime>2014-12-22T12:46:52-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2014-12-22</TxnDate>\r\n    <Line>\r\n      <Amount>1675</Amount>\r\n      <LinkedTxn>\r\n        <TxnId>120</TxnId>\r\n        <TxnType>Payment</TxnType>\r\n        <TxnLineId>0</TxnLineId>\r\n      </LinkedTxn>\r\n    </Line>\r\n    <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n    <TotalAmt>1675.52</TotalAmt>\r\n  </Deposit>\r\n</IntuitResponse>',
                "Update0-request-xml":
                    ' <Deposit xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>147</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2014-12-22T12:34:06-08:00</CreateTime>\r\n        <LastUpdatedTime>2014-12-22T12:34:06-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2014-12-22</TxnDate>\r\n    <Line>\r\n        <Id>1</Id>\r\n        <LineNum>1</LineNum>\r\n        <Amount>45.00</Amount>\r\n        <DetailType>DepositLineDetail</DetailType>\r\n        <DepositLineDetail>\r\n            <AccountRef name="Unapplied Cash Payment Income">87</AccountRef>\r\n        </DepositLineDetail>\r\n    </Line>\r\n    <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n    <TotalAmt>20.00</TotalAmt>\r\n</Deposit>',
                "Create1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-22T12:46:52.757-08:00">\r\n  <Deposit domain="QBO" sparse="false">\r\n    <Id>148</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-12-22T12:46:52-08:00</CreateTime>\r\n      <LastUpdatedTime>2014-12-22T12:46:52-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2014-12-22</TxnDate>\r\n    <Line>\r\n      <Amount>1675</Amount>\r\n      <LinkedTxn>\r\n        <TxnId>120</TxnId>\r\n        <TxnType>Payment</TxnType>\r\n        <TxnLineId>0</TxnLineId>\r\n      </LinkedTxn>\r\n    </Line>\r\n    <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n    <TotalAmt>1675.52</TotalAmt>\r\n  </Deposit>\r\n</IntuitResponse>',
                "Delete0-response":
                    '{\n  "Deposit": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "148"\n  }, \n  "time": "2014-12-22T14:07:19.053-08:00"\n}',
                "Create1-response":
                    '{\n  "Deposit": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "TxnDate": "2014-12-22", \n    "TotalAmt": 1675.52, \n    "sparse": false, \n    "Line": [\n      {\n        "Amount": 1675.52, \n        "LinkedTxn": [\n          {\n            "TxnLineId": "0", \n            "TxnId": "120", \n            "TxnType": "payment"\n          }\n        ]\n      }\n    ], \n    "Id": "148", \n    "MetaData": {\n      "CreateTime": "2014-12-22T14:46:36-08:00", \n      "LastUpdatedTime": "2014-12-22T14:46:36-08:00"\n    }\n  }, \n  "time": "2014-12-22T14:46:36.084-08:00"\n}',
                "Delete0-request-xml":
                    '<Deposit xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>147</Id>\r\n    <SyncToken>3</SyncToken>\r\n</Deposit>',
                "Update0-request":
                    '{\n  "SyncToken": "1", \n  "domain": "QBO", \n  "DepositToAccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }, \n  "TxnDate": "2014-12-15", \n  "TotalAmt": 1675.52, \n  "sparse": false, \n  "Line": [\n    {\n      "Amount": 1675, \n      "LinkedTxn": [\n        {\n          "TxnLineId": "0", \n          "TxnId": "120", \n          "TxnType": "Payment"\n        }\n      ]\n    }\n  ], \n  "Id": "148", \n  "MetaData": {\n    "CreateTime": "2014-12-22T12:46:52-08:00", \n    "LastUpdatedTime": "2014-12-22T12:46:52-08:00"\n  }\n}',
                "Create1-request-xml":
                    '<Deposit xmlns="http://schema.intuit.com/finance/v3" domain="QBO">\r\n    <Line>\r\n        <LinkedTxn>\r\n            <TxnId>120</TxnId>\r\n            <TxnType>Payment</TxnType>\r\n            <TxnLineId>0</TxnLineId>\r\n        </LinkedTxn>\r\n    </Line>\r\n    <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n</Deposit>',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-22T12:54:27.439-08:00">\r\n    <Deposit domain="QBO" sparse="false">\r\n        <Id>147</Id>\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-12-22T12:34:06-08:00</CreateTime>\r\n            <LastUpdatedTime>2014-12-22T12:54:27-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2014-12-22</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Amount>45.00</Amount>\r\n            <DetailType>DepositLineDetail</DetailType>\r\n            <DepositLineDetail>\r\n                <AccountRef name="Unapplied Cash Payment Income">87</AccountRef>\r\n            </DepositLineDetail>\r\n        </Line>\r\n        <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n        <TotalAmt>45.00</TotalAmt>\r\n    </Deposit>\r\n</IntuitResponse>\r\n',
                "Create0-request-xml":
                    '<Deposit xmlns="http://schema.intuit.com/finance/v3" domain="QBO">\r\n    <Line>\r\n        <Amount>20.00</Amount>\r\n        <DetailType>DepositLineDetail</DetailType>\r\n        <DepositLineDetail>\r\n            <AccountRef name="Unapplied Cash Payment Income">87</AccountRef>\r\n        </DepositLineDetail>\r\n    </Line>\r\n    <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n</Deposit>',
                "Update1-response":
                    '{\n  "Deposit": {\n    "SyncToken": "1", \n    "domain": "QBO", \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "TxnDate": "2014-12-02", \n    "TotalAmt": 20.0, \n    "sparse": false, \n    "Line": [\n      {\n        "LineNum": 1, \n        "Amount": 20.0, \n        "Id": "1", \n        "DepositLineDetail": {\n          "AccountRef": {\n            "name": "Unapplied Cash Payment Income", \n            "value": "87"\n          }\n        }, \n        "DetailType": "DepositLineDetail"\n      }\n    ], \n    "Id": "146", \n    "MetaData": {\n      "CreateTime": "2014-12-10T15:24:40-08:00", \n      "LastUpdatedTime": "2014-12-22T15:13:18-08:00"\n    }\n  }, \n  "time": "2014-12-22T15:13:17.913-08:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 8, \n    "Deposit": [\n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DepositToAccountRef": {\n          "name": "Checking", \n          "value": "35"\n        }, \n        "TxnDate": "2014-12-22", \n        "TotalAmt": 1675.52, \n        "sparse": false, \n        "Line": [\n          {\n            "Amount": 1675, \n            "LinkedTxn": [\n              {\n                "TxnLineId": "0", \n                "TxnId": "120", \n                "TxnType": "Payment"\n              }\n            ]\n          }\n        ], \n        "Id": "148", \n        "MetaData": {\n          "CreateTime": "2014-12-22T12:46:52-08:00", \n          "LastUpdatedTime": "2014-12-22T12:46:52-08:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DepositToAccountRef": {\n          "name": "Checking", \n          "value": "35"\n        }, \n        "TxnDate": "2014-12-10", \n        "TotalAmt": 20.0, \n        "sparse": false, \n        "Line": [\n          {\n            "Amount": 1675, \n            "LinkedTxn": [\n              {\n                "TxnLineId": "0", \n                "TxnId": "120", \n                "TxnType": "Payment"\n              }\n            ]\n          }, \n          {\n            "LineNum": 1, \n            "Amount": 20.0, \n            "Id": "1", \n            "DepositLineDetail": {\n              "AccountRef": {\n                "name": "Unapplied Cash Payment Income", \n                "value": "87"\n              }\n            }, \n            "DetailType": "DepositLineDetail"\n          }\n        ], \n        "Id": "145", \n        "MetaData": {\n          "CreateTime": "2014-12-10T15:21:44-08:00", \n          "LastUpdatedTime": "2014-12-10T15:21:44-08:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DepositToAccountRef": {\n          "name": "Savings", \n          "value": "36"\n        }, \n        "TxnDate": "2014-11-05", \n        "TotalAmt": 600.0, \n        "PrivateNote": "Opening Balance", \n        "sparse": false, \n        "Line": [\n          {\n            "Amount": 140, \n            "LinkedTxn": [\n              {\n                "TxnLineId": "0", \n                "TxnId": "47", \n                "TxnType": "SalesReceipt"\n              }\n            ]\n          }, \n          {\n            "Amount": 78, \n            "LinkedTxn": [\n              {\n                "TxnLineId": "0", \n                "TxnId": "38", \n                "TxnType": "SalesReceipt"\n              }\n            ]\n          }, \n          {\n            "LineNum": 1, \n            "Amount": 600.0, \n            "Id": "1", \n            "DepositLineDetail": {\n              "AccountRef": {\n                "name": "Opening Balance Equity", \n                "value": "34"\n              }\n            }, \n            "DetailType": "DepositLineDetail"\n          }\n        ], \n        "Id": "5", \n        "MetaData": {\n          "CreateTime": "2014-11-05T12:09:00-08:00", \n          "LastUpdatedTime": "2014-11-05T12:09:00-08:00"\n        }\n      }\n    ], \n    "maxResults": 8\n  }, \n  "time": "2014-12-22T13:11:37.977-08:00"\n}',
            },
            Journalentry: {
                "Delete0-request": '{\n  "SyncToken": "0", \n  "Id": "228"\n}',
                "Query0-request-xml": "select * from JournalEntry where id = '227'",
                "Read0-response":
                    '{\n  "time": "2015-06-29T12:43:42.132-07:00", \n  "JournalEntry": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "TxnDate": "2015-06-29", \n    "sparse": false, \n    "Line": [\n      {\n        "JournalEntryLineDetail": {\n          "PostingType": "Debit", \n          "AccountRef": {\n            "name": "Job Expenses:Job Materials:Fountain and Garden Lighting", \n            "value": "65"\n          }\n        }, \n        "DetailType": "JournalEntryLineDetail", \n        "Amount": 25.54, \n        "Id": "0", \n        "Description": "Four sprinkler heads damaged"\n      }, \n      {\n        "JournalEntryLineDetail": {\n          "PostingType": "Credit", \n          "AccountRef": {\n            "name": "Notes Payable", \n            "value": "44"\n          }\n        }, \n        "DetailType": "JournalEntryLineDetail", \n        "Amount": 25.54, \n        "Id": "1", \n        "Description": "Sprinkler Hds - Sprinkler Hds Inventory Adjustment"\n      }\n    ], \n    "Adjustment": false, \n    "Id": "227", \n    "TxnTaxDetail": {}, \n    "MetaData": {\n      "CreateTime": "2015-06-29T12:33:57-07:00", \n      "LastUpdatedTime": "2015-06-29T12:33:57-07:00"\n    }\n  }\n}',
                "Update1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-06-29T12:53:48.529-07:00">\r\n  <JournalEntry domain="QBO" sparse="false">\r\n    <Id>228</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-06-29T12:45:32-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-06-29T12:53:48-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-06-29</TxnDate>\r\n    <PrivateNote>Revised private note via sparse update</PrivateNote>\r\n    <Line>\r\n      <Id>0</Id>\r\n      <Description>nov portion of rider insurance</Description>\r\n      <Amount>100.00</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Debit</PostingType>\r\n        <AccountRef name="Truck:Depreciation">39</AccountRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <Description>nov portion of rider insurance</Description>\r\n      <Amount>100.00</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Credit</PostingType>\r\n        <AccountRef name="Notes Payable">44</AccountRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n    <TxnTaxDetail />\r\n    <Adjustment>false</Adjustment>\r\n  </JournalEntry>\r\n</IntuitResponse>',
                "Update1-request-xml":
                    '<JournalEntry xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>842</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <PrivateNote>Revised private note via sparse update</PrivateNote>\r\n    <TxnTaxDetail />\r\n    <Adjustment>false</Adjustment>\r\n  </JournalEntry>',
                "Update0-response":
                    '{\n  "time": "2015-06-29T12:57:14.02-07:00", \n  "JournalEntry": {\n    "SyncToken": "2", \n    "domain": "QBO", \n    "TxnDate": "2015-06-29", \n    "sparse": false, \n    "Line": [\n      {\n        "JournalEntryLineDetail": {\n          "PostingType": "Debit", \n          "AccountRef": {\n            "name": "Job Expenses:Job Materials:Fountain and Garden Lighting", \n            "value": "65"\n          }\n        }, \n        "DetailType": "JournalEntryLineDetail", \n        "Amount": 25.54, \n        "Id": "0", \n        "Description": "Updated description"\n      }, \n      {\n        "JournalEntryLineDetail": {\n          "PostingType": "Credit", \n          "AccountRef": {\n            "name": "Notes Payable", \n            "value": "44"\n          }\n        }, \n        "DetailType": "JournalEntryLineDetail", \n        "Amount": 25.54, \n        "Id": "1", \n        "Description": "Sprinkler Hds - Sprinkler Hds Inventory Adjustment"\n      }\n    ], \n    "Adjustment": false, \n    "Id": "227", \n    "TxnTaxDetail": {}, \n    "MetaData": {\n      "CreateTime": "2015-06-29T12:33:57-07:00", \n      "LastUpdatedTime": "2015-06-29T12:57:15-07:00"\n    }\n  }\n}',
                "Create0-response":
                    '{\n  "time": "2015-06-29T12:45:32.183-07:00", \n  "JournalEntry": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "TxnDate": "2015-06-29", \n    "sparse": false, \n    "Line": [\n      {\n        "JournalEntryLineDetail": {\n          "PostingType": "Debit", \n          "AccountRef": {\n            "name": "Truck:Depreciation", \n            "value": "39"\n          }\n        }, \n        "DetailType": "JournalEntryLineDetail", \n        "Amount": 100.0, \n        "Id": "0", \n        "Description": "nov portion of rider insurance"\n      }, \n      {\n        "JournalEntryLineDetail": {\n          "PostingType": "Credit", \n          "AccountRef": {\n            "name": "Notes Payable", \n            "value": "44"\n          }\n        }, \n        "DetailType": "JournalEntryLineDetail", \n        "Amount": 100.0, \n        "Id": "1", \n        "Description": "nov portion of rider insurance"\n      }\n    ], \n    "Adjustment": false, \n    "Id": "228", \n    "TxnTaxDetail": {}, \n    "MetaData": {\n      "CreateTime": "2015-06-29T12:45:32-07:00", \n      "LastUpdatedTime": "2015-06-29T12:45:32-07:00"\n    }\n  }\n}',
                "Update1-request":
                    '{\n  "SyncToken": "1", \n  "domain": "QBO", \n  "TxnDate": "2015-11-30", \n  "PrivateNote": "Revised private note via sparse update", \n  "sparse": true, \n  "Adjustment": false, \n  "Id": "227"\n}',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-06-29T12:33:57.095-07:00">\r\n  <JournalEntry domain="QBO" sparse="false">\r\n    <Id>227</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-06-29T12:33:57-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-06-29T12:33:57-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-06-29</TxnDate>\r\n    <Line>\r\n      <Id>0</Id>\r\n      <Description>Four sprinkler heads damaged</Description>\r\n      <Amount>25.54</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Debit</PostingType>\r\n        <AccountRef name="Job Expenses:Job Materials:Fountain and Garden Lighting">65</AccountRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <Description>Sprinkler Hds - Sprinkler Hds Inventory Adjustment</Description>\r\n      <Amount>25.54</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Credit</PostingType>\r\n        <AccountRef name="Notes Payable">44</AccountRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n    <TxnTaxDetail />\r\n    <Adjustment>false</Adjustment>\r\n  </JournalEntry>\r\n</IntuitResponse>',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-05-26T14:04:36.332-07:00">\r\n    <JournalEntry domain="QBO" status="Deleted">\r\n        <Id>227</Id>\r\n    </JournalEntry>\r\n</IntuitResponse>\r\n',
                "Create0-request":
                    '{\n  "Line": [\n    {\n      "JournalEntryLineDetail": {\n        "PostingType": "Debit", \n        "AccountRef": {\n          "name": "Opening Bal Equity", \n          "value": "39"\n        }\n      }, \n      "DetailType": "JournalEntryLineDetail", \n      "Amount": 100.0, \n      "Id": "0", \n      "Description": "nov portion of rider insurance"\n    }, \n    {\n      "JournalEntryLineDetail": {\n        "PostingType": "Credit", \n        "AccountRef": {\n          "name": "Notes Payable", \n          "value": "44"\n        }\n      }, \n      "DetailType": "JournalEntryLineDetail", \n      "Amount": 100.0, \n      "Description": "nov portion of rider insurance"\n    }\n  ]\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-06-29T12:47:30.982-07:00">\r\n  <QueryResponse startPosition="1" maxResults="1" totalCount="1">\r\n    <JournalEntry domain="QBO" sparse="false">\r\n      <Id>227</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2015-06-29T12:33:57-07:00</CreateTime>\r\n        <LastUpdatedTime>2015-06-29T12:33:57-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <DocNumber>1112</DocNumber>\r\n      <TxnDate>2015-06-29</TxnDate>\r\n      <Line>\r\n        <Id>0</Id>\r\n        <Description>Four sprinkler heads damaged</Description>\r\n        <Amount>25.54</Amount>\r\n        <DetailType>JournalEntryLineDetail</DetailType>\r\n        <JournalEntryLineDetail>\r\n          <PostingType>Debit</PostingType>\r\n          <AccountRef name="Job Expenses:Job Materials:Fountain and Garden Lighting">65</AccountRef>\r\n        </JournalEntryLineDetail>\r\n      </Line>\r\n      <Line>\r\n        <Id>1</Id>\r\n        <Description>Sprinkler Hds - Sprinkler Hds Inventory Adjustment</Description>\r\n        <Amount>25.54</Amount>\r\n        <DetailType>JournalEntryLineDetail</DetailType>\r\n        <JournalEntryLineDetail>\r\n          <PostingType>Credit</PostingType>\r\n          <AccountRef name="Notes Payable">44</AccountRef>\r\n        </JournalEntryLineDetail>\r\n      </Line>\r\n      <TxnTaxDetail />\r\n      <Adjustment>false</Adjustment>\r\n    </JournalEntry>\r\n  </QueryResponse>\r\n</IntuitResponse>',
                "Query0-request":
                    "\"select * from JournalEntry Where Metadata.LastUpdatedTime>'2014-09-15T00:00:00-07:00' Order By Metadata.LastUpdatedTime\"",
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-06-29T12:42:18.004-07:00">\r\n  <JournalEntry domain="QBO" sparse="false">\r\n    <Id>227</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-06-29T12:33:57-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-06-29T12:33:57-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-06-29</TxnDate>\r\n    <Line>\r\n      <Id>0</Id>\r\n      <Description>Four sprinkler heads damaged</Description>\r\n      <Amount>25.54</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Debit</PostingType>\r\n        <AccountRef name="Job Expenses:Job Materials:Fountain and Garden Lighting">65</AccountRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <Description>Sprinkler Hds - Sprinkler Hds Inventory Adjustment</Description>\r\n      <Amount>25.54</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Credit</PostingType>\r\n        <AccountRef name="Notes Payable">44</AccountRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n    <TxnTaxDetail />\r\n    <Adjustment>false</Adjustment>\r\n  </JournalEntry>\r\n</IntuitResponse>',
                "Update0-request-xml":
                    '<JournalEntry xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n   <Id>227</Id>\r\n    <SyncToken>2</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-06-29T12:33:57-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-06-29T12:33:57-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-06-29</TxnDate>\r\n    <Line>\r\n      <Id>0</Id>\r\n      <Description>Updated Description</Description>\r\n      <Amount>25.54</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Debit</PostingType>\r\n        <AccountRef name="Job Expenses:Job Materials:Fountain and Garden Lighting">65</AccountRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <Description>Sprinkler Hds - Sprinkler Hds Inventory Adjustment</Description>\r\n      <Amount>25.54</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Credit</PostingType>\r\n        <AccountRef name="Notes Payable">44</AccountRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n    <TxnTaxDetail />\r\n    <Adjustment>false</Adjustment>\r\n</JournalEntry>',
                "Delete0-response":
                    '{\n  "time": "2015-05-26T14:03:31.321-07:00", \n  "JournalEntry": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "228"\n  }\n}',
                "Delete0-request-xml":
                    '<JournalEntry xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>227</Id>\r\n    <SyncToken>1</SyncToken>\r\n</JournalEntry>\r\n',
                "Update0-request":
                    '{\n  "SyncToken": "1", \n  "domain": "QBO", \n  "TxnDate": "2015-06-29", \n  "sparse": false, \n  "Line": [\n    {\n      "JournalEntryLineDetail": {\n        "PostingType": "Debit", \n        "AccountRef": {\n          "name": "Job Expenses:Job Materials:Fountain and Garden Lighting", \n          "value": "65"\n        }\n      }, \n      "DetailType": "JournalEntryLineDetail", \n      "Amount": 25.54, \n      "Id": "0", \n      "Description": "Updated description"\n    }, \n    {\n      "JournalEntryLineDetail": {\n        "PostingType": "Credit", \n        "AccountRef": {\n          "name": "Notes Payable", \n          "value": "44"\n        }\n      }, \n      "DetailType": "JournalEntryLineDetail", \n      "Amount": 25.54, \n      "Id": "1", \n      "Description": "Sprinkler Hds - Sprinkler Hds Inventory Adjustment"\n    }\n  ], \n  "Adjustment": false, \n  "Id": "227", \n  "TxnTaxDetail": {}, \n  "MetaData": {\n    "CreateTime": "2015-06-29T12:33:57-07:00", \n    "LastUpdatedTime": "2015-06-29T12:33:57-07:00"\n  }\n}',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-06-29T13:09:49.199-07:00">\r\n  <JournalEntry domain="QBO" sparse="false">\r\n    <Id>227</Id>\r\n    <SyncToken>3</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-06-29T12:33:57-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-06-29T13:09:50-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-06-29</TxnDate>\r\n    <Line>\r\n      <Id>0</Id>\r\n      <Description>Updated Description</Description>\r\n      <Amount>25.54</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Debit</PostingType>\r\n        <AccountRef name="Job Expenses:Job Materials:Fountain and Garden Lighting">65</AccountRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <Description>Sprinkler Hds - Sprinkler Hds Inventory Adjustment</Description>\r\n      <Amount>25.54</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Credit</PostingType>\r\n        <AccountRef name="Notes Payable">44</AccountRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n    <TxnTaxDetail />\r\n    <Adjustment>false</Adjustment>\r\n  </JournalEntry>\r\n</IntuitResponse>',
                "Create0-request-xml":
                    '<JournalEntry xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n <Line>\r\n      <Id>0</Id>\r\n      <Description>Four sprinkler heads damaged</Description>\r\n      <Amount>25.54</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Debit</PostingType>\r\n        <AccountRef name="Landscaping Services:Job Materials:Sprinklers &amp; Drip systems">65</AccountRef>\r\n        <ClassRef name="Landscaping">100000000000368490</ClassRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <Description>Sprinkler Hds - Sprinkler Hds Inventory Adjustment</Description>\r\n      <Amount>25.54</Amount>\r\n      <DetailType>JournalEntryLineDetail</DetailType>\r\n      <JournalEntryLineDetail>\r\n        <PostingType>Credit</PostingType>\r\n        <AccountRef name="Inventory Asset">44</AccountRef>\r\n      </JournalEntryLineDetail>\r\n    </Line>\r\n</JournalEntry>',
                "Update1-response":
                    '{\n  "time": "2015-06-29T12:54:38.135-07:00", \n  "JournalEntry": {\n    "DocNumber": "1112", \n    "SyncToken": "1", \n    "domain": "QBO", \n    "TxnDate": "2015-11-30", \n    "PrivateNote": "Revised private note via sparse update", \n    "sparse": false, \n    "Line": [\n      {\n        "JournalEntryLineDetail": {\n          "PostingType": "Debit", \n          "AccountRef": {\n            "name": "Job Expenses:Job Materials:Fountain and Garden Lighting", \n            "value": "65"\n          }\n        }, \n        "DetailType": "JournalEntryLineDetail", \n        "Amount": 25.54, \n        "Id": "0", \n        "Description": "Four sprinkler heads damaged"\n      }, \n      {\n        "JournalEntryLineDetail": {\n          "PostingType": "Credit", \n          "AccountRef": {\n            "name": "Notes Payable", \n            "value": "44"\n          }\n        }, \n        "DetailType": "JournalEntryLineDetail", \n        "Amount": 25.54, \n        "Id": "1", \n        "Description": "Sprinkler Hds - Sprinkler Hds Inventory Adjustment"\n      }\n    ], \n    "Adjustment": false, \n    "Id": "227", \n    "TxnTaxDetail": {}, \n    "MetaData": {\n      "CreateTime": "2015-06-29T12:33:57-07:00", \n      "LastUpdatedTime": "2015-06-29T12:54:38-07:00"\n    }\n  }\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 3, \n    "maxResults": 3, \n    "JournalEntry": [\n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "TxnDate": "2014-09-16", \n        "PrivateNote": "Opening Balance", \n        "sparse": false, \n        "Line": [\n          {\n            "JournalEntryLineDetail": {\n              "PostingType": "Credit", \n              "AccountRef": {\n                "name": "Notes Payable", \n                "value": "44"\n              }\n            }, \n            "DetailType": "JournalEntryLineDetail", \n            "Amount": 25000.0, \n            "Id": "0", \n            "Description": "Opening Balance"\n          }, \n          {\n            "JournalEntryLineDetail": {\n              "PostingType": "Debit", \n              "AccountRef": {\n                "name": "Opening Balance Equity", \n                "value": "34"\n              }\n            }, \n            "DetailType": "JournalEntryLineDetail", \n            "Amount": 25000.0, \n            "Id": "1", \n            "Description": "Opening Balance"\n          }\n        ], \n        "Adjustment": false, \n        "Id": "8", \n        "TxnTaxDetail": {}, \n        "MetaData": {\n          "CreateTime": "2014-09-16T10:04:24-07:00", \n          "LastUpdatedTime": "2014-09-16T10:04:24-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "TxnDate": "2014-09-16", \n        "PrivateNote": "Opening Balance", \n        "sparse": false, \n        "Line": [\n          {\n            "JournalEntryLineDetail": {\n              "PostingType": "Credit", \n              "AccountRef": {\n                "name": "Loan Payable", \n                "value": "43"\n              }\n            }, \n            "DetailType": "JournalEntryLineDetail", \n            "Amount": 4000.0, \n            "Id": "0", \n            "Description": "Opening Balance"\n          }, \n          {\n            "JournalEntryLineDetail": {\n              "PostingType": "Debit", \n              "AccountRef": {\n                "name": "Opening Balance Equity", \n                "value": "34"\n              }\n            }, \n            "DetailType": "JournalEntryLineDetail", \n            "Amount": 4000.0, \n            "Id": "1", \n            "Description": "Opening Balance"\n          }\n        ], \n        "Adjustment": false, \n        "Id": "7", \n        "TxnTaxDetail": {}, \n        "MetaData": {\n          "CreateTime": "2014-09-16T10:03:25-07:00", \n          "LastUpdatedTime": "2014-09-16T10:03:25-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "TxnDate": "2014-09-03", \n        "PrivateNote": "Opening Balance", \n        "sparse": false, \n        "Line": [\n          {\n            "JournalEntryLineDetail": {\n              "PostingType": "Debit", \n              "AccountRef": {\n                "name": "Truck:Original Cost", \n                "value": "38"\n              }\n            }, \n            "DetailType": "JournalEntryLineDetail", \n            "Amount": 13495.0, \n            "Id": "0", \n            "Description": "Opening Balance"\n          }, \n          {\n            "JournalEntryLineDetail": {\n              "PostingType": "Credit", \n              "AccountRef": {\n                "name": "Opening Balance Equity", \n                "value": "34"\n              }\n            }, \n            "DetailType": "JournalEntryLineDetail", \n            "Amount": 13495.0, \n            "Id": "1", \n            "Description": "Opening Balance"\n          }\n        ], \n        "Adjustment": false, \n        "Id": "6", \n        "TxnTaxDetail": {}, \n        "MetaData": {\n          "CreateTime": "2014-09-15T12:11:06-07:00", \n          "LastUpdatedTime": "2014-09-15T12:11:06-07:00"\n        }\n      }\n    ]\n  }, \n  "time": "2015-01-16T09:05:53.455-08:00"\n}',
            },
            Creditcardpayment: {
                "Delete0-request":
                    '{\n  "TxnDate": "2020-03-27", \n  "PrivateNote": "This will fill in the memo field.", \n  "CreditCardAccountRef": {\n    "name": "Credit Card", \n    "value": 57\n  }, \n  "SyncToken": "0", \n  "Amount": "100", \n  "BankAccountRef": {\n    "name": "Checking", \n    "value": 37\n  }, \n  "Id": "31"\n}',
                "Query0-request-xml": "select * from creditcardpayment",
                "Read0-response":
                    '{\n  "CreditCardPaymentTxn": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "CreditCardAccountRef": {\n      "name": "Credit Card", \n      "value": "57"\n    }, \n    "TxnDate": "2020-03-27", \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "Amount": 10.0, \n    "sparse": false, \n    "BankAccountRef": {\n      "name": "Checking", \n      "value": "37"\n    }, \n    "Id": "29", \n    "MetaData": {\n      "CreateTime": "2020-03-27T07:01:04-07:00", \n      "LastUpdatedTime": "2020-03-27T07:01:04-07:00"\n    }\n  }, \n  "time": "2020-03-27T07:06:45.630-07:00"\n}',
                "Update1-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-03-27T08:27:05.916-07:00">\n    <CreditCardPaymentTxn domain="QBO" sparse="false">\n        <Id>29</Id>\n        <SyncToken>4</SyncToken>\n        <MetaData>\n            <CreateTime>2020-03-27T07:01:04-07:00</CreateTime>\n            <LastUpdatedTime>2020-03-27T08:27:05-07:00</LastUpdatedTime>\n        </MetaData>\n        <TxnDate>2020-03-27</TxnDate>\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\n        <PrivateNote>This is a corrected memo field.</PrivateNote>\n        <CreditCardAccountRef name="Credit Card">57</CreditCardAccountRef>\n        <BankAccountRef name="Checking">37</BankAccountRef>\n        <Amount>150.00</Amount>\n    </CreditCardPaymentTxn>\n</IntuitResponse>\n',
                "Update1-request-xml":
                    '<CreditCardPaymentTxn xmlns="http://schema.intuit.com/finance/v3" sparse="true" domain="QBO">\n    <Id>29</Id>\n    <SyncToken>3</SyncToken>\n    <BankAccountRef name="Checking">37</BankAccountRef>\n    <CreditCardAccountRef name="Credit Card">57</CreditCardAccountRef>\n    <Amount>150.00</Amount>\n\t<PrivateNote>This is a corrected memo field.</PrivateNote>\n</CreditCardPaymentTxn>\n',
                "Update0-response":
                    '{\n  "CreditCardPaymentTxn": {\n    "SyncToken": "1", \n    "domain": "QBO", \n    "CreditCardAccountRef": {\n      "name": "Credit Card", \n      "value": "57"\n    }, \n    "TxnDate": "2020-03-27", \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "PrivateNote": "This will fill in the memo field.", \n    "Amount": 100.0, \n    "sparse": false, \n    "BankAccountRef": {\n      "name": "Checking", \n      "value": "37"\n    }, \n    "Id": "29", \n    "MetaData": {\n      "CreateTime": "2020-03-27T07:01:04-07:00", \n      "LastUpdatedTime": "2020-03-27T07:31:22-07:00"\n    }\n  }, \n  "time": "2020-03-27T07:31:22.379-07:00"\n}',
                "Create0-response":
                    '{\n  "CreditCardPaymentTxn": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "CreditCardAccountRef": {\n      "name": "Credit Card", \n      "value": "57"\n    }, \n    "TxnDate": "2020-03-27", \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "PrivateNote": "This will fill in the memo field.", \n    "Amount": 100.0, \n    "sparse": false, \n    "BankAccountRef": {\n      "name": "Checking", \n      "value": "37"\n    }, \n    "Id": "31", \n    "MetaData": {\n      "CreateTime": "2020-03-27T07:18:05-07:00", \n      "LastUpdatedTime": "2020-03-27T07:18:05-07:00"\n    }\n  }, \n  "time": "2020-03-27T07:18:05.713-07:00"\n}',
                "Update1-request":
                    '{\n  "TxnDate": "2020-03-27", \n  "PrivateNote": "This is a corrected memo field.", \n  "CreditCardAccountRef": {\n    "name": "Credit Card", \n    "value": 57\n  }, \n  "SyncToken": "1", \n  "Amount": "100", \n  "sparse": true, \n  "BankAccountRef": {\n    "name": "Checking", \n    "value": 37\n  }, \n  "Id": "29"\n}',
                "Create0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-03-27T08:16:45.852-07:00">\n    <CreditCardPaymentTxn domain="QBO" sparse="false">\n        <Id>32</Id>\n        <SyncToken>0</SyncToken>\n        <MetaData>\n            <CreateTime>2020-03-27T08:16:45-07:00</CreateTime>\n            <LastUpdatedTime>2020-03-27T08:16:45-07:00</LastUpdatedTime>\n        </MetaData>\n        <TxnDate>2020-03-27</TxnDate>\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\n        <PrivateNote>This is a memo</PrivateNote>\n        <CreditCardAccountRef name="Credit Card">57</CreditCardAccountRef>\n        <BankAccountRef name="Checking">37</BankAccountRef>\n        <Amount>320.00</Amount>\n    </CreditCardPaymentTxn>\n</IntuitResponse>\n',
                "Delete0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-03-27T08:20:02.532-07:00">\n    <CreditCardPaymentTxn domain="QBO" status="Deleted">\n        <Id>32</Id>\n    </CreditCardPaymentTxn>\n</IntuitResponse>\n',
                "Create0-request":
                    '{\n  "PrivateNote": "This will fill in the memo field.", \n  "TxnDate": "2020-03-27", \n  "Amount": "100", \n  "BankAccountRef": {\n    "name": "Checking", \n    "value": 37\n  }, \n  "CreditCardAccountRef": {\n    "name": "Credit Card", \n    "value": 57\n  }\n}',
                "Query0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-03-27T08:21:25.537-07:00">\n    <QueryResponse startPosition="1" maxResults="2" totalCount="2">\n        <CreditCardPaymentTxn domain="QBO" sparse="false">\n            <Id>29</Id>\n            <SyncToken>2</SyncToken>\n            <MetaData>\n                <CreateTime>2020-03-27T07:01:04-07:00</CreateTime>\n                <LastUpdatedTime>2020-03-27T07:59:42-07:00</LastUpdatedTime>\n            </MetaData>\n            <TxnDate>2020-03-27</TxnDate>\n            <CurrencyRef name="United States Dollar">USD</CurrencyRef>\n            <PrivateNote>This is a corrected memo field.</PrivateNote>\n            <CreditCardAccountRef name="Credit Card">57</CreditCardAccountRef>\n            <BankAccountRef name="Checking">37</BankAccountRef>\n            <Amount>100.00</Amount>\n        </CreditCardPaymentTxn>\n        <CreditCardPaymentTxn domain="QBO" sparse="false">\n            <Id>30</Id>\n            <SyncToken>0</SyncToken>\n            <MetaData>\n                <CreateTime>2020-03-27T07:15:05-07:00</CreateTime>\n                <LastUpdatedTime>2020-03-27T07:15:05-07:00</LastUpdatedTime>\n            </MetaData>\n            <TxnDate>2020-03-27</TxnDate>\n            <CurrencyRef name="United States Dollar">USD</CurrencyRef>\n            <PrivateNote>This is a memo</PrivateNote>\n            <CreditCardAccountRef name="Credit Card">57</CreditCardAccountRef>\n            <BankAccountRef name="Checking">37</BankAccountRef>\n            <Amount>15.00</Amount>\n        </CreditCardPaymentTxn>\n    </QueryResponse>\n</IntuitResponse>',
                "Query0-request": '"select * from creditcardpayment\\n"',
                "Read0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-03-27T08:22:33.079-07:00">\n    <CreditCardPaymentTxn domain="QBO" sparse="false">\n        <Id>29</Id>\n        <SyncToken>2</SyncToken>\n        <MetaData>\n            <CreateTime>2020-03-27T07:01:04-07:00</CreateTime>\n            <LastUpdatedTime>2020-03-27T07:59:42-07:00</LastUpdatedTime>\n        </MetaData>\n        <TxnDate>2020-03-27</TxnDate>\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\n        <PrivateNote>This is a corrected memo field.</PrivateNote>\n        <CreditCardAccountRef name="Credit Card">57</CreditCardAccountRef>\n        <BankAccountRef name="Checking">37</BankAccountRef>\n        <Amount>100.00</Amount>\n    </CreditCardPaymentTxn>\n</IntuitResponse>\n',
                "Update0-request-xml":
                    '<CreditCardPaymentTxn xmlns="http://schema.intuit.com/finance/v3" sparse="false" domain="QBO">\n    <Id>29</Id>\n    <SyncToken>2</SyncToken>\n    <BankAccountRef name="Checking">37</BankAccountRef>\n    <CreditCardAccountRef name="Credit Card">57</CreditCardAccountRef>\n    <Amount>320.00</Amount>\n\t<PrivateNote>This is a corrected memo field.</PrivateNote>\n</CreditCardPaymentTxn>\n',
                "Delete0-response":
                    '{\n  "CreditCardPaymentTxn": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "31"\n  }, \n  "time": "2020-03-27T07:38:07.499-07:00"\n}',
                "Delete0-request-xml":
                    '<CreditCardPaymentTxn xmlns="http://schema.intuit.com/finance/v3" sparse="false" domain="QBO">\n    <Id>32</Id>\n    <SyncToken>0</SyncToken>\n    <BankAccountRef name="Checking">37</BankAccountRef>\n    <CreditCardAccountRef name="Credit Card">57</CreditCardAccountRef>\n    <Amount>320.00</Amount>\n\t<PrivateNote>This is a memo</PrivateNote>\n</CreditCardPaymentTxn>\n',
                "Update0-request":
                    '{\n  "TxnDate": "2020-03-27", \n  "PrivateNote": "This will fill in the memo field.", \n  "CreditCardAccountRef": {\n    "name": "Credit Card", \n    "value": 57\n  }, \n  "SyncToken": "0", \n  "Amount": "100", \n  "BankAccountRef": {\n    "name": "Checking", \n    "value": 37\n  }, \n  "Id": "29"\n}',
                "Update0-response-xml":
                    '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2020-03-27T08:25:31.669-07:00">\n    <CreditCardPaymentTxn domain="QBO" sparse="false">\n        <Id>29</Id>\n        <SyncToken>3</SyncToken>\n        <MetaData>\n            <CreateTime>2020-03-27T07:01:04-07:00</CreateTime>\n            <LastUpdatedTime>2020-03-27T08:25:31-07:00</LastUpdatedTime>\n        </MetaData>\n        <TxnDate>2020-03-27</TxnDate>\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\n        <PrivateNote>This is a corrected memo field.</PrivateNote>\n        <CreditCardAccountRef name="Credit Card">57</CreditCardAccountRef>\n        <BankAccountRef name="Checking">37</BankAccountRef>\n        <Amount>320.00</Amount>\n    </CreditCardPaymentTxn>\n</IntuitResponse>\n',
                "Create0-request-xml":
                    '<CreditCardPaymentTxn xmlns="http://schema.intuit.com/finance/v3" sparse="false" domain="QBO">\n    <BankAccountRef name="Checking">37</BankAccountRef>\n    <CreditCardAccountRef name="Credit Card">57</CreditCardAccountRef>\n    <Amount>320.00</Amount>\n\t<PrivateNote>This is a memo</PrivateNote>\n</CreditCardPaymentTxn>\n',
                "Update1-response":
                    '{\n  "CreditCardPaymentTxn": {\n    "SyncToken": "2", \n    "domain": "QBO", \n    "CreditCardAccountRef": {\n      "name": "Credit Card", \n      "value": "57"\n    }, \n    "TxnDate": "2020-03-27", \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "PrivateNote": "This is a corrected memo field.", \n    "Amount": 100.0, \n    "sparse": false, \n    "BankAccountRef": {\n      "name": "Checking", \n      "value": "37"\n    }, \n    "Id": "29", \n    "MetaData": {\n      "CreateTime": "2020-03-27T07:01:04-07:00", \n      "LastUpdatedTime": "2020-03-27T07:59:42-07:00"\n    }\n  }, \n  "time": "2020-03-27T07:59:42.418-07:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 2, \n    "CreditCardPaymentTxn": [\n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "CreditCardAccountRef": {\n          "name": "Credit Card", \n          "value": "57"\n        }, \n        "TxnDate": "2020-03-27", \n        "CurrencyRef": {\n          "name": "United States Dollar", \n          "value": "USD"\n        }, \n        "PrivateNote": "This is a memo", \n        "Amount": 15.0, \n        "sparse": false, \n        "BankAccountRef": {\n          "name": "Checking", \n          "value": "37"\n        }, \n        "Id": "30", \n        "MetaData": {\n          "CreateTime": "2020-03-27T07:15:05-07:00", \n          "LastUpdatedTime": "2020-03-27T07:15:05-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "CreditCardAccountRef": {\n          "name": "Credit Card", \n          "value": "57"\n        }, \n        "TxnDate": "2020-03-27", \n        "CurrencyRef": {\n          "name": "United States Dollar", \n          "value": "USD"\n        }, \n        "Amount": 10.0, \n        "sparse": false, \n        "BankAccountRef": {\n          "name": "Checking", \n          "value": "37"\n        }, \n        "Id": "29", \n        "MetaData": {\n          "CreateTime": "2020-03-27T07:01:04-07:00", \n          "LastUpdatedTime": "2020-03-27T07:01:04-07:00"\n        }\n      }\n    ], \n    "maxResults": 2\n  }, \n  "time": "2020-03-27T07:15:46.750-07:00"\n}',
            },
            Salesbyproduct: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/ItemSales?start_duedate=2015-08-01&end_duedate=2015-09-30\\n"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "ItemSales", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2015-08-01", \n    "Currency": "USD", \n    "EndPeriod": "2015-09-30", \n    "Time": "2016-06-17T15:31:24-07:00", \n    "SummarizeColumnsBy": "Total"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "id": "3", \n            "value": "Concrete"\n          }, \n          {\n            "value": "5.00"\n          }, \n          {\n            "value": "47.50"\n          }, \n          {\n            "value": "0.56 %"\n          }, \n          {\n            "value": "9.50"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "4", \n            "value": "Design"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "6", \n            "value": "Gardening"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "7", \n            "value": "Installation"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "8", \n            "value": "Lighting"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "10", \n            "value": "Pest Control"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "11", \n            "value": "Pump"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "5", \n            "value": "Rock Fountain"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "13", \n            "value": "Rocks"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "1", \n            "value": "Services"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "14", \n            "value": "Sod"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "15", \n            "value": "Soil"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "16", \n            "value": "Sprinkler Heads"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "17", \n            "value": "Sprinkler Pipes"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "18", \n            "value": "Trimming"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Not Specified"\n          }\n        ], \n        "group": "**"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "TOTAL"\n          }\n        ], \n        "group": "GrandTotal"\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "ProductsAndService", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total", \n        "Columns": {\n          "Column": [\n            {\n              "ColType": "Money", \n              "ColTitle": "Quantity", \n              "MetaData": [\n                {\n                  "Name": "StartDate", \n                  "Value": "2015-08-01"\n                }, \n                {\n                  "Name": "EndDate", \n                  "Value": "2015-09-30"\n                }\n              ]\n            }, \n            {\n              "ColType": "Money", \n              "ColTitle": "Amount", \n              "MetaData": [\n                {\n                  "Name": "StartDate", \n                  "Value": "2015-08-01"\n                }, \n                {\n                  "Name": "EndDate", \n                  "Value": "2015-09-30"\n                }\n              ]\n            }, \n            {\n              "ColType": "Money", \n              "ColTitle": "% of Sales"\n            }, \n            {\n              "ColType": "Money", \n              "ColTitle": "Avg Price"\n            }, \n            {\n              "ColType": "Money", \n              "ColTitle": "COGS", \n              "MetaData": [\n                {\n                  "Name": "StartDate", \n                  "Value": "2015-08-01"\n                }, \n                {\n                  "Name": "EndDate", \n                  "Value": "2015-09-30"\n                }\n              ]\n            }, \n            {\n              "ColType": "Money", \n              "ColTitle": "Gross Margin"\n            }, \n            {\n              "ColType": "Money", \n              "ColTitle": "Gross Margin %"\n            }\n          ]\n        }\n      }\n    ]\n  }\n}',
            },
            Companycurrency: {
                "Create0-request-xml":
                    '<CompanyCurrency xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Code>USD</Code>\r\n</CompanyCurrency>\r\n',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-06T13:27:49.342-07:00">\r\n    <QueryResponse startPosition="1" maxResults="5" totalCount="5">\r\n        <CompanyCurrency domain="QBO" sparse="false">\r\n            <Id>5</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-06-19T09:20:44-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-06-19T09:20:44-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Code>JPY</Code>\r\n            <Name>Japanese Yen</Name>\r\n            <Active>true</Active>\r\n        </CompanyCurrency>\r\n        <CompanyCurrency domain="QBO" sparse="false">\r\n            <Id>4</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-06-12T14:16:38-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-06-12T14:16:38-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Code>ANG</Code>\r\n            <Name>Dutch Guilder</Name>\r\n            <Active>true</Active>\r\n        </CompanyCurrency>\r\n        <CompanyCurrency domain="QBO" sparse="false">\r\n            <Id>3</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-06-05T13:59:43-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-06-05T13:59:43-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Code>AUD</Code>\r\n            <Name>Australian Dollar</Name>\r\n            <Active>true</Active>\r\n        </CompanyCurrency>\r\n        <CompanyCurrency domain="QBO" sparse="false">\r\n            <Id>2</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-06-05T13:59:42-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-06-05T13:59:42-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Code>EUR</Code>\r\n            <Name>Euro</Name>\r\n            <Active>true</Active>\r\n        </CompanyCurrency>\r\n        <CompanyCurrency domain="QBO" sparse="false">\r\n            <Id>1</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-06-05T13:59:42-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-06-05T13:59:42-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <Code>CAD</Code>\r\n            <Name>Canadian Dollar</Name>\r\n            <Active>true</Active>\r\n        </CompanyCurrency>\r\n    </QueryResponse>\r\n</IntuitResponse>',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-06T13:32:02.008-07:00">\r\n    <CompanyCurrency domain="QBO" sparse="false">\r\n        <Id>6</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-06T13:32:02-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-06T13:32:02-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Code>USD</Code>\r\n        <Name>United States Dollar</Name>\r\n        <Active>true</Active>\r\n    </CompanyCurrency>\r\n</IntuitResponse>\r\n',
                "Query0-request": '"select * from companycurrency"',
                "Update0-response":
                    '{\n  "CompanyCurrency": {\n    "SyncToken": "1", \n    "domain": "QBO", \n    "Code": "GBP", \n    "Name": "British Pound Sterling", \n    "sparse": false, \n    "Active": false, \n    "Id": "7", \n    "MetaData": {\n      "CreateTime": "2015-07-06T13:34:48-07:00", \n      "LastUpdatedTime": "2015-07-06T14:03:40-07:00"\n    }\n  }, \n  "time": "2015-07-06T14:03:39.891-07:00"\n}',
                "Update0-request-xml":
                    '<CompanyCurrency xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>3</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2015-06-05T13:59:43-07:00</CreateTime>\r\n        <LastUpdatedTime>2015-06-05T13:59:43-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Code>AUD</Code>\r\n    <Name>Australian Dollar</Name>\r\n    <Active>false</Active>\r\n</CompanyCurrency>',
                "Read0-response":
                    '{\n  "CompanyCurrency": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "Code": "EUR", \n    "Name": "Euro", \n    "sparse": false, \n    "Active": true, \n    "Id": "2", \n    "MetaData": {\n      "CreateTime": "2015-06-05T13:59:42-07:00", \n      "LastUpdatedTime": "2015-06-05T13:59:42-07:00"\n    }\n  }, \n  "time": "2015-07-06T13:30:04.123-07:00"\n}',
                "Create0-response":
                    '{\n  "CompanyCurrency": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "Code": "GBP", \n    "Name": "British Pound Sterling", \n    "sparse": false, \n    "Active": true, \n    "Id": "7", \n    "MetaData": {\n      "CreateTime": "2015-07-06T13:34:48-07:00", \n      "LastUpdatedTime": "2015-07-06T13:34:48-07:00"\n    }\n  }, \n  "time": "2015-07-06T13:34:48.569-07:00"\n}',
                "Update0-request":
                    '{\n  "SyncToken": "0", \n  "domain": "QBO", \n  "Code": "GBP", \n  "Name": "British Pound Sterling", \n  "sparse": false, \n  "Active": false, \n  "Id": "7", \n  "MetaData": {\n    "CreateTime": "2015-07-06T13:34:48-07:00", \n    "LastUpdatedTime": "2015-07-06T13:34:48-07:00"\n  }\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-06T13:30:22.930-07:00">\r\n    <CompanyCurrency domain="QBO" sparse="false">\r\n        <Id>2</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-06-05T13:59:42-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-06-05T13:59:42-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <Code>EUR</Code>\r\n        <Name>Euro</Name>\r\n        <Active>true</Active>\r\n    </CompanyCurrency>\r\n</IntuitResponse>',
                "Update0-response-xml":
                    '<CompanyCurrency xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>3</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2015-06-05T13:59:43-07:00</CreateTime>\r\n        <LastUpdatedTime>2015-06-05T14:09:43-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Code>AUD</Code>\r\n    <Name>Australian Dollar</Name>\r\n    <Active>false</Active>\r\n</CompanyCurrency>',
                "Create0-request": '{\n  "Code": "GBP"\n}',
                "Query0-request-xml": "select * from companycurrency",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 5, \n    "CompanyCurrency": [\n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Code": "JPY", \n        "Name": "Japanese Yen", \n        "sparse": false, \n        "Active": true, \n        "Id": "5", \n        "MetaData": {\n          "CreateTime": "2015-06-19T09:20:44-07:00", \n          "LastUpdatedTime": "2015-06-19T09:20:44-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Code": "ANG", \n        "Name": "Dutch Guilder", \n        "sparse": false, \n        "Active": true, \n        "Id": "4", \n        "MetaData": {\n          "CreateTime": "2015-06-12T14:16:38-07:00", \n          "LastUpdatedTime": "2015-06-12T14:16:38-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Code": "AUD", \n        "Name": "Australian Dollar", \n        "sparse": false, \n        "Active": true, \n        "Id": "3", \n        "MetaData": {\n          "CreateTime": "2015-06-05T13:59:43-07:00", \n          "LastUpdatedTime": "2015-06-05T13:59:43-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Code": "EUR", \n        "Name": "Euro", \n        "sparse": false, \n        "Active": true, \n        "Id": "2", \n        "MetaData": {\n          "CreateTime": "2015-06-05T13:59:42-07:00", \n          "LastUpdatedTime": "2015-06-05T13:59:42-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Code": "CAD", \n        "Name": "Canadian Dollar", \n        "sparse": false, \n        "Active": true, \n        "Id": "1", \n        "MetaData": {\n          "CreateTime": "2015-06-05T13:59:42-07:00", \n          "LastUpdatedTime": "2015-06-05T13:59:42-07:00"\n        }\n      }\n    ], \n    "maxResults": 5\n  }, \n  "time": "2015-07-06T13:29:01.560-07:00"\n}',
            },
            Profitandlossdetail: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/ProfitAndLossDetail?start_date=2015-06-01&end_date=2015-06-30&customer=3&columns=tx_date%2Cname%2Csubt_nat_amount"',
                "Query0-response":
                    '{\n  "Header": {\n    "Customer": "3", \n    "ReportName": "ProfitAndLossDetail", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2015-06-01", \n    "Currency": "USD", \n    "EndPeriod": "2015-06-30", \n    "Time": "2016-03-11T14:53:39-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "Ordinary Income/Expenses"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "value": "Income"\n                  }, \n                  {\n                    "value": ""\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "Header": {\n                      "ColData": [\n                        {\n                          "id": "49", \n                          "value": "Landscaping Services"\n                        }, \n                        {\n                          "value": ""\n                        }, \n                        {\n                          "value": ""\n                        }\n                      ]\n                    }, \n                    "Rows": {\n                      "Row": [\n                        {\n                          "Header": {\n                            "ColData": [\n                              {\n                                "value": "Job Materials"\n                              }, \n                              {\n                                "value": ""\n                              }, \n                              {\n                                "value": ""\n                              }\n                            ]\n                          }, \n                          "Rows": {\n                            "Row": [\n                              {\n                                "Header": {\n                                  "ColData": [\n                                    {\n                                      "value": "Plants and Soil"\n                                    }, \n                                    {\n                                      "value": ""\n                                    }, \n                                    {\n                                      "value": ""\n                                    }\n                                  ]\n                                }, \n                                "Rows": {\n                                  "Row": [\n                                    {\n                                      "ColData": [\n                                        {\n                                          "value": "2015-06-27"\n                                        }, \n                                        {\n                                          "id": "3", \n                                          "value": "Cool Cars"\n                                        }, \n                                        {\n                                          "value": "1750.0"\n                                        }\n                                      ], \n                                      "type": "Data"\n                                    }\n                                  ]\n                                }, \n                                "type": "Section", \n                                "Summary": {\n                                  "ColData": [\n                                    {\n                                      "value": "Total for Plants and Soil"\n                                    }, \n                                    {\n                                      "value": ""\n                                    }, \n                                    {\n                                      "value": "1750.0"\n                                    }\n                                  ]\n                                }\n                              }\n                            ]\n                          }, \n                          "type": "Section", \n                          "Summary": {\n                            "ColData": [\n                              {\n                                "value": "Total for Job Materials"\n                              }, \n                              {\n                                "value": ""\n                              }, \n                              {\n                                "value": "1750.0"\n                              }\n                            ]\n                          }\n                        }\n                      ]\n                    }, \n                    "type": "Section", \n                    "Summary": {\n                      "ColData": [\n                        {\n                          "value": "Total for Landscaping Services"\n                        }, \n                        {\n                          "value": ""\n                        }, \n                        {\n                          "value": "1750.0"\n                        }\n                      ]\n                    }\n                  }, \n                  {\n                    "Header": {\n                      "ColData": [\n                        {\n                          "id": "79", \n                          "value": "Sales of Product Income"\n                        }, \n                        {\n                          "value": ""\n                        }, \n                        {\n                          "value": ""\n                        }\n                      ]\n                    }, \n                    "Rows": {\n                      "Row": [\n                        {\n                          "ColData": [\n                            {\n                              "value": "2015-06-27"\n                            }, \n                            {\n                              "id": "3", \n                              "value": "Cool Cars"\n                            }, \n                            {\n                              "value": "20.0"\n                            }\n                          ], \n                          "type": "Data"\n                        }, \n                        {\n                          "ColData": [\n                            {\n                              "value": "2015-06-27"\n                            }, \n                            {\n                              "id": "3", \n                              "value": "Cool Cars"\n                            }, \n                            {\n                              "value": "24.0"\n                            }\n                          ], \n                          "type": "Data"\n                        }\n                      ]\n                    }, \n                    "type": "Section", \n                    "Summary": {\n                      "ColData": [\n                        {\n                          "value": "Total for Sales of Product Income"\n                        }, \n                        {\n                          "value": ""\n                        }, \n                        {\n                          "value": "44.0"\n                        }\n                      ]\n                    }\n                  }, \n                  {\n                    "Header": {\n                      "ColData": [\n                        {\n                          "id": "1", \n                          "value": "Services"\n                        }, \n                        {\n                          "value": ""\n                        }, \n                        {\n                          "value": ""\n                        }\n                      ]\n                    }, \n                    "Rows": {\n                      "Row": [\n                        {\n                          "ColData": [\n                            {\n                              "value": "2015-06-27"\n                            }, \n                            {\n                              "id": "3", \n                              "value": "Cool Cars"\n                            }, \n                            {\n                              "value": "400.0"\n                            }\n                          ], \n                          "type": "Data"\n                        }\n                      ]\n                    }, \n                    "type": "Section", \n                    "Summary": {\n                      "ColData": [\n                        {\n                          "value": "Total for Services"\n                        }, \n                        {\n                          "value": ""\n                        }, \n                        {\n                          "value": "400.0"\n                        }\n                      ]\n                    }\n                  }\n                ]\n              }, \n              "type": "Section", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total for Income"\n                  }, \n                  {\n                    "value": ""\n                  }, \n                  {\n                    "value": "2194.0"\n                  }\n                ]\n              }\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Net Income"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "2194.0"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "tx_date", \n        "ColTitle": "Date"\n      }, \n      {\n        "ColType": "name", \n        "ColTitle": "Name"\n      }, \n      {\n        "ColType": "subt_nat_amount", \n        "ColTitle": "Amount"\n      }\n    ]\n  }\n}',
            },
            Companyinfo: {
                "Update1-request":
                    '{\n  "SyncToken": "3", \n  "CompanyName": "Larry\'s Bakery", \n  "CompanyAddr": {\n    "City": "Mountain View", \n    "Country": "US", \n    "Line1": "2500 Garcia Ave", \n    "PostalCode": "94043", \n    "CountrySubDivisionCode": "CA", \n    "Id": "1"\n  }, \n  "sparse": true, \n  "LegalName": "Larry Smith\'s Bakery", \n  "Id": "1"\n}',
                "Query0-request": '"select * from CompanyInfo\\n"',
                "Update1-request-xml":
                    '<Invoice xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>1</Id>\r\n    <SyncToken>3</SyncToken>\r\n    <CompanyName>Larry\'s Bakery</CompanyName>\r\n    <LegalName>Larry Smith\'s Bakery</LegalName>\r\n    <CompanyAddr>\r\n        <Id>1</Id>\r\n        <Line1>2500 Garcia Ave</Line1>\r\n        <City>Mountain View</City>\r\n        <Country>US</Country>\r\n        <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n        <PostalCode>94043</PostalCode>\r\n    </CompanyAddr>\r\n</Invoice>\r\n',
                "Update0-response":
                    '{\n  "CompanyInfo": {\n    "SyncToken": "4", \n    "domain": "QBO", \n    "LegalAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "SupportedLanguages": "en", \n    "CompanyName": "Larry\'s Bakery", \n    "Country": "US", \n    "CompanyAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "sparse": false, \n    "Id": "1", \n    "WebAddr": {}, \n    "FiscalYearStartMonth": "January", \n    "CustomerCommunicationAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "PrimaryPhone": {\n      "FreeFormNumber": "(650)944-4444"\n    }, \n    "LegalName": "Larry\'s Bakery", \n    "CompanyStartDate": "2015-06-05", \n    "Email": {\n      "Address": "donotreply@intuit.com"\n    }, \n    "NameValue": [\n      {\n        "Name": "NeoEnabled", \n        "Value": "true"\n      }, \n      {\n        "Name": "IndustryType", \n        "Value": "Bread and Bakery Product Manufacturing"\n      }, \n      {\n        "Name": "IndustryCode", \n        "Value": "31181"\n      }, \n      {\n        "Name": "SubscriptionStatus", \n        "Value": "PAID"\n      }, \n      {\n        "Name": "OfferingSku", \n        "Value": "QuickBooks Online Plus"\n      }, \n      {\n        "Name": "PayrollFeature", \n        "Value": "true"\n      }, \n      {\n        "Name": "AccountantFeature", \n        "Value": "false"\n      }\n    ], \n    "MetaData": {\n      "CreateTime": "2015-06-05T13:55:54-07:00", \n      "LastUpdatedTime": "2015-07-06T08:51:50-07:00"\n    }\n  }, \n  "time": "2015-07-10T09:38:58.155-07:00"\n}',
                "Update0-request-xml":
                    '<CompanyInfo xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>1</Id>\r\n    <SyncToken>3</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2015-06-05T13:55:54-07:00</CreateTime>\r\n        <LastUpdatedTime>2015-07-06T08:51:50-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CompanyName>Larry\'s Bakery</CompanyName>\r\n    <LegalName>Larry\'s Bakery</LegalName>\r\n    <CompanyAddr>\r\n        <Id>1</Id>\r\n        <Line1>2500 Garcia Ave</Line1>\r\n        <City>Mountain View</City>\r\n        <Country>US</Country>\r\n        <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n        <PostalCode>94043</PostalCode>\r\n    </CompanyAddr>\r\n    <CustomerCommunicationAddr>\r\n        <Id>1</Id>\r\n        <Line1>2500 Garcia Ave</Line1>\r\n        <City>Mountain View</City>\r\n        <Country>US</Country>\r\n        <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n        <PostalCode>94043</PostalCode>\r\n    </CustomerCommunicationAddr>\r\n    <LegalAddr>\r\n        <Id>1</Id>\r\n        <Line1>2500 Garcia Ave</Line1>\r\n        <City>Mountain View</City>\r\n        <Country>US</Country>\r\n        <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n        <PostalCode>94043</PostalCode>\r\n    </LegalAddr>\r\n    <PrimaryPhone>\r\n        <FreeFormNumber>(650)944-4444</FreeFormNumber>\r\n    </PrimaryPhone>\r\n    <CompanyStartDate>2015-06-05</CompanyStartDate>\r\n    <FiscalYearStartMonth>January</FiscalYearStartMonth>\r\n    <Country>US</Country>\r\n    <Email>\r\n        <Address>donotreply@intuit.com</Address>\r\n    </Email>\r\n    <WebAddr/>\r\n    <SupportedLanguages>en</SupportedLanguages>\r\n    <NameValue>\r\n        <Name>NeoEnabled</Name>\r\n        <Value>true</Value>\r\n    </NameValue>\r\n    <NameValue>\r\n        <Name>IndustryType</Name>\r\n        <Value>Bread and Bakery Product Manufacturing</Value>\r\n    </NameValue>\r\n    <NameValue>\r\n        <Name>IndustryCode</Name>\r\n        <Value>31181</Value>\r\n    </NameValue>\r\n    <NameValue>\r\n        <Name>SubscriptionStatus</Name>\r\n        <Value>PAID</Value>\r\n    </NameValue>\r\n    <NameValue>\r\n        <Name>OfferingSku</Name>\r\n        <Value>QuickBooks Online Plus</Value>\r\n    </NameValue>\r\n    <NameValue>\r\n        <Name>PayrollFeature</Name>\r\n        <Value>true</Value>\r\n    </NameValue>\r\n    <NameValue>\r\n        <Name>AccountantFeature</Name>\r\n        <Value>false</Value>\r\n    </NameValue>\r\n</CompanyInfo>\r\n',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-10T11:59:43.740-07:00">\r\n    <QueryResponse maxResults="1">\r\n        <CompanyInfo domain="QBO" sparse="false">\r\n            <Id>1</Id>\r\n            <SyncToken>3</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-06-05T13:55:54-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-06T08:51:50-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <CompanyName>Larry\'s Bakery</CompanyName>\r\n            <LegalName>Larry\'s Bakery</LegalName>\r\n            <CompanyAddr>\r\n                <Id>1</Id>\r\n                <Line1>2500 Garcia Ave</Line1>\r\n                <City>Mountain View</City>\r\n                <Country>US</Country>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94043</PostalCode>\r\n            </CompanyAddr>\r\n            <CustomerCommunicationAddr>\r\n                <Id>1</Id>\r\n                <Line1>2500 Garcia Ave</Line1>\r\n                <City>Mountain View</City>\r\n                <Country>US</Country>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94043</PostalCode>\r\n            </CustomerCommunicationAddr>\r\n            <LegalAddr>\r\n                <Id>1</Id>\r\n                <Line1>2500 Garcia Ave</Line1>\r\n                <City>Mountain View</City>\r\n                <Country>US</Country>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94043</PostalCode>\r\n            </LegalAddr>\r\n            <PrimaryPhone>\r\n                <FreeFormNumber>(650)944-4444</FreeFormNumber>\r\n            </PrimaryPhone>\r\n            <CompanyStartDate>2015-06-05</CompanyStartDate>\r\n            <FiscalYearStartMonth>January</FiscalYearStartMonth>\r\n            <Country>US</Country>\r\n            <Email>\r\n                <Address>donotreply@intuit.com</Address>\r\n            </Email>\r\n            <WebAddr/>\r\n            <SupportedLanguages>en</SupportedLanguages>\r\n            <NameValue>\r\n                <Name>NeoEnabled</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>IndustryType</Name>\r\n                <Value>Bread and Bakery Product Manufacturing</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>IndustryCode</Name>\r\n                <Value>31181</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>SubscriptionStatus</Name>\r\n                <Value>PAID</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>OfferingSku</Name>\r\n                <Value>QuickBooks Online Plus</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>PayrollFeature</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>AccountantFeature</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n        </CompanyInfo>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Update0-request":
                    '{\n  "SyncToken": "3", \n  "domain": "QBO", \n  "LegalAddr": {\n    "City": "Mountain View", \n    "Country": "US", \n    "Line1": "2500 Garcia Ave", \n    "PostalCode": "94043", \n    "CountrySubDivisionCode": "CA", \n    "Id": "1"\n  }, \n  "SupportedLanguages": "en", \n  "CompanyName": "Larry\'s Bakery", \n  "Country": "US", \n  "CompanyAddr": {\n    "City": "Mountain View", \n    "Country": "US", \n    "Line1": "2500 Garcia Ave", \n    "PostalCode": "94043", \n    "CountrySubDivisionCode": "CA", \n    "Id": "1"\n  }, \n  "sparse": false, \n  "Id": "1", \n  "WebAddr": {}, \n  "FiscalYearStartMonth": "January", \n  "CustomerCommunicationAddr": {\n    "City": "Mountain View", \n    "Country": "US", \n    "Line1": "2500 Garcia Ave", \n    "PostalCode": "94043", \n    "CountrySubDivisionCode": "CA", \n    "Id": "1"\n  }, \n  "PrimaryPhone": {\n    "FreeFormNumber": "(650)944-4444"\n  }, \n  "LegalName": "Larry\'s Bakery", \n  "CompanyStartDate": "2015-06-05", \n  "Email": {\n    "Address": "donotreply@intuit.com"\n  }, \n  "NameValue": [\n    {\n      "Name": "NeoEnabled", \n      "Value": "true"\n    }, \n    {\n      "Name": "IndustryType", \n      "Value": "Bread and Bakery Product Manufacturing"\n    }, \n    {\n      "Name": "IndustryCode", \n      "Value": "31181"\n    }, \n    {\n      "Name": "SubscriptionStatus", \n      "Value": "PAID"\n    }, \n    {\n      "Name": "OfferingSku", \n      "Value": "QuickBooks Online Plus"\n    }, \n    {\n      "Name": "PayrollFeature", \n      "Value": "true"\n    }, \n    {\n      "Name": "AccountantFeature", \n      "Value": "false"\n    }\n  ], \n  "MetaData": {\n    "CreateTime": "2015-06-05T13:55:54-07:00", \n    "LastUpdatedTime": "2015-07-06T08:51:50-07:00"\n  }\n}',
                "Update1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-10T08:30:02.829-07:00">\r\n    <CompanyInfo domain="QBO" sparse="false">\r\n        <Id>1</Id>\r\n        <SyncToken>4</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-06-05T13:55:54-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-06T08:51:50-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CompanyName>Larry\'s Bakery</CompanyName>\r\n        <LegalName>Larry Smith\'s Bakery</LegalName>\r\n        <CompanyAddr>\r\n            <Id>1</Id>\r\n            <Line1>2500 Garcia Ave</Line1>\r\n            <City>Mountain View</City>\r\n            <Country>US</Country>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94043</PostalCode>\r\n        </CompanyAddr>\r\n        <CustomerCommunicationAddr>\r\n            <Id>1</Id>\r\n            <Line1>2500 Garcia Ave</Line1>\r\n            <City>Mountain View</City>\r\n            <Country>US</Country>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94043</PostalCode>\r\n        </CustomerCommunicationAddr>\r\n        <LegalAddr>\r\n            <Id>1</Id>\r\n            <Line1>2500 Garcia Ave</Line1>\r\n            <City>Mountain View</City>\r\n            <Country>US</Country>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94043</PostalCode>\r\n        </LegalAddr>\r\n        <PrimaryPhone>\r\n            <FreeFormNumber>(650)944-4444</FreeFormNumber>\r\n        </PrimaryPhone>\r\n        <CompanyStartDate>2015-06-05</CompanyStartDate>\r\n        <FiscalYearStartMonth>January</FiscalYearStartMonth>\r\n        <Country>US</Country>\r\n        <Email>\r\n            <Address>donotreply@intuit.com</Address>\r\n        </Email>\r\n        <WebAddr/>\r\n        <SupportedLanguages>en</SupportedLanguages>\r\n        <NameValue>\r\n            <Name>NeoEnabled</Name>\r\n            <Value>true</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>IndustryType</Name>\r\n            <Value>Bread and Bakery Product Manufacturing</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>IndustryCode</Name>\r\n            <Value>31181</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>SubscriptionStatus</Name>\r\n            <Value>PAID</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>OfferingSku</Name>\r\n            <Value>QuickBooks Online Plus</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>PayrollFeature</Name>\r\n            <Value>true</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>AccountantFeature</Name>\r\n            <Value>false</Value>\r\n        </NameValue>\r\n    </CompanyInfo>\r\n</IntuitResponse>\r\n',
                "Read0-response":
                    '{\n  "CompanyInfo": {\n    "SyncToken": "4", \n    "domain": "QBO", \n    "LegalAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "SupportedLanguages": "en", \n    "CompanyName": "Larry\'s Bakery", \n    "Country": "US", \n    "CompanyAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "sparse": false, \n    "Id": "1", \n    "WebAddr": {}, \n    "FiscalYearStartMonth": "January", \n    "CustomerCommunicationAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "PrimaryPhone": {\n      "FreeFormNumber": "(650)944-4444"\n    }, \n    "LegalName": "Larry\'s Bakery", \n    "CompanyStartDate": "2015-06-05", \n    "Email": {\n      "Address": "donotreply@intuit.com"\n    }, \n    "NameValue": [\n      {\n        "Name": "NeoEnabled", \n        "Value": "true"\n      }, \n      {\n        "Name": "IndustryType", \n        "Value": "Bread and Bakery Product Manufacturing"\n      }, \n      {\n        "Name": "IndustryCode", \n        "Value": "31181"\n      }, \n      {\n        "Name": "SubscriptionStatus", \n        "Value": "PAID"\n      }, \n      {\n        "Name": "OfferingSku", \n        "Value": "QuickBooks Online Plus"\n      }, \n      {\n        "Name": "PayrollFeature", \n        "Value": "true"\n      }, \n      {\n        "Name": "AccountantFeature", \n        "Value": "false"\n      }\n    ], \n    "MetaData": {\n      "CreateTime": "2015-06-05T13:55:54-07:00", \n      "LastUpdatedTime": "2015-07-06T08:51:50-07:00"\n    }\n  }, \n  "time": "2015-07-10T09:38:58.155-07:00"\n}',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-10T08:30:02.829-07:00">\r\n    <CompanyInfo domain="QBO" sparse="false">\r\n        <Id>1</Id>\r\n        <SyncToken>4</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-06-05T13:55:54-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-06T08:51:50-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CompanyName>Larry\'s Bakery</CompanyName>\r\n        <LegalName>Larry\'s Bakery</LegalName>\r\n        <CompanyAddr>\r\n            <Id>1</Id>\r\n            <Line1>2500 Garcia Ave</Line1>\r\n            <City>Mountain View</City>\r\n            <Country>US</Country>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94043</PostalCode>\r\n        </CompanyAddr>\r\n        <CustomerCommunicationAddr>\r\n            <Id>1</Id>\r\n            <Line1>2500 Garcia Ave</Line1>\r\n            <City>Mountain View</City>\r\n            <Country>US</Country>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94043</PostalCode>\r\n        </CustomerCommunicationAddr>\r\n        <LegalAddr>\r\n            <Id>1</Id>\r\n            <Line1>2500 Garcia Ave</Line1>\r\n            <City>Mountain View</City>\r\n            <Country>US</Country>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94043</PostalCode>\r\n        </LegalAddr>\r\n        <PrimaryPhone>\r\n            <FreeFormNumber>(650)944-4444</FreeFormNumber>\r\n        </PrimaryPhone>\r\n        <CompanyStartDate>2015-06-05</CompanyStartDate>\r\n        <FiscalYearStartMonth>January</FiscalYearStartMonth>\r\n        <Country>US</Country>\r\n        <Email>\r\n            <Address>donotreply@intuit.com</Address>\r\n        </Email>\r\n        <WebAddr/>\r\n        <SupportedLanguages>en</SupportedLanguages>\r\n        <NameValue>\r\n            <Name>NeoEnabled</Name>\r\n            <Value>true</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>IndustryType</Name>\r\n            <Value>Bread and Bakery Product Manufacturing</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>IndustryCode</Name>\r\n            <Value>31181</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>SubscriptionStatus</Name>\r\n            <Value>PAID</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>OfferingSku</Name>\r\n            <Value>QuickBooks Online Plus</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>PayrollFeature</Name>\r\n            <Value>true</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n            <Name>AccountantFeature</Name>\r\n            <Value>false</Value>\r\n        </NameValue>\r\n    </CompanyInfo>\r\n</IntuitResponse>\r\n',
                "Query0-response":
                    '{\n  "CompanyInfo": {\n    "SyncToken": "4", \n    "domain": "QBO", \n    "LegalAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "SupportedLanguages": "en", \n    "CompanyName": "Larry\'s Bakery", \n    "Country": "US", \n    "CompanyAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "sparse": false, \n    "Id": "1", \n    "WebAddr": {}, \n    "FiscalYearStartMonth": "January", \n    "CustomerCommunicationAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "PrimaryPhone": {\n      "FreeFormNumber": "(650)944-4444"\n    }, \n    "LegalName": "Larry\'s Bakery", \n    "CompanyStartDate": "2015-06-05", \n    "Email": {\n      "Address": "donotreply@intuit.com"\n    }, \n    "NameValue": [\n      {\n        "Name": "NeoEnabled", \n        "Value": "true"\n      }, \n      {\n        "Name": "IndustryType", \n        "Value": "Bread and Bakery Product Manufacturing"\n      }, \n      {\n        "Name": "IndustryCode", \n        "Value": "31181"\n      }, \n      {\n        "Name": "SubscriptionStatus", \n        "Value": "PAID"\n      }, \n      {\n        "Name": "OfferingSku", \n        "Value": "QuickBooks Online Plus"\n      }, \n      {\n        "Name": "PayrollFeature", \n        "Value": "true"\n      }, \n      {\n        "Name": "AccountantFeature", \n        "Value": "false"\n      }\n    ], \n    "MetaData": {\n      "CreateTime": "2015-06-05T13:55:54-07:00", \n      "LastUpdatedTime": "2015-07-06T08:51:50-07:00"\n    }\n  }, \n  "time": "2015-07-10T09:38:58.155-07:00"\n}',
                "Update1-response":
                    '{\n  "CompanyInfo": {\n    "SyncToken": "4", \n    "domain": "QBO", \n    "LegalAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "SupportedLanguages": "en", \n    "CompanyName": "Larry\'s Bakery", \n    "Country": "US", \n    "CompanyAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "sparse": false, \n    "Id": "1", \n    "WebAddr": {}, \n    "FiscalYearStartMonth": "January", \n    "CustomerCommunicationAddr": {\n      "City": "Mountain View", \n      "Country": "US", \n      "Line1": "2500 Garcia Ave", \n      "PostalCode": "94043", \n      "CountrySubDivisionCode": "CA", \n      "Id": "1"\n    }, \n    "PrimaryPhone": {\n      "FreeFormNumber": "(650)944-4444"\n    }, \n    "LegalName": "Larry Smith\'s Bakery", \n    "CompanyStartDate": "2015-06-05", \n    "Email": {\n      "Address": "donotreply@intuit.com"\n    }, \n    "NameValue": [\n      {\n        "Name": "NeoEnabled", \n        "Value": "true"\n      }, \n      {\n        "Name": "IndustryType", \n        "Value": "Bread and Bakery Product Manufacturing"\n      }, \n      {\n        "Name": "IndustryCode", \n        "Value": "31181"\n      }, \n      {\n        "Name": "SubscriptionStatus", \n        "Value": "PAID"\n      }, \n      {\n        "Name": "OfferingSku", \n        "Value": "QuickBooks Online Plus"\n      }, \n      {\n        "Name": "PayrollFeature", \n        "Value": "true"\n      }, \n      {\n        "Name": "AccountantFeature", \n        "Value": "false"\n      }\n    ], \n    "MetaData": {\n      "CreateTime": "2015-06-05T13:55:54-07:00", \n      "LastUpdatedTime": "2015-07-06T08:51:50-07:00"\n    }\n  }, \n  "time": "2015-07-10T09:38:58.155-07:00"\n}',
                "Query0-request-xml": "select * from CompanyInfo\n",
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-10T11:59:43.740-07:00">\r\n    <QueryResponse maxResults="1">\r\n        <CompanyInfo domain="QBO" sparse="false">\r\n            <Id>1</Id>\r\n            <SyncToken>3</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-06-05T13:55:54-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-06T08:51:50-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <CompanyName>Larry\'s Bakery</CompanyName>\r\n            <LegalName>Larry\'s Bakery</LegalName>\r\n            <CompanyAddr>\r\n                <Id>1</Id>\r\n                <Line1>2500 Garcia Ave</Line1>\r\n                <City>Mountain View</City>\r\n                <Country>US</Country>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94043</PostalCode>\r\n            </CompanyAddr>\r\n            <CustomerCommunicationAddr>\r\n                <Id>1</Id>\r\n                <Line1>2500 Garcia Ave</Line1>\r\n                <City>Mountain View</City>\r\n                <Country>US</Country>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94043</PostalCode>\r\n            </CustomerCommunicationAddr>\r\n            <LegalAddr>\r\n                <Id>1</Id>\r\n                <Line1>2500 Garcia Ave</Line1>\r\n                <City>Mountain View</City>\r\n                <Country>US</Country>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94043</PostalCode>\r\n            </LegalAddr>\r\n            <PrimaryPhone>\r\n                <FreeFormNumber>(650)944-4444</FreeFormNumber>\r\n            </PrimaryPhone>\r\n            <CompanyStartDate>2015-06-05</CompanyStartDate>\r\n            <FiscalYearStartMonth>January</FiscalYearStartMonth>\r\n            <Country>US</Country>\r\n            <Email>\r\n                <Address>donotreply@intuit.com</Address>\r\n            </Email>\r\n            <WebAddr/>\r\n            <SupportedLanguages>en</SupportedLanguages>\r\n            <NameValue>\r\n                <Name>NeoEnabled</Name>\r\n                <Value>true</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>IndustryType</Name>\r\n                <Value>Bread and Bakery Product Manufacturing</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>IndustryCode</Name>\r\n                <Value>31181</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>SubscriptionStatus</Name>\r\n                <Value>PAID</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>OfferingSku</Name>\r\n                <Value>QuickBooks Online Plus</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>PayrollFeature</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n            <NameValue>\r\n                <Name>AccountantFeature</Name>\r\n                <Value>false</Value>\r\n            </NameValue>\r\n        </CompanyInfo>\r\n    </QueryResponse>\r\n</IntuitResponse>',
            },
            Inventoryvaluationsummary: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/InventoryValuationSummary?date_macro=This Fiscal Year-to-date"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "InventoryValuationSummary", \n    "Option": [\n      {\n        "Name": "report_date", \n        "Value": "2016-10-06"\n      }, \n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "today", \n    "StartPeriod": "2016-10-06", \n    "Currency": "USD", \n    "EndPeriod": "2016-10-06", \n    "Time": "2016-10-06T09:28:21-07:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "id": "11", \n            "value": "Pump"\n          }, \n          {\n            "value": "2890"\n          }, \n          {\n            "value": "25.00"\n          }, \n          {\n            "value": "250.00"\n          }, \n          {\n            "value": "10.00"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "5", \n            "value": "Rock Fountain"\n          }, \n          {\n            "value": "2345"\n          }, \n          {\n            "value": "2.00"\n          }, \n          {\n            "value": "250.00"\n          }, \n          {\n            "value": "125.00"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "16", \n            "value": "Sprinkler Heads"\n          }, \n          {\n            "value": "3456"\n          }, \n          {\n            "value": "25.00"\n          }, \n          {\n            "value": "18.75"\n          }, \n          {\n            "value": "0.75"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "17", \n            "value": "Sprinkler Pipes"\n          }, \n          {\n            "value": "5678"\n          }, \n          {\n            "value": "31.00"\n          }, \n          {\n            "value": "77.50"\n          }, \n          {\n            "value": "2.50"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "value": "TOTAL"\n          }, \n          {\n            "value": " "\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "596.25"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "group": "GrandTotal"\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "ProductsAndService", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "SKU"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Qty"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Asset Value"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Avg Cost"\n      }\n    ]\n  }\n}',
            },
            Vendorcredit: {
                "Delete0-request": '{\n  "SyncToken": "0", \n  "Id": "13"\n}',
                "Delete0-response":
                    '{\n  "VendorCredit": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "13"\n  }, \n  "time": "2015-05-27T10:42:58.468-07:00"\n}',
                "Create0-request-xml":
                    '<VendorCredit xmlns="http://schema.intuit.com/finance/v3">\r\n    <TxnDate>2014-12-23</TxnDate>\r\n    <Line>\r\n        <Id>1</Id>\r\n        <Amount>90.00</Amount>\r\n        <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n        <AccountBasedExpenseLineDetail>\r\n            <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n            <AccountRef name="Bank Charges">8</AccountRef>\r\n            <BillableStatus>Billable</BillableStatus>\r\n            <TaxCodeRef>TAX</TaxCodeRef>\r\n        </AccountBasedExpenseLineDetail>\r\n    </Line>\r\n    <VendorRef name="Books by Bessie">30</VendorRef>\r\n    <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n    <TotalAmt>90.00</TotalAmt>\r\n</VendorCredit>',
                "Delete0-request-xml":
                    '<VendorCredit xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>3</Id>\r\n    <SyncToken>0</SyncToken>\r\n</VendorCredit>',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-23T11:11:55.332-08:00">\r\n  <VendorCredit domain="QBO" sparse="false">\r\n    <Id>155</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-12-23T11:11:55-08:00</CreateTime>\r\n      <LastUpdatedTime>2014-12-23T11:11:55-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2014-12-23</TxnDate>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <Amount>90.00</Amount>\r\n      <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n      <AccountBasedExpenseLineDetail>\r\n        <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n        <AccountRef name="Bank Charges">8</AccountRef>\r\n        <BillableStatus>Billable</BillableStatus>\r\n        <TaxCodeRef>TAX</TaxCodeRef>\r\n      </AccountBasedExpenseLineDetail>\r\n    </Line>\r\n    <VendorRef name="Books by Bessie">30</VendorRef>\r\n    <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n    <TotalAmt>90.00</TotalAmt>\r\n  </VendorCredit>\r\n</IntuitResponse>',
                "Query0-request": '"select * from vendorcredit"',
                "Update0-response":
                    '{\n  "VendorCredit": {\n    "SyncToken": "2", \n    "domain": "QBO", \n    "VendorRef": {\n      "name": "Books by Bessie", \n      "value": "30"\n    }, \n    "TxnDate": "2014-12-23", \n    "TotalAmt": 140.0, \n    "APAccountRef": {\n      "name": "Accounts Payable (A/P)", \n      "value": "33"\n    }, \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "AccountBasedExpenseLineDetail", \n        "Amount": 140.0, \n        "Id": "1", \n        "AccountBasedExpenseLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "AccountRef": {\n            "name": "Bank Charges", \n            "value": "8"\n          }, \n          "BillableStatus": "Billable", \n          "CustomerRef": {\n            "name": "Amy\'s Bird Sanctuary", \n            "value": "1"\n          }\n        }\n      }\n    ], \n    "Id": "255", \n    "MetaData": {\n      "CreateTime": "2015-07-28T14:13:30-07:00", \n      "LastUpdatedTime": "2015-07-28T14:23:50-07:00"\n    }\n  }, \n  "time": "2015-07-28T14:23:52.196-07:00"\n}',
                "Update0-request-xml":
                    '<VendorCredit xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n        <Id>255</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-28T14:13:30-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-28T14:13:30-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2014-12-23</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Amount>120.00</Amount>\r\n            <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n            <AccountBasedExpenseLineDetail>\r\n                <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n                <AccountRef name="Bank Charges">8</AccountRef>\r\n                <BillableStatus>Billable</BillableStatus>\r\n                <TaxCodeRef>TAX</TaxCodeRef>\r\n            </AccountBasedExpenseLineDetail>\r\n        </Line>\r\n        <VendorRef name="Books by Bessie">30</VendorRef>\r\n        <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n        <TotalAmt>120.00</TotalAmt>\r\n</VendorCredit>',
                "Read0-response":
                    '{\n  "VendorCredit": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "VendorRef": {\n      "name": "Books by Bessie", \n      "value": "30"\n    }, \n    "TxnDate": "2014-12-23", \n    "TotalAmt": 90.0, \n    "APAccountRef": {\n      "name": "Accounts Payable (A/P)", \n      "value": "33"\n    }, \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "AccountBasedExpenseLineDetail", \n        "Amount": 90.0, \n        "Id": "1", \n        "AccountBasedExpenseLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "AccountRef": {\n            "name": "Bank Charges", \n            "value": "8"\n          }, \n          "BillableStatus": "Billable", \n          "CustomerRef": {\n            "name": "Amy\'s Bird Sanctuary", \n            "value": "1"\n          }\n        }\n      }\n    ], \n    "Id": "255", \n    "MetaData": {\n      "CreateTime": "2015-07-28T14:13:30-07:00", \n      "LastUpdatedTime": "2015-07-28T14:13:30-07:00"\n    }\n  }, \n  "time": "2015-07-28T14:16:42.709-07:00"\n}',
                "Create0-response":
                    '{\n  "VendorCredit": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "VendorRef": {\n      "name": "Books by Bessie", \n      "value": "30"\n    }, \n    "TxnDate": "2014-12-23", \n    "TotalAmt": 90.0, \n    "APAccountRef": {\n      "name": "Accounts Payable (A/P)", \n      "value": "33"\n    }, \n    "sparse": false, \n    "Line": [\n      {\n        "DetailType": "AccountBasedExpenseLineDetail", \n        "Amount": 90.0, \n        "Id": "1", \n        "AccountBasedExpenseLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "AccountRef": {\n            "name": "Bank Charges", \n            "value": "8"\n          }, \n          "BillableStatus": "Billable", \n          "CustomerRef": {\n            "name": "Amy\'s Bird Sanctuary", \n            "value": "1"\n          }\n        }\n      }\n    ], \n    "Id": "157", \n    "MetaData": {\n      "CreateTime": "2014-12-23T11:14:15-08:00", \n      "LastUpdatedTime": "2014-12-23T11:14:15-08:00"\n    }\n  }, \n  "time": "2014-12-23T11:14:15.462-08:00"\n}',
                "Update0-request":
                    '{\n  "SyncToken": "1", \n  "domain": "QBO", \n  "VendorRef": {\n    "name": "Books by Bessie", \n    "value": "30"\n  }, \n  "TxnDate": "2014-12-23", \n  "TotalAmt": 140.0, \n  "APAccountRef": {\n    "name": "Accounts Payable (A/P)", \n    "value": "33"\n  }, \n  "sparse": false, \n  "Line": [\n    {\n      "DetailType": "AccountBasedExpenseLineDetail", \n      "Amount": 140.0, \n      "Id": "1", \n      "AccountBasedExpenseLineDetail": {\n        "TaxCodeRef": {\n          "value": "TAX"\n        }, \n        "AccountRef": {\n          "name": "Bank Charges", \n          "value": "8"\n        }, \n        "BillableStatus": "Billable", \n        "CustomerRef": {\n          "name": "Amy\'s Bird Sanctuary", \n          "value": "1"\n        }\n      }\n    }\n  ], \n  "Id": "255", \n  "MetaData": {\n    "CreateTime": "2015-07-28T14:13:30-07:00", \n    "LastUpdatedTime": "2015-07-28T14:22:05-07:00"\n  }\n}',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T14:16:22.952-07:00">\r\n    <VendorCredit domain="QBO" sparse="false">\r\n        <Id>255</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-28T14:13:30-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-28T14:13:30-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2014-12-23</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <Amount>90.00</Amount>\r\n            <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n            <AccountBasedExpenseLineDetail>\r\n                <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n                <AccountRef name="Bank Charges">8</AccountRef>\r\n                <BillableStatus>Billable</BillableStatus>\r\n                <TaxCodeRef>TAX</TaxCodeRef>\r\n            </AccountBasedExpenseLineDetail>\r\n        </Line>\r\n        <VendorRef name="Books by Bessie">30</VendorRef>\r\n        <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n        <TotalAmt>90.00</TotalAmt>\r\n    </VendorCredit>\r\n</IntuitResponse>\r\n',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T14:22:06.635-07:00">\r\n  <VendorCredit domain="QBO" sparse="false">\r\n    <Id>255</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-07-28T14:13:30-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-07-28T14:22:05-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2014-12-23</TxnDate>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <Amount>120.00</Amount>\r\n      <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n      <AccountBasedExpenseLineDetail>\r\n        <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n        <AccountRef name="Bank Charges">8</AccountRef>\r\n        <BillableStatus>Billable</BillableStatus>\r\n        <TaxCodeRef>TAX</TaxCodeRef>\r\n      </AccountBasedExpenseLineDetail>\r\n    </Line>\r\n    <VendorRef name="Books by Bessie">30</VendorRef>\r\n    <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n    <TotalAmt>120.00</TotalAmt>\r\n  </VendorCredit>\r\n</IntuitResponse>',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-05-27T10:42:58.468-07:00">\r\n    <VendorCredit domain="QBO" status="Deleted">\r\n        <Id>3</Id>\r\n    </VendorCredit>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "TotalAmt": 90.0, \n  "TxnDate": "2014-12-23", \n  "Line": [\n    {\n      "DetailType": "AccountBasedExpenseLineDetail", \n      "Amount": 90.0, \n      "Id": "1", \n      "AccountBasedExpenseLineDetail": {\n        "TaxCodeRef": {\n          "value": "TAX"\n        }, \n        "AccountRef": {\n          "name": "Bank Charges", \n          "value": "8"\n        }, \n        "BillableStatus": "Billable", \n        "CustomerRef": {\n          "name": "Amy\'s Bird Sanctuary", \n          "value": "1"\n        }\n      }\n    }\n  ], \n  "APAccountRef": {\n    "name": "Accounts Payable (A/P)", \n    "value": "33"\n  }, \n  "VendorRef": {\n    "name": "Books by Bessie", \n    "value": "30"\n  }\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T14:14:00.506-07:00">\r\n    <QueryResponse startPosition="1" maxResults="2" totalCount="2">\r\n        <VendorCredit domain="QBO" sparse="false">\r\n            <Id>255</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-07-28T14:13:30-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-28T14:13:30-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-12-23</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Amount>90.00</Amount>\r\n                <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                <AccountBasedExpenseLineDetail>\r\n                    <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n                    <AccountRef name="Bank Charges">8</AccountRef>\r\n                    <BillableStatus>Billable</BillableStatus>\r\n                    <TaxCodeRef>TAX</TaxCodeRef>\r\n                </AccountBasedExpenseLineDetail>\r\n            </Line>\r\n            <VendorRef name="Books by Bessie">30</VendorRef>\r\n            <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n            <TotalAmt>90.00</TotalAmt>\r\n        </VendorCredit>\r\n        <VendorCredit domain="QBO" sparse="false">\r\n            <Id>253</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-07-28T14:13:08-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-28T14:13:08-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <TxnDate>2014-12-23</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <Amount>90.00</Amount>\r\n                <DetailType>AccountBasedExpenseLineDetail</DetailType>\r\n                <AccountBasedExpenseLineDetail>\r\n                    <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n                    <AccountRef name="Bank Charges">8</AccountRef>\r\n                    <BillableStatus>Billable</BillableStatus>\r\n                    <TaxCodeRef>TAX</TaxCodeRef>\r\n                </AccountBasedExpenseLineDetail>\r\n            </Line>\r\n            <VendorRef name="Books by Bessie">30</VendorRef>\r\n            <APAccountRef name="Accounts Payable (A/P)">33</APAccountRef>\r\n            <TotalAmt>90.00</TotalAmt>\r\n        </VendorCredit>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Query0-request-xml": "select * from VendorCredit",
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 2, \n    "VendorCredit": [\n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Books by Bessie", \n          "value": "30"\n        }, \n        "TxnDate": "2014-12-23", \n        "TotalAmt": 90.0, \n        "APAccountRef": {\n          "name": "Accounts Payable (A/P)", \n          "value": "33"\n        }, \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "AccountBasedExpenseLineDetail", \n            "Amount": 90.0, \n            "Id": "1", \n            "AccountBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "TAX"\n              }, \n              "AccountRef": {\n                "name": "Bank Charges", \n                "value": "8"\n              }, \n              "BillableStatus": "Billable", \n              "CustomerRef": {\n                "name": "Amy\'s Bird Sanctuary", \n                "value": "1"\n              }\n            }\n          }\n        ], \n        "Id": "255", \n        "MetaData": {\n          "CreateTime": "2015-07-28T14:13:30-07:00", \n          "LastUpdatedTime": "2015-07-28T14:13:30-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "VendorRef": {\n          "name": "Books by Bessie", \n          "value": "30"\n        }, \n        "TxnDate": "2014-12-23", \n        "TotalAmt": 90.0, \n        "APAccountRef": {\n          "name": "Accounts Payable (A/P)", \n          "value": "33"\n        }, \n        "sparse": false, \n        "Line": [\n          {\n            "DetailType": "AccountBasedExpenseLineDetail", \n            "Amount": 90.0, \n            "Id": "1", \n            "AccountBasedExpenseLineDetail": {\n              "TaxCodeRef": {\n                "value": "TAX"\n              }, \n              "AccountRef": {\n                "name": "Bank Charges", \n                "value": "8"\n              }, \n              "BillableStatus": "Billable", \n              "CustomerRef": {\n                "name": "Amy\'s Bird Sanctuary", \n                "value": "1"\n              }\n            }\n          }\n        ], \n        "Id": "253", \n        "MetaData": {\n          "CreateTime": "2015-07-28T14:13:08-07:00", \n          "LastUpdatedTime": "2015-07-28T14:13:08-07:00"\n        }\n      }\n    ], \n    "maxResults": 2\n  }, \n  "time": "2015-07-28T14:14:36.327-07:00"\n}',
            },
            Salesbyclasssummary: {
                "Query0-request": '"BaseURL/v3/company/1386066315/reports/ClassSales"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "ClassSales", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "true"\n      }\n    ], \n    "DateMacro": "this month-to-date", \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2015-05-01", \n    "Currency": "USD", \n    "EndPeriod": "2015-05-28", \n    "Time": "2015-05-28T09:30:49-07:00", \n    "SummarizeColumnsBy": "Total"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "Class-1"\n            }, \n            {\n              "value": "90.00"\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "value": "Class-2"\n                }, \n                {\n                  "value": "210.00"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section", \n        "group": "200200000000000002286", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total Class-1"\n            }, \n            {\n              "value": "300.00"\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Class-3"\n          }, \n          {\n            "value": "2090.00"\n          }\n        ], \n        "group": "200200000000000002288"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Not Specified"\n          }, \n          {\n            "value": "14699.00"\n          }\n        ], \n        "group": "**"\n      }, \n      {\n        "group": "GrandTotal", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": "17089.00"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Class", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total"\n      }\n    ]\n  }\n}',
            },
            Taxclassification: {
                "Read2-request": '""',
                "Read2-response":
                    '{\n  "QueryResponse": {\n    "TaxClassification": [\n      {\n        "applicableTo": [\n          "Inventory", \n          "Noninventory"\n        ], \n        "code": "EUC-01010101", \n        "description": "Custom software (developed especially for purchaser) - Licensed (not sold), and delivered on a tangible format, such as on a CD or DVD.", \n        "level": "2", \n        "ParentRef": {\n          "name": "Professional Services", \n          "value": "V1-00100000"\n        }, \n        "id": "EUC-01010101-V1-00100000", \n        "name": "Tangible, custom software"\n      }, \n      {\n        "applicableTo": [\n          "Inventory", \n          "Noninventory"\n        ], \n        "code": "EUC-01010201", \n        "description": "Canned software (off-the-shelf) - Licensed (not sold) which is delivered in a tangible format, such as on a CD or DVD.", \n        "level": "2", \n        "ParentRef": {\n          "name": "Professional Services", \n          "value": "V1-00100000"\n        }, \n        "id": "EUC-01010201-V1-00100000", \n        "name": "Tangible, canned software"\n      }\n    ]\n  }\n}',
                "Read1-response":
                    '{\n  "QueryResponse": {\n    "TaxClassification": [\n      {\n        "applicableTo": [\n          "Inventory", \n          "Noninventory"\n        ], \n        "code": "EUC-01010101", \n        "description": "Custom software (developed especially for purchaser) - Licensed (not sold), and delivered on a tangible format, such as on a CD or DVD.", \n        "level": "2", \n        "ParentRef": {\n          "name": "Professional Services", \n          "value": "V1-00100000"\n        }, \n        "id": "EUC-01010101-V1-00100000", \n        "name": "Tangible, custom software"\n      }, \n      {\n        "applicableTo": [\n          "Inventory", \n          "Noninventory"\n        ], \n        "code": "EUC-01010201", \n        "description": "Canned software (off-the-shelf) - Licensed (not sold) which is delivered in a tangible format, such as on a CD or DVD.", \n        "level": "2", \n        "ParentRef": {\n          "name": "Professional Services", \n          "value": "V1-00100000"\n        }, \n        "id": "EUC-01010201-V1-00100000", \n        "name": "Tangible, canned software"\n      }\n    ]\n  }\n}',
                "Read0-response":
                    '{\n  "TaxClassification": {\n    "applicableTo": [\n      "Inventory", \n      "Noninventory"\n    ], \n    "code": "EUC-01010101", \n    "description": "Custom software (developed especially for purchaser) - Licensed (not sold), and delivered on a tangible format, such as on a CD or DVD.", \n    "level": "2", \n    "ParentRef": {\n      "name": "Professional Services", \n      "value": "V1-00100000"\n    }, \n    "id": "EUC-01010101-V1-00100000", \n    "name": "Tangible, custom software"\n  }\n}',
                "Read3-response":
                    '{\n  "QueryResponse": {\n    "TaxClassification": [\n      {\n        "applicableTo": [\n          "Inventory", \n          "Noninventory"\n        ], \n        "code": "EUC-01010101", \n        "description": "Custom software (developed especially for purchaser) - Licensed (not sold), and delivered on a tangible format, such as on a CD or DVD.", \n        "level": "2", \n        "ParentRef": {\n          "name": "Professional Services", \n          "value": "V1-00100000"\n        }, \n        "id": "EUC-01010101-V1-00100000", \n        "name": "Tangible, custom software"\n      }, \n      {\n        "applicableTo": [\n          "Inventory", \n          "Noninventory"\n        ], \n        "code": "EUC-01010201", \n        "description": "Canned software (off-the-shelf) - Licensed (not sold) which is delivered in a tangible format, such as on a CD or DVD.", \n        "level": "2", \n        "ParentRef": {\n          "name": "Professional Services", \n          "value": "V1-00100000"\n        }, \n        "id": "EUC-01010201-V1-00100000", \n        "name": "Tangible, canned software"\n      }\n    ]\n  }\n}',
            },
            Estimate: {
                "Delete0-request": '{\n  "SyncToken": "3", \n  "Id": "96"\n}',
                "Send0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-03-26T14:15:31.660-07:00">\r\n  <Estimate domain="QBO" sparse="false">\r\n    <Id>48</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-11-07T11:42:38-08:00</CreateTime>\r\n      <LastUpdatedTime>2015-03-26T14:15:31-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomField>\r\n      <DefinitionId>1</DefinitionId>\r\n      <Name>Crew #</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>1001</DocNumber>\r\n    <TxnDate>2014-11-05</TxnDate>\r\n    <TxnStatus>Closed</TxnStatus>\r\n    <LinkedTxn>\r\n      <TxnId>49</TxnId>\r\n      <TxnType>Invoice</TxnType>\r\n    </LinkedTxn>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <LineNum>1</LineNum>\r\n      <Description>Custom Design</Description>\r\n      <Amount>300.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Design">4</ItemRef>\r\n        <UnitPrice>75</UnitPrice>\r\n        <Qty>4</Qty>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>2</Id>\r\n      <LineNum>2</LineNum>\r\n      <Description>Installation of landscape design</Description>\r\n      <Amount>250.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Installation">7</ItemRef>\r\n        <UnitPrice>50</UnitPrice>\r\n        <Qty>5</Qty>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>3</Id>\r\n      <LineNum>3</LineNum>\r\n      <Description>Rock Fountain</Description>\r\n      <Amount>275.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Rock Fountain">5</ItemRef>\r\n        <UnitPrice>275</UnitPrice>\r\n        <Qty>1</Qty>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>4</Id>\r\n      <LineNum>4</LineNum>\r\n      <Description>Garden Rocks</Description>\r\n      <Amount>180.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Rocks">13</ItemRef>\r\n        <UnitPrice>22.5</UnitPrice>\r\n        <Qty>8</Qty>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Amount>1005.00</Amount>\r\n      <DetailType>SubTotalLineDetail</DetailType>\r\n      <SubTotalLineDetail/>\r\n    </Line>\r\n    <TxnTaxDetail>\r\n      <TotalTax>0</TotalTax>\r\n    </TxnTaxDetail>\r\n    <CustomerRef name="Paulsen Medical Supplies">18</CustomerRef>\r\n    <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n    <BillAddr>\r\n      <Id>67</Id>\r\n      <Line1>Kathy Paulsen\r\nPaulsen Medical Supplies\r\n900 Main St.\r\nMiddlefield, CA  94303</Line1>\r\n      <Lat>37.4530553</Lat>\r\n      <Long>-122.1178261</Long>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n      <Id>19</Id>\r\n      <Line1>38921 S. Boise Ave</Line1>\r\n      <City>Middlefield</City>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>94304</PostalCode>\r\n      <Lat>37.3989376</Lat>\r\n      <Long>-122.1443935</Long>\r\n    </ShipAddr>\r\n    <TotalAmt>1005.00</TotalAmt>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NeedToPrint</PrintStatus>\r\n    <EmailStatus>EmailSent</EmailStatus>\r\n    <BillEmail>\r\n      <Address>Medical@intuit.com</Address>\r\n    </BillEmail>\r\n    <DeliveryInfo>\r\n      <DeliveryType>Email</DeliveryType>\r\n      <DeliveryTime>2015-03-26T14:15:31-07:00</DeliveryTime>\r\n    </DeliveryInfo>\r\n  </Estimate>\r\n</IntuitResponse>\r\n',
                "Query0-request-xml": "select * from estimate where TxnDate < '2014-09-15'",
                "Read0-response":
                    '{\n  "Estimate": {\n    "DocNumber": "1001", \n    "SyncToken": "0", \n    "domain": "QBO", \n    "TxnStatus": "Pending", \n    "BillEmail": {\n      "Address": "Cool_Cars@intuit.com"\n    }, \n    "TxnDate": "2015-03-26", \n    "TotalAmt": 31.5, \n    "CustomerRef": {\n      "name": "Cool Cars", \n      "value": "3"\n    }, \n    "CustomerMemo": {\n      "value": "Thank you for your business and have a great day!"\n    }, \n    "ShipAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Half Moon Bay", \n      "PostalCode": "94213", \n      "Id": "104", \n      "Line1": "65 Ocean Dr."\n    }, \n    "PrintStatus": "NeedToPrint", \n    "BillAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Half Moon Bay", \n      "PostalCode": "94213", \n      "Id": "103", \n      "Line1": "65 Ocean Dr."\n    }, \n    "sparse": false, \n    "EmailStatus": "NotSet", \n    "Line": [\n      {\n        "Description": "Pest Control Services", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 1, \n          "UnitPrice": 35, \n          "ItemRef": {\n            "name": "Pest Control", \n            "value": "10"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 35.0, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 35.0, \n        "SubTotalLineDetail": {}\n      }, \n      {\n        "DetailType": "DiscountLineDetail", \n        "Amount": 3.5, \n        "DiscountLineDetail": {\n          "DiscountAccountRef": {\n            "name": "Discounts given", \n            "value": "86"\n          }, \n          "PercentBased": true, \n          "DiscountPercent": 10\n        }\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "177", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2015-03-26T13:25:05-07:00", \n      "LastUpdatedTime": "2015-03-26T13:25:05-07:00"\n    }\n  }, \n  "time": "2015-03-26T13:25:05.473-07:00"\n}',
                "Update1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T14:08:03.956-07:00">\r\n    <Estimate domain="QBO" sparse="false">\r\n        <Id>41</Id>\r\n        <SyncToken>2</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-17T11:20:06-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-24T14:08:04-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1001</DocNumber>\r\n        <TxnDate>2014-09-07</TxnDate>\r\n        <TxnStatus>Closed</TxnStatus>\r\n        <LinkedTxn>\r\n            <TxnId>103</TxnId>\r\n            <TxnType>Invoice</TxnType>\r\n        </LinkedTxn>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Rock Fountain</Description>\r\n            <Amount>275.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Rock Fountain">5</ItemRef>\r\n                <UnitPrice>275</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Id>2</Id>\r\n            <LineNum>2</LineNum>\r\n            <Description>Custom Design</Description>\r\n            <Amount>262.50</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Design">4</ItemRef>\r\n                <UnitPrice>75</UnitPrice>\r\n                <Qty>3.5</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Id>3</Id>\r\n            <LineNum>3</LineNum>\r\n            <Description>Fountain Pump</Description>\r\n            <Amount>45.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pump">11</ItemRef>\r\n                <UnitPrice>22.5</UnitPrice>\r\n                <Qty>2</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>582.50</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Geeta Kalapatapu">10</CustomerRef>\r\n        <CustomerMemo>An updated memo via sparse update.</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>59</Id>\r\n            <Line1>Geeta Kalapatapu</Line1>\r\n            <Line2>1987 Main St.</Line2>\r\n            <Line3>Middlefield, CA 94303</Line3>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>119</Id>\r\n            <Line1>1987 Main St.</Line1>\r\n            <City>Middlefield</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94303</PostalCode>\r\n        </ShipAddr>\r\n        <TotalAmt>582.50</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <BillEmail>\r\n            <Address>Geeta@Kalapatapu.com</Address>\r\n        </BillEmail>\r\n    </Estimate>\r\n</IntuitResponse>\r\n',
                "Update1-request-xml":
                    '<Estimate xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>41</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-09-17T11:20:06-07:00</CreateTime>\r\n      <LastUpdatedTime>2014-09-18T13:41:59-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomerMemo>An updated memo via sparse update.</CustomerMemo>\r\n</Estimate>',
                "Update0-response":
                    '{\n  "Estimate": {\n    "DocNumber": "1001", \n    "SyncToken": "3", \n    "domain": "QBO", \n    "TxnStatus": "Closed", \n    "BillEmail": {\n      "Address": "Geeta@Kalapatapu.com"\n    }, \n    "TxnDate": "2014-09-07", \n    "TotalAmt": 582.5, \n    "CustomerRef": {\n      "name": "Geeta Kalapatapu", \n      "value": "10"\n    }, \n    "CustomerMemo": {\n      "value": "An updated memo via full update."\n    }, \n    "ShipAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Middlefield", \n      "PostalCode": "94303", \n      "Id": "119", \n      "Line1": "1987 Main St."\n    }, \n    "LinkedTxn": [\n      {\n        "TxnId": "103", \n        "TxnType": "Invoice"\n      }\n    ], \n    "PrintStatus": "NeedToPrint", \n    "BillAddr": {\n      "Line3": "Middlefield, CA  94303", \n      "Id": "59", \n      "Line1": "Geeta Kalapatapu", \n      "Line2": "1987 Main St."\n    }, \n    "sparse": false, \n    "EmailStatus": "NotSet", \n    "Line": [\n      {\n        "Description": "Rock Fountain", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 1, \n          "UnitPrice": 275, \n          "ItemRef": {\n            "name": "Rock Fountain", \n            "value": "5"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 275.0, \n        "Id": "1"\n      }, \n      {\n        "Description": "Custom Design", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 3.5, \n          "UnitPrice": 75, \n          "ItemRef": {\n            "name": "Design", \n            "value": "4"\n          }\n        }, \n        "LineNum": 2, \n        "Amount": 262.5, \n        "Id": "2"\n      }, \n      {\n        "Description": "Fountain Pump", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 2, \n          "UnitPrice": 22.5, \n          "ItemRef": {\n            "name": "Pump", \n            "value": "11"\n          }\n        }, \n        "LineNum": 3, \n        "Amount": 45.0, \n        "Id": "3"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 582.5, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "41", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-17T11:20:06-07:00", \n      "LastUpdatedTime": "2015-07-24T14:15:10-07:00"\n    }\n  }, \n  "time": "2015-07-24T14:15:10.332-07:00"\n}',
                "Create0-response":
                    '{\n  "Estimate": {\n    "DocNumber": "1001", \n    "SyncToken": "0", \n    "domain": "QBO", \n    "TxnStatus": "Pending", \n    "BillEmail": {\n      "Address": "Cool_Cars@intuit.com"\n    }, \n    "TxnDate": "2015-03-26", \n    "TotalAmt": 31.5, \n    "CustomerRef": {\n      "name": "Cool Cars", \n      "value": "3"\n    }, \n    "CustomerMemo": {\n      "value": "Thank you for your business and have a great day!"\n    }, \n    "ShipAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Half Moon Bay", \n      "PostalCode": "94213", \n      "Id": "104", \n      "Line1": "65 Ocean Dr."\n    }, \n    "PrintStatus": "NeedToPrint", \n    "BillAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Half Moon Bay", \n      "PostalCode": "94213", \n      "Id": "103", \n      "Line1": "65 Ocean Dr."\n    }, \n    "sparse": false, \n    "EmailStatus": "NotSet", \n    "Line": [\n      {\n        "Description": "Pest Control Services", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 1, \n          "UnitPrice": 35, \n          "ItemRef": {\n            "name": "Pest Control", \n            "value": "10"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 35.0, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 35.0, \n        "SubTotalLineDetail": {}\n      }, \n      {\n        "DetailType": "DiscountLineDetail", \n        "Amount": 3.5, \n        "DiscountLineDetail": {\n          "DiscountAccountRef": {\n            "name": "Discounts given", \n            "value": "86"\n          }, \n          "PercentBased": true, \n          "DiscountPercent": 10\n        }\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "177", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2015-03-26T13:25:05-07:00", \n      "LastUpdatedTime": "2015-03-26T13:25:05-07:00"\n    }\n  }, \n  "time": "2015-03-26T13:25:05.473-07:00"\n}',
                "Update1-request":
                    '{\n  "SyncToken": "3", \n  "domain": "QBO", \n  "CustomerMemo": {\n    "value": "An updated memo via full update the second time."\n  }, \n  "sparse": true, \n  "Id": "41", \n  "MetaData": {\n    "CreateTime": "2014-09-17T11:20:06-07:00", \n    "LastUpdatedTime": "2015-07-24T14:08:04-07:00"\n  }\n}',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-03-26T14:09:29.615-07:00">\r\n  <Estimate domain="QBO" sparse="false">\r\n    <Id>178</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-03-26T14:09:30-07:00</CreateTime>\r\n      <LastUpdatedTime>2015-03-26T14:09:30-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomField>\r\n      <DefinitionId>1</DefinitionId>\r\n      <Name>Crew #</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>1002</DocNumber>\r\n    <TxnDate>2015-03-26</TxnDate>\r\n    <TxnStatus>Pending</TxnStatus>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <LineNum>1</LineNum>\r\n      <Amount>15.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Concrete">3</ItemRef>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Amount>15.00</Amount>\r\n      <DetailType>SubTotalLineDetail</DetailType>\r\n      <SubTotalLineDetail/>\r\n    </Line>\r\n    <TxnTaxDetail>\r\n      <TotalTax>0</TotalTax>\r\n    </TxnTaxDetail>\r\n    <CustomerRef name="Weiskopf Consulting">29</CustomerRef>\r\n    <BillAddr>\r\n      <Id>30</Id>\r\n      <Line1>45612 Main St.</Line1>\r\n      <City>Bayshore</City>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>94326</PostalCode>\r\n      <Lat>45.256574</Lat>\r\n      <Long>-66.0943698</Long>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n      <Id>30</Id>\r\n      <Line1>45612 Main St.</Line1>\r\n      <City>Bayshore</City>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>94326</PostalCode>\r\n      <Lat>45.256574</Lat>\r\n      <Long>-66.0943698</Long>\r\n    </ShipAddr>\r\n    <TotalAmt>15.00</TotalAmt>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NeedToPrint</PrintStatus>\r\n    <EmailStatus>NotSet</EmailStatus>\r\n  </Estimate>\r\n</IntuitResponse>',
                "Delete0-response-xml": '<Estimate domain="QBO" status="Deleted">\r\n   <Id>15796</Id>\r\n</Estimate>',
                "Create0-request":
                    '{\n  "TotalAmt": 31.5, \n  "BillEmail": {\n    "Address": "Cool_Cars@intuit.com"\n  }, \n  "CustomerMemo": {\n    "value": "Thank you for your business and have a great day!"\n  }, \n  "ShipAddr": {\n    "City": "Half Moon Bay", \n    "Line1": "65 Ocean Dr.", \n    "PostalCode": "94213", \n    "Lat": "37.4300318", \n    "Long": "-122.4336537", \n    "CountrySubDivisionCode": "CA", \n    "Id": "4"\n  }, \n  "PrintStatus": "NeedToPrint", \n  "EmailStatus": "NotSet", \n  "BillAddr": {\n    "City": "Half Moon Bay", \n    "Line1": "65 Ocean Dr.", \n    "PostalCode": "94213", \n    "Lat": "37.4300318", \n    "Long": "-122.4336537", \n    "CountrySubDivisionCode": "CA", \n    "Id": "4"\n  }, \n  "Line": [\n    {\n      "Description": "Pest Control Services", \n      "DetailType": "SalesItemLineDetail", \n      "SalesItemLineDetail": {\n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "Qty": 1, \n        "UnitPrice": 35, \n        "ItemRef": {\n          "name": "Pest Control", \n          "value": "10"\n        }\n      }, \n      "LineNum": 1, \n      "Amount": 35.0, \n      "Id": "1"\n    }, \n    {\n      "DetailType": "SubTotalLineDetail", \n      "Amount": 35.0, \n      "SubTotalLineDetail": {}\n    }, \n    {\n      "DetailType": "DiscountLineDetail", \n      "Amount": 3.5, \n      "DiscountLineDetail": {\n        "DiscountAccountRef": {\n          "name": "Discounts given", \n          "value": "86"\n        }, \n        "PercentBased": true, \n        "DiscountPercent": 10\n      }\n    }\n  ], \n  "CustomerRef": {\n    "name": "Cool Cars", \n    "value": "3"\n  }, \n  "TxnTaxDetail": {\n    "TotalTax": 0\n  }, \n  "ApplyTaxAfterDiscount": false\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T13:59:20.118-07:00">\r\n  <QueryResponse startPosition="1" maxResults="1">\r\n    <Estimate domain="QBO" sparse="false">\r\n      <Id>41</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-17T11:20:06-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-18T13:41:59-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <CustomField>\r\n        <DefinitionId>1</DefinitionId>\r\n        <Name>Crew #</Name>\r\n        <Type>StringType</Type>\r\n      </CustomField>\r\n      <DocNumber>1001</DocNumber>\r\n      <TxnDate>2014-09-07</TxnDate>\r\n      <TxnStatus>Closed</TxnStatus>\r\n      <LinkedTxn>\r\n        <TxnId>103</TxnId>\r\n        <TxnType>Invoice</TxnType>\r\n      </LinkedTxn>\r\n      <Line>\r\n        <Id>1</Id>\r\n        <LineNum>1</LineNum>\r\n        <Description>Rock Fountain</Description>\r\n        <Amount>275.00</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n          <ItemRef name="Rock Fountain">5</ItemRef>\r\n          <UnitPrice>275</UnitPrice>\r\n          <Qty>1</Qty>\r\n          <TaxCodeRef>NON</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n      </Line>\r\n      <Line>\r\n        <Id>2</Id>\r\n        <LineNum>2</LineNum>\r\n        <Description>Custom Design</Description>\r\n        <Amount>262.50</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n          <ItemRef name="Design">4</ItemRef>\r\n          <UnitPrice>75</UnitPrice>\r\n          <Qty>3.5</Qty>\r\n          <TaxCodeRef>NON</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n      </Line>\r\n      <Line>\r\n        <Id>3</Id>\r\n        <LineNum>3</LineNum>\r\n        <Description>Fountain Pump</Description>\r\n        <Amount>45.00</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n          <ItemRef name="Pump">11</ItemRef>\r\n          <UnitPrice>22.5</UnitPrice>\r\n          <Qty>2</Qty>\r\n          <TaxCodeRef>NON</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n      </Line>\r\n      <Line>\r\n        <Amount>582.50</Amount>\r\n        <DetailType>SubTotalLineDetail</DetailType>\r\n        <SubTotalLineDetail />\r\n      </Line>\r\n      <TxnTaxDetail>\r\n        <TotalTax>0</TotalTax>\r\n      </TxnTaxDetail>\r\n      <CustomerRef name="Geeta Kalapatapu">10</CustomerRef>\r\n      <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n      <BillAddr>\r\n        <Id>59</Id>\r\n        <Line1>Geeta Kalapatapu</Line1>\r\n        <Line2>1987 Main St.</Line2>\r\n        <Line3>Middlefield, CA  94303</Line3>\r\n        <Lat>37.4530553</Lat>\r\n        <Long>-122.1178261</Long>\r\n      </BillAddr>\r\n      <ShipAddr>\r\n        <Id>10</Id>\r\n        <Line1>1987 Main St.</Line1>\r\n        <City>Middlefield</City>\r\n        <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n        <PostalCode>94303</PostalCode>\r\n        <Lat>37.445013</Lat>\r\n        <Long>-122.1391443</Long>\r\n      </ShipAddr>\r\n      <TotalAmt>582.50</TotalAmt>\r\n      <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n      <PrintStatus>NeedToPrint</PrintStatus>\r\n      <EmailStatus>NotSet</EmailStatus>\r\n      <BillEmail>\r\n        <Address>Geeta@Kalapatapu.com</Address>\r\n      </BillEmail>\r\n    </Estimate>\r\n  </QueryResponse>\r\n</IntuitResponse>',
                "Query0-request": "\"select * from estimate where TxnDate < '2014-09-15'\"",
                "PDF0-response-xml": "%PDF-1.4\r\n...\r\n%%EOF",
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-03-26T14:07:13.592-07:00">\r\n  <Estimate domain="QBO" sparse="false">\r\n    <Id>48</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-11-07T11:42:38-08:00</CreateTime>\r\n      <LastUpdatedTime>2014-11-07T11:43:20-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomField>\r\n      <DefinitionId>1</DefinitionId>\r\n      <Name>Crew #</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>1001</DocNumber>\r\n    <TxnDate>2014-11-05</TxnDate>\r\n    <TxnStatus>Closed</TxnStatus>\r\n    <LinkedTxn>\r\n      <TxnId>49</TxnId>\r\n      <TxnType>Invoice</TxnType>\r\n    </LinkedTxn>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <LineNum>1</LineNum>\r\n      <Description>Custom Design</Description>\r\n      <Amount>300.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Design">4</ItemRef>\r\n        <UnitPrice>75</UnitPrice>\r\n        <Qty>4</Qty>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>2</Id>\r\n      <LineNum>2</LineNum>\r\n      <Description>Installation of landscape design</Description>\r\n      <Amount>250.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Installation">7</ItemRef>\r\n        <UnitPrice>50</UnitPrice>\r\n        <Qty>5</Qty>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>3</Id>\r\n      <LineNum>3</LineNum>\r\n      <Description>Rock Fountain</Description>\r\n      <Amount>275.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Rock Fountain">5</ItemRef>\r\n        <UnitPrice>275</UnitPrice>\r\n        <Qty>1</Qty>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Id>4</Id>\r\n      <LineNum>4</LineNum>\r\n      <Description>Garden Rocks</Description>\r\n      <Amount>180.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Rocks">13</ItemRef>\r\n        <UnitPrice>22.5</UnitPrice>\r\n        <Qty>8</Qty>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Amount>1005.00</Amount>\r\n      <DetailType>SubTotalLineDetail</DetailType>\r\n      <SubTotalLineDetail/>\r\n    </Line>\r\n    <TxnTaxDetail>\r\n      <TotalTax>0</TotalTax>\r\n    </TxnTaxDetail>\r\n    <CustomerRef name="Paulsen Medical Supplies">18</CustomerRef>\r\n    <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n    <BillAddr>\r\n      <Id>67</Id>\r\n      <Line1>Kathy Paulsen\r\nPaulsen Medical Supplies\r\n900 Main St.\r\nMiddlefield, CA  94303</Line1>\r\n      <Lat>37.4530553</Lat>\r\n      <Long>-122.1178261</Long>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n      <Id>19</Id>\r\n      <Line1>38921 S. Boise Ave</Line1>\r\n      <City>Middlefield</City>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>94304</PostalCode>\r\n      <Lat>37.3989376</Lat>\r\n      <Long>-122.1443935</Long>\r\n    </ShipAddr>\r\n    <TotalAmt>1005.00</TotalAmt>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NeedToPrint</PrintStatus>\r\n    <EmailStatus>NeedToSend</EmailStatus>\r\n    <BillEmail>\r\n      <Address>Medical@intuit.com</Address>\r\n    </BillEmail>\r\n    <DeliveryInfo>\r\n      <DeliveryType>Email</DeliveryType>\r\n    </DeliveryInfo>\r\n  </Estimate>\r\n</IntuitResponse>',
                "Update0-request-xml":
                    '<Estimate xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>41</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2014-09-17T11:20:06-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-18T13:41:59-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomField>\r\n        <DefinitionId>1</DefinitionId>\r\n        <Name>Crew #</Name>\r\n        <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>1001</DocNumber>\r\n    <TxnDate>2014-09-07</TxnDate>\r\n    <TxnStatus>Closed</TxnStatus>\r\n    <LinkedTxn>\r\n        <TxnId>103</TxnId>\r\n        <TxnType>Invoice</TxnType>\r\n    </LinkedTxn>\r\n    <Line>\r\n        <Id>1</Id>\r\n        <LineNum>1</LineNum>\r\n        <Description>Rock Fountain</Description>\r\n        <Amount>275.00</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n            <ItemRef name="Rock Fountain">5</ItemRef>\r\n            <UnitPrice>275</UnitPrice>\r\n            <Qty>1</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n        <Id>2</Id>\r\n        <LineNum>2</LineNum>\r\n        <Description>Custom Design</Description>\r\n        <Amount>262.50</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n            <ItemRef name="Design">4</ItemRef>\r\n            <UnitPrice>75</UnitPrice>\r\n            <Qty>3.5</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n        <Id>3</Id>\r\n        <LineNum>3</LineNum>\r\n        <Description>Fountain Pump</Description>\r\n        <Amount>45.00</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n            <ItemRef name="Pump">11</ItemRef>\r\n            <UnitPrice>22.5</UnitPrice>\r\n            <Qty>2</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n        <Amount>582.50</Amount>\r\n        <DetailType>SubTotalLineDetail</DetailType>\r\n        <SubTotalLineDetail />\r\n    </Line>\r\n    <TxnTaxDetail>\r\n        <TotalTax>0</TotalTax>\r\n    </TxnTaxDetail>\r\n    <CustomerRef name="Geeta Kalapatapu">10</CustomerRef>\r\n    <CustomerMemo>An updated memo</CustomerMemo>\r\n    <BillAddr>\r\n        <Id>59</Id>\r\n        <Line1>Geeta Kalapatapu</Line1>\r\n        <Line2>1987 Main St.</Line2>\r\n        <Line3>Middlefield, CA 94303</Line3>\r\n        <Lat>37.4530553</Lat>\r\n        <Long>-122.1178261</Long>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n        <Id>10</Id>\r\n        <Line1>1987 Main St.</Line1>\r\n        <City>Middlefield</City>\r\n        <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n        <PostalCode>94303</PostalCode>\r\n        <Lat>37.445013</Lat>\r\n        <Long>-122.1391443</Long>\r\n    </ShipAddr>\r\n    <TotalAmt>582.50</TotalAmt>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NeedToPrint</PrintStatus>\r\n    <EmailStatus>NotSet</EmailStatus>\r\n    <BillEmail>\r\n        <Address>Geeta@Kalapatapu.com</Address>\r\n    </BillEmail>\r\n</Estimate>\r\n',
                "Delete0-response":
                    '{\n  "Estimate": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "96"\n  }, \n  "time": "2013-03-14T15:05:14.981-07:00"\n}',
                "PDF0-response": '"%PDF-1.4\\r\\n...\\r\\n%%EOF"',
                "Delete0-request-xml":
                    "<Estimate xmlns='http://schema.intuit.com/finance/v3'>\r\n   <Id>15796</Id>\r\n   <SyncToken>1</SyncToken>\r\n</Estimate>",
                "Update0-request":
                    '{\n  "DocNumber": "1001", \n  "SyncToken": "2", \n  "domain": "QBO", \n  "TxnStatus": "Closed", \n  "BillEmail": {\n    "Address": "Geeta@Kalapatapu.com"\n  }, \n  "TxnDate": "2014-09-07", \n  "TotalAmt": 582.5, \n  "CustomerRef": {\n    "name": "Geeta Kalapatapu", \n    "value": "10"\n  }, \n  "CustomerMemo": {\n    "value": "An updated memo via full update."\n  }, \n  "ShipAddr": {\n    "CountrySubDivisionCode": "CA", \n    "City": "Middlefield", \n    "PostalCode": "94303", \n    "Id": "119", \n    "Line1": "1987 Main St."\n  }, \n  "LinkedTxn": [\n    {\n      "TxnId": "103", \n      "TxnType": "Invoice"\n    }\n  ], \n  "PrintStatus": "NeedToPrint", \n  "BillAddr": {\n    "Line3": "Middlefield, CA  94303", \n    "Id": "59", \n    "Line1": "Geeta Kalapatapu", \n    "Line2": "1987 Main St."\n  }, \n  "sparse": false, \n  "EmailStatus": "NotSet", \n  "Line": [\n    {\n      "Description": "Rock Fountain", \n      "DetailType": "SalesItemLineDetail", \n      "SalesItemLineDetail": {\n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "Qty": 1, \n        "UnitPrice": 275, \n        "ItemRef": {\n          "name": "Rock Fountain", \n          "value": "5"\n        }\n      }, \n      "LineNum": 1, \n      "Amount": 275.0, \n      "Id": "1"\n    }, \n    {\n      "Description": "Custom Design", \n      "DetailType": "SalesItemLineDetail", \n      "SalesItemLineDetail": {\n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "Qty": 3.5, \n        "UnitPrice": 75, \n        "ItemRef": {\n          "name": "Design", \n          "value": "4"\n        }\n      }, \n      "LineNum": 2, \n      "Amount": 262.5, \n      "Id": "2"\n    }, \n    {\n      "Description": "Fountain Pump", \n      "DetailType": "SalesItemLineDetail", \n      "SalesItemLineDetail": {\n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "Qty": 2, \n        "UnitPrice": 22.5, \n        "ItemRef": {\n          "name": "Pump", \n          "value": "11"\n        }\n      }, \n      "LineNum": 3, \n      "Amount": 45.0, \n      "Id": "3"\n    }, \n    {\n      "DetailType": "SubTotalLineDetail", \n      "Amount": 582.5, \n      "SubTotalLineDetail": {}\n    }\n  ], \n  "ApplyTaxAfterDiscount": false, \n  "CustomField": [\n    {\n      "DefinitionId": "1", \n      "Type": "StringType", \n      "Name": "Crew #"\n    }\n  ], \n  "Id": "41", \n  "TxnTaxDetail": {\n    "TotalTax": 0\n  }, \n  "MetaData": {\n    "CreateTime": "2014-09-17T11:20:06-07:00", \n    "LastUpdatedTime": "2015-07-24T14:08:04-07:00"\n  }\n}',
                "Send0-response":
                    '{\n  "Estimate": {\n    "TxnDate": "2014-11-06", \n    "domain": "QBO", \n    "PrintStatus": "NeedToPrint", \n    "DeliveryInfo": {\n      "DeliveryType": "Email", \n      "DeliveryTime": "2015-03-26T14:05:31-07:00"\n    }, \n    "TxnStatus": "Closed", \n    "TotalAmt": 362.07, \n    "Line": [\n      {\n        "Description": "Rock Fountain", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "Qty": 1, \n          "UnitPrice": 275, \n          "ItemRef": {\n            "name": "Rock Fountain", \n            "value": "5"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 275.0, \n        "Id": "1"\n      }, \n      {\n        "Description": "Fountain Pump", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "Qty": 1, \n          "UnitPrice": 12.75, \n          "ItemRef": {\n            "name": "Pump", \n            "value": "11"\n          }\n        }, \n        "LineNum": 2, \n        "Amount": 12.75, \n        "Id": "2"\n      }, \n      {\n        "Description": "Concrete for fountain installation", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "Qty": 5, \n          "UnitPrice": 9.5, \n          "ItemRef": {\n            "name": "Concrete", \n            "value": "3"\n          }\n        }, \n        "LineNum": 3, \n        "Amount": 47.5, \n        "Id": "3"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 335.25, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "DocNumber": "1001", \n    "sparse": false, \n    "CustomerMemo": {\n      "value": "Thank you for your business and have a great day!"\n    }, \n    "CustomerRef": {\n      "name": "Sonnenschein Family Store", \n      "value": "24"\n    }, \n    "TxnTaxDetail": {\n      "TxnTaxCodeRef": {\n        "value": "2"\n      }, \n      "TotalTax": 26.82, \n      "TaxLine": [\n        {\n          "DetailType": "TaxLineDetail", \n          "Amount": 26.82, \n          "TaxLineDetail": {\n            "NetAmountTaxable": 335.25, \n            "TaxPercent": 8, \n            "TaxRateRef": {\n              "value": "3"\n            }, \n            "PercentBased": true\n          }\n        }\n      ]\n    }, \n    "SyncToken": "0", \n    "LinkedTxn": [\n      {\n        "TxnId": "130", \n        "TxnType": "Invoice"\n      }\n    ], \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "ShipAddr": {\n      "City": "Middlefield", \n      "Line1": "5647 Cypress Hill Ave.", \n      "PostalCode": "94303", \n      "Lat": "37.4238562", \n      "Long": "-122.1141681", \n      "CountrySubDivisionCode": "CA", \n      "Id": "25"\n    }, \n    "EmailStatus": "EmailSent", \n    "BillAddr": {\n      "Lat": "37.4238562", \n      "Long": "-122.1141681", \n      "Id": "86", \n      "Line1": "Russ Sonnenschein\\nSonnenschein Family Store\\n5647 Cypress Hill Ave.\\nMiddlefield, CA  94303"\n    }, \n    "MetaData": {\n      "CreateTime": "2014-11-08T13:37:55-08:00", \n      "LastUpdatedTime": "2015-03-26T14:05:31-07:00"\n    }, \n    "BillEmail": {\n      "Address": "Familiystore@intuit.com"\n    }, \n    "Id": "100"\n  }, \n  "time": "2015-03-26T14:05:31.330-07:00"\n}',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T14:06:19.696-07:00">\r\n    <Estimate domain="QBO" sparse="false">\r\n        <Id>41</Id>\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-17T11:20:06-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-24T14:06:19-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1001</DocNumber>\r\n        <TxnDate>2014-09-07</TxnDate>\r\n        <TxnStatus>Closed</TxnStatus>\r\n        <LinkedTxn>\r\n            <TxnId>103</TxnId>\r\n            <TxnType>Invoice</TxnType>\r\n        </LinkedTxn>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Rock Fountain</Description>\r\n            <Amount>275.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Rock Fountain">5</ItemRef>\r\n                <UnitPrice>275</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Id>2</Id>\r\n            <LineNum>2</LineNum>\r\n            <Description>Custom Design</Description>\r\n            <Amount>262.50</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Design">4</ItemRef>\r\n                <UnitPrice>75</UnitPrice>\r\n                <Qty>3.5</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Id>3</Id>\r\n            <LineNum>3</LineNum>\r\n            <Description>Fountain Pump</Description>\r\n            <Amount>45.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pump">11</ItemRef>\r\n                <UnitPrice>22.5</UnitPrice>\r\n                <Qty>2</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>582.50</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Geeta Kalapatapu">10</CustomerRef>\r\n        <CustomerMemo>An updated memo</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>59</Id>\r\n            <Line1>Geeta Kalapatapu</Line1>\r\n            <Line2>1987 Main St.</Line2>\r\n            <Line3>Middlefield, CA 94303</Line3>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>119</Id>\r\n            <Line1>1987 Main St.</Line1>\r\n            <City>Middlefield</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94303</PostalCode>\r\n        </ShipAddr>\r\n        <TotalAmt>582.50</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <BillEmail>\r\n            <Address>Geeta@Kalapatapu.com</Address>\r\n        </BillEmail>\r\n    </Estimate>\r\n</IntuitResponse>\r\n',
                "Create0-request-xml":
                    '<Estimate xmlns="http://schema.intuit.com/finance/v3">\r\n  <Line>\r\n    <Amount>15</Amount>\r\n    <DetailType>SalesItemLineDetail</DetailType>\r\n    <SalesItemLineDetail>\r\n      <ItemRef>3</ItemRef>\r\n    </SalesItemLineDetail>\r\n  </Line>\r\n  <CustomerRef>29</CustomerRef>\r\n</Estimate>',
                "Update1-response":
                    '{\n  "Estimate": {\n    "DocNumber": "1001", \n    "SyncToken": "4", \n    "domain": "QBO", \n    "TxnStatus": "Closed", \n    "BillEmail": {\n      "Address": "Geeta@Kalapatapu.com"\n    }, \n    "TxnDate": "2014-09-07", \n    "TotalAmt": 582.5, \n    "CustomerRef": {\n      "name": "Geeta Kalapatapu", \n      "value": "10"\n    }, \n    "CustomerMemo": {\n      "value": "An updated memo via full update the second time."\n    }, \n    "ShipAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Middlefield", \n      "PostalCode": "94303", \n      "Id": "119", \n      "Line1": "1987 Main St."\n    }, \n    "LinkedTxn": [\n      {\n        "TxnId": "103", \n        "TxnType": "Invoice"\n      }\n    ], \n    "PrintStatus": "NeedToPrint", \n    "BillAddr": {\n      "Line3": "Middlefield, CA  94303", \n      "Id": "59", \n      "Line1": "Geeta Kalapatapu", \n      "Line2": "1987 Main St."\n    }, \n    "sparse": false, \n    "EmailStatus": "NotSet", \n    "Line": [\n      {\n        "Description": "Rock Fountain", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 1, \n          "UnitPrice": 275, \n          "ItemRef": {\n            "name": "Rock Fountain", \n            "value": "5"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 275.0, \n        "Id": "1"\n      }, \n      {\n        "Description": "Custom Design", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 3.5, \n          "UnitPrice": 75, \n          "ItemRef": {\n            "name": "Design", \n            "value": "4"\n          }\n        }, \n        "LineNum": 2, \n        "Amount": 262.5, \n        "Id": "2"\n      }, \n      {\n        "Description": "Fountain Pump", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 2, \n          "UnitPrice": 22.5, \n          "ItemRef": {\n            "name": "Pump", \n            "value": "11"\n          }\n        }, \n        "LineNum": 3, \n        "Amount": 45.0, \n        "Id": "3"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 582.5, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "41", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-17T11:20:06-07:00", \n      "LastUpdatedTime": "2015-07-24T14:17:23-07:00"\n    }\n  }, \n  "time": "2015-07-24T14:17:23.307-07:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "Estimate": [\n      {\n        "DocNumber": "1001", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "TxnStatus": "Closed", \n        "BillEmail": {\n          "Address": "Geeta@Kalapatapu.com"\n        }, \n        "TxnDate": "2014-09-07", \n        "TotalAmt": 582.5, \n        "CustomerRef": {\n          "name": "Geeta Kalapatapu", \n          "value": "10"\n        }, \n        "CustomerMemo": {\n          "value": "Thank you for your business and have a great day!"\n        }, \n        "ShipAddr": {\n          "City": "Middlefield", \n          "Line1": "1987 Main St.", \n          "PostalCode": "94303", \n          "Lat": "37.445013", \n          "Long": "-122.1391443", \n          "CountrySubDivisionCode": "CA", \n          "Id": "10"\n        }, \n        "LinkedTxn": [\n          {\n            "TxnId": "103", \n            "TxnType": "Invoice"\n          }\n        ], \n        "PrintStatus": "NeedToPrint", \n        "BillAddr": {\n          "Line3": "Middlefield, CA  94303", \n          "Line2": "1987 Main St.", \n          "Long": "-122.1178261", \n          "Line1": "Geeta Kalapatapu", \n          "Lat": "37.4530553", \n          "Id": "59"\n        }, \n        "sparse": false, \n        "EmailStatus": "NotSet", \n        "Line": [\n          {\n            "Description": "Rock Fountain", \n            "DetailType": "SalesItemLineDetail", \n            "SalesItemLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 1, \n              "UnitPrice": 275, \n              "ItemRef": {\n                "name": "Rock Fountain", \n                "value": "5"\n              }\n            }, \n            "LineNum": 1, \n            "Amount": 275.0, \n            "Id": "1"\n          }, \n          {\n            "Description": "Custom Design", \n            "DetailType": "SalesItemLineDetail", \n            "SalesItemLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 3.5, \n              "UnitPrice": 75, \n              "ItemRef": {\n                "name": "Design", \n                "value": "4"\n              }\n            }, \n            "LineNum": 2, \n            "Amount": 262.5, \n            "Id": "2"\n          }, \n          {\n            "Description": "Fountain Pump", \n            "DetailType": "SalesItemLineDetail", \n            "SalesItemLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 2, \n              "UnitPrice": 22.5, \n              "ItemRef": {\n                "name": "Pump", \n                "value": "11"\n              }\n            }, \n            "LineNum": 3, \n            "Amount": 45.0, \n            "Id": "3"\n          }, \n          {\n            "DetailType": "SubTotalLineDetail", \n            "Amount": 582.5, \n            "SubTotalLineDetail": {}\n          }\n        ], \n        "ApplyTaxAfterDiscount": false, \n        "CustomField": [\n          {\n            "DefinitionId": "1", \n            "Type": "StringType", \n            "Name": "Crew #"\n          }\n        ], \n        "Id": "41", \n        "TxnTaxDetail": {\n          "TotalTax": 0\n        }, \n        "MetaData": {\n          "CreateTime": "2014-09-17T11:20:06-07:00", \n          "LastUpdatedTime": "2014-09-18T13:41:59-07:00"\n        }\n      }\n    ], \n    "maxResults": 1\n  }, \n  "time": "2015-07-24T14:00:04.902-07:00"\n}',
            },
            Vendorbalance: {
                "Query0-request": '"BaseURL/v3/company/1386066315/reports/VendorBalance"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "VendorBalance", \n    "DateMacro": "all", \n    "Option": [\n      {\n        "Name": "report_date", \n        "Value": "2016-03-14"\n      }, \n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "Currency": "USD", \n    "Time": "2016-03-14T10:39:07-07:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "id": "56", \n            "value": "Bob\'s Burger Joint"\n          }, \n          {\n            "value": "-46.00"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "31", \n            "value": "Brosnahan Insurance Agency"\n          }, \n          {\n            "value": "241.23"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "36", \n            "value": "Diego\'s Road Warrior Bodyshop"\n          }, \n          {\n            "value": "755.00"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "46", \n            "value": "Norton Lumber and Building Materials"\n          }, \n          {\n            "value": "205.00"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "48", \n            "value": "PG&E"\n          }, \n          {\n            "value": "86.44"\n          }\n        ]\n      }, \n      {\n        "group": "GrandTotal", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": "1241.67"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Vendor", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total"\n      }\n    ]\n  }\n}',
            },
            Trialbalance: {
                "Query0-request":
                    '"For non-FR locales:\\r\\nBaseURL/v3/company/1386066315/reports/TrialBalance\\r\\nFor FR locale:\\r\\nBaseURL/v3/company/1386066315/reports/TrialBalanceFR?minorversion=4"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "TrialBalance", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "this month-to-date", \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2016-03-01", \n    "Currency": "USD", \n    "EndPeriod": "2016-03-14", \n    "Time": "2016-03-14T10:11:07-07:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "id": "35", \n            "value": "Checking"\n          }, \n          {\n            "value": "4151.74"\n          }, \n          {\n            "value": ""\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "13", \n            "value": "Meals and Entertainment"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "46.00"\n          }\n        ]\n      }, \n      {\n        "ColData": [\n          {\n            "id": "93", \n            "value": "QuickBooks Payments Fees"\n          }, \n          {\n            "value": "0.44"\n          }, \n          {\n            "value": ""\n          }\n        ]\n      }, \n      {\n        "group": "GrandTotal", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": "36587.47"\n            }, \n            {\n              "value": "36587.47"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Account", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Debit"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Credit"\n      }\n    ]\n  }\n}',
            },
            Journalreportfr: {
                "Query0-request": '"BaseURL/v3/company/1386066315/reports/JournalReportFR?journal_code=VT"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "JournalReportFR", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "this month-to-date", \n    "StartPeriod": "2016-05-01", \n    "Currency": "EUR", \n    "EndPeriod": "2016-05-16", \n    "Time": "2016-05-16T09:25:46+01:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "BQ1"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "value": "Mai 2016"\n                  }, \n                  {\n                    "value": ""\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "ColData": [\n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": "BQ1"\n                      }, \n                      {\n                        "value": "2016-05-09"\n                      }, \n                      {\n                        "id": "5", \n                        "value": "Paiement"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "512100"\n                      }, \n                      {\n                        "id": "10", \n                        "value": "Banqu1"\n                      }, \n                      {\n                        "id": "1", \n                        "value": "John"\n                      }, \n                      {\n                        "id": "3", \n                        "value": "Carte de paiement"\n                      }, \n                      {\n                        "value": "Pay\\u00e9s"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": "61,50 \\u20ac"\n                      }, \n                      {\n                        "value": ""\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": "BQ1"\n                      }, \n                      {\n                        "value": "2016-05-09"\n                      }, \n                      {\n                        "id": "5", \n                        "value": "Paiement"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "411001"\n                      }, \n                      {\n                        "id": "7", \n                        "value": "Clients"\n                      }, \n                      {\n                        "id": "1", \n                        "value": "John"\n                      }, \n                      {\n                        "id": "3", \n                        "value": "Carte de paiement"\n                      }, \n                      {\n                        "value": "Pay\\u00e9s"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "2016-05-09"\n                      }, \n                      {\n                        "value": "2016-05-09"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "61,50 \\u20ac"\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": "BQ1"\n                      }, \n                      {\n                        "value": "2016-05-10"\n                      }, \n                      {\n                        "id": "4", \n                        "value": "Achat comptant"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "512100"\n                      }, \n                      {\n                        "id": "10", \n                        "value": "Banqu1"\n                      }, \n                      {\n                        "id": "3", \n                        "value": "Mark"\n                      }, \n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "30,00 \\u20ac"\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": "BQ1"\n                      }, \n                      {\n                        "value": "2016-05-10"\n                      }, \n                      {\n                        "id": "4", \n                        "value": "Achat comptant"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "607100"\n                      }, \n                      {\n                        "id": "11", \n                        "value": "Achats de Marchandises (ou groupe) A"\n                      }, \n                      {\n                        "id": "3", \n                        "value": "Mark"\n                      }, \n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": "30,00 \\u20ac"\n                      }, \n                      {\n                        "value": ""\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": "BQ1"\n                      }, \n                      {\n                        "value": "2016-05-12"\n                      }, \n                      {\n                        "id": "3", \n                        "value": "D\\u00e9p\\u00f4t"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "Solde d\\u2019ouverture"\n                      }, \n                      {\n                        "value": "512100"\n                      }, \n                      {\n                        "id": "10", \n                        "value": "Banqu1"\n                      }, \n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": "100,00 \\u20ac"\n                      }, \n                      {\n                        "value": ""\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": "BQ1"\n                      }, \n                      {\n                        "value": "2016-05-12"\n                      }, \n                      {\n                        "id": "3", \n                        "value": "D\\u00e9p\\u00f4t"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "101300"\n                      }, \n                      {\n                        "id": "9", \n                        "value": "Capital souscrit - appel\\u00e9, vers\\u00e9"\n                      }, \n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "100,00 \\u20ac"\n                      }\n                    ], \n                    "type": "Data"\n                  }\n                ]\n              }, \n              "type": "Section", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total pour Mai 2016"\n                  }, \n                  {\n                    "value": ""\n                  }, \n                  {\n                    "value": "191,50 \\u20ac"\n                  }, \n                  {\n                    "value": "191,50 \\u20ac"\n                  }\n                ]\n              }\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total pour BQ1"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "191,50 \\u20ac"\n            }, \n            {\n              "value": "191,50 \\u20ac"\n            }\n          ]\n        }\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "VT"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "Header": {\n                "ColData": [\n                  {\n                    "value": "Mai 2016"\n                  }, \n                  {\n                    "value": ""\n                  }, \n                  {\n                    "value": ""\n                  }\n                ]\n              }, \n              "Rows": {\n                "Row": [\n                  {\n                    "ColData": [\n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": "VT"\n                      }, \n                      {\n                        "value": "2016-05-10"\n                      }, \n                      {\n                        "id": "2", \n                        "value": "Facture"\n                      }, \n                      {\n                        "value": "1002"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "411001"\n                      }, \n                      {\n                        "id": "7", \n                        "value": "Clients"\n                      }, \n                      {\n                        "id": "2", \n                        "value": "James"\n                      }, \n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": "Non pay\\u00e9s"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "2016-06-09"\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": "35,00 \\u20ac"\n                      }, \n                      {\n                        "value": ""\n                      }\n                    ], \n                    "type": "Data"\n                  }, \n                  {\n                    "ColData": [\n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": "VT"\n                      }, \n                      {\n                        "value": "2016-05-10"\n                      }, \n                      {\n                        "id": "2", \n                        "value": "Facture"\n                      }, \n                      {\n                        "value": "1002"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "706100"\n                      }, \n                      {\n                        "id": "1", \n                        "value": "Prestations de services"\n                      }, \n                      {\n                        "id": "2", \n                        "value": "James"\n                      }, \n                      {\n                        "id": "", \n                        "value": ""\n                      }, \n                      {\n                        "value": "Non pay\\u00e9s"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": "0-00-00"\n                      }, \n                      {\n                        "value": ""\n                      }, \n                      {\n                        "value": "35,00 \\u20ac"\n                      }\n                    ], \n                    "type": "Data"\n                  }\n                ]\n              }, \n              "type": "Section", \n              "Summary": {\n                "ColData": [\n                  {\n                    "value": "Total pour Mai 2016"\n                  }, \n                  {\n                    "value": ""\n                  }, \n                  {\n                    "value": "35,00 \\u20ac"\n                  }\n                ]\n              }\n            }\n          ]\n        }, \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total pour VT"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "35,00 \\u20ac"\n            }, \n            {\n              "value": "35,00 \\u20ac"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "txn_num", \n        "ColTitle": "Num\\u00e9ro d\\u2019op\\u00e9ration"\n      }, \n      {\n        "ColType": "journal_code_name", \n        "ColTitle": "Code de journal"\n      }, \n      {\n        "ColType": "tx_date", \n        "ColTitle": "Date"\n      }, \n      {\n        "ColType": "txn_type", \n        "ColTitle": "Type d\\u2019op\\u00e9ration"\n      }, \n      {\n        "ColType": "doc_num", \n        "ColTitle": "N\\u00b0"\n      }, \n      {\n        "ColType": "memo", \n        "ColTitle": "M\\u00e9mo/description"\n      }, \n      {\n        "ColType": "acct_num_with_extn", \n        "ColTitle": "N\\u00b0 de compte"\n      }, \n      {\n        "ColType": "account_name", \n        "ColTitle": "Compte"\n      }, \n      {\n        "ColType": "name", \n        "ColTitle": "Nom"\n      }, \n      {\n        "ColType": "pmt_mthd", \n        "ColTitle": "Mode de paiement"\n      }, \n      {\n        "ColType": "is_ar_paid", \n        "ColTitle": "\\u00c9tat cr\\u00e9ance"\n      }, \n      {\n        "ColType": "is_ap_paid", \n        "ColTitle": "\\u00c9tat dette"\n      }, \n      {\n        "ColType": "due_date", \n        "ColTitle": "\\u00c9ch\\u00e9ance"\n      }, \n      {\n        "ColType": "paid_date", \n        "ColTitle": "Date du paiement"\n      }, \n      {\n        "ColType": "debt_amt", \n        "ColTitle": "D\\u00e9bit"\n      }, \n      {\n        "ColType": "credit_amt", \n        "ColTitle": "Cr\\u00e9dit"\n      }\n    ]\n  }\n}',
            },
            Apagingdetail: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/AgedPayableDetail?report_date=2015-06-30&start_duedate=2015-01-01&end_duedate=2015-06-30&columns=due_date,vend_name"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "AgedPayableDetail", \n    "Currency": "USD", \n    "EndPeriod": "2015-06-30", \n    "Option": [\n      {\n        "Name": "report_date", \n        "Value": "2015-06-30"\n      }, \n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "Time": "2016-03-08T14:34:28-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "31 - 60 days past due"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "id": "32", \n                  "value": "Cal Telephone"\n                }, \n                {\n                  "value": "2015-05-24"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section"\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "Total for 31 - 60 days past due"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {}, \n        "type": "Section"\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "1 - 30 days past due"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "Rows": {\n          "Row": [\n            {\n              "ColData": [\n                {\n                  "id": "48", \n                  "value": "PG&E"\n                }, \n                {\n                  "value": "2015-06-24"\n                }\n              ], \n              "type": "Data"\n            }, \n            {\n              "ColData": [\n                {\n                  "id": "51", \n                  "value": "Tim Philip Masonry"\n                }, \n                {\n                  "value": "2015-06-24"\n                }\n              ], \n              "type": "Data"\n            }\n          ]\n        }, \n        "type": "Section"\n      }, \n      {\n        "Header": {\n          "ColData": [\n            {\n              "value": "Total for 1 - 30 days past due"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }, \n        "type": "Section"\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "vend_name", \n        "ColTitle": "Vendor"\n      }, \n      {\n        "ColType": "due_date", \n        "ColTitle": "Due Date"\n      }\n    ]\n  }\n}',
            },
            Salesbydepartment: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/DepartmentSales?start_date=2015-08-01&end_date=2015-09-30"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "DepartmentSales", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2015-08-01", \n    "Currency": "USD", \n    "EndPeriod": "2015-09-30", \n    "Time": "2016-03-10T15:26:27-08:00", \n    "SummarizeColumnsBy": "Total"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "value": "Not Specified"\n          }, \n          {\n            "value": "1200.00"\n          }\n        ], \n        "group": "**"\n      }, \n      {\n        "group": "GrandTotal", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Total"\n            }, \n            {\n              "value": "1200.00"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Department", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total"\n      }\n    ]\n  }\n}',
            },
            Taxservice: {
                "Create0-response":
                    '{\n  "TaxRateDetails": [\n    {\n      "RateValue": "8%", \n      "TaxRateId": "3", \n      "TaxApplicableOn": "Sales", \n      "TaxAgencyId": "1", \n      "TaxRateName": "myNewTaxRateName"\n    }, \n    {\n      "RateValue": "5%", \n      "TaxRateId": "2", \n      "TaxApplicableOn": "Purchase", \n      "TaxAgencyId": "1", \n      "TaxRateName": "myExistingTaxRateName"\n    }\n  ], \n  "TaxCodeId": "1", \n  "TaxCode": "MyTaxCodeName"\n}',
                "Create0-response-xml": "XML requests not supported.",
                "Create0-request":
                    '{\n  "TaxRateDetails": [\n    {\n      "RateValue": "8", \n      "TaxApplicableOn": "Sales", \n      "TaxAgencyId": "1", \n      "TaxRateName": "myNewTaxRateName"\n    }\n  ], \n  "TaxCode": "MyTaxCodeName"\n}',
                "Create0-request-xml": "XML requests not supported.",
            },
            Payment: {
                "Delete0-request": '{\n  "SyncToken": "2", \n  "Id": "73"\n}',
                "Send0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T15:16:38.467-07:00">\r\n  <Payment domain="QBO" sparse="false">\r\n    <Id>163</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-01-16T15:08:12-08:00</CreateTime>\r\n      <LastUpdatedTime>2015-01-16T15:08:12-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-01-16</TxnDate>\r\n    <Line>\r\n      <Amount>55.00</Amount>\r\n      <LinkedTxn>\r\n        <TxnId>70</TxnId>\r\n        <TxnType>Invoice</TxnType>\r\n      </LinkedTxn>\r\n      <LineEx>\r\n        <NameValue>\r\n          <Name>txnId</Name>\r\n          <Value>70</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n          <Name>txnOpenBalance</Name>\r\n          <Value>71.00</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n          <Name>txnReferenceNumber</Name>\r\n          <Value>1024</Value>\r\n        </NameValue>\r\n      </LineEx>\r\n    </Line>\r\n    <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n    <DepositToAccountRef>4</DepositToAccountRef>\r\n    <TotalAmt>65.00</TotalAmt>\r\n    <UnappliedAmt>10.00</UnappliedAmt>\r\n    <ProcessPayment>false</ProcessPayment>\r\n  </Payment>\r\n</IntuitResponse>',
                "Query0-request-xml":
                    "select * from Payment Where Metadata.LastUpdatedTime>'2015-01-16' Order By Metadata.LastUpdatedTime",
                "Read0-response":
                    '{\n  "Payment": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "DepositToAccountRef": {\n      "value": "4"\n    }, \n    "UnappliedAmt": 10.0, \n    "TxnDate": "2015-01-16", \n    "TotalAmt": 65.0, \n    "ProcessPayment": false, \n    "sparse": false, \n    "Line": [\n      {\n        "Amount": 55.0, \n        "LineEx": {\n          "any": [\n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "txnId", \n                "Value": "70"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }, \n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "txnOpenBalance", \n                "Value": "71.00"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }, \n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "txnReferenceNumber", \n                "Value": "1024"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }\n          ]\n        }, \n        "LinkedTxn": [\n          {\n            "TxnId": "70", \n            "TxnType": "Invoice"\n          }\n        ]\n      }\n    ], \n    "CustomerRef": {\n      "name": "Red Rock Diner", \n      "value": "20"\n    }, \n    "Id": "163", \n    "MetaData": {\n      "CreateTime": "2015-01-16T15:08:12-08:00", \n      "LastUpdatedTime": "2015-01-16T15:08:12-08:00"\n    }\n  }, \n  "time": "2015-07-28T15:16:15.435-07:00"\n}',
                "Update1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-12-26T10:13:28.606-08:00">\r\n    <Payment domain="QBO" sparse="false">\r\n        <Id>764</Id>\r\n        <SyncToken>2</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-12-15T00:00:00-08:00</CreateTime>\r\n            <LastUpdatedTime>2013-12-26T10:13:28-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2015-12-15</TxnDate>\r\n        <Line>\r\n            <Amount>8656.25</Amount>\r\n            <LinkedTxn>\r\n                <TxnId>762</TxnId>\r\n                <TxnType>Invoice</TxnType>\r\n            </LinkedTxn>\r\n        </Line>\r\n        <Line>\r\n            <Amount>2824.03</Amount>\r\n            <LinkedTxn>\r\n                <TxnId>763</TxnId>\r\n                <TxnType>Invoice</TxnType>\r\n            </LinkedTxn>\r\n        </Line>\r\n        <Line>\r\n            <Amount>2080.11</Amount>\r\n            <LinkedTxn>\r\n                <TxnId>761</TxnId>\r\n                <TxnType>Invoice</TxnType>\r\n            </LinkedTxn>\r\n        </Line>\r\n        <CustomerRef>35</CustomerRef>\r\n        <DepositToAccountRef>50</DepositToAccountRef>\r\n        <PaymentMethodRef>8</PaymentMethodRef>\r\n        <PaymentRefNum>42000</PaymentRefNum>\r\n        <TotalAmt>13560.39</TotalAmt>\r\n        <UnappliedAmt>0</UnappliedAmt>\r\n    </Payment>\r\n</IntuitResponse>\r\n',
                "Update1-request-xml":
                    '<Payment xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>764</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2015-12-15T00:00:00-08:00</CreateTime>\r\n        <LastUpdatedTime>2015-12-15T00:00:00-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-12-15</TxnDate>\r\n    <CustomerRef>35</CustomerRef>\r\n    <DepositToAccountRef>50</DepositToAccountRef>\r\n    <PaymentMethodRef>8</PaymentMethodRef>\r\n    <PaymentRefNum>42000</PaymentRefNum>\r\n    <TotalAmt>13560.39</TotalAmt>\r\n    <UnappliedAmt>0</UnappliedAmt>\r\n</Payment>\r\n',
                "Update0-response":
                    '{\n  "Payment": {\n    "SyncToken": "1", \n    "domain": "QBO", \n    "PaymentMethodRef": {\n      "value": "16"\n    }, \n    "UnappliedAmt": 0, \n    "TxnDate": "2013-03-13", \n    "TotalAmt": 0, \n    "PaymentRefNum": "123456", \n    "sparse": false, \n    "Line": [\n      {\n        "Amount": 300, \n        "LinkedTxn": [\n          {\n            "TxnId": "67", \n            "TxnType": "Invoice"\n          }\n        ]\n      }, \n      {\n        "Amount": 300, \n        "LinkedTxn": [\n          {\n            "TxnId": "68", \n            "TxnType": "CreditMemo"\n          }\n        ]\n      }\n    ], \n    "CustomerRef": {\n      "value": "16"\n    }, \n    "Id": "69", \n    "MetaData": {\n      "CreateTime": "2013-03-13T14:49:21-07:00", \n      "LastUpdatedTime": "2013-03-13T14:49:21-07:00"\n    }\n  }, \n  "time": "2013-03-13T14:49:41.512-07:00"\n}',
                "Create0-response":
                    '{\n  "Payment": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "DepositToAccountRef": {\n      "value": "4"\n    }, \n    "UnappliedAmt": 0, \n    "TxnDate": "2014-12-30", \n    "TotalAmt": 55.0, \n    "ProcessPayment": false, \n    "sparse": false, \n    "Line": [\n      {\n        "Amount": 55.0, \n        "LineEx": {\n          "any": [\n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "txnId", \n                "Value": "69"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }, \n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "txnOpenBalance", \n                "Value": "55.00"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }, \n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "txnReferenceNumber", \n                "Value": "1023"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }\n          ]\n        }, \n        "LinkedTxn": [\n          {\n            "TxnId": "69", \n            "TxnType": "Invoice"\n          }\n        ]\n      }\n    ], \n    "CustomerRef": {\n      "name": "Red Rock Diner", \n      "value": "20"\n    }, \n    "Id": "150", \n    "MetaData": {\n      "CreateTime": "2014-12-30T10:07:20-08:00", \n      "LastUpdatedTime": "2014-12-30T10:07:20-08:00"\n    }\n  }, \n  "time": "2014-12-30T10:07:20.83-08:00"\n}',
                "Create1-request": '{\n  "TotalAmt": 25.0, \n  "CustomerRef": {\n    "value": "20"\n  }\n}',
                "Update1-request":
                    '{\n  "SyncToken": "1", \n  "domain": "QBO", \n  "Id": "3112", \n  "sparse": true, \n  "Line": []\n}',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-30T10:23:20.247-08:00">\r\n  <Payment domain="QBO" sparse="false">\r\n    <Id>153</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-12-30T10:23:20-08:00</CreateTime>\r\n      <LastUpdatedTime>2014-12-30T10:23:20-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2014-12-30</TxnDate>\r\n    <Line>\r\n      <Amount>15.00</Amount>\r\n      <LinkedTxn>\r\n        <TxnId>70</TxnId>\r\n        <TxnType>Invoice</TxnType>\r\n      </LinkedTxn>\r\n      <LineEx>\r\n        <NameValue>\r\n          <Name>txnId</Name>\r\n          <Value>70</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n          <Name>txnOpenBalance</Name>\r\n          <Value>156.00</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n          <Name>txnReferenceNumber</Name>\r\n          <Value>1024</Value>\r\n        </NameValue>\r\n      </LineEx>\r\n    </Line>\r\n    <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n    <DepositToAccountRef>4</DepositToAccountRef>\r\n    <TotalAmt>15.00</TotalAmt>\r\n    <UnappliedAmt>0</UnappliedAmt>\r\n    <ProcessPayment>false</ProcessPayment>\r\n  </Payment>\r\n</IntuitResponse>',
                "Update2-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-02-23T12:58:21.959-08:00">\r\n    <Payment domain="QBO" sparse="false">\r\n        <Id>61</Id>\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-11-07T15:21:23-08:00</CreateTime>\r\n            <LastUpdatedTime>2015-02-23T12:58:22-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2014-11-02</TxnDate>\r\n        <PrivateNote>Voided</PrivateNote>\r\n        <CustomerRef name="Cool Cars">3</CustomerRef>\r\n        <DepositToAccountRef>35</DepositToAccountRef>\r\n        <PaymentMethodRef>2</PaymentMethodRef>\r\n        <PaymentRefNum>1886</PaymentRefNum>\r\n        <TotalAmt>0</TotalAmt>\r\n        <UnappliedAmt>0</UnappliedAmt>\r\n        <ProcessPayment>false</ProcessPayment>\r\n    </Payment>\r\n</IntuitResponse>\r\n',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-04-23T08:30:33.626-07:00">\r\n  <Payment domain="QBO" status="Deleted">\r\n  <Id>8748</Id>\r\n  </Payment>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "TotalAmt": 55.0, \n  "Line": [\n    {\n      "Amount": 55.0, \n      "LinkedTxn": [\n        {\n          "TxnId": "69", \n          "TxnType": "Invoice"\n        }\n      ]\n    }\n  ], \n  "CustomerRef": {\n    "name": "Red Rock Diner", \n    "value": "20"\n  }\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T15:14:56.605-07:00">\r\n  <QueryResponse startPosition="1" maxResults="6">\r\n    <Payment domain="QBO" sparse="false">\r\n      <Id>161</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2015-01-16T14:58:32-08:00</CreateTime>\r\n        <LastUpdatedTime>2015-01-16T14:58:32-08:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <TxnDate>2015-01-16</TxnDate>\r\n      <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n      <DepositToAccountRef>4</DepositToAccountRef>\r\n      <TotalAmt>55.00</TotalAmt>\r\n      <UnappliedAmt>55.00</UnappliedAmt>\r\n      <ProcessPayment>false</ProcessPayment>\r\n    </Payment>\r\n    <Payment domain="QBO" sparse="false">\r\n      <Id>162</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2015-01-16T14:58:59-08:00</CreateTime>\r\n        <LastUpdatedTime>2015-01-16T14:58:59-08:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <TxnDate>2015-01-16</TxnDate>\r\n      <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n      <DepositToAccountRef>4</DepositToAccountRef>\r\n      <TotalAmt>65.00</TotalAmt>\r\n      <UnappliedAmt>65.00</UnappliedAmt>\r\n      <ProcessPayment>false</ProcessPayment>\r\n    </Payment>\r\n    <Payment domain="QBO" sparse="false">\r\n      <Id>163</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2015-01-16T15:08:12-08:00</CreateTime>\r\n        <LastUpdatedTime>2015-01-16T15:08:12-08:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <TxnDate>2015-01-16</TxnDate>\r\n      <Line>\r\n        <Amount>55.00</Amount>\r\n        <LinkedTxn>\r\n          <TxnId>70</TxnId>\r\n          <TxnType>Invoice</TxnType>\r\n        </LinkedTxn>\r\n        <LineEx>\r\n          <NameValue>\r\n            <Name>txnId</Name>\r\n            <Value>70</Value>\r\n          </NameValue>\r\n          <NameValue>\r\n            <Name>txnOpenBalance</Name>\r\n            <Value>71.00</Value>\r\n          </NameValue>\r\n          <NameValue>\r\n            <Name>txnReferenceNumber</Name>\r\n            <Value>1024</Value>\r\n          </NameValue>\r\n        </LineEx>\r\n      </Line>\r\n      <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n      <DepositToAccountRef>4</DepositToAccountRef>\r\n      <TotalAmt>65.00</TotalAmt>\r\n      <UnappliedAmt>10.00</UnappliedAmt>\r\n      <ProcessPayment>false</ProcessPayment>\r\n    </Payment>\r\n    <Payment domain="QBO" sparse="false">\r\n      <Id>164</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2015-01-16T15:09:22-08:00</CreateTime>\r\n        <LastUpdatedTime>2015-01-16T15:09:22-08:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <TxnDate>2015-01-16</TxnDate>\r\n      <Line>\r\n        <Amount>55.00</Amount>\r\n        <LinkedTxn>\r\n          <TxnId>70</TxnId>\r\n          <TxnType>Invoice</TxnType>\r\n        </LinkedTxn>\r\n        <LineEx>\r\n          <NameValue>\r\n            <Name>txnId</Name>\r\n            <Value>70</Value>\r\n          </NameValue>\r\n          <NameValue>\r\n            <Name>txnOpenBalance</Name>\r\n            <Value>71.00</Value>\r\n          </NameValue>\r\n          <NameValue>\r\n            <Name>txnReferenceNumber</Name>\r\n            <Value>1024</Value>\r\n          </NameValue>\r\n        </LineEx>\r\n      </Line>\r\n      <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n      <DepositToAccountRef>4</DepositToAccountRef>\r\n      <TotalAmt>300.00</TotalAmt>\r\n      <UnappliedAmt>245.00</UnappliedAmt>\r\n      <ProcessPayment>false</ProcessPayment>\r\n    </Payment>\r\n    <Payment domain="QBO" sparse="false">\r\n      <Id>170</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2015-02-04T10:42:16-08:00</CreateTime>\r\n        <LastUpdatedTime>2015-02-04T10:42:16-08:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <TxnDate>2015-02-04</TxnDate>\r\n      <Line>\r\n        <Amount>15.00</Amount>\r\n        <LinkedTxn>\r\n          <TxnId>70</TxnId>\r\n          <TxnType>Invoice</TxnType>\r\n        </LinkedTxn>\r\n        <LineEx>\r\n          <NameValue>\r\n            <Name>txnId</Name>\r\n            <Value>70</Value>\r\n          </NameValue>\r\n          <NameValue>\r\n            <Name>txnOpenBalance</Name>\r\n            <Value>31.00</Value>\r\n          </NameValue>\r\n          <NameValue>\r\n            <Name>txnReferenceNumber</Name>\r\n            <Value>1024</Value>\r\n          </NameValue>\r\n        </LineEx>\r\n      </Line>\r\n      <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n      <DepositToAccountRef>4</DepositToAccountRef>\r\n      <TotalAmt>15.00</TotalAmt>\r\n      <UnappliedAmt>0</UnappliedAmt>\r\n      <ProcessPayment>false</ProcessPayment>\r\n    </Payment>\r\n    <Payment domain="QBO" sparse="false">\r\n      <Id>171</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2015-02-04T10:42:33-08:00</CreateTime>\r\n        <LastUpdatedTime>2015-02-04T10:42:33-08:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <TxnDate>2015-02-04</TxnDate>\r\n      <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n      <DepositToAccountRef>4</DepositToAccountRef>\r\n      <TotalAmt>55.00</TotalAmt>\r\n      <UnappliedAmt>55.00</UnappliedAmt>\r\n      <ProcessPayment>false</ProcessPayment>\r\n    </Payment>\r\n  </QueryResponse>\r\n</IntuitResponse>',
                "Query0-request":
                    "\"select * from Payment Where Metadata.LastUpdatedTime>'2015-01-16' Order By Metadata.LastUpdatedTime\"",
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-28T15:16:38.467-07:00">\r\n  <Payment domain="QBO" sparse="false">\r\n    <Id>163</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2015-01-16T15:08:12-08:00</CreateTime>\r\n      <LastUpdatedTime>2015-01-16T15:08:12-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2015-01-16</TxnDate>\r\n    <Line>\r\n      <Amount>55.00</Amount>\r\n      <LinkedTxn>\r\n        <TxnId>70</TxnId>\r\n        <TxnType>Invoice</TxnType>\r\n      </LinkedTxn>\r\n      <LineEx>\r\n        <NameValue>\r\n          <Name>txnId</Name>\r\n          <Value>70</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n          <Name>txnOpenBalance</Name>\r\n          <Value>71.00</Value>\r\n        </NameValue>\r\n        <NameValue>\r\n          <Name>txnReferenceNumber</Name>\r\n          <Value>1024</Value>\r\n        </NameValue>\r\n      </LineEx>\r\n    </Line>\r\n    <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n    <DepositToAccountRef>4</DepositToAccountRef>\r\n    <TotalAmt>65.00</TotalAmt>\r\n    <UnappliedAmt>10.00</UnappliedAmt>\r\n    <ProcessPayment>false</ProcessPayment>\r\n  </Payment>\r\n</IntuitResponse>',
                "Update0-request-xml":
                    '<Payment xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n         <Id>8748</Id>\r\n         <SyncToken>0</SyncToken>\r\n         <MetaData>\r\n            <CreateTime>2013-07-11T17:51:41-07:00</CreateTime>\r\n            <LastUpdatedTime>2013-07-11T17:51:41-07:00</LastUpdatedTime>\r\n         </MetaData>\r\n         <TxnDate>2013-07-11</TxnDate>\r\n         <PrivateNote>H60jzmw0Uq</PrivateNote>\r\n         <CustomerRef>25342</CustomerRef>\r\n         <DepositToAccountRef>4</DepositToAccountRef>\r\n         <TotalAmt>40.00</TotalAmt>\r\n         <UnappliedAmt>40.00</UnappliedAmt>\r\n</Payment>',
                "Update2-request-xml":
                    '<Payment xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>61</Id>\r\n    <SyncToken>0</SyncToken>\r\n</Payment>\r\n\r\n',
                "Create1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-12-30T10:13:54.219-08:00">\r\n    <Payment domain="QBO" sparse="false">\r\n        <Id>151</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-12-30T10:13:54-08:00</CreateTime>\r\n            <LastUpdatedTime>2014-12-30T10:13:54-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <TxnDate>2014-12-30</TxnDate>\r\n        <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n        <DepositToAccountRef>4</DepositToAccountRef>\r\n        <TotalAmt>20.00</TotalAmt>\r\n        <UnappliedAmt>20.00</UnappliedAmt>\r\n        <ProcessPayment>false</ProcessPayment>\r\n    </Payment>\r\n</IntuitResponse>\r\n',
                "Delete0-response":
                    '{\n  "Payment": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "73"\n  }, \n  "time": "2013-03-14T11:57:42.849-07:00"\n}',
                "Create1-response":
                    '{\n  "Payment": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "DepositToAccountRef": {\n      "value": "4"\n    }, \n    "UnappliedAmt": 25.0, \n    "TxnDate": "2014-12-30", \n    "TotalAmt": 25.0, \n    "ProcessPayment": false, \n    "sparse": false, \n    "Line": [], \n    "CustomerRef": {\n      "name": "Red Rock Diner", \n      "value": "20"\n    }, \n    "Id": "154", \n    "MetaData": {\n      "CreateTime": "2014-12-30T10:26:03-08:00", \n      "LastUpdatedTime": "2014-12-30T10:26:03-08:00"\n    }\n  }, \n  "time": "2014-12-30T10:26:03.668-08:00"\n}',
                "Delete0-request-xml":
                    '<Payment xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n   <Id>8748</Id>\r\n   <SyncToken>0</SyncToken>\r\n</Payment>',
                "Update0-request":
                    '{\n  "SyncToken": "0", \n  "PaymentMethodRef": {\n    "value": "16"\n  }, \n  "PaymentRefNum": "123456", \n  "sparse": false, \n  "Line": [\n    {\n      "Amount": 300, \n      "LinkedTxn": [\n        {\n          "TxnId": "67", \n          "TxnType": "Invoice"\n        }\n      ]\n    }, \n    {\n      "Amount": 300, \n      "LinkedTxn": [\n        {\n          "TxnId": "68", \n          "TxnType": "CreditMemo"\n        }\n      ]\n    }\n  ], \n  "CustomerRef": {\n    "value": "16"\n  }, \n  "Id": "69", \n  "MetaData": {\n    "CreateTime": "2013-03-13T14:49:21-07:00", \n    "LastUpdatedTime": "2013-03-13T14:49:21-07:00"\n  }\n}',
                "Send0-response":
                    '{\n  "Payment": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "DepositToAccountRef": {\n      "value": "4"\n    }, \n    "UnappliedAmt": 10.0, \n    "TxnDate": "2015-01-16", \n    "TotalAmt": 65.0, \n    "ProcessPayment": false, \n    "sparse": false, \n    "Line": [\n      {\n        "Amount": 55.0, \n        "LineEx": {\n          "any": [\n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "txnId", \n                "Value": "70"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }, \n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "txnOpenBalance", \n                "Value": "71.00"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }, \n            {\n              "name": "{http://schema.intuit.com/finance/v3}NameValue", \n              "nil": false, \n              "value": {\n                "Name": "txnReferenceNumber", \n                "Value": "1024"\n              }, \n              "declaredType": "com.intuit.schema.finance.v3.NameValue", \n              "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n              "globalScope": true, \n              "typeSubstituted": false\n            }\n          ]\n        }, \n        "LinkedTxn": [\n          {\n            "TxnId": "70", \n            "TxnType": "Invoice"\n          }\n        ]\n      }\n    ], \n    "CustomerRef": {\n      "name": "Red Rock Diner", \n      "value": "20"\n    }, \n    "Id": "163", \n    "MetaData": {\n      "CreateTime": "2015-01-16T15:08:12-08:00", \n      "LastUpdatedTime": "2015-01-16T15:08:12-08:00"\n    }\n  }, \n  "time": "2015-07-28T15:16:15.435-07:00"\n}',
                "Create1-request-xml":
                    '<Payment xmlns="http://schema.intuit.com/finance/v3">\r\n    <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n    <TotalAmt>20</TotalAmt>\r\n</Payment>\r\n',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-04-23T18:10:54.259-07:00">\r\n    <Payment domain="QBO" sparse="false">\r\n         <Id>8748</Id>\r\n         <SyncToken>1</SyncToken>\r\n         <MetaData>\r\n            <CreateTime>2013-07-11T17:51:41-07:00</CreateTime>\r\n            <LastUpdatedTime>2013-07-11T17:51:43-07:00</LastUpdatedTime>\r\n         </MetaData>\r\n         <TxnDate>2013-07-11</TxnDate>\r\n         <PrivateNote>H60jzmw0Uq</PrivateNote>\r\n         <CustomerRef>25342</CustomerRef>\r\n         <DepositToAccountRef>4</DepositToAccountRef>\r\n         <TotalAmt>40.00</TotalAmt>\r\n         <UnappliedAmt>40.00</UnappliedAmt>\r\n    </Payment>\r\n</IntuitResponse>',
                "Update2-request": '{\n  "SyncToken": "1", \n  "Id": "33", \n  "sparse": true\n}',
                "Update2-response":
                    '{\n  "Payment": {\n    "SyncToken": "2", \n    "domain": "QBO", \n    "PaymentMethodRef": {\n      "value": "2"\n    }, \n    "DepositToAccountRef": {\n      "value": "35"\n    }, \n    "UnappliedAmt": 0, \n    "TxnDate": "2014-11-07", \n    "TotalAmt": 0, \n    "ProcessPayment": false, \n    "PrivateNote": "Voided", \n    "sparse": false, \n    "Line": [], \n    "CustomerRef": {\n      "name": "Freeman Sporting Goods:55 Twin Lane", \n      "value": "9"\n    }, \n    "Id": "33", \n    "MetaData": {\n      "CreateTime": "2014-11-07T11:07:19-08:00", \n      "LastUpdatedTime": "2015-02-23T12:52:07-08:00"\n    }\n  }, \n  "time": "2015-02-23T12:52:06.954-08:00"\n}',
                "Create0-request-xml":
                    '<Payment xmlns="http://schema.intuit.com/finance/v3">\r\n   <CustomerRef name="Red Rock Diner">20</CustomerRef>\r\n   <TotalAmt>15</TotalAmt>\r\n       <Line>\r\n       <Amount>15.00</Amount>\r\n        <LinkedTxn>\r\n            <TxnId>70</TxnId>\r\n            <TxnType>Invoice</TxnType>\r\n        </LinkedTxn>\r\n    </Line>\r\n</Payment>',
                "Update1-response":
                    '{\n  "Payment": {\n    "SyncToken": "2", \n    "domain": "QBO", \n    "PaymentMethodRef": {\n      "value": "253"\n    }, \n    "DepositToAccountRef": {\n      "value": "4"\n    }, \n    "UnappliedAmt": 80.0, \n    "TxnDate": "2012-06-26", \n    "TotalAmt": 80.0, \n    "PaymentRefNum": "123456", \n    "sparse": false, \n    "Line": [], \n    "CustomerRef": {\n      "value": "2903"\n    }, \n    "Id": "3112", \n    "MetaData": {\n      "CreateTime": "2013-03-12T13:57:55-07:00", \n      "LastUpdatedTime": "2013-03-15T11:05:47-07:00"\n    }\n  }, \n  "time": "2013-03-15T11:06:08.072-07:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "Payment": [\n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DepositToAccountRef": {\n          "value": "4"\n        }, \n        "UnappliedAmt": 55.0, \n        "TxnDate": "2015-01-16", \n        "TotalAmt": 55.0, \n        "ProcessPayment": false, \n        "sparse": false, \n        "Line": [], \n        "CustomerRef": {\n          "name": "Red Rock Diner", \n          "value": "20"\n        }, \n        "Id": "161", \n        "MetaData": {\n          "CreateTime": "2015-01-16T14:58:32-08:00", \n          "LastUpdatedTime": "2015-01-16T14:58:32-08:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DepositToAccountRef": {\n          "value": "4"\n        }, \n        "UnappliedAmt": 65.0, \n        "TxnDate": "2015-01-16", \n        "TotalAmt": 65.0, \n        "ProcessPayment": false, \n        "sparse": false, \n        "Line": [], \n        "CustomerRef": {\n          "name": "Red Rock Diner", \n          "value": "20"\n        }, \n        "Id": "162", \n        "MetaData": {\n          "CreateTime": "2015-01-16T14:58:59-08:00", \n          "LastUpdatedTime": "2015-01-16T14:58:59-08:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DepositToAccountRef": {\n          "value": "4"\n        }, \n        "UnappliedAmt": 10.0, \n        "TxnDate": "2015-01-16", \n        "TotalAmt": 65.0, \n        "ProcessPayment": false, \n        "sparse": false, \n        "Line": [\n          {\n            "Amount": 55.0, \n            "LineEx": {\n              "any": [\n                {\n                  "name": "{http://schema.intuit.com/finance/v3}NameValue", \n                  "nil": false, \n                  "value": {\n                    "Name": "txnId", \n                    "Value": "70"\n                  }, \n                  "declaredType": "com.intuit.schema.finance.v3.NameValue", \n                  "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n                  "globalScope": true, \n                  "typeSubstituted": false\n                }, \n                {\n                  "name": "{http://schema.intuit.com/finance/v3}NameValue", \n                  "nil": false, \n                  "value": {\n                    "Name": "txnOpenBalance", \n                    "Value": "71.00"\n                  }, \n                  "declaredType": "com.intuit.schema.finance.v3.NameValue", \n                  "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n                  "globalScope": true, \n                  "typeSubstituted": false\n                }, \n                {\n                  "name": "{http://schema.intuit.com/finance/v3}NameValue", \n                  "nil": false, \n                  "value": {\n                    "Name": "txnReferenceNumber", \n                    "Value": "1024"\n                  }, \n                  "declaredType": "com.intuit.schema.finance.v3.NameValue", \n                  "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n                  "globalScope": true, \n                  "typeSubstituted": false\n                }\n              ]\n            }, \n            "LinkedTxn": [\n              {\n                "TxnId": "70", \n                "TxnType": "Invoice"\n              }\n            ]\n          }\n        ], \n        "CustomerRef": {\n          "name": "Red Rock Diner", \n          "value": "20"\n        }, \n        "Id": "163", \n        "MetaData": {\n          "CreateTime": "2015-01-16T15:08:12-08:00", \n          "LastUpdatedTime": "2015-01-16T15:08:12-08:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DepositToAccountRef": {\n          "value": "4"\n        }, \n        "UnappliedAmt": 245.0, \n        "TxnDate": "2015-01-16", \n        "TotalAmt": 300.0, \n        "ProcessPayment": false, \n        "sparse": false, \n        "Line": [\n          {\n            "Amount": 55.0, \n            "LineEx": {\n              "any": [\n                {\n                  "name": "{http://schema.intuit.com/finance/v3}NameValue", \n                  "nil": false, \n                  "value": {\n                    "Name": "txnId", \n                    "Value": "70"\n                  }, \n                  "declaredType": "com.intuit.schema.finance.v3.NameValue", \n                  "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n                  "globalScope": true, \n                  "typeSubstituted": false\n                }, \n                {\n                  "name": "{http://schema.intuit.com/finance/v3}NameValue", \n                  "nil": false, \n                  "value": {\n                    "Name": "txnOpenBalance", \n                    "Value": "71.00"\n                  }, \n                  "declaredType": "com.intuit.schema.finance.v3.NameValue", \n                  "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n                  "globalScope": true, \n                  "typeSubstituted": false\n                }, \n                {\n                  "name": "{http://schema.intuit.com/finance/v3}NameValue", \n                  "nil": false, \n                  "value": {\n                    "Name": "txnReferenceNumber", \n                    "Value": "1024"\n                  }, \n                  "declaredType": "com.intuit.schema.finance.v3.NameValue", \n                  "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n                  "globalScope": true, \n                  "typeSubstituted": false\n                }\n              ]\n            }, \n            "LinkedTxn": [\n              {\n                "TxnId": "70", \n                "TxnType": "Invoice"\n              }\n            ]\n          }\n        ], \n        "CustomerRef": {\n          "name": "Red Rock Diner", \n          "value": "20"\n        }, \n        "Id": "164", \n        "MetaData": {\n          "CreateTime": "2015-01-16T15:09:22-08:00", \n          "LastUpdatedTime": "2015-01-16T15:09:22-08:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DepositToAccountRef": {\n          "value": "4"\n        }, \n        "UnappliedAmt": 0, \n        "TxnDate": "2015-02-04", \n        "TotalAmt": 15.0, \n        "ProcessPayment": false, \n        "sparse": false, \n        "Line": [\n          {\n            "Amount": 15.0, \n            "LineEx": {\n              "any": [\n                {\n                  "name": "{http://schema.intuit.com/finance/v3}NameValue", \n                  "nil": false, \n                  "value": {\n                    "Name": "txnId", \n                    "Value": "70"\n                  }, \n                  "declaredType": "com.intuit.schema.finance.v3.NameValue", \n                  "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n                  "globalScope": true, \n                  "typeSubstituted": false\n                }, \n                {\n                  "name": "{http://schema.intuit.com/finance/v3}NameValue", \n                  "nil": false, \n                  "value": {\n                    "Name": "txnOpenBalance", \n                    "Value": "31.00"\n                  }, \n                  "declaredType": "com.intuit.schema.finance.v3.NameValue", \n                  "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n                  "globalScope": true, \n                  "typeSubstituted": false\n                }, \n                {\n                  "name": "{http://schema.intuit.com/finance/v3}NameValue", \n                  "nil": false, \n                  "value": {\n                    "Name": "txnReferenceNumber", \n                    "Value": "1024"\n                  }, \n                  "declaredType": "com.intuit.schema.finance.v3.NameValue", \n                  "scope": "javax.xml.bind.JAXBElement$GlobalScope", \n                  "globalScope": true, \n                  "typeSubstituted": false\n                }\n              ]\n            }, \n            "LinkedTxn": [\n              {\n                "TxnId": "70", \n                "TxnType": "Invoice"\n              }\n            ]\n          }\n        ], \n        "CustomerRef": {\n          "name": "Red Rock Diner", \n          "value": "20"\n        }, \n        "Id": "170", \n        "MetaData": {\n          "CreateTime": "2015-02-04T10:42:16-08:00", \n          "LastUpdatedTime": "2015-02-04T10:42:16-08:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "DepositToAccountRef": {\n          "value": "4"\n        }, \n        "UnappliedAmt": 55.0, \n        "TxnDate": "2015-02-04", \n        "TotalAmt": 55.0, \n        "ProcessPayment": false, \n        "sparse": false, \n        "Line": [], \n        "CustomerRef": {\n          "name": "Red Rock Diner", \n          "value": "20"\n        }, \n        "Id": "171", \n        "MetaData": {\n          "CreateTime": "2015-02-04T10:42:33-08:00", \n          "LastUpdatedTime": "2015-02-04T10:42:33-08:00"\n        }\n      }\n    ], \n    "maxResults": 6\n  }, \n  "time": "2015-07-28T15:15:25.802-07:00"\n}',
            },
            Taxsummary: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/TaxSummary?agency_id=1&start_date=2015-04-26&end_date=2015-04-26"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "TaxSummary", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "StartPeriod": "2015-04-26", \n    "Currency": "EUR", \n    "EndPeriod": "2015-04-26", \n    "Time": "2015-04-26T22:23:51-07:00", \n    "SummarizeColumnsBy": "Total"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "value": "Case 01 Vente, prestations de services"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "group": "Case 01"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Case 02 Autres operations imposables"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "group": "Case 02"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Case 22 2 Report du cr\\u00c3\\u00a9dit apparaissant ligne 27 de la pr\\u00c3\\u00a9c\\u00c3\\u00a9dente d\\u00c3\\u00a9claration"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "group": "Case 22"\n      }, \n      {\n        "group": "Case 23", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Case 23 Total TVA d\\u00c3\\u00a9ductible (lignes 19 \\u00c3  22)"\n            }, \n            {\n              "value": "0.00"\n            }\n          ]\n        }\n      }, \n      {\n        "group": "Case 25", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Case 25 Cr\\u00c3\\u00a9dit de TVA (ligne 23 \\u00e2\\u20ac\\u201c ligne 16)"\n            }, \n            {\n              "value": "0.00"\n            }\n          ]\n        }\n      }, \n      {\n        "group": "Case 27", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Case 27 Cr\\u00c3\\u00a9dit \\u00c3  reporter (ligne 25 \\u00e2\\u20ac\\u201c ligne 26 \\u00e2\\u20ac\\u201c ligne AA) (Cette somme est \\u00c3  reporter ligne 22 de la prochaine d\\u00c3\\u00a9claration)"\n            }, \n            {\n              "value": "0.00"\n            }\n          ]\n        }\n      }, \n      {\n        "group": "Case 28", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Case 28 TVA nette due (ligne 16 \\u00e2\\u20ac\\u201c ligne 23)"\n            }, \n            {\n              "value": "0.00"\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Case 29 Taxes assimil\\u00c3\\u00a9es calcul\\u00c3\\u00a9es sur annexe no 3310 A"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "group": "Case 29"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Case 30 Sommes \\u00c3  imputer, y compris acompte cong\\u00c3\\u00a9s"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "group": "Case 30"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "Case 31 Sommes \\u00c3  ajouter, y compris acompte cong\\u00c3\\u00a9s"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "group": "Case 31"\n      }, \n      {\n        "group": "Case 32", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "Case 32 Total \\u00c3  payer (lignes 28 + 29 - 30 + 31 \\u00e2\\u20ac\\u201c AB)"\n            }, \n            {\n              "value": "0.00"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "String", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total"\n      }\n    ]\n  }\n}',
            },
            Fecreport: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/FECReport?start_date=2019-11-01&end_date=2021-11-06&attachmentType=TEMPORARY_LINKS&add_due_date=true"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "FECReport", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "ReportBasis": "Accrual", \n    "StartPeriod": "2021-07-01", \n    "Currency": "EUR", \n    "EndPeriod": "2021-07-28", \n    "Time": "2021-07-28T04:37:20-07:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "value": "VT"\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "41100001"\n          }, \n          {\n            "value": "Clients"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "F1001"\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "Customer - F1001"\n          }, \n          {\n            "value": "800.00"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": "AA"\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "[{\\"filename\\":\\"Invoice F1001.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-30.s3.amazonaws.com/9130355064301256/attachments/15e85a6e-bc14-4340-a8ed-36ca44d96384Invoice%20F1001.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=GdV0t2vNhRI7pMtjuoDkM3CiFaA%3D\\",\\"attachableId\\":\\"100100000000000001601\\"},{\\"filename\\":\\"Credit Note A01.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-1.s3.amazonaws.com/9130355064301256/attachments/8ec5b9e6-9ff0-41ea-b36d-bafb866eb488Credit%20Note%20A01.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=lIsb3k7BSGG%2FgrTzgaGLocBDmLY%3D\\",\\"attachableId\\":\\"100100000000000001623\\"},{\\"filename\\":\\"Invoice F1002.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-15.s3.amazonaws.com/9130355064301256/attachments/c893ffc1-5c54-4501-854d-0b67a8b53a25Invoice%20F1002.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=tUHcOoAjCcJ3ptI%2Feo9aZVfCS8c%3D\\",\\"attachableId\\":\\"100100000000000001624\\"},{\\"filename\\":\\"Invoice F1001 voided.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-22.s3.amazonaws.com/9130355064301256/attachments/7d3bdb3b-1c5c-46a9-9b9d-dff04a532b62Invoice%20F1001%20voided.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=%2Fa7T1yjK3Vn8nIN3fhrAxm6BRHs%3D\\",\\"attachableId\\":\\"100100000000000001625\\"}]"\n          }, \n          {\n            "value": "20210818"\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "Customer"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "VT"\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "70710000"\n          }, \n          {\n            "value": "Ventes de Marchandises (ou groupe) A 0%"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "F1001"\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "Customer - F1001 - Sale of Products"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": "800.00"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "[{\\"filename\\":\\"Invoice F1001.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-30.s3.amazonaws.com/9130355064301256/attachments/15e85a6e-bc14-4340-a8ed-36ca44d96384Invoice%20F1001.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=GdV0t2vNhRI7pMtjuoDkM3CiFaA%3D\\",\\"attachableId\\":\\"100100000000000001601\\"},{\\"filename\\":\\"Credit Note A01.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-1.s3.amazonaws.com/9130355064301256/attachments/8ec5b9e6-9ff0-41ea-b36d-bafb866eb488Credit%20Note%20A01.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=lIsb3k7BSGG%2FgrTzgaGLocBDmLY%3D\\",\\"attachableId\\":\\"100100000000000001623\\"},{\\"filename\\":\\"Invoice F1002.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-15.s3.amazonaws.com/9130355064301256/attachments/c893ffc1-5c54-4501-854d-0b67a8b53a25Invoice%20F1002.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=tUHcOoAjCcJ3ptI%2Feo9aZVfCS8c%3D\\",\\"attachableId\\":\\"100100000000000001624\\"},{\\"filename\\":\\"Invoice F1001 voided.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-22.s3.amazonaws.com/9130355064301256/attachments/7d3bdb3b-1c5c-46a9-9b9d-dff04a532b62Invoice%20F1001%20voided.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=%2Fa7T1yjK3Vn8nIN3fhrAxm6BRHs%3D\\",\\"attachableId\\":\\"100100000000000001625\\"}]"\n          }, \n          {\n            "value": "20210818"\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "Sale of Products"\n          }, \n          {\n            "value": "Customer"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "VT"\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "41100001"\n          }, \n          {\n            "value": "Clients"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "A01"\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "Customer - A01"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": "800.00"\n          }, \n          {\n            "value": "AA"\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "[{\\"filename\\":\\"Credit Note A01.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-20.s3.amazonaws.com/9130355064301256/attachments/060de78e-4c72-455d-8a72-33ac3dbe36ebCredit%20Note%20A01.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=m%2Fde74p4khfgDDC%2F%2BfZIq%2BVHnuQ%3D\\",\\"attachableId\\":\\"100100000000000001627\\"},{\\"filename\\":\\"Invoice F1001 voided.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-23.s3.amazonaws.com/9130355064301256/attachments/f6b9744f-1497-473f-ac96-ad1622021915Invoice%20F1001%20voided.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=uhqIKmnR9AFtzk737uscBGXVtb4%3D\\",\\"attachableId\\":\\"100100000000000001621\\"}]"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "Customer"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "VT"\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "70710000"\n          }, \n          {\n            "value": "Ventes de Marchandises (ou groupe) A 0%"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "A01"\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "Customer - A01 - Sale of Products"\n          }, \n          {\n            "value": "800.00"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "[{\\"filename\\":\\"Credit Note A01.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-20.s3.amazonaws.com/9130355064301256/attachments/060de78e-4c72-455d-8a72-33ac3dbe36ebCredit%20Note%20A01.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=m%2Fde74p4khfgDDC%2F%2BfZIq%2BVHnuQ%3D\\",\\"attachableId\\":\\"100100000000000001627\\"},{\\"filename\\":\\"Invoice F1001 voided.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-23.s3.amazonaws.com/9130355064301256/attachments/f6b9744f-1497-473f-ac96-ad1622021915Invoice%20F1001%20voided.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=uhqIKmnR9AFtzk737uscBGXVtb4%3D\\",\\"attachableId\\":\\"100100000000000001621\\"}]"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "Sale of Products"\n          }, \n          {\n            "value": "Customer"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "VT"\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "41100001"\n          }, \n          {\n            "value": "Clients"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "F1002"\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "Customer - qwqwe - F1002"\n          }, \n          {\n            "value": "900.00"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "[{\\"filename\\":\\"Invoice F1002.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-22.s3.amazonaws.com/9130355064301256/attachments/5f1d37a4-6195-4134-9bf9-88823c7231b2Invoice%20F1002.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=1Uo1JcpwSR6YP%2BKxWhKRsZtSVxA%3D\\",\\"attachableId\\":\\"100100000000000001641\\"},{\\"filename\\":\\"Invoice F1001 voided.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-19.s3.amazonaws.com/9130355064301256/attachments/ce144cb4-0f98-4327-895e-92f0db836d44Invoice%20F1001%20voided.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=F0qyBGpWAwEkUwBKE6VWbkITWTE%3D\\",\\"attachableId\\":\\"100100000000000001622\\"}]"\n          }, \n          {\n            "value": "20210818"\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "Customer"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "VT"\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "70710000"\n          }, \n          {\n            "value": "Ventes de Marchandises (ou groupe) A 0%"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "F1002"\n          }, \n          {\n            "value": "20210719"\n          }, \n          {\n            "value": "Customer - F1002 - Sale of Products"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": "900.00"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "[{\\"filename\\":\\"Invoice F1002.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-22.s3.amazonaws.com/9130355064301256/attachments/5f1d37a4-6195-4134-9bf9-88823c7231b2Invoice%20F1002.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=1Uo1JcpwSR6YP%2BKxWhKRsZtSVxA%3D\\",\\"attachableId\\":\\"100100000000000001641\\"},{\\"filename\\":\\"Invoice F1001 voided.pdf\\",\\"tempURI\\":\\"https://intuit-qbo-preprod-19.s3.amazonaws.com/9130355064301256/attachments/ce144cb4-0f98-4327-895e-92f0db836d44Invoice%20F1001%20voided.pdf?AWSAccessKeyId=AKIAZYPU4D4LSQ626GRN&Expires=1627473140&Signature=F0qyBGpWAwEkUwBKE6VWbkITWTE%3D\\",\\"attachableId\\":\\"100100000000000001622\\"}]"\n          }, \n          {\n            "value": "20210818"\n          }, \n          {\n            "value": "Sales"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "Sale of Products"\n          }, \n          {\n            "value": "Customer"\n          }\n        ], \n        "type": "Data"\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "String", \n        "ColTitle": "JournalCode", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "journal_code_name"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "JournalLib", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "journal_code_description"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "EcritureNum", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "txn_num"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "EcritureDate", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "create_date"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "CompteNum", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "acct_num_with_extn"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "CompteLib", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "account_name"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "CompAuxNum", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "aux_account"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "CompAuxLib", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "aux_account_name"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "PieceRef", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "doc_num"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "PieceDate", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "tx_date"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "EcritureLib", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "memo"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Debit", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "debt_amt"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Credit", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "credit_amt"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "EcritureLet", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "lettrage"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "DateLet", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "paid_date"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "ValidDate", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "region_tx_validation_date"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Montantdevise", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "multicurrency_amount"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Idevise", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "multicurrency_symbol"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "AttachmentsInfo", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "attachments"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Due Date", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "due_date"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Journal Code type", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "$TECHNICAL$journal_code_type"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Supplier", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "$TECHNICAL$vend_name"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Total {0}", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "$TECHNICAL$item_name"\n          }\n        ]\n      }, \n      {\n        "ColType": "String", \n        "ColTitle": "Customer", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "$TECHNICAL$cust_name"\n          }\n        ]\n      }\n    ]\n  }\n}',
            },
            Transactionlistbycustomer: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/TransactionListByCustomer?start_date=2016-06-01&end_date=2016-07-31&group_by=Customer"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "TransactionListByCustomer", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "true"\n      }\n    ], \n    "StartPeriod": "2016-06-01", \n    "Currency": "USD", \n    "EndPeriod": "2016-07-31", \n    "Time": "2020-09-29T14:20:06-07:00"\n  }, \n  "Rows": {}, \n  "Columns": {\n    "Column": [\n      {\n        "ColTitle": "Date", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "tx_date"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Transaction Type", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "txn_type"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Num", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "doc_num"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Posting", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "is_no_post"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Memo/Description", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "memo"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Account", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "account_name"\n          }\n        ]\n      }, \n      {\n        "ColTitle": "Amount ", \n        "MetaData": [\n          {\n            "Name": "ColKey", \n            "Value": "amount"\n          }\n        ]\n      }\n    ]\n  }\n}',
            },
            zztemplate: {
                "Delete0-request": '""',
                "Query0-request-xml": "select * from Invoice where id = '44'",
                "Read0-response": '""',
                "Update1-response-xml": "Sample code not available.",
                "Update1-request-xml": "Sample code not available.",
                "Update0-response": '""',
                "Create0-response": '""',
                "Update1-request": '""',
                "Create0-response-xml": "Sample code not available.",
                "Delete0-response-xml": "Sample code not available.</intuitResponse>",
                "Create0-request": '""',
                "Query0-response-xml": "Sample code not available.</intuitResponse>",
                "Query0-request":
                    "\"select * from Invoice where Metadata.LastUpdatedTime > '2013-03-13T13:21:49-07:00'\"",
                "Read0-response-xml": "Sample code not available.</intuitResponse>",
                "Update0-request-xml": "Sample code not available.",
                "Delete0-response": '""',
                "Delete0-request-xml": "Sample code not available.",
                "Update0-request": '""',
                "Update0-response-xml": "Sample code not available.",
                "Create0-request-xml": "Sample code not available.",
                "Update1-response": '""',
                "Query0-response": '""',
            },
            Invoice: {
                "Delete0-request": '{\n  "SyncToken": "3", \n  "Id": "33"\n}',
                "Send0-response-xml":
                    'Response:<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r\n<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-04-23T08:30:39.543-07:00">\r\n  <Invoice domain="QBO" sparse="false">\r\n    <Id>45</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2013-04-23T08:30:19-07:00</CreateTime>\r\n      <LastUpdatedTime>2014-11-19T11:56:44-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomField>\r\n      <Name>Custom 1</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <CustomField>\r\n      <Name>Custom 2</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <CustomField>\r\n      <Name>Custom 3</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>1015</DocNumber>\r\n    <TxnDate>2012-04-20</TxnDate>\r\n    <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <LineNum>1</LineNum>\r\n      <Amount>15.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Sales">1</ItemRef>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Amount>15.00</Amount>\r\n      <DetailType>SubTotalLineDetail</DetailType>\r\n      <SubTotalLineDetail/>\r\n    </Line>\r\n    <TxnTaxDetail>\r\n      <TotalTax>0</TotalTax>\r\n    </TxnTaxDetail>\r\n    <CustomerRef name="QKcTQIuiGo fw8Ps8qlNZ">69</CustomerRef>\r\n    <BillAddr>\r\n      <Id>61</Id>\r\n      <Line1>3500</Line1>\r\n      <Line2>Flower Avenue</Line2>\r\n      <City>LosAltos</City>\r\n      <Lat>INVALID</Lat>\r\n      <Long>INVALID</Long>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n      <Id>62</Id>\r\n      <Line1>4500</Line1>\r\n      <Line2>Lily Place</Line2>\r\n      <Lat>38.5399041</Lat>\r\n      <Long>-121.5582189</Long>\r\n    </ShipAddr>\r\n    <DueDate>2012-05-20</DueDate>\r\n    <TotalAmt>15.00</TotalAmt>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NeedToPrint</PrintStatus>\r\n    <EmailStatus>EmailSent</EmailStatus>\r\n    <DeliveryInfo>\r\n      <DeliveryType>Email</DeliveryType>\r\n      <DeliveryTime>2014-11-19T11:56:28-08:00</DeliveryTime>\r\n    </DeliveryInfo>\r\n    <Balance>15.00</Balance>\r\n    <Deposit>0</Deposit>\r\n  </Invoice>\r\n</IntuitResponse>',
                "Query0-request-xml": "select * from Invoice where id = '239'",
                "Read0-response":
                    '{\n  "Invoice": {\n    "TxnDate": "2014-09-19", \n    "domain": "QBO", \n    "PrintStatus": "NeedToPrint", \n    "SalesTermRef": {\n      "value": "3"\n    }, \n    "TotalAmt": 362.07, \n    "Line": [\n      {\n        "Description": "Rock Fountain", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "Qty": 1, \n          "UnitPrice": 275, \n          "ItemRef": {\n            "name": "Rock Fountain", \n            "value": "5"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 275.0, \n        "Id": "1"\n      }, \n      {\n        "Description": "Fountain Pump", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "Qty": 1, \n          "UnitPrice": 12.75, \n          "ItemRef": {\n            "name": "Pump", \n            "value": "11"\n          }\n        }, \n        "LineNum": 2, \n        "Amount": 12.75, \n        "Id": "2"\n      }, \n      {\n        "Description": "Concrete for fountain installation", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "Qty": 5, \n          "UnitPrice": 9.5, \n          "ItemRef": {\n            "name": "Concrete", \n            "value": "3"\n          }\n        }, \n        "LineNum": 3, \n        "Amount": 47.5, \n        "Id": "3"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 335.25, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "DueDate": "2014-10-19", \n    "ApplyTaxAfterDiscount": false, \n    "DocNumber": "1037", \n    "sparse": false, \n    "CustomerMemo": {\n      "value": "Thank you for your business and have a great day!"\n    }, \n    "Deposit": 0, \n    "Balance": 362.07, \n    "CustomerRef": {\n      "name": "Sonnenschein Family Store", \n      "value": "24"\n    }, \n    "TxnTaxDetail": {\n      "TxnTaxCodeRef": {\n        "value": "2"\n      }, \n      "TotalTax": 26.82, \n      "TaxLine": [\n        {\n          "DetailType": "TaxLineDetail", \n          "Amount": 26.82, \n          "TaxLineDetail": {\n            "NetAmountTaxable": 335.25, \n            "TaxPercent": 8, \n            "TaxRateRef": {\n              "value": "3"\n            }, \n            "PercentBased": true\n          }\n        }\n      ]\n    }, \n    "SyncToken": "0", \n    "LinkedTxn": [\n      {\n        "TxnId": "100", \n        "TxnType": "Estimate"\n      }\n    ], \n    "BillEmail": {\n      "Address": "Familiystore@intuit.com"\n    }, \n    "ShipAddr": {\n      "City": "Middlefield", \n      "Line1": "5647 Cypress Hill Ave.", \n      "PostalCode": "94303", \n      "Lat": "37.4238562", \n      "Long": "-122.1141681", \n      "CountrySubDivisionCode": "CA", \n      "Id": "25"\n    }, \n    "EmailStatus": "NotSet", \n    "BillAddr": {\n      "Line4": "Middlefield, CA  94303", \n      "Line3": "5647 Cypress Hill Ave.", \n      "Line2": "Sonnenschein Family Store", \n      "Line1": "Russ Sonnenschein", \n      "Long": "-122.1141681", \n      "Lat": "37.4238562", \n      "Id": "95"\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-19T13:16:17-07:00", \n      "LastUpdatedTime": "2014-09-19T13:16:17-07:00"\n    }, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "StringValue": "102", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "130"\n  }, \n  "time": "2015-07-24T10:48:27.082-07:00"\n}',
                "Update1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T11:06:15.952-07:00">\r\n    <Invoice domain="QBO" sparse="false">\r\n        <Id>130</Id>\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-19T13:16:17-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-24T11:06:16-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>102</StringValue>\r\n        </CustomField>\r\n        <DocNumber>1037</DocNumber>\r\n        <TxnDate>2014-09-30</TxnDate>\r\n        <LinkedTxn>\r\n            <TxnId>100</TxnId>\r\n            <TxnType>Estimate</TxnType>\r\n        </LinkedTxn>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Rock Fountain</Description>\r\n            <Amount>275.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Rock Fountain">5</ItemRef>\r\n                <UnitPrice>275</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>TAX</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Id>2</Id>\r\n            <LineNum>2</LineNum>\r\n            <Description>Fountain Pump</Description>\r\n            <Amount>12.75</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pump">11</ItemRef>\r\n                <UnitPrice>12.75</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>TAX</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Id>3</Id>\r\n            <LineNum>3</LineNum>\r\n            <Description>Concrete for fountain installation</Description>\r\n            <Amount>47.50</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Concrete">3</ItemRef>\r\n                <UnitPrice>9.5</UnitPrice>\r\n                <Qty>5</Qty>\r\n                <TaxCodeRef>TAX</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>335.25</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TxnTaxCodeRef>2</TxnTaxCodeRef>\r\n            <TotalTax>26.82</TotalTax>\r\n            <TaxLine>\r\n                <Amount>26.82</Amount>\r\n                <DetailType>TaxLineDetail</DetailType>\r\n                <TaxLineDetail>\r\n                    <TaxRateRef>3</TaxRateRef>\r\n                    <PercentBased>true</PercentBased>\r\n                    <TaxPercent>8</TaxPercent>\r\n                    <NetAmountTaxable>335.25</NetAmountTaxable>\r\n                </TaxLineDetail>\r\n            </TaxLine>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Sonnenschein Family Store">24</CustomerRef>\r\n        <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>95</Id>\r\n            <Line1>Russ Sonnenschein</Line1>\r\n            <Line2>Sonnenschein Family Store</Line2>\r\n            <Line3>5647 Cypress Hill Ave.</Line3>\r\n            <Line4>Middlefield, CA 94303</Line4>\r\n            <Lat>37.4238562</Lat>\r\n            <Long>-122.1141681</Long>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>25</Id>\r\n            <Line1>5647 Cypress Hill Ave.</Line1>\r\n            <City>Middlefield</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94303</PostalCode>\r\n            <Lat>37.4238562</Lat>\r\n            <Long>-122.1141681</Long>\r\n        </ShipAddr>\r\n        <SalesTermRef>3</SalesTermRef>\r\n        <DueDate>2014-10-19</DueDate>\r\n        <TotalAmt>362.07</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <BillEmail>\r\n            <Address>Familiystore@intuit.com</Address>\r\n        </BillEmail>\r\n        <Balance>362.07</Balance>\r\n        <Deposit>0</Deposit>\r\n    </Invoice>\r\n</IntuitResponse>\r\n',
                "Update1-request-xml":
                    '<Invoice xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>130</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2014-09-19T13:16:17-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-19T13:16:17-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <TxnDate>2014-09-30</TxnDate>\r\n</Invoice>\r\n',
                "Update0-response":
                    '{\n  "Invoice": {\n    "TxnDate": "2015-07-24", \n    "domain": "QBO", \n    "PrintStatus": "NeedToPrint", \n    "TotalAmt": 150.0, \n    "Line": [\n      {\n        "LineNum": 1, \n        "Amount": 150.0, \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "ItemRef": {\n            "name": "Services", \n            "value": "1"\n          }\n        }, \n        "Id": "1", \n        "DetailType": "SalesItemLineDetail"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 150.0, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "DueDate": "2015-08-23", \n    "ApplyTaxAfterDiscount": false, \n    "DocNumber": "1070", \n    "sparse": false, \n    "CustomerMemo": {\n      "value": "Added customer memo."\n    }, \n    "Deposit": 0, \n    "Balance": 150.0, \n    "CustomerRef": {\n      "name": "Amy\'s Bird Sanctuary", \n      "value": "1"\n    }, \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "SyncToken": "1", \n    "LinkedTxn": [], \n    "ShipAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Bayshore", \n      "PostalCode": "94326", \n      "Id": "118", \n      "Line1": "4581 Finch St."\n    }, \n    "EmailStatus": "NotSet", \n    "BillAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Bayshore", \n      "PostalCode": "94326", \n      "Id": "117", \n      "Line1": "4581 Finch St."\n    }, \n    "MetaData": {\n      "CreateTime": "2015-07-24T10:35:08-07:00", \n      "LastUpdatedTime": "2015-07-24T10:53:39-07:00"\n    }, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "239"\n  }, \n  "time": "2015-07-24T10:53:39.287-07:00"\n}',
                "Create0-response":
                    '{\n  "Invoice": {\n    "DocNumber": "1069", \n    "SyncToken": "0", \n    "domain": "QBO", \n    "Balance": 100.0, \n    "BillAddr": {\n      "City": "Bayshore", \n      "Line1": "4581 Finch St.", \n      "PostalCode": "94326", \n      "Lat": "INVALID", \n      "Long": "INVALID", \n      "CountrySubDivisionCode": "CA", \n      "Id": "2"\n    }, \n    "TxnDate": "2015-07-24", \n    "TotalAmt": 100.0, \n    "CustomerRef": {\n      "name": "Amy\'s Bird Sanctuary", \n      "value": "1"\n    }, \n    "ShipAddr": {\n      "City": "Bayshore", \n      "Line1": "4581 Finch St.", \n      "PostalCode": "94326", \n      "Lat": "INVALID", \n      "Long": "INVALID", \n      "CountrySubDivisionCode": "CA", \n      "Id": "109"\n    }, \n    "LinkedTxn": [], \n    "DueDate": "2015-08-23", \n    "PrintStatus": "NeedToPrint", \n    "Deposit": 0, \n    "sparse": false, \n    "EmailStatus": "NotSet", \n    "Line": [\n      {\n        "LineNum": 1, \n        "Amount": 100.0, \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "ItemRef": {\n            "name": "Services", \n            "value": "1"\n          }\n        }, \n        "Id": "1", \n        "DetailType": "SalesItemLineDetail"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 100.0, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "238", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2015-07-24T10:33:39-07:00", \n      "LastUpdatedTime": "2015-07-24T10:33:39-07:00"\n    }\n  }, \n  "time": "2015-07-24T10:33:39.11-07:00"\n}',
                "Update1-request":
                    '{\n  "SyncToken": "0", \n  "Id": "238", \n  "sparse": true, \n  "DueDate": "2015-09-30"\n}',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T10:35:08.591-07:00">\r\n    <Invoice domain="QBO" sparse="false">\r\n        <Id>239</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-24T10:35:08-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-24T10:35:08-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1070</DocNumber>\r\n        <TxnDate>2015-07-24</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Amount>150.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Services">1</ItemRef>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>150.00</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n        <BillAddr>\r\n            <Id>2</Id>\r\n            <Line1>4581 Finch St.</Line1>\r\n            <City>Bayshore</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94326</PostalCode>\r\n            <Lat>INVALID</Lat>\r\n            <Long>INVALID</Long>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>109</Id>\r\n            <Line1>4581 Finch St.</Line1>\r\n            <City>Bayshore</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94326</PostalCode>\r\n            <Lat>INVALID</Lat>\r\n            <Long>INVALID</Long>\r\n        </ShipAddr>\r\n        <DueDate>2015-08-23</DueDate>\r\n        <TotalAmt>150.00</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <Balance>150.00</Balance>\r\n        <Deposit>0</Deposit>\r\n    </Invoice>\r\n</IntuitResponse>\r\n',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-04-23T08:30:33.626-07:00">\r\n  <Invoice domain="QBO" status="Deleted">\r\n    <Id>41</Id>\r\n  </Invoice>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "Line": [\n    {\n      "DetailType": "SalesItemLineDetail", \n      "Amount": 100.0, \n      "SalesItemLineDetail": {\n        "ItemRef": {\n          "name": "Services", \n          "value": "1"\n        }\n      }\n    }\n  ], \n  "CustomerRef": {\n    "value": "1"\n  }\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T10:37:57.940-07:00">\r\n    <QueryResponse startPosition="1" maxResults="1" totalCount="1">\r\n        <Invoice domain="QBO" sparse="false">\r\n            <Id>239</Id>\r\n            <SyncToken>0</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2015-07-24T10:35:08-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-24T10:35:08-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <CustomField>\r\n                <DefinitionId>1</DefinitionId>\r\n                <Name>Crew #</Name>\r\n                <Type>StringType</Type>\r\n            </CustomField>\r\n            <DocNumber>1070</DocNumber>\r\n            <TxnDate>2015-07-24</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <LineNum>1</LineNum>\r\n                <Amount>150.00</Amount>\r\n                <DetailType>SalesItemLineDetail</DetailType>\r\n                <SalesItemLineDetail>\r\n                    <ItemRef name="Services">1</ItemRef>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </SalesItemLineDetail>\r\n            </Line>\r\n            <Line>\r\n                <Amount>150.00</Amount>\r\n                <DetailType>SubTotalLineDetail</DetailType>\r\n                <SubTotalLineDetail />\r\n            </Line>\r\n            <TxnTaxDetail>\r\n                <TotalTax>0</TotalTax>\r\n            </TxnTaxDetail>\r\n            <CustomerRef name="Amy\'s Bird Sanctuary">1</CustomerRef>\r\n            <BillAddr>\r\n                <Id>2</Id>\r\n                <Line1>4581 Finch St.</Line1>\r\n                <City>Bayshore</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94326</PostalCode>\r\n                <Lat>INVALID</Lat>\r\n                <Long>INVALID</Long>\r\n            </BillAddr>\r\n            <ShipAddr>\r\n                <Id>109</Id>\r\n                <Line1>4581 Finch St.</Line1>\r\n                <City>Bayshore</City>\r\n                <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n                <PostalCode>94326</PostalCode>\r\n                <Lat>INVALID</Lat>\r\n                <Long>INVALID</Long>\r\n            </ShipAddr>\r\n            <DueDate>2015-08-23</DueDate>\r\n            <TotalAmt>150.00</TotalAmt>\r\n            <Deposit>0</Deposit>\r\n        </Invoice>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Void0-response":
                    '{\n  "Invoice": {\n    "AllowOnlineACHPayment": false, \n    "domain": "QBO", \n    "TxnDate": "2014-11-09", \n    "PrintStatus": "NEED_TO_PRINT", \n    "SalesTermRef": {\n      "value": "3"\n    }, \n    "TotalAmt": 0, \n    "Line": [\n      {\n        "Description": "Sod", \n        "DetailType": "SALES_ITEM_LINE_DETAIL", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "Qty": 0, \n          "ItemRef": {\n            "name": "Sod", \n            "value": "14"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 0, \n        "Id": "1"\n      }, \n      {\n        "Description": "2 cubic ft. bag", \n        "DetailType": "SALES_ITEM_LINE_DETAIL", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "Qty": 0, \n          "ItemRef": {\n            "name": "Soil", \n            "value": "15"\n          }\n        }, \n        "LineNum": 2, \n        "Amount": 0, \n        "Id": "2"\n      }, \n      {\n        "Description": "Weekly Gardening Service", \n        "DetailType": "SALES_ITEM_LINE_DETAIL", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 0, \n          "ItemRef": {\n            "name": "Gardening", \n            "value": "6"\n          }\n        }, \n        "LineNum": 3, \n        "Amount": 0, \n        "Id": "3"\n      }, \n      {\n        "Description": "Rock Fountain", \n        "DetailType": "SALES_ITEM_LINE_DETAIL", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "Qty": 0, \n          "ItemRef": {\n            "name": "Rock Fountain", \n            "value": "5"\n          }\n        }, \n        "LineNum": 4, \n        "Amount": 0, \n        "Id": "4"\n      }, \n      {\n        "Description": "Fountain Pump", \n        "DetailType": "SALES_ITEM_LINE_DETAIL", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "Qty": 0, \n          "ItemRef": {\n            "name": "Pump", \n            "value": "11"\n          }\n        }, \n        "LineNum": 5, \n        "Amount": 0, \n        "Id": "5"\n      }, \n      {\n        "DetailType": "SUB_TOTAL_LINE_DETAIL", \n        "Amount": 0, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "DueDate": "2014-12-09", \n    "MetaData": {\n      "CreateTime": "2014-11-09T13:15:36-08:00", \n      "LastUpdatedTime": "2016-03-16T12:27:10-07:00"\n    }, \n    "DocNumber": "1036", \n    "PrivateNote": "Voided", \n    "sparse": false, \n    "CustomerMemo": {\n      "value": "Thank you for your business and have a great day!"\n    }, \n    "Deposit": 0, \n    "Balance": 0, \n    "CustomerRef": {\n      "name": "0969 Ocean View Road", \n      "value": "8"\n    }, \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "AllowOnlineCreditCardPayment": false, \n    "SyncToken": "1", \n    "LinkedTxn": [], \n    "BillEmail": {\n      "Address": "Sporting_goods@intuit.com"\n    }, \n    "ShipAddr": {\n      "City": "Middlefield", \n      "Line1": "370 Easy St.", \n      "PostalCode": "94482", \n      "Lat": "37.4031672", \n      "Long": "-122.0642815", \n      "CountrySubDivisionCode": "CA", \n      "Id": "8"\n    }, \n    "EmailStatus": "NOT_SET", \n    "BillAddr": {\n      "Line4": "Middlefield, CA  94482", \n      "Line3": "370 Easy St.", \n      "Line2": "Freeman Sporting Goods", \n      "Line1": "Sasha Tillou", \n      "Long": "INVALID", \n      "Lat": "INVALID", \n      "Id": "94"\n    }, \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "StringValue": "105", \n        "Type": "STRING_TYPE", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "129", \n    "AllowOnlinePayment": false, \n    "AllowIPNPayment": false\n  }, \n  "time": "2016-03-16T12:27:10.711-07:00"\n}',
                "Query0-request": "\"select * from Invoice where id = '239'\"",
                "PDF0-response-xml": "%PDF-1.4\r\n...\r\n%%EOF</IntuitResponse>",
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-24T10:44:52.998-07:00">\r\n    <Invoice domain="QBO" sparse="false">\r\n        <Id>130</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-19T13:16:17-07:00</CreateTime>\r\n            <LastUpdatedTime>2014-09-19T13:16:17-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n            <StringValue>102</StringValue>\r\n        </CustomField>\r\n        <DocNumber>1037</DocNumber>\r\n        <TxnDate>2014-09-19</TxnDate>\r\n        <LinkedTxn>\r\n            <TxnId>100</TxnId>\r\n            <TxnType>Estimate</TxnType>\r\n        </LinkedTxn>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Rock Fountain</Description>\r\n            <Amount>275.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Rock Fountain">5</ItemRef>\r\n                <UnitPrice>275</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>TAX</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Id>2</Id>\r\n            <LineNum>2</LineNum>\r\n            <Description>Fountain Pump</Description>\r\n            <Amount>12.75</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pump">11</ItemRef>\r\n                <UnitPrice>12.75</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>TAX</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Id>3</Id>\r\n            <LineNum>3</LineNum>\r\n            <Description>Concrete for fountain installation</Description>\r\n            <Amount>47.50</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Concrete">3</ItemRef>\r\n                <UnitPrice>9.5</UnitPrice>\r\n                <Qty>5</Qty>\r\n                <TaxCodeRef>TAX</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>335.25</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TxnTaxCodeRef>2</TxnTaxCodeRef>\r\n            <TotalTax>26.82</TotalTax>\r\n            <TaxLine>\r\n                <Amount>26.82</Amount>\r\n                <DetailType>TaxLineDetail</DetailType>\r\n                <TaxLineDetail>\r\n                    <TaxRateRef>3</TaxRateRef>\r\n                    <PercentBased>true</PercentBased>\r\n                    <TaxPercent>8</TaxPercent>\r\n                    <NetAmountTaxable>335.25</NetAmountTaxable>\r\n                </TaxLineDetail>\r\n            </TaxLine>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Sonnenschein Family Store">24</CustomerRef>\r\n        <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>95</Id>\r\n            <Line1>Russ Sonnenschein</Line1>\r\n            <Line2>Sonnenschein Family Store</Line2>\r\n            <Line3>5647 Cypress Hill Ave.</Line3>\r\n            <Line4>Middlefield, CA 94303</Line4>\r\n            <Lat>37.4238562</Lat>\r\n            <Long>-122.1141681</Long>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>25</Id>\r\n            <Line1>5647 Cypress Hill Ave.</Line1>\r\n            <City>Middlefield</City>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94303</PostalCode>\r\n            <Lat>37.4238562</Lat>\r\n            <Long>-122.1141681</Long>\r\n        </ShipAddr>\r\n        <SalesTermRef>3</SalesTermRef>\r\n        <DueDate>2014-10-19</DueDate>\r\n        <TotalAmt>362.07</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <BillEmail>\r\n            <Address>Familiystore@intuit.com</Address>\r\n        </BillEmail>\r\n        <Balance>362.07</Balance>\r\n        <Deposit>0</Deposit>\r\n    </Invoice>\r\n</IntuitResponse>\r\n',
                "Update0-request-xml":
                    '<Invoice xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Id>147</Id>\r\n    <SyncToken>0</SyncToken>\r\n\r\n    <MetaData>\r\n      <CreateTime>2014-10-15T14:13:24-07:00</CreateTime>\r\n      <LastUpdatedTime>2014-10-15T14:13:24-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n<PrivateNote>Invoice update</PrivateNote>\r\n    <CustomField>\r\n      <DefinitionId>1</DefinitionId>\r\n      <Name>Crew #</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>1040</DocNumber>\r\n    <TxnDate>2014-10-15</TxnDate>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <LineNum>1</LineNum>\r\n      <Amount>15.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Concrete">3</ItemRef>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Amount>15.00</Amount>\r\n      <DetailType>SubTotalLineDetail</DetailType>\r\n      <SubTotalLineDetail />\r\n    </Line>\r\n    <TxnTaxDetail>\r\n      <TotalTax>0</TotalTax>\r\n    </TxnTaxDetail>\r\n    <CustomerRef name="Weiskopf Consulting">29</CustomerRef>\r\n    <BillAddr>\r\n      <Id>98</Id>\r\n      <Line1>645</Line1>\r\n      <Line2>Park Avenue</Line2>\r\n      <City>San Jose</City>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n      <Id>99</Id>\r\n      <Line1>2314</Line1>\r\n      <Line2>Gladstone Street</Line2>\r\n      <City>San Francisco</City>\r\n    </ShipAddr>\r\n    <DueDate>2014-11-14</DueDate>\r\n    <TotalAmt>15.00</TotalAmt>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NeedToPrint</PrintStatus>\r\n    <EmailStatus>NotSet</EmailStatus>\r\n    <Balance>15.00</Balance>\r\n    <Deposit>0</Deposit>\r\n  </Invoice>\r\n',
                "Void0-request-xml":
                    '<Invoice xmlns=\'http://schema.intuit.com/finance/v3\' domain="QBO" sparse="false">\r\n    <Id>863</Id>\r\n    <SyncToken>0</SyncToken>\r\n</Invoice>\r\n',
                "Void0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-04-23T08:30:33.626-07:00">\r\n  <Invoice domain="QBO" status="Deleted">\r\n    <Id>41</Id>\r\n  </Invoice>\r\n</IntuitResponse>',
                "Delete0-response":
                    '{\n  "Invoice": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "33"\n  }, \n  "time": "2013-03-15T00:18:15.322-07:00"\n}',
                "PDF0-response": '"%PDF-1.4\\r\\n...\\r\\n%%EOF"',
                "Void0-request": '{\n  "SyncToken": "0", \n  "Id": "129"\n}',
                "Delete0-request-xml":
                    '<Invoice xmlns=\'http://schema.intuit.com/finance/v3\' domain="QBO" sparse="false">\r\n    <Id>863</Id>\r\n    <SyncToken>0</SyncToken>\r\n</Invoice>\r\n',
                "Update0-request":
                    '{\n  "DocNumber": "1070", \n  "SyncToken": "0", \n  "domain": "QBO", \n  "Balance": 150.0, \n  "BillAddr": {\n    "City": "Bayshore", \n    "Line1": "4581 Finch St.", \n    "PostalCode": "94326", \n    "Lat": "INVALID", \n    "Long": "INVALID", \n    "CountrySubDivisionCode": "CA", \n    "Id": "2"\n  }, \n  "TxnDate": "2015-07-24", \n  "TotalAmt": 150.0, \n  "CustomerRef": {\n    "name": "Amy\'s Bird Sanctuary", \n    "value": "1"\n  }, \n  "CustomerMemo": {\n    "value": "Added customer memo."\n  }, \n  "ShipAddr": {\n    "City": "Bayshore", \n    "Line1": "4581 Finch St.", \n    "PostalCode": "94326", \n    "Lat": "INVALID", \n    "Long": "INVALID", \n    "CountrySubDivisionCode": "CA", \n    "Id": "109"\n  }, \n  "LinkedTxn": [], \n  "DueDate": "2015-08-23", \n  "PrintStatus": "NeedToPrint", \n  "EmailStatus": "NotSet", \n  "sparse": false, \n  "Line": [\n    {\n      "LineNum": 1, \n      "Amount": 150.0, \n      "SalesItemLineDetail": {\n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "ItemRef": {\n          "name": "Services", \n          "value": "1"\n        }\n      }, \n      "Id": "1", \n      "DetailType": "SalesItemLineDetail"\n    }, \n    {\n      "DetailType": "SubTotalLineDetail", \n      "Amount": 150.0, \n      "SubTotalLineDetail": {}\n    }\n  ], \n  "ApplyTaxAfterDiscount": false, \n  "CustomField": [\n    {\n      "DefinitionId": "1", \n      "Type": "StringType", \n      "Name": "Crew #"\n    }\n  ], \n  "Id": "239", \n  "TxnTaxDetail": {\n    "TotalTax": 0\n  }, \n  "MetaData": {\n    "CreateTime": "2015-07-24T10:35:08-07:00", \n    "LastUpdatedTime": "2015-07-24T10:35:08-07:00"\n  }\n}',
                "Send0-response":
                    '{\n  "Invoice": {\n    "TxnDate": "2013-03-14", \n    "domain": "QBO", \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "ShipDate": "2013-03-01", \n    "TrackingNum": "123456789", \n    "ClassRef": {\n      "name": "Class 1", \n      "value": "200900000000000003901"\n    }, \n    "PrintStatus": "NeedToPrint", \n    "SalesTermRef": {\n      "value": "4"\n    }, \n    "DeliveryInfo": {\n      "DeliveryType": "Email", \n      "DeliveryTime": "2014-12-17T11:50:52-08:00"\n    }, \n    "TotalAmt": 52.0, \n    "Line": [\n      {\n        "Description": "Sample invoice create request", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "TAX"\n          }, \n          "Qty": 1, \n          "UnitPrice": 50, \n          "ServiceDate": "2013-03-04", \n          "ItemRef": {\n            "name": "Hours", \n            "value": "2"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 50.0, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 50.0, \n        "SubTotalLineDetail": {}\n      }, \n      {\n        "DetailType": "DiscountLineDetail", \n        "Amount": 5.0, \n        "DiscountLineDetail": {\n          "DiscountAccountRef": {\n            "name": "Discounts given", \n            "value": "30"\n          }, \n          "PercentBased": true, \n          "DiscountPercent": 10\n        }\n      }, \n      {\n        "DetailType": "SalesItemLineDetail", \n        "Amount": 2.0, \n        "SalesItemLineDetail": {\n          "ItemRef": {\n            "value": "SHIPPING_ITEM_ID"\n          }\n        }\n      }\n    ], \n    "DueDate": "2013-05-13", \n    "MetaData": {\n      "CreateTime": "2013-03-14T01:42:16-07:00", \n      "LastUpdatedTime": "2014-12-17T11:50:58-08:00"\n    }, \n    "DocNumber": "Sample_Inv#2", \n    "PrivateNote": "Summary for sample invoice", \n    "sparse": false, \n    "DepositToAccountRef": {\n      "name": "Undeposited Funds", \n      "value": "4"\n    }, \n    "CustomerMemo": {\n      "value": "This is the customer message"\n    }, \n    "EmailStatus": "EmailSent", \n    "Deposit": 12.0, \n    "Balance": 40.0, \n    "CustomerRef": {\n      "name": "Mr V3 Service Customer Jr2", \n      "value": "15"\n    }, \n    "TxnTaxDetail": {\n      "TxnTaxCodeRef": {\n        "value": "5"\n      }, \n      "TotalTax": 5.0, \n      "TaxLine": [\n        {\n          "DetailType": "TaxLineDetail", \n          "Amount": 5.0, \n          "TaxLineDetail": {\n            "NetAmountTaxable": 50.0, \n            "TaxPercent": 10, \n            "TaxRateRef": {\n              "value": "2"\n            }, \n            "PercentBased": true\n          }\n        }\n      ]\n    }, \n    "SyncToken": "0", \n    "BillEmail": {\n      "Address": "test@intuit.com"\n    }, \n    "ShipAddr": {\n      "City": "San Jose", \n      "Country": "USA", \n      "Line5": "Cube 999", \n      "Line4": "Dept 12", \n      "Line3": "123 street", \n      "Line2": "Building 1", \n      "Line1": "Intuit", \n      "PostalCode": "95123", \n      "Lat": "37.2374847", \n      "Long": "-121.8277925", \n      "CountrySubDivisionCode": "CA", \n      "Id": "36"\n    }, \n    "DepartmentRef": {\n      "name": "Mountain View", \n      "value": "1"\n    }, \n    "ShipMethodRef": {\n      "name": "UPS", \n      "value": "UPS"\n    }, \n    "BillAddr": {\n      "City": "Mountain View", \n      "Country": "USA", \n      "Line5": "Cube 999", \n      "Line4": "Dept 12", \n      "Line3": "123 street", \n      "Line2": "Building 1", \n      "Line1": "Google", \n      "PostalCode": "95123", \n      "Lat": "37.2374847", \n      "Long": "-121.8277925", \n      "CountrySubDivisionCode": "CA", \n      "Id": "35"\n    }, \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "StringValue": "Custom1", \n        "Type": "StringType", \n        "Name": "Custom 1"\n      }, \n      {\n        "StringValue": "Custom2", \n        "Type": "StringType", \n        "Name": "Custom 2"\n      }, \n      {\n        "StringValue": "Custom3", \n        "Type": "StringType", \n        "Name": "Custom 3"\n      }\n    ], \n    "Id": "96"\n  }, \n  "time": "2013-03-14T13:32:04.895-07:00"\n}',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2014-10-15T15:32:38.807-07:00">\r\n  <Invoice domain="QBO" sparse="false">\r\n    <Id>147</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-10-15T14:13:24-07:00</CreateTime>\r\n      <LastUpdatedTime>2014-10-15T15:32:38-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomField>\r\n      <DefinitionId>1</DefinitionId>\r\n      <Name>Crew #</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>1040</DocNumber>\r\n    <TxnDate>2014-10-15</TxnDate>\r\n    <PrivateNote>Invoice update</PrivateNote>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <LineNum>1</LineNum>\r\n      <Amount>15.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Concrete">3</ItemRef>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Amount>15.00</Amount>\r\n      <DetailType>SubTotalLineDetail</DetailType>\r\n      <SubTotalLineDetail />\r\n    </Line>\r\n    <TxnTaxDetail>\r\n      <TotalTax>0</TotalTax>\r\n    </TxnTaxDetail>\r\n    <CustomerRef name="Weiskopf Consulting">29</CustomerRef>\r\n    <BillAddr>\r\n      <Id>98</Id>\r\n      <Line1>645</Line1>\r\n      <Line2>Park Avenue</Line2>\r\n      <City>San Jose</City>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n      <Id>99</Id>\r\n      <Line1>2314</Line1>\r\n      <Line2>Gladstone Street</Line2>\r\n      <City>San Francisco</City>\r\n    </ShipAddr>\r\n    <DueDate>2014-11-14</DueDate>\r\n    <TotalAmt>15.00</TotalAmt>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NeedToPrint</PrintStatus>\r\n    <EmailStatus>NotSet</EmailStatus>\r\n    <Balance>15.00</Balance>\r\n    <Deposit>0</Deposit>\r\n  </Invoice>\r\n</IntuitResponse>',
                "Create0-request-xml":
                    '<Invoice xmlns="http://schema.intuit.com/finance/v3">\r\n  <Line>\r\n    <Amount>150</Amount>\r\n    <DetailType>SalesItemLineDetail</DetailType>\r\n    <SalesItemLineDetail>\r\n      <ItemRef>1</ItemRef>\r\n    </SalesItemLineDetail>\r\n  </Line>\r\n  <CustomerRef>1</CustomerRef>\r\n</Invoice>',
                "Update1-response":
                    '{\n  "Invoice": {\n    "DocNumber": "1069", \n    "SyncToken": "1", \n    "domain": "QBO", \n    "Balance": 100.0, \n    "BillAddr": {\n      "City": "Bayshore", \n      "Line1": "4581 Finch St.", \n      "PostalCode": "94326", \n      "Lat": "INVALID", \n      "Long": "INVALID", \n      "CountrySubDivisionCode": "CA", \n      "Id": "2"\n    }, \n    "TxnDate": "2015-07-24", \n    "TotalAmt": 100.0, \n    "CustomerRef": {\n      "name": "Amy\'s Bird Sanctuary", \n      "value": "1"\n    }, \n    "ShipAddr": {\n      "City": "Bayshore", \n      "Line1": "4581 Finch St.", \n      "PostalCode": "94326", \n      "Lat": "INVALID", \n      "Long": "INVALID", \n      "CountrySubDivisionCode": "CA", \n      "Id": "109"\n    }, \n    "LinkedTxn": [], \n    "DueDate": "2015-09-30", \n    "PrintStatus": "NeedToPrint", \n    "Deposit": 0, \n    "sparse": false, \n    "EmailStatus": "NotSet", \n    "Line": [\n      {\n        "LineNum": 1, \n        "Amount": 100.0, \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "ItemRef": {\n            "name": "Services", \n            "value": "1"\n          }\n        }, \n        "Id": "1", \n        "DetailType": "SalesItemLineDetail"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 100.0, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "238", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2015-07-24T10:33:39-07:00", \n      "LastUpdatedTime": "2015-07-24T11:03:26-07:00"\n    }\n  }, \n  "time": "2015-07-24T11:03:26.674-07:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "totalCount": 1, \n    "maxResults": 1, \n    "Invoice": [\n      {\n        "DocNumber": "1070", \n        "SyncToken": "0", \n        "domain": "QBO", \n        "Balance": 150.0, \n        "BillAddr": {\n          "City": "Bayshore", \n          "Line1": "4581 Finch St.", \n          "PostalCode": "94326", \n          "Lat": "INVALID", \n          "Long": "INVALID", \n          "CountrySubDivisionCode": "CA", \n          "Id": "2"\n        }, \n        "TxnDate": "2015-07-24", \n        "TotalAmt": 150.0, \n        "CustomerRef": {\n          "name": "Amy\'s Bird Sanctuary", \n          "value": "1"\n        }, \n        "ShipAddr": {\n          "City": "Bayshore", \n          "Line1": "4581 Finch St.", \n          "PostalCode": "94326", \n          "Lat": "INVALID", \n          "Long": "INVALID", \n          "CountrySubDivisionCode": "CA", \n          "Id": "109"\n        }, \n        "LinkedTxn": [], \n        "DueDate": "2015-08-23", \n        "PrintStatus": "NeedToPrint", \n        "Deposit": 0, \n        "sparse": false, \n        "EmailStatus": "NotSet", \n        "Line": [\n          {\n            "LineNum": 1, \n            "Amount": 150.0, \n            "SalesItemLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "ItemRef": {\n                "name": "Services", \n                "value": "1"\n              }\n            }, \n            "Id": "1", \n            "DetailType": "SalesItemLineDetail"\n          }, \n          {\n            "DetailType": "SubTotalLineDetail", \n            "Amount": 150.0, \n            "SubTotalLineDetail": {}\n          }\n        ], \n        "ApplyTaxAfterDiscount": false, \n        "CustomField": [\n          {\n            "DefinitionId": "1", \n            "Type": "StringType", \n            "Name": "Crew #"\n          }\n        ], \n        "Id": "239", \n        "TxnTaxDetail": {\n          "TotalTax": 0\n        }, \n        "MetaData": {\n          "CreateTime": "2015-07-24T10:35:08-07:00", \n          "LastUpdatedTime": "2015-07-24T10:35:08-07:00"\n        }\n      }\n    ]\n  }, \n  "time": "2015-07-24T10:38:50.01-07:00"\n}',
            },
            Salesreceipt: {
                "Delete0-request": '{\n  "SyncToken": "1", \n  "Id": "98"\n}',
                "Send0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-04-23T08:54:06.917-07:00">\r\n    <SalesReceipt domain="QBO" sparse="false">\r\n        <Id>3084</Id>\r\n        <SyncToken>1</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2013-04-23T08:53:46-07:00</CreateTime>\r\n            <LastUpdatedTime>2014-11-19T11:56:30-08:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <Name>Custom 1</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <CustomField>\r\n            <Name>Custom 2</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <CustomField>\r\n            <Name>Custom 3</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>3026</DocNumber>\r\n        <TxnDate>2012-12-18</TxnDate>\r\n        <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n        <PrivateNote>Customer Sales Receipt</PrivateNote>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Sales only</Description>\r\n            <Amount>5.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Sales">1</ItemRef>\r\n                <UnitPrice>0.5</UnitPrice>\r\n                <Qty>10</Qty>\r\n                <TaxCodeRef>TAX</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>5.00</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail/>\r\n        </Line>\r\n        <Line>\r\n            <Amount>0.50</Amount>\r\n            <DetailType>DiscountLineDetail</DetailType>\r\n            <DiscountLineDetail>\r\n                <PercentBased>true</PercentBased>\r\n                <DiscountPercent>10</DiscountPercent>\r\n                <DiscountAccountRef name="Discounts given">30</DiscountAccountRef>\r\n            </DiscountLineDetail>\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TxnTaxCodeRef>9</TxnTaxCodeRef>\r\n            <TotalTax>0.75</TotalTax>\r\n            <TaxLine>\r\n                <Amount>0.75</Amount>\r\n                <DetailType>TaxLineDetail</DetailType>\r\n                <TaxLineDetail>\r\n                    <TaxRateRef>18</TaxRateRef>\r\n                    <PercentBased>true</PercentBased>\r\n                    <TaxPercent>15</TaxPercent>\r\n                    <NetAmountTaxable>5.00</NetAmountTaxable>\r\n                </TaxLineDetail>\r\n            </TaxLine>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="sn71lPmH0Y zOv1blD5Vq">1105</CustomerRef>\r\n        <CustomerMemo>Sales Receipt with customer</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>65</Id>\r\n            <Line1>2500 Garcia Avenue</Line1>\r\n            <City>Mountain View</City>\r\n            <Country>USA</Country>\r\n            <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n            <PostalCode>94043</PostalCode>\r\n            <Lat>37.428314</Lat>\r\n            <Long>-122.0961024</Long>\r\n        </BillAddr>\r\n        <ShipAddr>\r\n            <Id>66</Id>\r\n            <Line1>Ms. Anupama Madhavapeddi</Line1>\r\n            <Line2>Intuit Systems</Line2>\r\n            <Line3>3400 Garcia Avenue</Line3>\r\n            <Line4>Mountain View, CA 94043 USA</Line4>\r\n            <Lat>37.428434</Lat>\r\n            <Long>-122.0723816</Long>\r\n        </ShipAddr>\r\n        <ShipDate>2012-04-18</ShipDate>\r\n        <TrackingNum>1232</TrackingNum>\r\n        <TotalAmt>5.25</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NotSet</PrintStatus>\r\n        <EmailStatus>EmailSent</EmailStatus>\r\n        <BillEmail>\r\n            <Address>test@abc.com</Address>\r\n        </BillEmail>\r\n        <DeliveryInfo>\r\n            <DeliveryType>Email</DeliveryType>\r\n            <DeliveryTime>2014-11-19T11:56:28-08:00</DeliveryTime>\r\n        </DeliveryInfo>\r\n        <Balance>0</Balance>\r\n        <DepositToAccountRef name="Undeposited Funds">4</DepositToAccountRef>\r\n    </SalesReceipt>\r\n</IntuitResponse>\r\n',
                "Query0-request-xml": "select * from SalesReceipt where id = '11'",
                "Read0-response":
                    '{\n  "SalesReceipt": {\n    "DocNumber": "1003", \n    "SyncToken": "0", \n    "domain": "QBO", \n    "Balance": 0, \n    "PaymentMethodRef": {\n      "name": "Check", \n      "value": "2"\n    }, \n    "BillAddr": {\n      "Lat": "INVALID", \n      "Long": "INVALID", \n      "Id": "49", \n      "Line1": "Dylan Sollfrank"\n    }, \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "TxnDate": "2014-09-14", \n    "TotalAmt": 337.5, \n    "CustomerRef": {\n      "name": "Dylan Sollfrank", \n      "value": "6"\n    }, \n    "CustomerMemo": {\n      "value": "Thank you for your business and have a great day!"\n    }, \n    "PrintStatus": "NotSet", \n    "PaymentRefNum": "10264", \n    "EmailStatus": "NotSet", \n    "sparse": false, \n    "Line": [\n      {\n        "Description": "Custom Design", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 4.5, \n          "UnitPrice": 75, \n          "ItemRef": {\n            "name": "Design", \n            "value": "4"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 337.5, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 337.5, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "11", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-16T14:59:48-07:00", \n      "LastUpdatedTime": "2014-09-16T14:59:48-07:00"\n    }\n  }, \n  "time": "2015-07-29T09:29:56.229-07:00"\n}',
                "Update1-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-29T09:49:20.113-07:00">\r\n    <SalesReceipt domain="QBO" sparse="false">\r\n        <Id>11</Id>\r\n        <SyncToken>3</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-16T14:59:48-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-29T09:48:53-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1003</DocNumber>\r\n        <TxnDate>2014-09-14</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Custom Design</Description>\r\n            <Amount>337.50</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Design">4</ItemRef>\r\n                <UnitPrice>75</UnitPrice>\r\n                <Qty>4.5</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>337.50</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Dylan Sollfrank">6</CustomerRef>\r\n        <CustomerMemo>Updated customer memo via sparse update operation.</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>122</Id>\r\n            <Line1>Dylan Sollfrank</Line1>\r\n        </BillAddr>\r\n        <TotalAmt>337.50</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NotSet</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <Balance>0</Balance>\r\n        <PaymentMethodRef name="Check">2</PaymentMethodRef>\r\n        <PaymentRefNum>10264</PaymentRefNum>\r\n        <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n    </SalesReceipt>\r\n</IntuitResponse>\r\n',
                "Update1-request-xml":
                    '<SalesReceipt xmlns="http://schema.intuit.com/finance/v3" sparse="true">\r\n    <Id>11</Id>\r\n    <SyncToken>3</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2014-09-16T14:59:48-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-16T14:59:48-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <Line>\r\n        <Id>1</Id>\r\n        <LineNum>1</LineNum>\r\n        <Description>Custom Design</Description>\r\n        <Amount>337.50</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n            <ItemRef name="Design">4</ItemRef>\r\n            <UnitPrice>75</UnitPrice>\r\n            <Qty>4.5</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n    </Line>\r\n    <CustomerMemo>Updated customer memo via sparse update operation.</CustomerMemo>\r\n</SalesReceipt>\r\n',
                "Update0-response":
                    '{\n  "SalesReceipt": {\n    "DocNumber": "1003", \n    "SyncToken": "1", \n    "domain": "QBO", \n    "Balance": 0, \n    "PaymentMethodRef": {\n      "name": "Check", \n      "value": "2"\n    }, \n    "BillAddr": {\n      "Lat": "INVALID", \n      "Long": "INVALID", \n      "Id": "49", \n      "Line1": "Dylan Sollfrank"\n    }, \n    "DepositToAccountRef": {\n      "name": "Checking", \n      "value": "35"\n    }, \n    "TxnDate": "2014-09-14", \n    "TotalAmt": 337.5, \n    "CustomerRef": {\n      "name": "Dylan Sollfrank", \n      "value": "6"\n    }, \n    "CustomerMemo": {\n      "value": "An updated customer memo."\n    }, \n    "PrintStatus": "NotSet", \n    "PaymentRefNum": "10264", \n    "EmailStatus": "NotSet", \n    "sparse": false, \n    "Line": [\n      {\n        "Description": "Custom Design", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 4.5, \n          "UnitPrice": 75, \n          "ItemRef": {\n            "name": "Design", \n            "value": "4"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 337.5, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 337.5, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "11", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-16T14:59:48-07:00", \n      "LastUpdatedTime": "2015-07-29T09:43:18-07:00"\n    }\n  }, \n  "time": "2015-07-29T09:43:01.436-07:00"\n}',
                "Create0-response":
                    '{\n  "SalesReceipt": {\n    "DocNumber": "1074", \n    "SyncToken": "0", \n    "domain": "QBO", \n    "Balance": 0, \n    "DepositToAccountRef": {\n      "name": "Undeposited Funds", \n      "value": "4"\n    }, \n    "TxnDate": "2015-07-29", \n    "TotalAmt": 35.0, \n    "PrintStatus": "NeedToPrint", \n    "EmailStatus": "NotSet", \n    "sparse": false, \n    "Line": [\n      {\n        "Description": "Pest Control Services", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 1, \n          "UnitPrice": 35, \n          "ItemRef": {\n            "name": "Pest Control", \n            "value": "10"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 35.0, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 35.0, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "263", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2015-07-29T09:25:02-07:00", \n      "LastUpdatedTime": "2015-07-29T09:25:02-07:00"\n    }\n  }, \n  "time": "2015-07-29T09:25:04.214-07:00"\n}',
                "Update1-request":
                    '{\n  "SyncToken": "0", \n  "Line": [\n    {\n      "DetailType": "SalesItemLineDetail", \n      "Amount": 5, \n      "Description": "UpdatedDescription", \n      "SalesItemLineDetail": {\n        "Qty": 10, \n        "UnitPrice": 0.5, \n        "ItemRef": {\n          "value": "1"\n        }\n      }\n    }\n  ], \n  "Id": "97", \n  "sparse": true, \n  "MetaData": {\n    "CreateTime": "2013-03-13T13:39:57-07:00", \n    "LastUpdatedTime": "2013-03-13T13:39:57-07:00"\n  }\n}',
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-29T09:26:40.184-07:00">\r\n    <SalesReceipt domain="QBO" sparse="false">\r\n        <Id>264</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2015-07-29T09:26:38-07:00</CreateTime>\r\n            <LastUpdatedTime>2015-07-29T09:26:38-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1075</DocNumber>\r\n        <TxnDate>2015-07-29</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Pest Control Services</Description>\r\n            <Amount>35.00</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Pest Control">10</ItemRef>\r\n                <UnitPrice>35</UnitPrice>\r\n                <Qty>1</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>35.00</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <TotalAmt>35.00</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NeedToPrint</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <Balance>0</Balance>\r\n        <DepositToAccountRef name="Undeposited Funds">4</DepositToAccountRef>\r\n    </SalesReceipt>\r\n</IntuitResponse>\r\n',
                "Update2-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-02-09T12:25:12.488-08:00">\r\n  <SalesReceipt domain="QBO" sparse="false">\r\n    <Id>38</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2014-11-07T11:15:46-08:00</CreateTime>\r\n      <LastUpdatedTime>2015-02-09T12:25:12-08:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomField>\r\n      <DefinitionId>1</DefinitionId>\r\n      <Name>Crew #</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>1011</DocNumber>\r\n    <TxnDate>2014-11-07</TxnDate>\r\n    <PrivateNote>Voided</PrivateNote>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <LineNum>1</LineNum>\r\n      <Description>Pest Control Services</Description>\r\n      <Amount>0</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Pest Control">10</ItemRef>\r\n        <Qty>0</Qty>\r\n        <TaxCodeRef>NON</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Amount>0</Amount>\r\n      <DetailType>SubTotalLineDetail</DetailType>\r\n      <SubTotalLineDetail/>\r\n    </Line>\r\n    <TxnTaxDetail>\r\n      <TotalTax>0</TotalTax>\r\n    </TxnTaxDetail>\r\n    <CustomerRef name="Pye\'s Cakes">15</CustomerRef>\r\n    <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n    <BillAddr>\r\n      <Id>57</Id>\r\n      <Line1>Karen Pye Pye\'s Cakes 350 Mountain View Dr. South Orange, NJ 07079</Line1>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n      <Id>96</Id>\r\n      <Line1>350 Mountain View Dr.</Line1>\r\n      <City>South Orange</City>\r\n      <CountrySubDivisionCode>NJ</CountrySubDivisionCode>\r\n      <PostalCode>07079</PostalCode>\r\n    </ShipAddr>\r\n    <TotalAmt>0</TotalAmt>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NotSet</PrintStatus>\r\n    <EmailStatus>NotSet</EmailStatus>\r\n    <BillEmail>\r\n      <Address>karen@pye.com</Address>\r\n    </BillEmail>\r\n    <Balance>0</Balance>\r\n    <PaymentMethodRef name="Cash">1</PaymentMethodRef>\r\n    <DepositToAccountRef name="Undeposited Funds">4</DepositToAccountRef>\r\n  </SalesReceipt>\r\n</IntuitResponse>',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-04-23T08:54:09.001-07:00">\r\n  <SalesReceipt domain="QBO" status="Deleted">\r\n    <Id>3084</Id>\r\n  </SalesReceipt>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "Line": [\n    {\n      "Description": "Pest Control Services", \n      "DetailType": "SalesItemLineDetail", \n      "SalesItemLineDetail": {\n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "Qty": 1, \n        "UnitPrice": 35, \n        "ItemRef": {\n          "name": "Pest Control", \n          "value": "10"\n        }\n      }, \n      "LineNum": 1, \n      "Amount": 35.0, \n      "Id": "1"\n    }\n  ]\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-29T09:51:09.514-07:00">\r\n    <QueryResponse startPosition="1" maxResults="1">\r\n        <SalesReceipt domain="QBO" sparse="false">\r\n            <Id>11</Id>\r\n            <SyncToken>3</SyncToken>\r\n            <MetaData>\r\n                <CreateTime>2014-09-16T14:59:48-07:00</CreateTime>\r\n                <LastUpdatedTime>2015-07-29T09:48:53-07:00</LastUpdatedTime>\r\n            </MetaData>\r\n            <CustomField>\r\n                <DefinitionId>1</DefinitionId>\r\n                <Name>Crew #</Name>\r\n                <Type>StringType</Type>\r\n            </CustomField>\r\n            <DocNumber>1003</DocNumber>\r\n            <TxnDate>2014-09-14</TxnDate>\r\n            <Line>\r\n                <Id>1</Id>\r\n                <LineNum>1</LineNum>\r\n                <Description>Custom Design</Description>\r\n                <Amount>337.50</Amount>\r\n                <DetailType>SalesItemLineDetail</DetailType>\r\n                <SalesItemLineDetail>\r\n                    <ItemRef name="Design">4</ItemRef>\r\n                    <UnitPrice>75</UnitPrice>\r\n                    <Qty>4.5</Qty>\r\n                    <TaxCodeRef>NON</TaxCodeRef>\r\n                </SalesItemLineDetail>\r\n            </Line>\r\n            <Line>\r\n                <Amount>337.50</Amount>\r\n                <DetailType>SubTotalLineDetail</DetailType>\r\n                <SubTotalLineDetail />\r\n            </Line>\r\n            <TxnTaxDetail>\r\n                <TotalTax>0</TotalTax>\r\n            </TxnTaxDetail>\r\n            <CustomerRef name="Dylan Sollfrank">6</CustomerRef>\r\n            <CustomerMemo>Updated customer memo via sparse update operation.</CustomerMemo>\r\n            <BillAddr>\r\n                <Id>122</Id>\r\n                <Line1>Dylan Sollfrank</Line1>\r\n            </BillAddr>\r\n            <TotalAmt>337.50</TotalAmt>\r\n            <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n            <PrintStatus>NotSet</PrintStatus>\r\n            <EmailStatus>NotSet</EmailStatus>\r\n            <Balance>0</Balance>\r\n            <PaymentMethodRef name="Check">2</PaymentMethodRef>\r\n            <PaymentRefNum>10264</PaymentRefNum>\r\n            <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n        </SalesReceipt>\r\n    </QueryResponse>\r\n</IntuitResponse>\r\n',
                "Query0-request": "\"select * from SalesReceipt where id='11'\"",
                "PDF0-response-xml": "%PDF-1.4\r\n...\r\n%%EOF",
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-29T09:29:33.366-07:00">\r\n    <SalesReceipt domain="QBO" sparse="false">\r\n        <Id>11</Id>\r\n        <SyncToken>0</SyncToken>\r\n        <MetaData>\r\n            <CreateTime>2014-09-16T14:59:48-07:00</CreateTime>\r\n            <LastUpdatedTime>2014-09-16T14:59:48-07:00</LastUpdatedTime>\r\n        </MetaData>\r\n        <CustomField>\r\n            <DefinitionId>1</DefinitionId>\r\n            <Name>Crew #</Name>\r\n            <Type>StringType</Type>\r\n        </CustomField>\r\n        <DocNumber>1003</DocNumber>\r\n        <TxnDate>2014-09-14</TxnDate>\r\n        <Line>\r\n            <Id>1</Id>\r\n            <LineNum>1</LineNum>\r\n            <Description>Custom Design</Description>\r\n            <Amount>337.50</Amount>\r\n            <DetailType>SalesItemLineDetail</DetailType>\r\n            <SalesItemLineDetail>\r\n                <ItemRef name="Design">4</ItemRef>\r\n                <UnitPrice>75</UnitPrice>\r\n                <Qty>4.5</Qty>\r\n                <TaxCodeRef>NON</TaxCodeRef>\r\n            </SalesItemLineDetail>\r\n        </Line>\r\n        <Line>\r\n            <Amount>337.50</Amount>\r\n            <DetailType>SubTotalLineDetail</DetailType>\r\n            <SubTotalLineDetail />\r\n        </Line>\r\n        <TxnTaxDetail>\r\n            <TotalTax>0</TotalTax>\r\n        </TxnTaxDetail>\r\n        <CustomerRef name="Dylan Sollfrank">6</CustomerRef>\r\n        <CustomerMemo>Thank you for your business and have a great day!</CustomerMemo>\r\n        <BillAddr>\r\n            <Id>49</Id>\r\n            <Line1>Dylan Sollfrank</Line1>\r\n            <Lat>INVALID</Lat>\r\n            <Long>INVALID</Long>\r\n        </BillAddr>\r\n        <TotalAmt>337.50</TotalAmt>\r\n        <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n        <PrintStatus>NotSet</PrintStatus>\r\n        <EmailStatus>NotSet</EmailStatus>\r\n        <Balance>0</Balance>\r\n        <PaymentMethodRef name="Check">2</PaymentMethodRef>\r\n        <PaymentRefNum>10264</PaymentRefNum>\r\n        <DepositToAccountRef name="Checking">35</DepositToAccountRef>\r\n    </SalesReceipt>\r\n</IntuitResponse>\r\n',
                "Update0-request-xml":
                    '<SalesReceipt xmlns="http://schema.intuit.com/finance/v3" sparse="false">\r\n    <Id>3084</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n        <CreateTime>2013-04-23T08:53:46-07:00</CreateTime>\r\n        <LastUpdatedTime>2013-04-23T08:53:46-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <PrivateNote>Sales Receipt Update testing</PrivateNote>\r\n    <Line>\r\n        <Id>1</Id>\r\n        <Description>Sales only</Description>\r\n        <Amount>5.00</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n            <ItemRef name="Services">1</ItemRef>\r\n            <UnitPrice>0.5</UnitPrice>\r\n            <Qty>10</Qty>\r\n            <TaxCodeRef>TAX</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n        <Amount>5.00</Amount>\r\n        <DetailType>SubTotalLineDetail</DetailType>\r\n        <SubTotalLineDetail/>\r\n    </Line>\r\n    <Line>\r\n        <Amount>0.50</Amount>\r\n        <DetailType>DiscountLineDetail</DetailType>\r\n        <DiscountLineDetail>\r\n            <PercentBased>true</PercentBased>\r\n            <DiscountPercent>10</DiscountPercent>\r\n        </DiscountLineDetail>\r\n    </Line>\r\n    <TxnTaxDetail>\r\n        <TxnTaxCodeRef>9</TxnTaxCodeRef>\r\n        <TotalTax>0.75</TotalTax>\r\n        <TaxLine>\r\n            <Amount>0.75</Amount>\r\n            <DetailType>TaxLineDetail</DetailType>\r\n            <TaxLineDetail>\r\n                <TaxRateRef>18</TaxRateRef>\r\n                <PercentBased>true</PercentBased>\r\n                <TaxPercent>15</TaxPercent>\r\n                <NetAmountTaxable>5.00</NetAmountTaxable>\r\n            </TaxLineDetail>\r\n        </TaxLine>\r\n    </TxnTaxDetail>\r\n    <CustomerRef>1105</CustomerRef>\r\n    <CustomerMemo>Sales Receipt with customer</CustomerMemo>\r\n    <BillAddr>\r\n        <Line1>2700 Garcia Avenue</Line1>\r\n        <City>Mountain View</City>\r\n        <Country>USA</Country>\r\n        <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n        <PostalCode>94043</PostalCode>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n        <Line1>Ms. Anupama Madhavapeddi</Line1>\r\n        <Line2>Intuit Systems</Line2>\r\n        <Line3>3700 Garcia Avenue</Line3>\r\n        <Line4>Mountain View, CA 94043 USA</Line4>\r\n    </ShipAddr>\r\n    <ShipDate>2012-04-18</ShipDate>\r\n    <TrackingNum>1232</TrackingNum>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NeedToPrint</PrintStatus>\r\n    <EmailStatus>NeedToSend</EmailStatus>\r\n    <BillEmail>\r\n        <Address>test@abc.com</Address>\r\n    </BillEmail>\r\n    <Balance>0</Balance>\r\n</SalesReceipt>\r\n',
                "Update2-request-xml":
                    '<SalesReceipt xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="true">\r\n    <Id>38</Id>\r\n    <SyncToken>0</SyncToken>\r\n</SalesReceipt>',
                "Delete0-response":
                    '{\n  "SalesReceipt": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "98"\n  }, \n  "time": "2013-03-13T13:39:58.505-07:00"\n}',
                "PDF0-response": '"%PDF-1.4\\r\\n...\\r\\n%%EOF"',
                "Delete0-request-xml":
                    '<SalesReceipt xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n  <Id>3084</Id>\r\n  <SyncToken>2</SyncToken>\r\n</SalesReceipt>',
                "Update0-request":
                    '{\n  "DocNumber": "1003", \n  "SyncToken": "0", \n  "domain": "QBO", \n  "Balance": 0, \n  "PaymentMethodRef": {\n    "name": "Check", \n    "value": "2"\n  }, \n  "BillAddr": {\n    "Lat": "INVALID", \n    "Long": "INVALID", \n    "Id": "49", \n    "Line1": "Dylan Sollfrank"\n  }, \n  "DepositToAccountRef": {\n    "name": "Checking", \n    "value": "35"\n  }, \n  "TxnDate": "2014-09-14", \n  "TotalAmt": 337.5, \n  "CustomerRef": {\n    "name": "Dylan Sollfrank", \n    "value": "6"\n  }, \n  "CustomerMemo": {\n    "value": "An updated customer memo."\n  }, \n  "PrintStatus": "NotSet", \n  "PaymentRefNum": "10264", \n  "EmailStatus": "NotSet", \n  "sparse": false, \n  "Line": [\n    {\n      "Description": "Custom Design", \n      "DetailType": "SalesItemLineDetail", \n      "SalesItemLineDetail": {\n        "TaxCodeRef": {\n          "value": "NON"\n        }, \n        "Qty": 4.5, \n        "UnitPrice": 75, \n        "ItemRef": {\n          "name": "Design", \n          "value": "4"\n        }\n      }, \n      "LineNum": 1, \n      "Amount": 337.5, \n      "Id": "1"\n    }, \n    {\n      "DetailType": "SubTotalLineDetail", \n      "Amount": 337.5, \n      "SubTotalLineDetail": {}\n    }\n  ], \n  "ApplyTaxAfterDiscount": false, \n  "CustomField": [\n    {\n      "DefinitionId": "1", \n      "Type": "StringType", \n      "Name": "Crew #"\n    }\n  ], \n  "Id": "11", \n  "TxnTaxDetail": {\n    "TotalTax": 0\n  }, \n  "MetaData": {\n    "CreateTime": "2014-09-16T14:59:48-07:00", \n    "LastUpdatedTime": "2014-09-16T14:59:48-07:00"\n  }\n}',
                "Send0-response":
                    '{\n  "SalesReceipt": {\n    "DocNumber": "1047", \n    "SyncToken": "0", \n    "domain": "QBO", \n    "Balance": 0, \n    "DepositToAccountRef": {\n      "name": "Undeposited Funds", \n      "value": "4"\n    }, \n    "TxnDate": "2013-03-13", \n    "TotalAmt": 5, \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "PrivateNote": "Memo for SalesReceipt", \n    "PrintStatus": "NeedToPrint", \n    "DepartmentRef": {\n      "name": "Department1", \n      "value": "1"\n    }, \n    "DeliveryInfo": {\n      "DeliveryType": "Email", \n      "DeliveryTime": "2014-12-17T11:50:52-08:00"\n    }, \n    "EmailStatus": "EmailSent", \n    "sparse": false, \n    "Line": [\n      {\n        "Description": "123189403765", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 10, \n          "UnitPrice": 0.5, \n          "ItemRef": {\n            "name": "Sales", \n            "value": "1"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 5, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 5, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "Type": "StringType", \n        "Name": "Custom 1"\n      }, \n      {\n        "Type": "StringType", \n        "Name": "Custom 2"\n      }, \n      {\n        "Type": "StringType", \n        "Name": "Custom 3"\n      }\n    ], \n    "Id": "97", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2013-03-13T13:31:43-07:00", \n      "LastUpdatedTime": "2014-12-17T11:50:54-08:00"\n    }\n  }, \n  "time": "2013-03-13T13:31:42.956-07:00"\n}',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-04-23T08:54:07.001-07:00">\r\n  <SalesReceipt domain="QBO" sparse="false">\r\n    <Id>3084</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2013-04-23T08:53:46-07:00</CreateTime>\r\n      <LastUpdatedTime>2013-04-23T08:53:47-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <CustomField>\r\n      <Name>Custom 1</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <CustomField>\r\n      <Name>Custom 2</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <CustomField>\r\n      <Name>Custom 3</Name>\r\n      <Type>StringType</Type>\r\n    </CustomField>\r\n    <DocNumber>3026</DocNumber>\r\n    <TxnDate>2012-12-18</TxnDate>\r\n    <CurrencyRef name="United States Dollar">USD</CurrencyRef>\r\n    <PrivateNote>Sales Receipt Update testing</PrivateNote>\r\n    <Line>\r\n      <Id>1</Id>\r\n      <LineNum>1</LineNum>\r\n      <Description>Sales only</Description>\r\n      <Amount>5.00</Amount>\r\n      <DetailType>SalesItemLineDetail</DetailType>\r\n      <SalesItemLineDetail>\r\n        <ItemRef name="Sales">1</ItemRef>\r\n        <UnitPrice>0.5</UnitPrice>\r\n        <Qty>10</Qty>\r\n        <TaxCodeRef>TAX</TaxCodeRef>\r\n      </SalesItemLineDetail>\r\n    </Line>\r\n    <Line>\r\n      <Amount>5.00</Amount>\r\n      <DetailType>SubTotalLineDetail</DetailType>\r\n      <SubTotalLineDetail/>\r\n    </Line>\r\n    <Line>\r\n      <Amount>0.50</Amount>\r\n      <DetailType>DiscountLineDetail</DetailType>\r\n      <DiscountLineDetail>\r\n        <PercentBased>true</PercentBased>\r\n        <DiscountPercent>10</DiscountPercent>\r\n        <DiscountAccountRef name="Discounts given">30</DiscountAccountRef>\r\n      </DiscountLineDetail>\r\n    </Line>\r\n    <TxnTaxDetail>\r\n      <TxnTaxCodeRef>9</TxnTaxCodeRef>\r\n      <TotalTax>0.75</TotalTax>\r\n      <TaxLine>\r\n        <Amount>0.75</Amount>\r\n        <DetailType>TaxLineDetail</DetailType>\r\n        <TaxLineDetail>\r\n          <TaxRateRef>18</TaxRateRef>\r\n          <PercentBased>true</PercentBased>\r\n          <TaxPercent>15</TaxPercent>\r\n          <NetAmountTaxable>5.00</NetAmountTaxable>\r\n        </TaxLineDetail>\r\n      </TaxLine>\r\n    </TxnTaxDetail>\r\n    <CustomerRef name="sn71lPmH0Y zOv1blD5Vq">1105</CustomerRef>\r\n    <CustomerMemo>Sales Receipt with customer</CustomerMemo>\r\n    <BillAddr>\r\n      <Id>65</Id>\r\n      <Line1>2700 Garcia Avenue</Line1>\r\n      <City>Mountain View</City>\r\n      <Country>USA</Country>\r\n      <CountrySubDivisionCode>CA</CountrySubDivisionCode>\r\n      <PostalCode>94043</PostalCode>\r\n      <Lat>37.4276176</Lat>\r\n      <Long>-122.099344</Long>\r\n    </BillAddr>\r\n    <ShipAddr>\r\n      <Id>66</Id>\r\n      <Line1>Ms. Anupama Madhavapeddi</Line1>\r\n      <Line2>Intuit Systems</Line2>\r\n      <Line3>3700 Garcia Avenue</Line3>\r\n      <Line4>Mountain View, CA 94043 USA</Line4>\r\n      <Lat>37.428434</Lat>\r\n      <Long>-122.0723816</Long>\r\n    </ShipAddr>\r\n    <ShipDate>2012-04-18</ShipDate>\r\n    <TrackingNum>1232</TrackingNum>\r\n    <TotalAmt>5.25</TotalAmt>\r\n    <ApplyTaxAfterDiscount>false</ApplyTaxAfterDiscount>\r\n    <PrintStatus>NeedToPrint</PrintStatus>\r\n    <EmailStatus>NeedToSend</EmailStatus>\r\n    <BillEmail>\r\n      <Address>test@abc.com</Address>\r\n    </BillEmail>\r\n    <Balance>0</Balance>\r\n    <DepositToAccountRef name="Undeposited Funds">4</DepositToAccountRef>\r\n  </SalesReceipt>\r\n</IntuitResponse>',
                "Update2-request": '{\n  "SyncToken": "0", \n  "Id": "161", \n  "sparse": true\n}',
                "Update2-response":
                    '{\n  "SalesReceipt": {\n    "TxnDate": "2014-12-31", \n    "domain": "QBO", \n    "CurrencyRef": {\n      "name": "United States Dollar", \n      "value": "USD"\n    }, \n    "PrintStatus": "NeedToPrint", \n    "TotalAmt": 0, \n    "Line": [\n      {\n        "LineNum": 1, \n        "Amount": 0, \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 0, \n          "ItemRef": {\n            "name": "Services", \n            "value": "1"\n          }\n        }, \n        "Id": "1", \n        "DetailType": "SalesItemLineDetail"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 0, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "DocNumber": "1038", \n    "PrivateNote": "Voided", \n    "sparse": false, \n    "DepositToAccountRef": {\n      "name": "Undeposited Funds", \n      "value": "4"\n    }, \n    "CustomerMemo": {\n      "value": "Thank you for your business and have a great day!"\n    }, \n    "Balance": 0, \n    "CustomerRef": {\n      "name": "Amy\'s Bird Sanctuary", \n      "value": "1"\n    }, \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "SyncToken": "1", \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "ShipAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Bayshore", \n      "PostalCode": "94326", \n      "Id": "98", \n      "Line1": "4581 Finch St."\n    }, \n    "EmailStatus": "NotSet", \n    "BillAddr": {\n      "CountrySubDivisionCode": "CA", \n      "City": "Bayshore", \n      "PostalCode": "94326", \n      "Id": "97", \n      "Line1": "4581 Finch St."\n    }, \n    "MetaData": {\n      "CreateTime": "2014-12-31T16:17:23-08:00", \n      "LastUpdatedTime": "2015-02-09T12:29:53-08:00"\n    }, \n    "BillEmail": {\n      "Address": "virti_vora@Intuit.com"\n    }, \n    "Id": "161"\n  }, \n  "time": "2015-02-09T12:29:52.970-08:00"\n}',
                "Create0-request-xml":
                    '<SalesReceipt xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n    <Line>\r\n        <Id>1</Id>\r\n        <LineNum>1</LineNum>\r\n        <Description>Pest Control Services</Description>\r\n        <Amount>35.00</Amount>\r\n        <DetailType>SalesItemLineDetail</DetailType>\r\n        <SalesItemLineDetail>\r\n            <ItemRef name="Pest Control">10</ItemRef>\r\n            <UnitPrice>35</UnitPrice>\r\n            <Qty>1</Qty>\r\n            <TaxCodeRef>NON</TaxCodeRef>\r\n        </SalesItemLineDetail>\r\n    </Line>\r\n</SalesReceipt>\r\n',
                "Update1-response":
                    '{\n  "SalesReceipt": {\n    "DocNumber": "1003", \n    "SyncToken": "2", \n    "domain": "QBO", \n    "Balance": 0, \n    "DepositToAccountRef": {\n      "name": "Undeposited Funds", \n      "value": "4"\n    }, \n    "TxnDate": "2015-07-29", \n    "TotalAmt": 337.5, \n    "CustomerMemo": {\n      "value": "A sparsely updated customer memo."\n    }, \n    "PrintStatus": "NeedToPrint", \n    "EmailStatus": "NotSet", \n    "sparse": false, \n    "Line": [\n      {\n        "Description": "Custom Design", \n        "DetailType": "SalesItemLineDetail", \n        "SalesItemLineDetail": {\n          "TaxCodeRef": {\n            "value": "NON"\n          }, \n          "Qty": 4.5, \n          "UnitPrice": 75, \n          "ItemRef": {\n            "name": "Design", \n            "value": "4"\n          }\n        }, \n        "LineNum": 1, \n        "Amount": 337.5, \n        "Id": "1"\n      }, \n      {\n        "DetailType": "SubTotalLineDetail", \n        "Amount": 337.5, \n        "SubTotalLineDetail": {}\n      }\n    ], \n    "ApplyTaxAfterDiscount": false, \n    "CustomField": [\n      {\n        "DefinitionId": "1", \n        "Type": "StringType", \n        "Name": "Crew #"\n      }\n    ], \n    "Id": "11", \n    "TxnTaxDetail": {\n      "TotalTax": 0\n    }, \n    "MetaData": {\n      "CreateTime": "2014-09-16T14:59:48-07:00", \n      "LastUpdatedTime": "2015-07-29T09:45:55-07:00"\n    }\n  }, \n  "time": "2015-07-29T09:45:39.381-07:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "SalesReceipt": [\n      {\n        "DocNumber": "1003", \n        "SyncToken": "3", \n        "domain": "QBO", \n        "Balance": 0, \n        "PaymentMethodRef": {\n          "name": "Check", \n          "value": "2"\n        }, \n        "BillAddr": {\n          "Id": "122", \n          "Line1": "Dylan Sollfrank"\n        }, \n        "DepositToAccountRef": {\n          "name": "Checking", \n          "value": "35"\n        }, \n        "TxnDate": "2014-09-14", \n        "TotalAmt": 337.5, \n        "CustomerRef": {\n          "name": "Dylan Sollfrank", \n          "value": "6"\n        }, \n        "CustomerMemo": {\n          "value": "Updated customer memo via sparse update operation."\n        }, \n        "PrintStatus": "NotSet", \n        "PaymentRefNum": "10264", \n        "EmailStatus": "NotSet", \n        "sparse": false, \n        "Line": [\n          {\n            "Description": "Custom Design", \n            "DetailType": "SalesItemLineDetail", \n            "SalesItemLineDetail": {\n              "TaxCodeRef": {\n                "value": "NON"\n              }, \n              "Qty": 4.5, \n              "UnitPrice": 75, \n              "ItemRef": {\n                "name": "Design", \n                "value": "4"\n              }\n            }, \n            "LineNum": 1, \n            "Amount": 337.5, \n            "Id": "1"\n          }, \n          {\n            "DetailType": "SubTotalLineDetail", \n            "Amount": 337.5, \n            "SubTotalLineDetail": {}\n          }\n        ], \n        "ApplyTaxAfterDiscount": false, \n        "CustomField": [\n          {\n            "DefinitionId": "1", \n            "Type": "StringType", \n            "Name": "Crew #"\n          }\n        ], \n        "Id": "11", \n        "TxnTaxDetail": {\n          "TotalTax": 0\n        }, \n        "MetaData": {\n          "CreateTime": "2014-09-16T14:59:48-07:00", \n          "LastUpdatedTime": "2015-07-29T09:48:53-07:00"\n        }\n      }\n    ], \n    "startPosition": 1, \n    "maxResults": 1\n  }, \n  "time": "2015-07-29T09:50:39.882-07:00"\n}',
            },
            Customertype: {
                "Query0-request": '"Select * From CustomerType"',
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2019-04-10T15:18:04-07:00">\r\n  <CustomerType>\r\n    <Name>ActiveNew</Name>\r\n    <Active>true</Active>\r\n    <domain>QBO</domain>\r\n    <sparse>false</sparse>\r\n    <Id>5000000000000003466</Id>\r\n    <SyncToken>1</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2019-04-10T15:18:04-07:00</CreateTime>\r\n      <LastUpdatedTime>2019-04-10T15:36:53-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n  </CustomerType>\r\n  <time>2019-04-12T16:19:36.824-07:00</time>\r\n</IntuitResponse>',
                "Read0-response":
                    '{\n  "CustomerType": {\n    "SyncToken": "1", \n    "domain": "QBO", \n    "Name": "ActiveNew", \n    "sparse": false, \n    "Active": true, \n    "Id": "5000000000000003466", \n    "MetaData": {\n      "CreateTime": "2019-04-10T15:18:04-07:00", \n      "LastUpdatedTime": "2019-04-10T15:36:53-07:00"\n    }\n  }, \n  "time": "2019-04-12T16:19:36.824-07:00"\n}',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "CustomerType": [\n      {\n        "SyncToken": "1", \n        "domain": "QBO", \n        "Name": "ActiveNew", \n        "sparse": false, \n        "Active": true, \n        "Id": "5000000000000003466", \n        "MetaData": {\n          "CreateTime": "2019-04-10T15:18:04-07:00", \n          "LastUpdatedTime": "2019-04-10T15:36:53-07:00"\n        }\n      }, \n      {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "Name": "Value", \n        "sparse": false, \n        "Active": true, \n        "Id": "5000000000000003467", \n        "MetaData": {\n          "CreateTime": "2019-04-10T15:24:02-07:00", \n          "LastUpdatedTime": "2019-04-10T15:24:02-07:00"\n        }\n      }\n    ], \n    "maxResults": 2\n  }, \n  "time": "2019-04-12T16:17:47.414-07:00"\n}',
                "Query0-request-xml": "select * from TaxRate",
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-07-27T13:10:18.062-07:00">\r\n  <QueryResponse startPosition="1" maxResults="3" totalCount="3">\r\n    <TaxRate domain="QBO" sparse="false">\r\n      <Id>1</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-18T12:17:04-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-18T12:17:04-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>AZ State tax</Name>\r\n      <Description>Sales Tax</Description>\r\n      <Active>true</Active>\r\n      <RateValue>7.1</RateValue>\r\n      <AgencyRef>1</AgencyRef>\r\n      <SpecialTaxType>NONE</SpecialTaxType>\r\n      <DisplayType>ReadOnly</DisplayType>\r\n    </TaxRate>\r\n    <TaxRate domain="QBO" sparse="false">\r\n      <Id>3</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-18T12:17:04-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-18T12:17:04-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>California</Name>\r\n      <Description>Sales Tax</Description>\r\n      <Active>true</Active>\r\n      <RateValue>8</RateValue>\r\n      <AgencyRef>2</AgencyRef>\r\n      <SpecialTaxType>NONE</SpecialTaxType>\r\n      <DisplayType>ReadOnly</DisplayType>\r\n    </TaxRate>\r\n    <TaxRate domain="QBO" sparse="false">\r\n      <Id>2</Id>\r\n      <SyncToken>0</SyncToken>\r\n      <MetaData>\r\n        <CreateTime>2014-09-18T12:17:04-07:00</CreateTime>\r\n        <LastUpdatedTime>2014-09-18T12:17:04-07:00</LastUpdatedTime>\r\n      </MetaData>\r\n      <Name>Tucson City</Name>\r\n      <Description>Sales Tax</Description>\r\n      <Active>true</Active>\r\n      <RateValue>2</RateValue>\r\n      <AgencyRef>1</AgencyRef>\r\n      <SpecialTaxType>NONE</SpecialTaxType>\r\n      <DisplayType>ReadOnly</DisplayType>\r\n    </TaxRate>\r\n  </QueryResponse>\r\n</IntuitResponse>',
            },
            Attachable: {
                "Delete0-request":
                    '{\n  "SyncToken": "0", \n  "domain": "QBO", \n  "AttachableRef": [\n    {\n      "IncludeOnSend": false, \n      "EntityRef": {\n        "type": "Invoice", \n        "value": "95"\n      }\n    }\n  ], \n  "Note": "This is an attached note.", \n  "sparse": false, \n  "Id": "200900000000000008541", \n  "MetaData": {\n    "CreateTime": "2015-11-17T11:05:15-08:00", \n    "LastUpdatedTime": "2015-11-17T11:05:15-08:00"\n  }\n}',
                "Upload0-response":
                    '{\n  "AttachableResponse": [\n    {\n      "Attachable": {\n        "SyncToken": "0", \n        "domain": "QBO", \n        "FileAccessUri": "...", \n        "ThumbnailFileAccessUri": "...", \n        "AttachableRef": [\n          {\n            "IncludeOnSend": false, \n            "EntityRef": {\n              "type": "Invoice", \n              "value": "95"\n            }\n          }\n        ], \n        "TempDownloadUri": "https://...", \n        "MetaData": {\n          "CreateTime": "2015-11-16T10:59:02-08:00", \n          "LastUpdatedTime": "2015-11-16T10:59:02-08:00"\n        }, \n        "sparse": false, \n        "ContentType": "image/jpeg", \n        "FileName": "receipt_nov15.jpg", \n        "Id": "100000000004190865", \n        "Size": 1594261\n      }\n    }\n  ], \n  "time": "2015-11-16T10:58:58.100-08:00"\n}',
                "Query0-request-xml":
                    "select Id from attachable where AttachableRef.EntityRef.Type = 'purchase' and AttachableRef.EntityRef.value = '611' ",
                "Read0-response":
                    '{\n  "Attachable": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "AttachableRef": [\n      {\n        "IncludeOnSend": false, \n        "EntityRef": {\n          "type": "Invoice", \n          "value": "95"\n        }\n      }\n    ], \n    "Note": "This is an attached note.", \n    "sparse": false, \n    "Id": "5000000000000010341", \n    "MetaData": {\n      "CreateTime": "2015-11-17T11:05:15-08:00", \n      "LastUpdatedTime": "2015-11-17T11:05:15-08:00"\n    }\n  }, \n  "time": "2015-11-17T11:09:34.216-08:00"\n}',
                "Upload0-request":
                    '{\n  "AttachableRef": [\n    {\n      "EntityRef": {\n        "type": "Invoice", \n        "value": "95"\n      }\n    }\n  ], \n  "ContentType": "image/jpg", \n  "FileName": "receipt_nov15.jpg"\n}',
                "Upload0-response-xml": "Not available.",
                "Update0-response":
                    '{\n  "Attachable": {\n    "SyncToken": "1", \n    "domain": "QBO", \n    "AttachableRef": [\n      {\n        "IncludeOnSend": false, \n        "EntityRef": {\n          "type": "Invoice", \n          "value": "95"\n        }\n      }\n    ], \n    "Note": "This is an updated attached note.", \n    "sparse": false, \n    "Id": "5000000000000010341", \n    "MetaData": {\n      "CreateTime": "2015-11-17T11:05:15-08:00", \n      "LastUpdatedTime": "2015-11-17T11:11:04-08:00"\n    }\n  }, \n  "time": "2015-11-17T11:11:21.679-08:00"\n}',
                "Create0-response":
                    '{\n  "Attachable": {\n    "SyncToken": "0", \n    "domain": "QBO", \n    "AttachableRef": [\n      {\n        "IncludeOnSend": false, \n        "EntityRef": {\n          "type": "Invoice", \n          "value": "95"\n        }\n      }\n    ], \n    "Note": "This is an attached note.", \n    "sparse": false, \n    "Id": "200900000000000008541", \n    "MetaData": {\n      "CreateTime": "2015-11-17T11:05:15-08:00", \n      "LastUpdatedTime": "2015-11-17T11:05:15-08:00"\n    }\n  }, \n  "time": "2015-11-17T11:05:15.797-08:00"\n}',
                "Download0-response-xml":
                    "https://intuit-.../attachments/receipt_june10.pdf?Expires=...&AWSAccessKeyId=...&Signature=...",
                "Create0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-09-05T14:02:42.078-07:00">\r\n  <Attachable domain="QBO" sparse="false">\r\n    <Id>100000000000376715</Id>\r\n    <SyncToken>0</SyncToken>\r\n    <MetaData>\r\n      <CreateTime>2013-09-05T14:02:42-07:00</CreateTime>\r\n      <LastUpdatedTime>2013-09-05T14:02:42-07:00</LastUpdatedTime>\r\n    </MetaData>\r\n    <AttachableRef>\r\n      <EntityRef type="Invoice">671</EntityRef>\r\n      <IncludeOnSend>false</IncludeOnSend>\r\n    </AttachableRef>\r\n    <Lat>25.293112341223</Lat>\r\n    <Long>-21.3253249834</Long>\r\n    <PlaceName>Mountain View</PlaceName>\r\n    <Note>This is an attached note.</Note>\r\n    <Tag>Create Attachable with Note</Tag>\r\n  </Attachable>\r\n</IntuitResponse>',
                "Upload0-request-xml": "Not available.",
                "Download0-response":
                    '"https://intuit-.../attachments/receipt_june10.pdf?Expires=...&AWSAccessKeyId=...&Signature=..."',
                "Delete0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-04-23T08:56:59.994-07:00">\r\n  <Attachable domain="QBO" status="Deleted">\r\n    <Id>100100000000000494787</Id>\r\n  </Attachable>\r\n</IntuitResponse>',
                "Create0-request":
                    '{\n  "Note": "This is an attached note.", \n  "AttachableRef": [\n    {\n      "IncludeOnSend": "false", \n      "EntityRef": {\n        "type": "Invoice", \n        "value": "95"\n      }\n    }\n  ]\n}',
                "Query0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2015-11-24T10:19:22.019-08:00">\r\n  <QueryResponse startPosition="1" maxResults="2">\r\n    <Attachable sparse="true">\r\n      <Id>100000000004062174</Id>\r\n    </Attachable>\r\n    <Attachable sparse="true">\r\n      <Id>100000000004158481</Id>\r\n    </Attachable>\r\n  </QueryResponse>\r\n</IntuitResponse>',
                "Query0-request":
                    "\"select Id from attachable where AttachableRef.EntityRef.Type = 'purchase' and AttachableRef.EntityRef.value = '611'\"",
                "Read0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-07-11T17:49:59.087-07:00">\r\n<Attachable domain="QBO" sparse="false">\r\n  <Id>100100000000000002117</Id>\r\n  <SyncToken>0</SyncToken>\r\n  <MetaData>\r\n     <CreateTime>2012-05-10T11:53:14-07:00</CreateTime>\r\n     <LastUpdatedTime>2012-05-10T11:53:16-07:00</LastUpdatedTime>\r\n  </MetaData>\r\n  <Lat>25.293112341223</Lat>\r\n  <Long>-21.3253249834</Long>\r\n  <Note>This is an attached note.</Note>\r\n  <Tag>Create Attachable with Note</Tag>\r\n  <PlaceName>Mountain View</PlaceName>\r\n  <AttachableRef>\r\n      <EntityReftype="Vendor">10576</EntityRef>\r\n  </AttachableRef>\r\n</Attachable>\r\n</IntuitResponse>',
                "Update0-request-xml":
                    '<Attachable xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n  <Id>100100000000000002117</Id>\r\n  <SyncToken>0</SyncToken>\r\n  <MetaData>\r\n     <CreateTime>2012-05-10T11:53:14-07:00</CreateTime>\r\n     <LastUpdatedTime>2012-05-10T11:53:16-07:00</LastUpdatedTime>\r\n  </MetaData>\r\n  <Lat>25.293112341223</Lat>\r\n  <Long>-21.3253249834</Long>\r\n  <Note>This is an attached note.</Note>\r\n  <Tag>Create Attachable with Note with update.</Tag>\r\n  <PlaceName>Mountain View</PlaceName>\r\n  <AttachableRef>\r\n      <EntityRef type="Vendor">10576</EntityRef>\r\n  </AttachableRef>\r\n</Attachable>',
                "Delete0-response":
                    '{\n  "Attachable": {\n    "status": "Deleted", \n    "domain": "QBO", \n    "Id": "200900000000000008541"\n  }, \n  "time": "2015-03-15T11:27:41.514-07:00"\n}',
                "Delete0-request-xml":
                    '<Attachable xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n  <Id>100100000000000494787</Id>\r\n  <SyncToken>0</SyncToken>\r\n  <MetaData>\r\n    <CreateTime>2013-04-23T08:56:37-07:00</CreateTime>\r\n    <LastUpdatedTime>2013-04-23T08:56:37-07:00</LastUpdatedTime>\r\n  </MetaData>\r\n  <FileName>hello.txt</FileName>\r\n  <FileAccessUri>/v3/company/220157472/download/100100000000000494787</FileAccessUri>\r\n  <TempDownloadUri>d</TempDownloadUri>\r\n  <Size>13</Size>\r\n  <ContentType>text/plain</ContentType>\r\n</Attachable>',
                "Update0-request":
                    '{\n  "SyncToken": "1", \n  "domain": "QBO", \n  "AttachableRef": [\n    {\n      "IncludeOnSend": false, \n      "EntityRef": {\n        "type": "Invoice", \n        "value": "95"\n      }\n    }\n  ], \n  "Note": "This is an updated attached note.", \n  "sparse": false, \n  "Id": "5000000000000010341", \n  "MetaData": {\n    "CreateTime": "2015-11-17T11:05:15-08:00", \n    "LastUpdatedTime": "2015-11-17T11:05:15-08:00"\n  }\n}',
                "Update0-response-xml":
                    '<IntuitResponse xmlns="http://schema.intuit.com/finance/v3" time="2013-07-11T17:49:56.807-07:00">\r\n<Attachable domain="QBO" sparse="false">\r\n<Id>100100000000000002117</Id>\r\n  <SyncToken>1</SyncToken>\r\n  <MetaData>\r\n     <CreateTime>2012-05-10T11:53:14-07:00</CreateTime>\r\n     <LastUpdatedTime>2012-05-10T11:55:16-07:00</LastUpdatedTime>\r\n  </MetaData>\r\n  <Lat>25.293112341223</Lat>\r\n  <Long>-21.3253249834</Long>\r\n  <Note>This is an attached note.</Note>\r\n  <Tag>Create Attachable with Note with update.</Tag>\r\n  <PlaceName>Mountain View</PlaceName>\r\n  <AttachableRef>\r\n      <EntityRef type="Vendor">10576</EntityRef>\r\n  </AttachableRef>\r\n</IntuitResponse>',
                "Create0-request-xml":
                    '<Attachable xmlns="http://schema.intuit.com/finance/v3" domain="QBO" sparse="false">\r\n   <Lat>25.293112341223</Lat>\r\n   <Long>-21.3253249834</Long>\r\n   <Note>This is an attached note.</Note>\r\n   <Tag>Create Attachable with Note</Tag>\r\n   <PlaceName>Mountain View</PlaceName>\r\n   <AttachableRef>\r\n      <EntityRef type="Invoice">671</EntityRef>\r\n   </AttachableRef>\r\n</Attachable>',
                "Query0-response":
                    '{\n  "QueryResponse": {\n    "startPosition": 1, \n    "Attachable": [\n      {\n        "Id": "100000000004062174", \n        "sparse": true\n      }, \n      {\n        "Id": "100000000004158481", \n        "sparse": true\n      }\n    ], \n    "maxResults": 2\n  }, \n  "time": "2015-11-24T10:18:31.289-08:00"\n}',
            },
            Journalreport: {
                "Query0-request": '"BaseURL/v3/company/1386066315/reports/JournalReport"',
                "Query0-response":
                    '{\n  "Header": {\n    "ReportName": "JournalReport", \n    "Option": [\n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "this month-to-date", \n    "StartPeriod": "2019-05-01", \n    "Currency": "USD", \n    "EndPeriod": "2019-05-22", \n    "Time": "2019-05-22T17:16:03-07:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "value": "2019-05-07"\n          }, \n          {\n            "id": "63", \n            "value": "Expense"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "8", \n            "value": "InactiveCo (deleted)"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "35", \n            "value": "Checking"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "30.00"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "63", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": "30.00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "30.00"\n            }, \n            {\n              "value": "30.00"\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-07"\n          }, \n          {\n            "id": "64", \n            "value": "Expense"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "35", \n            "value": "Checking"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "11.00"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "64", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": "11.00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "11.00"\n            }, \n            {\n              "value": "11.00"\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-07"\n          }, \n          {\n            "id": "65", \n            "value": "Invoice"\n          }, \n          {\n            "value": "1035"\n          }, \n          {\n            "id": "1", \n            "value": "Bill Braski"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "36", \n            "value": "Accounts Receivable (A/R)"\n          }, \n          {\n            "value": "15.00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "65", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "1", \n            "value": "Sales"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "15.00"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "15.00"\n            }, \n            {\n              "value": "15.00"\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-07"\n          }, \n          {\n            "id": "73", \n            "value": "Inventory Starting Value"\n          }, \n          {\n            "value": "START"\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "time activity - Opening inventory and value"\n          }, \n          {\n            "id": "34", \n            "value": "Opening Balance Equity"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "73", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "time activity - Opening inventory and value"\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ".00"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-07"\n          }, \n          {\n            "id": "76", \n            "value": "Inventory Starting Value"\n          }, \n          {\n            "value": "START"\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "inv item - Opening inventory and value"\n          }, \n          {\n            "id": "34", \n            "value": "Opening Balance Equity"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "76", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "inv item - Opening inventory and value"\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ".00"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-07"\n          }, \n          {\n            "id": "79", \n            "value": "Inventory Starting Value"\n          }, \n          {\n            "value": "START"\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "inv item2 - Opening inventory and value"\n          }, \n          {\n            "id": "34", \n            "value": "Opening Balance Equity"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "79", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "inv item2 - Opening inventory and value"\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ".00"\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-10"\n          }, \n          {\n            "id": "68", \n            "value": "Inventory Qty Adjust"\n          }, \n          {\n            "value": "4"\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "30", \n            "value": "Cost of Goods Sold"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "68", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": "1595.00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "68", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "30", \n            "value": "Cost of Goods Sold"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "1595.00"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "68", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "1595.00"\n            }, \n            {\n              "value": "1595.00"\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-11"\n          }, \n          {\n            "id": "67", \n            "value": "Inventory Qty Adjust"\n          }, \n          {\n            "value": "3"\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "Motors - Quantity adjustment"\n          }, \n          {\n            "id": "44", \n            "value": "Inventory Shrinkage"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "67", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "Motors - Quantity adjustment"\n          }, \n          {\n            "id": "44", \n            "value": "Inventory Shrinkage"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "495.00"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "67", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "Motors - Quantity adjustment"\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": "495.00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "67", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "Motors - Quantity adjustment"\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "495.00"\n            }, \n            {\n              "value": "495.00"\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-15"\n          }, \n          {\n            "id": "72", \n            "value": "Invoice"\n          }, \n          {\n            "value": "1036"\n          }, \n          {\n            "id": "4", \n            "value": "Gary Witiker"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "36", \n            "value": "Accounts Receivable (A/R)"\n          }, \n          {\n            "value": "58.25"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "72", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "29", \n            "value": "Sales of Product Income"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "10.00"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "72", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "30", \n            "value": "Cost of Goods Sold"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "72", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "72", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "29", \n            "value": "Sales of Product Income"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "15.00"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "72", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "30", \n            "value": "Cost of Goods Sold"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "72", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "72", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "41", \n            "value": "Service Fee Income Account"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "31.00"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "72", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "38", \n            "value": "California Department of Tax and Fee Administration Payable"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "1.56"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "72", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "38", \n            "value": "California Department of Tax and Fee Administration Payable"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ".25"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "72", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "38", \n            "value": "California Department of Tax and Fee Administration Payable"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ".44"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "58.25"\n            }, \n            {\n              "value": "58.25"\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-20"\n          }, \n          {\n            "id": "75", \n            "value": "Invoice"\n          }, \n          {\n            "value": "1037"\n          }, \n          {\n            "id": "4", \n            "value": "Gary Witiker"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "36", \n            "value": "Accounts Receivable (A/R)"\n          }, \n          {\n            "value": "43.60"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "75", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "30", \n            "value": "Cost of Goods Sold"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "75", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "29", \n            "value": "Sales of Product Income"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "40.00"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "75", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "75", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "38", \n            "value": "California Department of Tax and Fee Administration Payable"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "2.50"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "75", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "38", \n            "value": "California Department of Tax and Fee Administration Payable"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ".40"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "75", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "38", \n            "value": "California Department of Tax and Fee Administration Payable"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ".70"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "43.60"\n            }, \n            {\n              "value": "43.60"\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-20"\n          }, \n          {\n            "id": "78", \n            "value": "Invoice"\n          }, \n          {\n            "value": "1038"\n          }, \n          {\n            "id": "4", \n            "value": "Gary Witiker"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "36", \n            "value": "Accounts Receivable (A/R)"\n          }, \n          {\n            "value": "21.80"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "78", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "29", \n            "value": "Sales of Product Income"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "20.00"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "78", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "31", \n            "value": "Inventory Asset"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "78", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "30", \n            "value": "Cost of Goods Sold"\n          }, \n          {\n            "value": ".00"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "78", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "38", \n            "value": "California Department of Tax and Fee Administration Payable"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "1.25"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "78", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "38", \n            "value": "California Department of Tax and Fee Administration Payable"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ".20"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "78", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "38", \n            "value": "California Department of Tax and Fee Administration Payable"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ".35"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "21.80"\n            }, \n            {\n              "value": "21.80"\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-22"\n          }, \n          {\n            "id": "81", \n            "value": "Invoice"\n          }, \n          {\n            "value": "1039"\n          }, \n          {\n            "id": "5", \n            "value": "Open Balance (deleted)"\n          }, \n          {\n            "value": "Created by QB Online to adjust balance for deletion"\n          }, \n          {\n            "id": "36", \n            "value": "Accounts Receivable (A/R)"\n          }, \n          {\n            "value": "41.90"\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "81", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": "Created by QB Online to adjust balance for deletion"\n          }, \n          {\n            "id": "1", \n            "value": "Sales"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "41.90"\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "41.90"\n            }, \n            {\n              "value": "41.90"\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "2019-05-22"\n          }, \n          {\n            "id": "82", \n            "value": "Payment"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "5", \n            "value": "Open Balance (deleted)"\n          }, \n          {\n            "value": "Created by QB Online to link credits to charges."\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "ColData": [\n          {\n            "value": "0-00-00"\n          }, \n          {\n            "id": "82", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "", \n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "id": "36", \n            "value": "Accounts Receivable (A/R)"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }\n          ]\n        }\n      }, \n      {\n        "ColData": [\n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }\n        ], \n        "type": "Data"\n      }, \n      {\n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": ""\n            }, \n            {\n              "value": "2311.55"\n            }, \n            {\n              "value": "2311.55"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "tx_date", \n        "ColTitle": "Date"\n      }, \n      {\n        "ColType": "txn_type", \n        "ColTitle": "Transaction Type"\n      }, \n      {\n        "ColType": "doc_num", \n        "ColTitle": "Num"\n      }, \n      {\n        "ColType": "name", \n        "ColTitle": "Name"\n      }, \n      {\n        "ColType": "memo", \n        "ColTitle": "Memo/Description"\n      }, \n      {\n        "ColType": "account_name", \n        "ColTitle": "Account"\n      }, \n      {\n        "ColType": "debt_amt", \n        "ColTitle": "Debit"\n      }, \n      {\n        "ColType": "credit_amt", \n        "ColTitle": "Credit"\n      }\n    ]\n  }\n}',
            },
            Aragingsummary: {
                "Query0-request":
                    '"BaseURL/v3/company/1386066315/reports/AgedReceivables?customer=4&date_macro=Last Fiscal Year\\n"',
                "Query0-response":
                    '{\n  "Header": {\n    "Customer": "4", \n    "ReportName": "AgedReceivables", \n    "Option": [\n      {\n        "Name": "report_date", \n        "Value": "2015-12-31"\n      }, \n      {\n        "Name": "NoReportData", \n        "Value": "false"\n      }\n    ], \n    "DateMacro": "last calendar year", \n    "StartPeriod": "2015-01-01", \n    "Currency": "USD", \n    "EndPeriod": "2015-12-31", \n    "Time": "2016-03-09T09:09:52-08:00"\n  }, \n  "Rows": {\n    "Row": [\n      {\n        "ColData": [\n          {\n            "id": "4", \n            "value": "Jane Litigious"\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": ""\n          }, \n          {\n            "value": "37.50"\n          }, \n          {\n            "value": "37.50"\n          }\n        ]\n      }, \n      {\n        "group": "GrandTotal", \n        "type": "Section", \n        "Summary": {\n          "ColData": [\n            {\n              "value": "TOTAL"\n            }, \n            {\n              "value": "0.00"\n            }, \n            {\n              "value": "0.00"\n            }, \n            {\n              "value": "0.00"\n            }, \n            {\n              "value": "0.00"\n            }, \n            {\n              "value": "37.50"\n            }, \n            {\n              "value": "37.50"\n            }\n          ]\n        }\n      }\n    ]\n  }, \n  "Columns": {\n    "Column": [\n      {\n        "ColType": "Customer", \n        "ColTitle": ""\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Current"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "1 - 30"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "31 - 60"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "61 - 90"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "91 and over"\n      }, \n      {\n        "ColType": "Money", \n        "ColTitle": "Total"\n      }\n    ]\n  }\n}',
            },
        },
    },
};
